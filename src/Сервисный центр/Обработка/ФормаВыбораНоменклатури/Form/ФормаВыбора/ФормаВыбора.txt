#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Поиск(Команда)
	ЗагрузитьСписокНоменклатурыНаСервере(); 
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПоиск(Команда)
	СтрокаПоискаНоменклатура = "";
	ЗагрузитьСписокНоменклатурыНаСервере();  	
КонецПроцедуры 

&НаКлиенте
Процедура ПоказатьВсеВиды(Команда)
	ЗагрузитьСписокНоменклатурыНаСервере(); 	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	ТекущиеДанные = Элементы.СписокРасширенныйПоискНоменклатура.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Закрыть(ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура КнопкаВниз(Команда)
	ПереместитьТекущуюСтроку(ЛОЖЬ); 
КонецПроцедуры

&НаКлиенте
Процедура КнопкаВверх(Команда)
	ПереместитьТекущуюСтроку(Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьСписокНоменклатурыНаСервере(ВидНоменклатуры = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПустаяСтрока(СтрокаПоискаНоменклатура) = Истина Тогда 
		МассивКоманд = Новый Массив;
		ИнициализироватьМенюВидовНоменклатуры(МассивКоманд); 
		СписокРасширенныйПоискНоменклатура.Очистить();	
		Возврат;	
	КонецЕсли; 
	
	Запрос = Новый Запрос();
	Запрос.Текст = ПолучитьТекстЗапросаСпискаНоменклатуры(ВидНоменклатуры);
	
	Поиск_СтрокаПоиска = ?(НайтиНоменклатуруПоТочномуСоответствию,СтрокаПоискаНоменклатура,"%"+СтрокаПоискаНоменклатура+"%");  	
	Запрос.УстановитьПараметр("СтрокаПоиска",Поиск_СтрокаПоиска);
	Запрос.УстановитьПараметр("ВидНоменклатуры",ВидНоменклатуры);
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	СписокРасширенныйПоискНоменклатура.Загрузить(РезультатПакета[2].Выгрузить());
	МассивКоманд = РезультатПакета[1].Выгрузить().ВыгрузитьКолонку("ВидНоменклатуры"); 	
	ИнициализироватьМенюВидовНоменклатуры(МассивКоманд);  
КонецПроцедуры // ЗагрузитьСписокНоменклатурыНаСервере()


&НаСервере
Функция ПолучитьТекстЗапросаСпискаНоменклатуры(ВидНоменклатуры)
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Ссылка 				КАК Ссылка,
	               |	Наименование 		КАК Наименование,
	               |	Артикул 			КАК Артикул,
	               |	ВидНоменклатуры 	КАК ВидНоменклатуры,
	               |	НаименованиеПолное 	КАК НаименованиеПолное,
	               |	Код  				КАК Код
	               |ПОМЕСТИТЬ СпрНоменклатура
	               |ИЗ
	               |	Справочник.Номенклатура
	               |ГДЕ
	               |	ЭтоГруппа = ЛОЖЬ
	               |	И ПометкаУдаления = ЛОЖЬ"
				   + ?(ЗначениеЗаполнено(ВидНоменклатуры) = Истина, " 
				   |    И  ВидНоменклатуры = &ВидНоменклатуры ", "") + 				   
				   ?(ПустаяСтрока(СтрокаПоискаНоменклатура) = Ложь, " И (
							|	 Код 					ПОДОБНО &СтрокаПоиска 
							|ИЛИ Артикул 				ПОДОБНО &СтрокаПоиска 
							|ИЛИ Наименование 			ПОДОБНО &СтрокаПоиска
							|ИЛИ НаименованиеПолное 	ПОДОБНО &СтрокаПоиска
							|	 )", "")+"  
				   |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Ссылка,
	               |	ВидНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СпрНоменклатура.ВидНоменклатуры КАК ВидНоменклатуры,
				   |	СпрНоменклатура.ВидНоменклатуры.Наименование КАК Наименование

	               |ИЗ
	               |	СпрНоменклатура КАК СпрНоменклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Наименование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 100
	               |	СпрНоменклатура.Код,
	               |	СпрНоменклатура.Наименование,
	               |	СпрНоменклатура.Артикул,
				   |	СпрНоменклатура.Ссылка КАК Номенклатура,
				   |	СпрНоменклатура.Ссылка

	               |ИЗ
	               |	СпрНоменклатура КАК СпрНоменклатура
				   |
				   |УПОРЯДОЧИТЬ ПО
	               |	Наименование";	
	
	
	Возврат ТекстЗапроса;

КонецФункции // ПОлучитьТекстЗапросаСпискаНоменклатуры()


&НаСервере
Функция ИнициализироватьМенюВидовНоменклатуры(МассивВидНоменклатура)
	Перем Библиотека;
	
	УжеНаФорме = Новый Соответствие;
	ПодчиненныеЭлементыМеню = Элементы.ГруппаПанельКатегорий.ПодчиненныеЭлементы;
	Для Каждого ПодчиненныйЭлемент Из ПодчиненныеЭлементыМеню Цикл
		УжеНаФорме[ПодчиненныйЭлемент.Имя] = ПодчиненныйЭлемент;	
	КонецЦикла;
	
	
	Для каждого Строка Из МассивВидНоменклатура Цикл
		ИмяКоманды = "uid" + СтрЗаменить(Строка.Ссылка.УникальныйИдентификатор(), "-", "_");
		Если УжеНаФорме[ИмяКоманды] = Неопределено Тогда 			
			
			ПараметрыКоманды = Новый Структура;
			ПараметрыКоманды.Вставить("Имя", 			ИмяКоманды);
			ПараметрыКоманды.Вставить("Заголовок", 	Строка.Наименование);  
			ПараметрыКоманды.Вставить("Отображение", 	ОтображениеКнопки.КартинкаИТекст); 
			ПараметрыКоманды.Вставить("Картинка", 		БиблиотекаКартинок.Реквизит);
			ПараметрыКоманды.Вставить("Действие", 		"УстановитьОтборПоВидуНоменклатуры");
	
			ДобавитьКомандуВКоллекциюКомандФормы(Команды, ПараметрыКоманды);  
	
			ПараметрыКнопки = Новый Структура;
			ПараметрыКнопки.Вставить("Имя", 			ИмяКоманды);
			ПараметрыКнопки.Вставить("ИмяКоманды", 	ИмяКоманды);
			ПараметрыКнопки.Вставить("Заголовок", 	Строка.Наименование);
			ПараметрыКнопки.Вставить("Вид", 			ВидКнопкиФормы.ОбычнаяКнопка);
			ПараметрыКнопки.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
			
			ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыКнопки,Элементы.ГруппаПанельКатегорий); 			   			
		Иначе 			
			УжеНаФорме.Удалить(ИмяКоманды);	 			
		КонецЕсли;		
	
	КонецЦикла;   	
	
	Для каждого ПодчиненныйЭлемент Из УжеНаФорме Цикл
		
		Если ПодчиненныйЭлемент.Значение = ПодчиненныеЭлементыМеню.ПоказатьВсеВиды Тогда
			Продолжить;		
		КонецЕсли;
		
		РезультаПоиска = Команды.Найти(ПодчиненныйЭлемент.Ключ);
		Если РезультаПоиска <> Неопределено Тогда
			Команды.Удалить(РезультаПоиска);
		КонецЕсли;
		Элементы.Удалить(ПодчиненныйЭлемент.Значение);
	КонецЦикла;    
КонецФункции // ИнициализироватьМенюВидовНоменклатуры()

&НаКлиенте
Процедура УстановитьОтборПоВидуНоменклатуры(Команда)
	УИВидНоменклатуры = СтрЗаменить(СтрЗаменить(Команда.Имя, "uid", ""), "_", "-");
	УстановитьОтборПоВидуНоменклатурыНаСервере(УИВидНоменклатуры);
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоВидуНоменклатурыНаСервере(УИВидНоменклатуры)
	Если  УИВидНоменклатуры<>Неопределено Тогда
		ВидНоменклатурыСсылка	= Справочники.ВидыНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор(УИВидНоменклатуры));
	Иначе
		ВидНоменклатурыСсылка = Неопределено;
	КонецЕсли;  	
	ЗагрузитьСписокНоменклатурыНаСервере(ВидНоменклатурыСсылка);
КонецПроцедуры // УстановитьОтборПоВидуНоменклатурыНаСервере()

&НаСервере
Функция ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры) 
		
	Возврат git_ПереопределениеОбработчиковСервер.ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры);
	
КонецФункции // ДобавитьКомандуВКоллекциюКомандФормы()


&НаСервере
Функция ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Родитель = Неопределено) Экспорт
	
	Возврат git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Родитель);
		
КонецФункции // ДобавитьЭлементВКоллекциюЭлементовФормы()


&НаКлиенте
Процедура ПереместитьТекущуюСтроку(Вверх)
	ТД = Элементы.СписокРасширенныйПоискНоменклатура.ТекущиеДанные;
	ТС = Элементы.СписокРасширенныйПоискНоменклатура.ТекущаяСтрока;
	
	Если ТД = Неопределено ИЛИ ТС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИндексТекущегоЭК 	= СписокРасширенныйПоискНоменклатура.Индекс(ТД);
  	КоличествоЭК		= СписокРасширенныйПоискНоменклатура.Количество();

	Если Вверх = Истина Тогда
		Если ИндексТекущегоЭК > 0 Тогда
			Элементы.СписокРасширенныйПоискНоменклатура.ТекущаяСтрока 
			= СписокРасширенныйПоискНоменклатура[ИндексТекущегоЭК-1].ПолучитьИдентификатор();
		КонецЕсли; 			
	Иначе
		Если ИндексТекущегоЭК < КоличествоЭК - 1 Тогда
			 Элементы.СписокРасширенныйПоискНоменклатура.ТекущаяСтрока 
			 = СписокРасширенныйПоискНоменклатура[ИндексТекущегоЭК+1].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;  
	    
КонецПроцедуры // ПереместитьТекущуюСтроку()


#КонецОбласти