
#Область ИнтерфейсАвтоматическихТестов

&НаКлиенте
Перем ЮнитТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СпиокТестов = Новый Массив;	
	Возврат СпиокТестов;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;                               
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаполнитьРеквизитыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Модифицированность Тогда
		Ответ = Вопрос(НСтр("ru='Данные документа были изменены пользователем. Сохранить изменения?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			РезультатЗаписи = ЗаписатьДокументНаСервере();
			Если РезультатЗаписи Тогда
				Оповестить("ОбновитьХодРабот");
				Модифицированность = Ложь;
				ПоказатьОповещениеПользователя(НСтр("ru='Документ проведен.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), ПолучитьНавигационнуюСсылку(СсылкаНаВзаимодействие), Строка(СсылкаНаВзаимодействие), БиблиотекаКартинок.Информация32);
			Иначе
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Модифицированность = Ложь;
			Возврат;
		КонецЕсли;
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АбонентПредставлениеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура АбонентКакСвязатьсяПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура АбонентКонтактПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВходящийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВажностьПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РассмотретьПослеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РассмотреноПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТемаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура АбонентКонтактНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВзаимодействияКлиент.ВыбратьКонтакт(Неопределено, АбонентКакСвязаться, АбонентПредставление, АбонентКонтакт, Ложь, Ложь, Истина)
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИПровести(Команда)
	РезультатЗаписи = ЗаписатьДокументНаСервере();
	Если РезультатЗаписи Тогда
		Модифицированность = Ложь;
		Оповестить("ОбновитьХодРабот");
		ПоказатьОповещениеПользователя(НСтр("ru='Документ проведен.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), ПолучитьНавигационнуюСсылку(СсылкаНаВзаимодействие), Строка(СсылкаНаВзаимодействие), БиблиотекаКартинок.Информация32);
		Закрыть();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитыФормы()

	АбонентКонтакт = Параметры.ЗаявкаСервисногоЦентра.ЗаказчикРемонта;
	
	ВзаимодействияВызовСервера.ПолучитьПредставлениеИВсюКонтактнуюИнформациюКонтакта(АбонентКонтакт, АбонентПредставление, АбонентКакСвязаться);
	
	Важность 		= Перечисления.ВариантыВажностиВзаимодействия.Обычная;
	Ответственный 	= ПараметрыСеанса.ТекущийПользователь;
	
	Входящий		= Истина;
	
	Модифицированность = Истина;
		
КонецПроцедуры // ЗапонитьРеквизитыФормы()

Функция ЗаписатьДокументНаСервере()

	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПроверитьЗаполнениеРеквизитовФормы() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	ТелефонныйЗвонок = Документы.ТелефонныйЗвонок.СоздатьДокумент();
	ЗаполнитьРеквизитыДокумента(ТелефонныйЗвонок);
	
	Попытка
		ТелефонныйЗвонок.Записать(РежимЗаписиДокумента.Запись);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки;
	
	Взаимодействия.ПриЗаписиВзаимодействияИзФормы(ТелефонныйЗвонок, ТелефонныйЗвонок.Предмет);
	
	Попытка
		ТелефонныйЗвонок.Записать(РежимЗаписиДокумента.Запись);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки;
	
	РезультатЗаписи = ЗаписатьВзаимодействиеВРегистр(ТелефонныйЗвонок.Ссылка);
	Если Не РезультатЗаписи Тогда
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецЕсли;
	
	СсылкаНаВзаимодействие = ТелефонныйЗвонок.Ссылка;
	
	ЗафиксироватьТранзакцию();
	
	Возврат Истина;
	
КонецФункции // ЗаписатьДокументНаСервере()

&НаСервере
Функция ПроверитьЗаполнениеРеквизитовФормы()

	РезультатПроверки = Истина; // Сначала считаем что все ок.
	
	Если ПустаяСтрока(АбонентПредставление) Тогда
		РезультатПроверки = Ложь;
		ТекстСообщения	  = НСтр("ru='Поле ""Абонент"" не заполнено.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "АбонентПредставление");
	КонецЕсли;
	
	Если ПустаяСтрока(АбонентКакСвязаться) Тогда
		РезультатПроверки = Ложь;
		ТекстСообщения	  = НСтр("ru='Поле ""Как связаться"" не заполнено.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "АбонентКакСвязаться");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Важность) Тогда
		РезультатПроверки = Ложь;
		ТекстСообщения	  = НСтр("ru='Поле ""Важность"" не заполнено.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Важность");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		РезультатПроверки = Ложь;
		ТекстСообщения	  = НСтр("ru='Поле ""Ответственный"" не заполнено.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Ответственный");
	КонецЕсли;
	
	Если ПустаяСтрока(Тема) Тогда
		РезультатПроверки = Ложь;
		ТекстСообщения	  = НСтр("ru='Поле ""Тема"" не заполнено.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Тема");
	КонецЕсли;
	
	Если ПустаяСтрока(Описание) Тогда
		РезультатПроверки = Ложь;
		ТекстСообщения	  = НСтр("ru='Поле ""Описание"" не заполнено.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Описание");
	КонецЕсли;
		
	Возврат РезультатПроверки;

КонецФункции // ПроверитьЗаполнениеРеквизитовФормы()

&НаСервере
Процедура ЗаполнитьРеквизитыДокумента(ДокументВстреча)

	ДокументВстреча.Дата 						= ТекущаяДатаСеанса();	
	
	ДокументВстреча.АбонентКакСвязаться 		= АбонентКакСвязаться;
	ДокументВстреча.АбонентКонтакт 				= АбонентКонтакт;
	ДокументВстреча.АбонентПредставление 		= АбонентПредставление;
	
	ДокументВстреча.Автор 						= ПараметрыСеанса.ТекущийПользователь;
	ДокументВстреча.Важность 					= Важность;
	ДокументВстреча.Входящий 					= Входящий;
	ДокументВстреча.Описание 					= Описание;
	ДокументВстреча.Ответственный 				= Ответственный;
	ДокументВстреча.Рассмотрено 				= Рассмотрено;
	ДокументВстреча.РассмотретьПосле 			= РассмотретьПосле;
	ДокументВстреча.Тема 						= Тема;
	ДокументВстреча.Комментарий 				= Комментарий; 

КонецПроцедуры // ЗаполнитьРеквизитыДокумента()

&НаСервере
Функция ЗаписатьВзаимодействиеВРегистр(ДокументВзаимодействие)

	Период = ТекущаяДатаСеанса();
	
	НаборЗаписей = РегистрыСведений.ГНАТ_ВзаимодействияПоЗаявкам.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Период);
	НаборЗаписей.Отбор.Заявка.Установить(Параметры.ЗаявкаСервисногоЦентра);
 	НаборЗаписей.Отбор.Взаимодействие.Установить(ДокументВзаимодействие);
	
	Запись 					= НаборЗаписей.Добавить();
	Запись.Период 			= Период;
	Запись.Заявка 			= Параметры.ЗаявкаСервисногоЦентра;
	Запись.Взаимодействие 	= ДокументВзаимодействие;
	Запись.Количество		= 1;
	
	Попытка
		НаборЗаписей.Записать();    			
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;

КонецФункции // ЗаписатьВзаимодействиеВРегистр()

#КонецОбласти