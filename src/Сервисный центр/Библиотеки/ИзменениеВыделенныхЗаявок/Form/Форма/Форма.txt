
#Область ИнтерфейсАвтоматическихТестов

&НаКлиенте
Перем ЮнитТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СпиокТестов = Новый Массив;	
	Возврат СпиокТестов;
	
КонецФункции

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;	
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	
	СписокЗаявок  = Параметры.СписокЗаявок;	
	Заголовок 	  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Изменение реквизитов документов «Завка сервисного центра (%1)»'"), СписокЗаявок.Количество());
	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	СписокРеквизитов.Загрузить(ОбъектОбработка.ПолучитьТаблицуРеквизитов());
	
	ЗначениеВРеквизитФормы(ОбъектОбработка, "Объект");
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_ХодРабот

&НаКлиенте
Процедура ХодРаботПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Комментарий = ТекущиеДанные.Комментарий;
		ХодРаботПриАктивизацииСтрокиНаСервере(ТекущиеДанные.ЭтапРаботы, ТекущиеДанные.Период, ТекущиеДанные.НомерСтроки, ТекущиеДанные.ДанныеЗаписаны);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ХодРаботПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ХодРаботПередНачаломИзменения(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.НомерСтроки <> Объект.ХодРабот.Количество() Тогда
			Отказ = Истина;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ХодРаботПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ТекущиеДанные.ДанныеЗаписаны <> 2 Тогда
			Отказ = Истина;
		КонецЕсли;
		
		Если ТекущиеДанные.НомерСтроки <> Объект.ХодРабот.Количество() Тогда
			Отказ = Истина;	
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНовыйЭтап(Команда)
	
	Отказ = Ложь;
	
	ПроверитьКорректностьЗаполненияХодаРабот(Отказ);
	
	Если Отказ = Ложь Тогда
		НоваяСтрока = Объект.ХодРабот.Добавить();
		НоваяСтрока.Период 			= ТекущаяДата();
		НоваяСтрока.Ответственный 	= Ответственный;
		НоваяСтрока.ДанныеЗаписаны 	= 2;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы_СписокРеквизитов

&НаКлиенте
Процедура СписокРеквизитовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокРеквизитовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ХодРаботПриАктивизацииСтрокиНаСервере(ЭтапРаботы, Период, НомерСтроки, ДанныеЗаписаны)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого Реквизит Из ЭтапРаботы.РеквизитыДляКонтроля Цикл
		
		Если Элементы[Реквизит.ИмяРеквизита].ТолькоПросмотр = Реквизит.Доступность Тогда
			Элементы[Реквизит.ИмяРеквизита].ТолькоПросмотр = НЕ Реквизит.Доступность;
		КонецЕсли;
		
		Если Элементы[Реквизит.ИмяРеквизита].АвтоОтметкаНезаполненного <> Реквизит.ОбязателенДляЗаполнения Тогда  
			Элементы[Реквизит.ИмяРеквизита].АвтоОтметкаНезаполненного = Реквизит.ОбязателенДляЗаполнения;
		КонецЕсли;
		
	КонецЦикла;
	
	// Модуль доставки начало
	
	//Если ЭтапРаботы.ВключатьВОтгрузкуМест Тогда
	//	
	//	ЭтаФорма.КТС_ПД_АдресДоставки 			= Неопределено;
	//	ЭтаФорма.КТС_ПД_ОтделениеНовойПочты	 	= Неопределено;
	//	ЭтаФорма.КТС_ПД_Перевозчик 				= Неопределено;
	//	ЭтаФорма.КТС_ПД_ПунктНазначения 		= Неопределено;
	//	ЭтаФорма.КТС_ПД_КонтактноеЛицо 			= Неопределено;
	//	ЭтаФорма.КТС_ПД_ОбъявленнаяСтоимость 	= Неопределено;
	//	ЭтаФорма.КТС_ПД_ПлатитПолучатель 		= Неопределено;
	//	
	//	Если НомерСтроки <> Объект.ХодРабот.Количество() Тогда
	//		Элементы.КТС_ПараметрыДоставки.Доступность = Ложь;
	//	Иначе	
	//		Элементы.КТС_ПараметрыДоставки.Доступность = Истина;
	//	КонецЕсли;
	//	
	//	СтруктураПоиска = Новый Структура("Период", Период);
	//	РезультатПоиска = ЭтаФорма.КТС_ПД_ТаблицаЭтапов.НайтиСтроки(СтруктураПоиска);
	//	
	//	Если РезультатПоиска.Количество() > 0 Тогда
	//		ЗаполнитьЗначенияСвойств(ЭтаФорма, РезультатПоиска[0]);
	//	КонецЕсли;
	//	
	//Иначе
	//	
	//	Элементы.КТС_ПараметрыДоставки.Доступность = Ложь;
	//	
	//	ЭтаФорма.КТС_ПД_АдресДоставки 			= Неопределено;
	//	ЭтаФорма.КТС_ПД_ОтделениеНовойПочты	 	= Неопределено;
	//	ЭтаФорма.КТС_ПД_Перевозчик 				= Неопределено;
	//	ЭтаФорма.КТС_ПД_ПунктНазначения 		= Неопределено;
	//	ЭтаФорма.КТС_ПД_КонтактноеЛицо 			= Неопределено;
	//	ЭтаФорма.КТС_ПД_ОбъявленнаяСтоимость 	= Неопределено;
	//	ЭтаФорма.КТС_ПД_ПлатитПолучатель 		= Неопределено;
	//	
	//КонецЕсли;
	
	// Модуль доставки конец
	
КонецПроцедуры // ХодРаботПриАктивизацииСтрокиНаСервере()

&НаСервере
Процедура ПроверитьКорректностьЗаполненияХодаРабот(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого СтрокаХодаРабот Из Объект.ХодРабот Цикл
		
		Если СтрокаХодаРабот.ДанныеЗаписаны = 2 Тогда
			
			Для каждого Реквизит Из СтрокаХодаРабот.ЭтапРаботы.РеквизитыДляКонтроля Цикл
					
				Если Реквизит.ОбязателенДляЗаполнения = Истина И НЕ ЗначениеЗаполнено(СтрокаХодаРабот[Реквизит.ИмяРеквизита]) Тогда  
					ТекстОшибки = НСтр("ru='Реквизит обязателен для заполнения!'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, 
																	Объект.Ссылка,
																	ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.ХодРабот", СтрокаХодаРабот.НомерСтроки, Реквизит.ИмяРеквизита), 
																	, 
																	Отказ);	
				КонецЕсли;
				
			КонецЦикла;	
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти
 
