
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);	
	ЗаполнитьТаблицуСоответствий(Параметры.АдресКорзины, Отказ);
	АдресКорзины = Параметры.АдресКорзины;
	Соглашение = Параметры.Соглашение;
КонецПроцедуры





////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СписокНоменклатуры

&НаКлиенте
Процедура СписокНоменклатурыФлагПриИзменении(Элемент)
	ОбработатьВыборФлажка();
КонецПроцедуры






////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	Если ПолучитьАдресКорзины() Тогда
		Закрыть(АдресКорзины);
	КонецЕсли;
КонецПроцедуры





////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ



// Заполнение таблицы соответсвий

&НаСервере
Процедура ЗаполнитьТаблицуСоответствий(АдресКорзины, Отказ)

	Перем ТЗ_НастройкаСертификатов;
	
	ТЗ_Корзина = ПолучитьИзВременногоХранилища(АдресКорзины);
	
	Отказ = ВыполнитьПроверкуПараметров(ТЗ_Корзина, ТЗ_НастройкаСертификатов);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаЗаполненияДерева();
	
	Запрос.УстановитьПараметр("ТЗ_Корзина", ТЗ_Корзина);
	Запрос.УстановитьПараметр("ТЗ_НастройкаСертификатов", ТЗ_НастройкаСертификатов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СчетчикСертификатов.Загрузить(РезультатЗапроса[5].Выгрузить());
	УстановитьУсловноеОформлениеФормы();
	
	ДеревоНоменклатуры = РеквизитФормыВЗначение("СписокНоменклатуры", Тип("ДеревоЗначений"));
	ДеревоНоменклатуры = РезультатЗапроса[6].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ЗначениеВРеквизитФормы(ДеревоНоменклатуры, "СписокНоменклатуры");
			
КонецПроцедуры // ЗаполнитьТаблицуСоответсвий()

&НаСервере
Функция ВыполнитьПроверкуПараметров(ТЗ_Корзина, НастройкаСертификатов)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Сертификат				КАК Сертификат,
	                      |	ВидНоменклатуры			КАК ВидНоменклатуры,
	                      |	Процент					КАК Процент,
	                      |	ДополнительноеСведение  КАК ДополнительноеСведение
	                      |ИЗ
	                      |	РегистрСведений.КТС_НастройкаПроцентовСертификатов");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;

	НастройкаСертификатов = РезультатЗапроса.Выгрузить();
	
	Возврат Ложь;

КонецФункции // ВыполнитьПроверкуПараметров()
 

&НаСервере
Функция ПолучитьТекстЗапросаЗаполненияДерева()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТЗ_Корзина.Номенклатура КАК Номенклатура,
	|	ТЗ_Корзина.Характеристика КАК Характеристика,
	|	ТЗ_Корзина.Упаковка КАК Упаковка,
	|	ТЗ_Корзина.Цена КАК Цена,
	|	ТЗ_Корзина.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТЗ_Корзина.Сумма КАК Сумма,
	|	ТЗ_Корзина.ВидЦены КАК ВидЦены,
	|	ТЗ_Корзина.Доступно КАК Доступно,
	|	ТЗ_Корзина.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТЗ_Корзина.Склад КАК Склад,
	|	ТЗ_Корзина.СтавкаНДС КАК СтавкаНДС,
	|	ТЗ_Корзина.СуммаНДС КАК СуммаНДС,
	|	ТЗ_Корзина.СуммаВсего КАК СуммаВсего,
	|	ТЗ_Корзина.КолонкаБонусы КАК КолонкаБонусы,
	|	ТЗ_Корзина.Пустышка КАК Пустышка,
	|	ТЗ_Корзина.Количество КАК Количество,
	|	ТЗ_Корзина.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	|	ТЗ_Корзина.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
	|	ТЗ_Корзина.ОборотПроцент КАК ОборотПроцент,
	|	ТЗ_Корзина.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
	|	ТЗ_Корзина.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки
	|ПОМЕСТИТЬ ТаблицаКорзина
	|ИЗ
	|	&ТЗ_Корзина КАК ТЗ_Корзина
	|;
	|
	|ВЫБРАТЬ
	|	ТЗ_НастройкаСертификатов.Сертификат КАК Сертификат,
	|	ТЗ_НастройкаСертификатов.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТЗ_НастройкаСертификатов.Процент КАК Процент,
	|	ТЗ_НастройкаСертификатов.ДополнительноеСведение КАК ДополнительноеСведение
	|ПОМЕСТИТЬ НастройкаСертификатовПредварительная
	|ИЗ
	|	&ТЗ_НастройкаСертификатов КАК ТЗ_НастройкаСертификатов
	|;
	|
	|ВЫБРАТЬ
	|	Сертификаты.Сертификат КАК Сертификат,
	|	Сертификаты.ВидНоменклатуры КАК ВидНоменклатуры,
	|	Сертификаты.Процент КАК Процент,
	|	Сертификаты.ДополнительноеСведение КАК ДополнительноеСведение,
	|	ТаблицаКорзина.Цена КАК Цена,
	|	ТаблицаКорзина.Количество КАК Количество
	|ПОМЕСТИТЬ НастройкаСертификатов
	|ИЗ
	|	НастройкаСертификатовПредварительная КАК Сертификаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаКорзина КАК ТаблицаКорзина
	|		ПО Сертификаты.Сертификат = ТаблицаКорзина.Номенклатура
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаКорзина.Номенклатура КАК Номенклатура,
	|	ТаблицаКорзина.Цена КАК ЦенаНоменклатуры,
	|	НастройкаСертификатов.Сертификат КАК Сертификат,
	|	НастройкаСертификатов.Процент КАК Процент,
	|	НастройкаСертификатов.Цена КАК ЦенаСертификатаИзКорзины
	|ПОМЕСТИТЬ ЦеныПредварительные
	|ИЗ
	|	ТаблицаКорзина КАК ТаблицаКорзина
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НастройкаСертификатов КАК НастройкаСертификатов
	|		ПО НастройкаСертификатов.ВидНоменклатуры = ТаблицаКорзина.Номенклатура.ВидНоменклатуры
	|;
	|
	|ВЫБРАТЬ
	|	Номенклатура КАК Номенклатура,
	|	Сертификат КАК Сертификат,
	|	ЦенаСертификатаИзКорзины КАК ЦенаСертификатаИзКорзины,
	|	ВЫРАЗИТЬ(ЦенаНоменклатуры * Процент * 0.01 КАК Число(15,0)) КАК ЦенаНоменклатуры
	|ПОМЕСТИТЬ ПроцентыПредварительные
	|ИЗ
	|	ЦеныПредварительные
	|;
	|
	|ВЫБРАТЬ
	|	Сертификат КАК Сертификат,
	|	МАКСИМУМ(Количество) КАК КоличествоВсех
	|ИЗ
	|	НастройкаСертификатов
	|
	|СГРУППИРОВАТЬ ПО
	|	Сертификат
	|;
	|
	|ВЫБРАТЬ
	|	Номенклатура КАК Номенклатура,
	|	Сертификат КАК Сертификат,
	|	1-(ЦенаНоменклатуры/ЦенаСертификатаИзКорзины) КАК ПроцентСкидки,
	|	ЦенаСертификатаИзКорзины - ЦенаНоменклатуры КАК СуммаСкидки,
	|	ЦенаНоменклатуры КАК ЦенаСертификата,
	|	ЛОЖЬ КАК Флаг
	|ИЗ
	|	ПроцентыПредварительные
	|
	|ИТОГИ ПО
	|	Номенклатура
	|";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаЗаполненияДерева()

 


// Флажки и условное оформление формы


&НаКлиенте
Процедура ОбработатьВыборФлажка()

	ТекущиеДанные = Элементы.СписокНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьСостояниеСчетчикаСертификатов(ТекущиеДанные.Сертификат, ТекущиеДанные.Флаг);

КонецПроцедуры // ОбработатьВыборФлажка()

&НаСервере
Процедура ИзменитьСостояниеСчетчикаСертификатов(Сертификат, ЗначениеФлага)

	СтруктураПоиска = Новый Структура("Сертификат", Сертификат);
	НайденныеСтроки = СчетчикСертификатов.НайтиСтроки(СтруктураПоиска);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоУстановленных = НайденныеСтроки[0].КоличествоУстановленных;
	Если ЗначениеФлага Тогда
		НайденныеСтроки[0].КоличествоУстановленных = НайденныеСтроки[0].КоличествоУстановленных + 1;
	Иначе
		НайденныеСтроки[0].КоличествоУстановленных = НайденныеСтроки[0].КоличествоУстановленных - 1;
	КонецЕсли;
	
	ИзменитьУсловноеОформление(НайденныеСтроки[0]);

КонецПроцедуры // ИзменитьСостояниеСчетчика()



&НаСервере
Процедура ИзменитьУсловноеОформление(СтрокаТаблицы)
	Если СтрокаТаблицы.КоличествоВсех = СтрокаТаблицы.КоличествоУстановленных Тогда
		УстановитьПризнакИспользованияУсловногоОформления(СтрокаТаблицы.ИдентификаторНастройкиУсловногоОформления, Истина);
	Иначе
		УстановитьПризнакИспользованияУсловногоОформления(СтрокаТаблицы.ИдентификаторНастройкиУсловногоОформления, Ложь);
	КонецЕсли;	
КонецПроцедуры // ИзменитьУсловноеОформление()

&НаСервере
Процедура УстановитьПризнакИспользованияУсловногоОформления(ИдентификаторНастройки, ПризнакИспользования)

	Для каждого ЭлементУсловногоОформления Из УсловноеОформление.Элементы Цикл
		Если ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = ИдентификаторНастройки Тогда
			ЭлементУсловногоОформления.Использование = ПризнакИспользования;
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры // УстановитьПризнакИспользованияУсловногоОформления()
 




&НаСервере
Процедура УстановитьУсловноеОформлениеФормы()

	Для каждого СтрокаТаблицы Из СчетчикСертификатов Цикл
	
		ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
		
		ИдентификаторНастройки = Строка(Новый УникальныйИдентификатор);
		
		ЭлементУсловногоОформления.Использование = Ложь;
		ЭлементУсловногоОформления.ИдентификаторПользовательскойНастройки = ИдентификаторНастройки;
		СтрокаТаблицы.ИдентификаторНастройкиУсловногоОформления = ИдентификаторНастройки;
		
		УстановитьПолеУсловногоОформления(ЭлементУсловногоОформления);
		
		УстановитьОтборУсловногоОформления(ЭлементУсловногоОформления, СтрокаТаблицы.Сертификат);
		
		УстановитьЭлементУсловногоОформления(ЭлементУсловногоОформления);
	
	КонецЦикла; 

КонецПроцедуры // УстановитьУсловноеОформлениеФормы()

&НаСервере
Процедура УстановитьПолеУсловногоОформления(ЭлементУсловногоОформления)
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("СписокНоменклатурыФлаг");
	ОформляемоеПоле.Использование = Истина;
КонецПроцедуры // УстановитьПолеУсловногоОформления()

&НаСервере
Процедура УстановитьОтборУсловногоОформления(ЭлементУсловногоОформления, Сертификат)
	
	НовыйЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйЭлементОтбора.Использование = Истина;
	НовыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокНоменклатуры.Сертификат");
	НовыйЭлементОтбора.ПравоеЗначение = Сертификат;
	
	НовыйЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовыйЭлементОтбора.Использование = Истина;
	НовыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокНоменклатуры.Флаг");
	НовыйЭлементОтбора.ПравоеЗначение = Ложь;
	
КонецПроцедуры // УстановитьОтборУсловногоОформления()

&НаСервере
Процедура УстановитьЭлементУсловногоОформления(ЭлементУсловногоОформления)	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);	
КонецПроцедуры




// Процедуры для формирования корзиины


&НаСервере
Функция ПолучитьАдресКорзины()

	УстановитьПривилегированныйРежим(Истина);
	
	ТЗ_Корзина = ПолучитьИзВременногоХранилища(АдресКорзины);
	ТЗ_СписокНоменклатуры = ПолучитьСписокСертификатов();
	
	Если ТЗ_СписокНоменклатуры.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаФормированияКорзины();
	
	Запрос.УстановитьПараметр("ТЗ_Корзина", ТЗ_Корзина);
	Запрос.УстановитьПараметр("ТЗ_СписокНоменклатуры", ТЗ_СписокНоменклатуры);
	Запрос.УстановитьПараметр("НалогообложениеНДС", Соглашение.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", Соглашение.ЦенаВключаетНДС);
	
	ТЗ_Результат = Запрос.Выполнить().Выгрузить();
	
	ПоместитьВоВременноеХранилище(ТЗ_Результат, АдресКорзины);
	
	Возврат Истина;

КонецФункции // ПолучитьАдресКорзины()

&НаСервере
Функция ПолучитьСписокСертификатов()

	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Результат.Колонки.Добавить("Сертификат", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Результат.Колонки.Добавить("ПроцентСкидки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,2, ДопустимыйЗнак.Любой)));
	Результат.Колонки.Добавить("СуммаСкидки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2, ДопустимыйЗнак.Любой)));
	
	СписокНоменклатурыДерево = РеквизитФормыВЗначение("СписокНоменклатуры", Тип("ДеревоЗначений"));
	
	Для каждого СтрокаДерева Из СписокНоменклатурыДерево.Строки Цикл
		Для каждого ПодстрокаДерева Из СтрокаДерева.Строки Цикл
			Если ПодстрокаДерева.Флаг Тогда
		    	НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ПодстрокаДерева);
			КонецЕсли;
		КонецЦикла; 
	КонецЦикла; 

	Возврат Результат;
	
КонецФункции // ПолучитьСписокСертификатов()
 
&НаСервере
Функция ПолучитьТекстЗапросаФормированияКорзины()

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТЗ_Корзина.Номенклатура КАК Номенклатура,
	|	ТЗ_Корзина.Характеристика КАК Характеристика,
	|	ТЗ_Корзина.Упаковка КАК Упаковка,
	|	ТЗ_Корзина.Цена КАК Цена,
	|	ТЗ_Корзина.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТЗ_Корзина.Сумма КАК Сумма,
	|	ТЗ_Корзина.ВидЦены КАК ВидЦены,
	|	ТЗ_Корзина.Доступно КАК Доступно,
	|	ТЗ_Корзина.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТЗ_Корзина.Склад КАК Склад,
	|	ТЗ_Корзина.СтавкаНДС КАК СтавкаНДС,
	|	ТЗ_Корзина.СуммаНДС КАК СуммаНДС,
	|	ТЗ_Корзина.СуммаВсего КАК СуммаВсего,
	|	ТЗ_Корзина.КолонкаБонусы КАК КолонкаБонусы,
	|	ТЗ_Корзина.Пустышка КАК Пустышка,
	|	ТЗ_Корзина.Количество КАК Количество,
	|	ТЗ_Корзина.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	|	ТЗ_Корзина.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
	|	ТЗ_Корзина.ОборотПроцент КАК ОборотПроцент,
	|	ТЗ_Корзина.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
	|	ТЗ_Корзина.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
	|	ВЫБОР
	|		КОГДА ТЗ_Корзина.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|		  ИЛИ ТЗ_Корзина.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА 0.1
	|		КОГДА ТЗ_Корзина.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|		  ИЛИ ТЗ_Корзина.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА 0.18
	|		КОГДА ТЗ_Корзина.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|		  ИЛИ ТЗ_Корзина.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА 0.2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтавкаНДСЧислом
	|ПОМЕСТИТЬ ТаблицаКорзина
	|ИЗ
	|	&ТЗ_Корзина КАК ТЗ_Корзина
	|;
	|
	|ВЫБРАТЬ
	|	ТЗ_СписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТЗ_СписокНоменклатуры.Сертификат КАК Сертификат,
	|	ТЗ_СписокНоменклатуры.ПроцентСкидки КАК ПроцентСкидки,
	|	ТЗ_СписокНоменклатуры.СуммаСкидки КАК СуммаСкидки
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	&ТЗ_СписокНоменклатуры КАК ТЗ_СписокНоменклатуры
	|;
	|
	|ВЫБРАТЬ
	|	СписокНоменклатуры.Сертификат КАК Сертификат,
	|	СРЕДНЕЕ(ТаблицаКорзина.Количество) КАК Количество,
	|	СРЕДНЕЕ(ТаблицаКорзина.Цена) КАК Цена
	|ПОМЕСТИТЬ ТаблицаЦенСертификатов
	|ИЗ
	|	СписокНоменклатуры КАК СписокНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКорзина КАК ТаблицаКорзина
	|		ПО ТаблицаКорзина.Номенклатура = СписокНоменклатуры.Сертификат 
	|СГРУППИРОВАТЬ ПО
	|	СписокНоменклатуры.Сертификат
	|
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаКорзина.Номенклатура КАК Номенклатура,
	|	ТаблицаКорзина.Количество КАК КоличествоНоменклатуры,
	|	СписокНоменклатуры.Сертификат КАК Сертификат,
	|	СписокНоменклатуры.СуммаСкидки КАК СуммаСкидки
	|ПОМЕСТИТЬ СвязиСертификатов
	|ИЗ
	|	ТаблицаКорзина КАК ТаблицаКорзина
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписокНоменклатуры КАК СписокНоменклатуры
	|		ПО СписокНоменклатуры.Номенклатура = ТаблицаКорзина.Номенклатура
	|;
	|
	|ВЫБРАТЬ
	|	СвязиСертификатов.Сертификат КАК Сертификат,
	|	СУММА(ВЫБОР
	|		КОГДА СвязиСертификатов.КоличествоНоменклатуры >= ТаблицаЦенСертификатов.Количество
	|			ТОГДА ТаблицаЦенСертификатов.Количество
	|		ИНАЧЕ СвязиСертификатов.КоличествоНоменклатуры
	|	КОНЕЦ * (ТаблицаЦенСертификатов.Цена - СвязиСертификатов.СуммаСкидки)) КАК СуммаСертификата
	|ПОМЕСТИТЬ ТаблицаСертификатовПреварительная
	|ИЗ
	|	СвязиСертификатов КАК СвязиСертификатов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЦенСертификатов КАК ТаблицаЦенСертификатов
	|		ПО ТаблицаЦенСертификатов.Сертификат = СвязиСертификатов.Сертификат
	|
	|СГРУППИРОВАТЬ ПО
	|	СвязиСертификатов.Сертификат
	|;
	|
	|ВЫБРАТЬ
	|	ТаблицаКорзина.Номенклатура КАК Номенклатура,
	|	ТаблицаКорзина.Характеристика КАК Характеристика,
	|	ТаблицаКорзина.Упаковка КАК Упаковка,
	|	ТаблицаКорзина.Цена КАК Цена,
	|	ТаблицаКорзина.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСертификатовПреварительная.Сертификат, 0) = 0
	|			ТОГДА ТаблицаКорзина.Сумма
	|		ИНАЧЕ ТаблицаСертификатовПреварительная.СуммаСертификата
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаКорзина.ВидЦены КАК ВидЦены,
	|	ТаблицаКорзина.Доступно КАК Доступно,
	|	ТаблицаКорзина.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаКорзина.Склад КАК Склад,
	|	ТаблицаКорзина.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСертификатовПреварительная.Сертификат, 0) <> 0
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА &НалогообложениеНДС = Значение(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|						ТОГДА
	|							ВЫБОР
	|								КОГДА &ЦенаВключаетНДС
	|									ТОГДА (ТаблицаСертификатовПреварительная.СуммаСертификата - ТаблицаКорзина.СуммаАвтоматическойСкидки) / (1 + ТаблицаКорзина.СтавкаНДСЧислом) * ТаблицаКорзина.СтавкаНДСЧислом
	|								ИНАЧЕ     (ТаблицаСертификатовПреварительная.СуммаСертификата - ТаблицаКорзина.СуммаАвтоматическойСкидки) * ТаблицаКорзина.СтавкаНДСЧислом
	|							КОНЕЦ
    |					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаКорзина.СуммаНДС 
	|	КОНЕЦ КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСертификатовПреварительная.Сертификат, 0) <> 0
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА &НалогообложениеНДС = Значение(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|						ТОГДА
	|							ВЫБОР
	|								КОГДА &ЦенаВключаетНДС
	|									ТОГДА (ТаблицаСертификатовПреварительная.СуммаСертификата - ТаблицаКорзина.СуммаАвтоматическойСкидки)
	|								ИНАЧЕ     (ТаблицаСертификатовПреварительная.СуммаСертификата - ТаблицаКорзина.СуммаАвтоматическойСкидки) * (1 + ТаблицаКорзина.СтавкаНДСЧислом)
	|							КОНЕЦ
    |					ИНАЧЕ (ТаблицаСертификатовПреварительная.СуммаСертификата - ТаблицаКорзина.СуммаАвтоматическойСкидки)
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаКорзина.СуммаВсего 
	|	КОНЕЦ КАК СуммаВсего,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСертификатовПреварительная.Сертификат, 0) = 0
	|			ТОГДА ТаблицаКорзина.КолонкаБонусы
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КолонкаБонусы,
	|	ТаблицаКорзина.Пустышка КАК Пустышка,
	|	ТаблицаКорзина.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСертификатовПреварительная.Сертификат, 0) = 0
	|			ТОГДА ТаблицаКорзина.ПроцентРучнойСкидки
	|		ИНАЧЕ (1 - (ТаблицаСертификатовПреварительная.СуммаСертификата/ТаблицаКорзина.Цена)) * 100
	|	КОНЕЦ КАК ПроцентРучнойСкидки,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСертификатовПреварительная.Сертификат, 0) = 0
	|			ТОГДА ТаблицаКорзина.СуммаРучнойСкидки
	|		ИНАЧЕ (ТаблицаКорзина.Цена * ТаблицаКорзина.Количество - ТаблицаСертификатовПреварительная.СуммаСертификата)
	|	КОНЕЦ КАК СуммаРучнойСкидки,
	|	ТаблицаКорзина.ОборотПроцент КАК ОборотПроцент,
	|	ТаблицаКорзина.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
	|	ТаблицаКорзина.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки
	|ИЗ
	|	ТаблицаКорзина КАК ТаблицаКорзина
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСертификатовПреварительная КАК ТаблицаСертификатовПреварительная
	|		ПО ТаблицаСертификатовПреварительная.Сертификат = ТаблицаКорзина.Номенклатура
	|";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаФормированияКорзины()
 