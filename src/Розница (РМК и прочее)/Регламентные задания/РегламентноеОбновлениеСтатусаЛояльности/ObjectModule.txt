Функция СведенияОВнешнейОбработке() Экспорт
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Регл. обновление статуса лояльности (v.1.0.000)");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", "1.0.000");    
    ПараметрыРегистрации.Вставить("Информация", "Регл. обновление статуса лояльности (v.1.0.000)");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "Регл. обновление статуса лояльности (v.1.0.000)", "ОбновитьСтатусЛояльности();", "ВызовСерверногоМетода");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(ИдентификаторКоманды) Экспорт
	Выполнить(ИдентификаторКоманды);	
КонецПроцедуры





Процедура ОбновитьСтатусЛояльности()
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаУровняПартнеровВСистемеЛояльности();
	РезультатПакета = Запрос.ВыполнитьПакет();
	Выборка = РезультатПакета[РезультатПакета.ВГраница()].Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Объект = Выборка.Партнер.ПолучитьОбъект();
		РезультатПоиска = Объект.ДополнительныеРеквизиты.Найти(Выборка.Свойство, "Свойство");
		Если РезультатПоиска = Неопределено Тогда
			НоваяСтрока = Объект.ДополнительныеРеквизиты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка); 
		Иначе
			ЗаполнитьЗначенияСвойств(РезультатПоиска, Выборка);
		КонецЕсли;
		Объект.Записать();
	КонецЦикла;
		
КонецПроцедуры

Функция ПолучитьТекстЗапросаУровняПартнеровВСистемеЛояльности()
	Возврат "
	|ВЫБРАТЬ
	| 	Партнер
	| 	
	|ПОМЕСТИТЬ кешПартнеров
	|ИЗ
	|	РегистрСведений.Лояльность_НомераТелефонов
	|	
	|СГРУППИРОВАТЬ ПО 
	|	Партнер	
	|
	|;
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	кешПартнеров.Партнер,
	|	Сумма (
	|			ВЫБОР
	|				КОГДА КурсОборот.Валюта = КурсРегламент.Валюта
	|				ТОГДА ЕСТЬNULL(СуммаПриход, 0)
	|				ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(СуммаПриход * ((КурсОборот.Курс / КурсОборот.Кратность) / (КурсРегламент.Курс / КурсРегламент.Кратность)) КАК Число (15,2)), 0)
	|		  	КОНЕЦ
	|		  ) 
	|			- 
	|		  (
	|		 	ВЫБОР
	|		 		КОГДА КурсВозврат.Валюта = КурсРегламент.Валюта
	|		 		ТОГДА ЕСТЬNULL(ВлЗапрос.Долг, 0) 
	|		 		ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ВлЗапрос.Долг * ((КурсВозврат.Курс / КурсВозврат.Кратность) / (КурсРегламент.Курс / КурсРегламент.Кратность)) КАК Число (15,2)), 0)
	|		 	КОНЕЦ
	|		  ) + ЕСТЬNULL(ДопОборот.Сумма, 0) КАК ОборотПоПартнеру
	|
	|ПОМЕСТИТЬ кешОборот
	|ИЗ
	|	кешПартнеров КАК кешПартнеров 
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами.Обороты(, , , АналитикаУчетаПоПартнерам.Партнер В (ВЫБРАТЬ Партнер ИЗ кешПартнеров)) КАК ОборотыСКлиентами 
	|ПО  ОборотыСКлиентами.АналитикаУчетаПоПартнерам.Партнер = кешПартнеров.Партнер
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			 Аналитика.Партнер,
	|			 РасчетыСКлиентами.Валюта,	
	|			 Сумма(Долг) КАК Долг
	|		ИЗ
	|			РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентами
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|				ПО	Аналитика.КлючАналитики = РасчетыСКлиентами.АналитикаУчетаПоПартнерам
	|				И	Аналитика.Партнер		В (ВЫБРАТЬ Партнер ИЗ кешПартнеров)
	|	
	|		ГДЕ	
	|			РасчетыСКлиентами.Регистратор Ссылка Документ.ВозвратТоваровОтКлиента 
	|		СГРУППИРОВАТЬ ПО 
	|			Аналитика.Партнер, 
	|			РасчетыСКлиентами.Валюта) КАК ВлЗапрос 
	|ПО ВлЗапрос.Партнер  = кешПартнеров.Партнер
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, Валюта В (ВЫБРАТЬ ВалютаРегламентированногоУчета ИЗ Константы)) КАК КурсРегламент
	|ПО Истина
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют.СрезПоследних КАК КурсОборот
	|ПО ОборотыСКлиентами.Валюта = КурсОборот.Валюта
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ  РегистрСведений.КурсыВалют.СрезПоследних КАК КурсВозврат
	|ПО ВлЗапрос.Валюта = КурсВозврат.Валюта
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Лояльность_НачальныйОборот КАК ДопОборот
	|ПО ДопОборот.Партнер =  кешПартнеров.Партнер
	|
	|СГРУППИРОВАТЬ ПО 
	|	кешПартнеров.Партнер, 
	|	ВлЗапрос.Долг,
	|
	|	КурсРегламент.Валюта,
	|   КурсРегламент.Курс,
	|   КурсРегламент.Кратность,
	|	КурсВозврат.Валюта,
	|	КурсВозврат.Курс,
	|	КурсВозврат.Кратность, 
	|	ДопОборот.Сумма
	|
	|;
	|///////////////////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	кешОборот.Партнер, 
	|	СвойствоСтатусВПрограмме КАК Свойство,
	|	УровеньОборот.Уровень    КАК Значение
	|
	|ИЗ
	|	кешОборот КАК кешОборот
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СкидкаПоОборотуБонусы КАК УровеньОборот
	|ПО  кешОборот.ОборотПоПартнеру >= УровеньОборот.НижняяГраница		
	|И   (кешОборот.ОборотПоПартнеру < УровеньОборот.ВерхняяГраница ИЛИ УровеньОборот.ВерхняяГраница = 0)	
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаБонусы.СрезПоследних 
	|ПО Истина
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							Ссылка,
	|							Значение	 
	|						ИЗ 
	|							Справочник.Партнеры.ДополнительныеРеквизиты 
	|						ГДЕ 
	|							Свойство В (ВЫБРАТЬ СвойствоСтатусВПрограмме ИЗ РегистрСведений.УчетнаяПолитикаБонусы.СрезПоследних)) КАК СпрСвойство
	|ПО  кешОборот.Партнер = СпрСвойство.Ссылка
	|
	|ГДЕ
	|	УровеньОборот.Уровень <> ЕСТЬNULL(СпрСвойство.Значение, ""NULL"") ";		
КонецФункции
