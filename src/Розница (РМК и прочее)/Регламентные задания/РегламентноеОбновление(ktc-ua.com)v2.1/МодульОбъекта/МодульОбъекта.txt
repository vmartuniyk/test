
#Область ИнтерфейсАвтоматическихТестов

Процедура ПередатьДанныеВZabbix(Хост, Ключ, Значение, УникальныйИдентификатор)
	
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("auth", "a1fds22sfhnbg5");
	СтруктураЗапроса.Вставить("data", Новый Массив);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("host", Хост);
	СтруктураПараметров.Вставить("key", Ключ);
	СтруктураПараметров.Вставить("value", Значение);
	СтруктураПараметров.Вставить("id", УникальныйИдентификатор);
	
	СтруктураЗапроса.data.Добавить(СтруктураПараметров);
	
	ТелоЗапроса = git_JSON.ЗаписатьJSON(СтруктураЗапроса);
	
	HTTPСоединение = Новый HTTPСоединение("192.168.156.2", "9999");											
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json");
	HTTPЗапрос = Новый HTTPЗапрос("/rest", Заголовки);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапроса, "windows-1251");
	HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	
КонецПроцедуры

#КонецОбласти 


#Область ПрограммныйИнтерфейс
	
Процедура ВыгрузитьВИнтернетМагазин() Экспорт
	
	Перем Server;
	Перем StructConnection;
	Перем FTP_Profiles;
	Перем HTTP_Profiles;
	
	
	УникальныйИдентификатор = Строка(Новый УникальныйИдентификатор);	
	ПередатьДанныеВZabbix("gamlet.ktc.local", "ktc_ua_key", "procedure start", УникальныйИдентификатор);
	
	
	
	ЗапросFTP 		= Новый Запрос("ВЫБРАТЬ * ИЗ РегистрСведений.Регламент_FTP_Профили");
	FTP_Profiles 	= ЗапросFTP.Выполнить().Выгрузить();
	ЗапросHTTP 		= Новый Запрос("ВЫБРАТЬ * ИЗ РегистрСведений.Регламент_HTTP_Профили");
	HTTP_Profiles   = ЗапросHTTP.Выполнить().Выгрузить();
	
	РезультатПоискаFTP = FTP_Profiles.Найти("www.ktc-ua.com", "Наименование");
	Если  РезультатПоискаFTP <> Неопределено Тогда
		
		StructConnection = Новый Структура("ServerExchange, User, Password, Port, Proxy, PassiveConnection, Timeout", 
											РезультатПоискаFTP.Server, 
											РезультатПоискаFTP.User, 
											РезультатПоискаFTP.Password, 
											РезультатПоискаFTP.Port, 
											РезультатПоискаFTP.Proxy, 
											РезультатПоискаFTP.PassiveConnection,
											РезультатПоискаFTP.Timeout);
		
		Server = ktcОбщийМодульПротоколов.ПодключитсяПоFTP(	StructConnection.ServerExchange, 
															StructConnection.User, 
															StructConnection.Password, 
															StructConnection.Port,
															StructConnection.Proxy,
															StructConnection.PassiveConnection,
															StructConnection.Timeout);
																																									
		//Формирование выгрузки данных номенклатуры
		a_ktc_ua_com_ВыгрузкаНоменклатуры(Server, StructConnection);
		
	КонецЕсли;
	
	//Поиск нужного профиля для включения обработчика информации
	РезультатПоискаHTTP = HTTP_Profiles.Найти("www.ktc-ua.com", "Наименование");	
	Если РезультатПоискаHTTP <> Неопределено Тогда
		
		Попытка
			
			HTTP = Новый HTTPСоединение(РезультатПоискаHTTP.Server);
			HTTP.Получить("/upd", "C:\1C_LOGS\YT11_CONNECTION\www.ktc-ua.com\" + СтрЗаменить(Строка(ТекущаяДата()), ":", ".") + "new_site.log");	
			
		Исключение
			
			Тема = 	"Перейти по ссылке www.ktc-ua.com/upd не удалось";
			Тело = 	"Технические данные подключения : " 		+ Символы.ПС +
					"Server: www.ktc-ua.com " 					+ Символы.ПС +
					" "											+ Символы.ПС + 
					ОписаниеОшибки();																						
					
			Кому = Новый Массив;
			Кому.Добавить(Новый Структура("Адрес, Представление", "1clog@ktc-ua.com", "Відділ тех. підтримки"));

			ПараметрыПисьма = ktcОбщийМодульПротоколов.СформироватьПараметрыПисьма(Тема, Тело, Кому);
			ktcОбщийМодульПротоколов.ОтправитьСообщениеПоSMTP(Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты, ПараметрыПисьма);
			
		КонецПопытки;
		
	КонецЕсли;
	
	
	
	ПередатьДанныеВZabbix("gamlet.ktc.local", "ktc_ua_key", "procedure stop", УникальныйИдентификатор);

	
	
КонецПроцедуры
	
#КонецОбласти 


#Область СлужебныеПроцедурыИФункции

Процедура a_ktc_ua_com_ВыгрузкаНоменклатуры(Server, StructConnection)
		
	ОбъектБиблиотека = git_ПереопределениеОбработчиковСервер.ПолучитьВнешнийОбъектПоИмени("Библиотека внешних обработок");
	
	ВремяВыполненияЗаписиВФайл  = 0;
	ВремяВыполненияЗаписиПоFTP	= 0;
	
	СписокДоступныхСкладов = Новый СписокЗначений;
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d3409-40c2-11e0-9f98-001517115d85")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d340e-40c2-11e0-9f98-001517115d85")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d3408-40c2-11e0-9f98-001517115d85")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("c2310b41-9e76-11e0-b579-001517115d84")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("cbc4c306-a945-11e0-b579-001517115d84")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("832fe7ba-15c9-11e1-b8a7-001517115d85")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("f21b1ce0-b16a-11e0-9cc0-001517115d85")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("7c5a0d04-fda8-11e1-9d4d-001e673c80fc")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("48373cf1-cd07-11e2-8f22-001e673c80fa")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("06a8bcd6-2507-11e3-bb25-001e673c80fc")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("4cffa248-1895-11e4-80d4-001e676b0175")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("f714c3c6-665e-11e4-80e2-001e676b0175")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("3bd5967e-86a0-11e4-80e6-001e676b0174")));
	СписокДоступныхСкладов.Добавить(Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("c2ba36db-f7aa-11e4-80ea-001e676b0175"))); // Прийомка
	
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;	
	
	Запрос.Текст = "
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//1.
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Объект КАК Справочник.Номенклатура) КАК Номенклатура,
		|	Свойство,
		|	Значение
		|	
		|ПОМЕСТИТЬ СвойстваНоменклатуры
		|ИЗ
		|	 РегистрСведений.ДополнительныеСведения
		|ГДЕ
		|	 Свойство = &ДнейНаСкладе
		|ИЛИ Свойство = &Партия
        |
		|ОБЪЕДИНИТЬ ВСЕ
        |
		|ВЫБРАТЬ
		| 	Ссылка,
		| 	Свойство,
		| 	Значение
		|ИЗ
		|	Справочник.Номенклатура.ДополнительныеРеквизиты
		|ГДЕ
		|	Свойство = &Гарантия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Свойство
		|;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//2. Не грузить на сайт
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Объект КАК Справочник.Номенклатура) КАК Номенклатура
		|ПОМЕСТИТЬ НеВыгружатьНаСайт
		|ИЗ
		|	 РегистрСведений.ДополнительныеСведения
		|ГДЕ
		|	 Свойство = &СвойствоLoadToSite
		|И	 Значение = Истина
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура	
		|;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//3.
		|ВЫБРАТЬ
		|	Склад
		|ПОМЕСТИТЬ Cache_Склады
		|ИЗ
		|	РегистрСведений.Модуль_ДоступныеСклады
		|ГДЕ
		|	Основной = Истина
		|И	Склад В (&СписокДоступныхСкладов)
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//4.
		|ВЫБРАТЬ
		|	Номенклатура												КАК Номенклатура,
		|	Номенклатура.Код											КАК sku,
		|	Номенклатура.Артикул 										КАК field_partnumber,
		|	Номенклатура.Наименование    								КАК title_middle,
		|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(255)) 	КАК title_long,
		|	Номенклатура.ВидНоменклатуры		                        КАК ВидНоменклатуры,
		|	Номенклатура.ЦеноваяГруппа                                  КАК ЦеноваяГруппа
		|ПОМЕСТИТЬ ПредварительныйКешНоменклатуры
		|ИЗ
		|	РегистрСведений.ALPS_АктуальностьНоменклатуры.СрезПоследних(, Номенклатура НЕ В (ВЫБРАТЬ Номенклатура ИЗ НеВыгружатьНаСайт))
		|ГДЕ
		|	Актуально
		|И	ГарантияДоставки
		|И	&НеВыгружатьАктуальныйТовар = Ложь
		|
		|ОБЪЕДИНИТЬ
		|	
		|ВЫБРАТЬ
		|	Номенклатура,
		|	Номенклатура.Код,
		|	Номенклатура.Артикул,
		|	Номенклатура.Наименование,	
		|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(255)),
		|	Номенклатура.ВидНоменклатуры,
		|	Номенклатура.ЦеноваяГруппа
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(, Номенклатура НЕ В (ВЫБРАТЬ Номенклатура ИЗ НеВыгружатьНаСайт) И Склад В (ВЫБРАТЬ Склад ИЗ Cache_Склады))
		|
		|ОБЪЕДИНИТЬ
		|	
		|ВЫБРАТЬ
		|	Номенклатура,
		|	Номенклатура.Код,
		|	Номенклатура.Артикул,
		|	Номенклатура.Наименование,	
		|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(255)),
		|	Номенклатура.ВидНоменклатуры,
		|	Номенклатура.ЦеноваяГруппа
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(, Номенклатура НЕ В (ВЫБРАТЬ Номенклатура ИЗ НеВыгружатьНаСайт) И Склад В (ВЫБРАТЬ Склад ИЗ Cache_Склады))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		| %1 // Формирование таблицы ОжидаемаяНоменклатура
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НеВыгружатьНаСайт;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//6.
		|ВЫБРАТЬ
		|	СпрНоменклатура.Номенклатура,
		|	СпрНоменклатура.sku,
		|	СпрНоменклатура.field_partnumber,
		|	СпрНоменклатура.title_middle,
		|	СпрНоменклатура.title_long,
		|	ВидыНоменклатуры.UID_internet	КАК good_type
		|ПОМЕСТИТЬ КешНоменклатуры	
		|ИЗ
		|	ПредварительныйКешНоменклатуры КАК СпрНоменклатура
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|ПО	ВидыНоменклатуры.Ссылка = СпрНоменклатура.ВидНоменклатуры
		|И  ВидыНоменклатуры.UID_internet <> """"
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КПП_Розница_ЗначениеКоефициентаПриоритетностиПродаж.СрезПоследних(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ПредварительныйКешНоменклатуры)) КАК КПП
		|ПО	КПП.Номенклатура = СпрНоменклатура.Номенклатура	
		|
		|ГДЕ
		|	СпрНоменклатура.ЦеноваяГруппа <> &Неліквід
		|И	(IsNull(КПП.НеПересчитыватьАвтоматически, Ложь) = Ложь ИЛИ IsNull(Значение.ОграничениеАктуальностиПоПравам, Ложь) = Ложь)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СпрНоменклатура.Номенклатура
		|;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПредварительныйКешНоменклатуры;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//8.
		|ВЫБРАТЬ
		|	СпрНоменклатура.sku,
		|	СпрНоменклатура.Номенклатура,
		|	СпрНоменклатура.field_partnumber,
		|	СпрНоменклатура.title_middle,
		|	СпрНоменклатура.title_long,	
		|	СпрНоменклатура.good_type,
		|	ЕСТЬNULL(Warranty.Значение, ""0 міс."") 						КАК field_product_warranty,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(ДнейНаСкладе.Значение КАК ЧИСЛО(5,0)), """") 	КАК field_days_on_store,
		|	ЕСТЬNULL(ВЫРАЗИТЬ(Партия.Значение КАК ЧИСЛО(5,0)), """")        КАК field_batch_on_store	
		|	
		|ПОМЕСТИТЬ НеАрхивнаяНоменклатура
		|ИЗ
		| 	КешНоменклатуры КАК СпрНоменклатура
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ СвойстваНоменклатуры КАК Warranty
		|ПО Warranty.Номенклатура 	= СпрНоменклатура.Номенклатура
		|И  Warranty.Свойство 		= &Гарантия
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ СвойстваНоменклатуры КАК ДнейНаСкладе
		|ПО ДнейНаСкладе.Номенклатура 	= СпрНоменклатура.Номенклатура
		|И	ДнейНаСкладе.Свойство 		= &ДнейНаСкладе
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ СвойстваНоменклатуры КАК Партия
		|ПО Партия.Номенклатура = СпрНоменклатура.Номенклатура
		|И  Партия.Свойство 	= &Партия
		|
		|ИНДЕКСИРОВАТЬ ПО 
		|	СпрНоменклатура.Номенклатура	
		|;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешНоменклатуры;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//10.
		|ВЫБРАТЬ
		|	СпрНоменклатура.sku,
		|	СпрНоменклатура.good_type,
		|	"""" КАК title_short,
		|	СпрНоменклатура.title_middle,
		|	СпрНоменклатура.title_long,
		|	СпрНоменклатура.field_partnumber,
		|	ВЫБОР
		|		КОГДА IsNull(Остатки.ВНаличииОстаток, 0) - IsNull(Остатки.ВРезервеОстаток, 0) > 0
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК field_vendor_relation,
		|	1 КАК field_product_availability,
		|	ЕСТЬNULL(ЦенаРозница.Цена, 0) КАК field_data_purchase_price,
		|	"""" КАК field_description,
		|	СпрНоменклатура.field_product_warranty,
		|	ВЫБОР
		|		КОГДА АктуальностьНоменклатуры.Актуально
		|		ТОГДА 1
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК field_actuality,
		|	СпрНоменклатура.field_days_on_store,
		|	СпрНоменклатура.field_batch_on_store,
		|	ВЫБОР
		|		КОГДА IsNull(Остатки.ВНаличииОстаток, 0) - IsNull(Остатки.ВРезервеОстаток, 0) + IsNull(ОжидаемаяНоменклатура.Количество, 0) <= 0 
		|		ТОГДА """"
		|		ИНАЧЕ IsNull(ОжидаемаяНоменклатура.Количество, """")
		|	КОНЕЦ КАК field_waiting
		|	
		|ИЗ
		|	НеАрхивнаяНоменклатура КАК СпрНоменклатура
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ALPS_АктуальностьНоменклатуры.СрезПоследних(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ НеАрхивнаяНоменклатура)) КАК АктуальностьНоменклатуры
		|ПО АктуальностьНоменклатуры.Номенклатура = СпрНоменклатура.Номенклатура
		|И	АктуальностьНоменклатуры.Актуально
		|И	АктуальностьНоменклатуры.ГарантияДоставки
		|		
		//|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению.Остатки(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ НеАрхивнаяНоменклатура) И Склад В (ВЫБРАТЬ Склад ИЗ Cache_Склады)) КАК Ожидаемые
		//|ПО Ожидаемые.Номенклатура = СпрНоменклатура.Номенклатура
		|ЛЕВОЕ СОЕДИНЕНИЕ ОжидаемаяНоменклатура КАК ОжидаемаяНоменклатура
		|ПО ОжидаемаяНоменклатура.Номенклатура = СпрНоменклатура.Номенклатура 
        |
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(,   Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ НеАрхивнаяНоменклатура) И Склад В (ВЫБРАТЬ Склад ИЗ Cache_Склады)) КАК Остатки
		|ПО Остатки.Номенклатура = СпрНоменклатура.Номенклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ НеАрхивнаяНоменклатура) И ВидЦены = &Розница) КАК ЦенаРозница
		|ПО ЦенаРозница.Номенклатура = СпрНоменклатура.Номенклатура
		|";
		
	НеВыгружатьАктуальность = НеобходимоВыгружатьНоменклатуруПоАктуальностиНаСайт();
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Запрос.Текст, ТекстЗапросаОжидаемыйТовар());
	
	Запрос.УстановитьПараметр("СписокДоступныхСкладов", СписокДоступныхСкладов);
	Запрос.УстановитьПараметр("НеВыгружатьАктуальныйТовар", НеВыгружатьАктуальность);	
	Запрос.УстановитьПараметр("Розница", 	  		Справочники.ВидыЦен.ПолучитьСсылку(Новый УникальныйИдентификатор("8bdf84ff-404c-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("Неліквід", 			Справочники.ЦеновыеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("351880c9-8541-11e0-888a-001517115d85")));
	Запрос.УстановитьПараметр("Гарантия", 	  		ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("a3e0fd0e-4712-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("ДнейНаСкладе", 		ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("f09e10e4-a641-11e1-aa4b-001e67162d38")));
	Запрос.УстановитьПараметр("Партия", 	  		ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("bc9de0bd-aaf5-11e1-aa4b-001e67162d38")));
    Запрос.УстановитьПараметр("СвойствоLoadToSite", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("21932c8b-6930-11e2-8fd5-001e673c80fc")));	
	goods = Запрос.Выполнить().Выбрать();
	
	
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	UID_internet КАК good_type
		|
		|ИЗ
		|	Справочник.ВидыНоменклатуры
		|
		|ГДЕ
		|	UID_internet <> """"
		|";	
	goods_types = Запрос.Выполнить().Выбрать();
	
	
	Запрос.Текст	= "
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//1. Кешируем остатки складов
		|ВЫБРАТЬ
		|	Номенклатура,
		|	Склад,
		|	ВНаличииОстаток - ВРезервеОстаток КАК ОстатокНоменклатуры
		|
		|ПОМЕСТИТЬ ТоварыВНаличии
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки
		|ИНДЕКСИРОВАТЬ ПО 
		|	Номенклатура, 
		|	Склад
		|;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//2. 
		|ВЫБРАТЬ
		|	Номенклатура,
		|	Номенклатура.Код КАК Код
		|ПОМЕСТИТЬ СпрНоменклатура
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ НеАрхивнаяНоменклатура))
        |
		|ИНДЕКСИРОВАТЬ ПО Номенклатура
		|;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//3. Оптимизированная выборка складов
		|ВЫБРАТЬ	
		|	СпрНоменклатура.Код 											КАК sku,
		| 	ЕСТЬNULL(ВложенныйRivneSoborna.ОстатокНоменклатуры, 0)			КАК RS,
		|   ЕСТЬNULL(ВложенныйKyznya.ОстатокНоменклатуры, 0)		  		КАК KZ,
		|   ЕСТЬNULL(ВложенныйRivneChornovola.ОстатокНоменклатуры, 0)		КАК RC,
		|   ЕСТЬNULL(ВложенныйNetishunMagazin.ОстатокНоменклатуры, 0)		КАК NM,
		|   ЕСТЬNULL(ВложенныйSarnuMagazin.ОстатокНоменклатуры, 0)			КАК SM,
		|	ЕСТЬNULL(ВложенныйTernopilMagazin.ОстатокНоменклатуры, 0) 		КАК TM,
		|	ЕСТЬNULL(ВложенныйRivneSoborna57.ОстатокНоменклатуры, 0) 		КАК RS57,
		|	ЕСТЬNULL(ВложенныйFrankivskMagazin.ОстатокНоменклатуры, 0) 		КАК IF,
		|	ЕСТЬNULL(ВложенныйTernopilMagazin2.ОстатокНоменклатуры, 0) 		КАК TM2,
		|	ЕСТЬNULL(ВложенныйShepetivkaMagazin.ОстатокНоменклатуры, 0) 	КАК SHM,
		|	ЕСТЬNULL(ВложенныйChervonogradMagazin.ОстатокНоменклатуры, 0) 	КАК CHM,
		|	ЕСТЬNULL(ВложенныйRivneAllo.ОстатокНоменклатуры, 0) 			КАК RIA,
		|	ЕСТЬNULL(ВложенныйKostopil.ОстатокНоменклатуры, 0) 				КАК KS,
		|	ЕСТЬNULL(ВложенныйYushukPriemka.ОстатокНоменклатуры, 0) 		КАК YUR
		|
		|Из
		|  	СпрНоменклатура КАК СпрНоменклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйRivneSoborna 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйRivneSoborna.Номенклатура
		|И	 &RivneSoborna				  = ВложенныйRivneSoborna.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйRivneChornovola 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйRivneChornovola.Номенклатура
		|И	 &RivneChornovola			  = ВложенныйRivneChornovola.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйRivneSoborna57 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйRivneSoborna57.Номенклатура
		|И	 &RivneSoborna57			  = ВложенныйRivneSoborna57.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйKyznya 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйKyznya.Номенклатура
		|И	 &Kyznya					  = ВложенныйKyznya.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйNetishunMagazin 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйNetishunMagazin.Номенклатура
		|И	 &NetishunMagazin			  = ВложенныйNetishunMagazin.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйSarnuMagazin 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйSarnuMagazin.Номенклатура
		|И	 &SarnuMagazin				  = ВложенныйSarnuMagazin.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйTernopilMagazin 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйTernopilMagazin.Номенклатура
		|И	 &TernopilMagazin			  = ВложенныйTernopilMagazin.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйFrankivskMagazin 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйFrankivskMagazin.Номенклатура
		|И	 &FrankivskMagazin			  = ВложенныйFrankivskMagazin.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйTernopilMagazin2 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйTernopilMagazin2.Номенклатура
		|И	 &TernopilMagazin2			  = ВложенныйTernopilMagazin2.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйShepetivkaMagazin 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйShepetivkaMagazin.Номенклатура
		|И	 &ShepetivkaMagazin			  = ВложенныйShepetivkaMagazin.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйChervonogradMagazin 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйChervonogradMagazin.Номенклатура
		|И	 &ChervonogradMagazin		  = ВложенныйChervonogradMagazin.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйRivneAllo 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйRivneAllo.Номенклатура
		|И	 &RivneAllo		  			  = ВложенныйRivneAllo.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйKostopil 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйKostopil.Номенклатура
		|И	 &Kostopil		  			  = ВложенныйKostopil.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйYushukPriemka 
		|ПО  СпрНоменклатура.Номенклатура = ВложенныйYushukPriemka.Номенклатура
		|И	 &YushukPriemka			 	  = ВложенныйYushukPriemka.Склад
		|";	
		
	Запрос.УстановитьПараметр("RivneSoborna", 		Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d3409-40c2-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("Kyznya", 			Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d340e-40c2-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("RivneChornovola", 	Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d3408-40c2-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("NetishunMagazin", 	Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("c2310b41-9e76-11e0-b579-001517115d84")));
	Запрос.УстановитьПараметр("SarnuMagazin", 		Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("cbc4c306-a945-11e0-b579-001517115d84")));
	Запрос.УстановитьПараметр("TernopilMagazin", 	Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("832fe7ba-15c9-11e1-b8a7-001517115d85")));
	Запрос.УстановитьПараметр("RivneSoborna57", 	Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("f21b1ce0-b16a-11e0-9cc0-001517115d85")));
	Запрос.УстановитьПараметр("FrankivskMagazin", 	Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("7c5a0d04-fda8-11e1-9d4d-001e673c80fc")));
	Запрос.УстановитьПараметр("TernopilMagazin2", 	Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("48373cf1-cd07-11e2-8f22-001e673c80fa")));
	Запрос.УстановитьПараметр("ShepetivkaMagazin",  Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("06a8bcd6-2507-11e3-bb25-001e673c80fc")));
	Запрос.УстановитьПараметр("ChervonogradMagazin",Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("4cffa248-1895-11e4-80d4-001e676b0175")));
	Запрос.УстановитьПараметр("RivneAllo",			Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("f714c3c6-665e-11e4-80e2-001e676b0175")));
	Запрос.УстановитьПараметр("Kostopil",			Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("3bd5967e-86a0-11e4-80e6-001e676b0174")));
	Запрос.УстановитьПараметр("YushukPriemka",		Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("c2ba36db-f7aa-11e4-80ea-001e676b0175"))); // Прийомка м. Рівне

	
	res_goods_stores = Запрос.Выполнить();
    tz_goods_stores  = res_goods_stores.Выгрузить();
	goods_stores 	 = res_goods_stores.Выбрать();
	
	

	Кеш = ХранилищеНастроекДанныхФорм.Загрузить("www.ktc-ua.com:cache", , , "www.ktc-ua.com:cache");
	Если ТипЗнч(Кеш) = Тип("ХранилищеЗначения") Тогда
		Запрос.Текст = "
			|ВЫБРАТЬ
			|	sku,
			| 	RS,
			|   KZ,
			|   RC,
			|   NM,
			|   SM,
			|	TM,
			|	RS57,
			|	IF,
			|	TM2,
			|	SHM,
			|   CHM,
			|	RIA,
			|	KS,
			|	YUR
			|ПОМЕСТИТЬ cache_last
			|ИЗ
			|	&td_cache_last КАК td_cache
			|;
			|ВЫБРАТЬ
			|	sku,
			| 	RS,
			|   KZ,
			|   RC,
			|   NM,
			|   SM,
			|	TM,
			|	RS57,
			|	IF,
			|	TM2,
			|	SHM,
			|	CHM,
			|	RIA,
			|	KS,
			|	YUR
			|ПОМЕСТИТЬ cache_next
			|ИЗ
			|	&td_cache_next КАК td_cache
			|;
			|ВЫБРАТЬ
			|	ВЛ.sku 					КАК sku,
			|	ВЛ.type.UID_internet 	КАК product_type,
			|	""""					КАК timestamp
			|
			|ИЗ
			|	(ВЫБРАТЬ
			|   	СпрНоменклатура.Код 			КАК sku,	
			|		СпрНоменклатура.ВидНоменклатуры КАК type
			|	ИЗ
			|		Справочник.Номенклатура КАК СпрНоменклатура
			|
			|   ЛЕВОЕ СОЕДИНЕНИЕ cache_last КАК cache_last
			|   ПО СпрНоменклатура.Код = cache_last.sku 
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ cache_next КАК cache_next
			|   ПО СпрНоменклатура.Код = cache_next.sku
			|
			|	ГДЕ
			|		IsNull(cache_last.RS,0) 	<> IsNull(cache_next.RS,0)
			|	ИЛИ	IsNull(cache_last.KZ,0) 	<> IsNull(cache_next.KZ,0)
			|	ИЛИ	IsNull(cache_last.RC,0) 	<> IsNull(cache_next.RC,0)
			|	ИЛИ	IsNull(cache_last.NM,0) 	<> IsNull(cache_next.NM,0)
			|	ИЛИ	IsNull(cache_last.SM,0) 	<> IsNull(cache_next.SM,0)
			|	ИЛИ	IsNull(cache_last.TM,0) 	<> IsNull(cache_next.TM,0)
			|	ИЛИ	IsNull(cache_last.RS57,0) 	<> IsNull(cache_next.RS57,0)
			|	ИЛИ	IsNull(cache_last.IF,0) 	<> IsNull(cache_next.IF,0)
			|	ИЛИ	IsNull(cache_last.TM2,0) 	<> IsNull(cache_next.TM2,0)
			|	ИЛИ	IsNull(cache_last.SHM,0) 	<> IsNull(cache_next.SHM,0)
			|	ИЛИ	IsNull(cache_last.CHM,0) 	<> IsNull(cache_next.CHM,0)
			|	ИЛИ	IsNull(cache_last.RIA,0) 	<> IsNull(cache_next.RIA,0)
			|	ИЛИ	IsNull(cache_last.KS,0) 	<> IsNull(cache_next.KS,0)
			|	ИЛИ	IsNull(cache_last.YUR,0) 	<> IsNull(cache_next.YUR,0)
			|   ) КАК ВЛ
			|		
			|";
		Запрос.УстановитьПараметр("td_cache_last", Кеш.Получить());
		Запрос.УстановитьПараметр("td_cache_next", tz_goods_stores);
		Попытка
			quick_changes = Запрос.Выполнить().Выбрать();
		Исключение
			quick_changes = Неопределено;	
		КонецПопытки;
	Иначе
		quick_changes = Неопределено;		
	КонецЕсли;
	
	mdb_goods_Выборка = mdb_goods_csv(Запрос);
	
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	ХранилищеНастроекДанныхФорм.Сохранить("www.ktc-ua.com:cache", , Новый ХранилищеЗначения(tz_goods_stores, Новый СжатиеДанных(9)), "www.ktc-ua.com:cache", "www.ktc-ua.com:cache");
		
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    ВремяВыполненияЗаписиВФайл  = ТекущаяДата();

	td_goods = Новый ТекстовыйДокумент;
	td_goods.Вывод = ИспользованиеВывода.Разрешить;
	td_goods.ДобавитьСтроку("sku;good_type;title_short;title_middle;title_long;field_partnumber;field_vendor_relation;field_product_availability;field_data_purchase_price;field_description;field_product_warranty;field_actuality;field_days_on_store;field_batch_on_store;field_waiting");
	Пока goods.Следующий() Цикл
		Строка = "";
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, Формат(Число(goods.sku), "ЧГ = 0"));
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, goods.good_type);
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, СтрЗаменить(СтрЗаменить(goods.title_short, "<", " "), ">", " "));
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, СтрЗаменить(СтрЗаменить(goods.title_middle, "<", " "), ">", " "));
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, СтрЗаменить(СтрЗаменить(?(ПустаяСтрока(goods.title_long), goods.title_middle, goods.title_long), "<", " "), ">", " "));
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, goods.field_partnumber);
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, goods.field_vendor_relation);
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, goods.field_product_availability);
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, Формат(Число(goods.field_data_purchase_price), "ЧГ = 0"));
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, goods.field_description);
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, goods.field_product_warranty);
		
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, goods.field_actuality); //1
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, goods.field_days_on_store);
		ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, goods.field_batch_on_store);
		ОбъектБиблиотека.ДобавитьПоследнийЭлементВFullCSVСтроку(Строка, goods.field_waiting);
		td_goods.ДобавитьСтроку(Строка);
	КонецЦикла;
    td_goods.Записать("C:\1C_LOGS\YT11_CSV\www.ktc-ua.com\goods.csv", "UTF-8");
	
	
	
    td_goods_types = Новый ТекстовыйДокумент;
	td_goods_types.Вывод = ИспользованиеВывода.Разрешить;
	td_goods_types.ДобавитьСтроку("goods_type");
	Пока goods_types.Следующий() Цикл
		Строка = "";
		ОбъектБиблиотека.ДобавитьПоследнийЭлементВFullCSVСтроку(Строка, goods_types.good_type);
		td_goods_types.ДобавитьСтроку(Строка);
	КонецЦикла;
    td_goods_types.Записать("C:\1C_LOGS\YT11_CSV\www.ktc-ua.com\goods_types.csv", "UTF-8");

	
	
    td_goods_stores = Новый ТекстовыйДокумент;
	td_goods_stores.Вывод = ИспользованиеВывода.Разрешить;
	td_goods_stores.ДобавитьСтроку("sku;stores");
	Пока goods_stores.Следующий() Цикл
		Если  goods_stores.RS 
			+ goods_stores.KZ 
			+ goods_stores.RC 
			+ goods_stores.NM 
			+ goods_stores.SM 
			+ goods_stores.TM 
			+ goods_stores.RS57 
			+ goods_stores.IF 
			+ goods_stores.TM2 
			+ goods_stores.SHM
			+ goods_stores.RIA
			+ goods_stores.KS
			+ goods_stores.YUR> 0 Тогда
			
			Строка = "";
			ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, Формат(Число(goods_stores.sku), "ЧГ = 0"));
			ОбъектБиблиотека.ДобавитьПоследнийЭлементВFullCSVСтроку(Строка, ?(goods_stores.RS>0, 	"RivneSoborna,", 		"") 
																		  + ?(goods_stores.KZ>0, 	"Kyznya,", 				"") 
																		  + ?(goods_stores.RC>0, 	"RivneChornovola,", 	"") 
																		  + ?(goods_stores.NM>0, 	"NetishunMagazin,", 	"") 
																		  + ?(goods_stores.SM>0, 	"SarnuMagazin,", 		"") 
																		  + ?(goods_stores.TM>0, 	"TernopilMagazin,", 	"") 
																		  + ?(goods_stores.RS57>0, "RivneSoborna57,", 		"")
																		  + ?(goods_stores.IF>0, 	"FrankivskMagazin,", 	"")
																		  + ?(goods_stores.TM2>0, 	"TernopilMagazin2,", 	"")
																		  + ?(goods_stores.SHM>0, 	"ShepetivkaMagazin,", 	"")
																		  + ?(goods_stores.CHM>0, 	"ChervonogradMagazin,", "")
																		  + ?(goods_stores.RIA>0, 	"RivneAllo,", 			"")
																		  + ?(goods_stores.KS>0, 	"Kostopil,", 			"")
																		  + ?(goods_stores.YUR>0, 	"YushukPriemka,", 		""));
			td_goods_stores.ДобавитьСтроку(Лев(Строка, СтрДлина(Строка)-1));
		КонецЕсли;
	КонецЦикла;
    td_goods_stores.Записать("C:\1C_LOGS\YT11_CSV\www.ktc-ua.com\goods_stores.csv", "UTF-8");
	
	
	
 	td_quick_changes = Новый ТекстовыйДокумент;
	td_quick_changes.Вывод = ИспользованиеВывода.Разрешить;
	td_quick_changes.ДобавитьСтроку("sku;product_type;timestamp");
	Если НЕ quick_changes = Неопределено Тогда
		Пока quick_changes.Следующий() Цикл
			Строка = "";
			ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, Формат(Число(quick_changes.sku), "ЧГ = 0"));
	        ОбъектБиблиотека.ДобавитьЭлементВFullCSVСтроку(Строка, quick_changes.product_type);
			ОбъектБиблиотека.ДобавитьПоследнийЭлементВFullCSVСтроку(Строка, quick_changes.timestamp);
			td_quick_changes.ДобавитьСтроку(Строка);
		КонецЦикла;
	КонецЕсли;
    td_quick_changes.Записать("C:\1C_LOGS\YT11_CSV\www.ktc-ua.com\quick_changes.csv", "UTF-8");
	
	
	
	mdb_goods = Новый ТекстовыйДокумент;
	mdb_goods.Вывод = ИспользованиеВывода.Разрешить;
	mdb_goods.ДобавитьСтроку("sku,price,actual,waiting,stores");
	Пока mdb_goods_Выборка.Следующий() Цикл
		mdb_goods_ВНаличии =  mdb_goods_Выборка.RS 
							+ mdb_goods_Выборка.KZ 
							+ mdb_goods_Выборка.RC 
							+ mdb_goods_Выборка.NM 
							+ mdb_goods_Выборка.SM 
							+ mdb_goods_Выборка.TM 
							+ mdb_goods_Выборка.RS57
							+ mdb_goods_Выборка.IF 
							+ mdb_goods_Выборка.TM2
							+ mdb_goods_Выборка.SHM
							+ mdb_goods_Выборка.CHM
							+ mdb_goods_Выборка.RIA
							+ mdb_goods_Выборка.KS
							+ mdb_goods_Выборка.YUR;
		Если mdb_goods_ВНаличии > 0 ИЛИ mdb_goods_Выборка.actual  <> "" ИЛИ mdb_goods_Выборка.waiting <> "" Тогда
			Строка = "";
			Строка = Строка + Формат(Число(mdb_goods_Выборка.sku), "ЧГ = 0")			+ ",";
			Строка = Строка + Формат(mdb_goods_Выборка.price, "ЧДЦ=2; ЧРД=.; ЧН=; ЧГ=0")+ ",";
			Строка = Строка + mdb_goods_Выборка.actual 							  		+ ",";
			Строка = Строка + mdb_goods_Выборка.waiting 								+ ",";
			Строка = Строка + ?(mdb_goods_ВНаличии,
													?(mdb_goods_Выборка.RS>0, 	"RivneSoborna;", 		"") 
												  + ?(mdb_goods_Выборка.KZ>0, 	"Kyznya;", 				"") 
												  + ?(mdb_goods_Выборка.RC>0, 	"RivneChornovola;", 	"") 
												  + ?(mdb_goods_Выборка.NM>0, 	"NetishunMagazin;", 	"") 
												  + ?(mdb_goods_Выборка.SM>0, 	"SarnuMagazin;", 		"") 
												  + ?(mdb_goods_Выборка.TM>0, 	"TernopilMagazin;", 	"") 
												  + ?(mdb_goods_Выборка.RS57>0, "RivneSoborna57;", 		"")
												  + ?(mdb_goods_Выборка.IF>0, 	"FrankivskMagazin;", 	"")
												  + ?(mdb_goods_Выборка.TM2>0, 	"TernopilMagazin2;",	"")
												  + ?(mdb_goods_Выборка.SHM>0, 	"ShepetivkaMagazin;",	"")
												  + ?(mdb_goods_Выборка.CHM>0, 	"ChervonogradMagazin;",	"")
												  + ?(mdb_goods_Выборка.RIA>0, 	"RivneAllo;",			"")
												  + ?(mdb_goods_Выборка.KS>0, 	"Kostopil;",			"")
												  + ?(mdb_goods_Выборка.YUR>0, 	"YushukPriemka;",		""),
												  														";");
			mdb_goods.ДобавитьСтроку(Лев(Строка, СтрДлина(Строка)-1));
		КонецЕсли;
	КонецЦикла;
    mdb_goods.Записать("C:\1C_LOGS\YT11_CSV\www.ktc-ua.com\mdb_goods.csv", "UTF-8");
	
	
	sklad_id 		= Новый ТекстовыйДокумент;
	sklad_id.Вывод 	= ИспользованиеВывода.Разрешить;
	sklad_id.ДобавитьСтроку("RivneSoborna;Склад Соборна");
	sklad_id.ДобавитьСтроку("Kyznya;Кузнецовськ магазин");
	sklad_id.ДобавитьСтроку("RivneChornovola;Чорновола магазин");
	sklad_id.ДобавитьСтроку("NetishunMagazin;Нетішин магазин");
	sklad_id.ДобавитьСтроку("SarnuMagazin;Сарни магазин");
	sklad_id.ДобавитьСтроку("TernopilMagazin;Тернопіль магазин");
	sklad_id.ДобавитьСтроку("RivneSoborna57;Соборна магазин");
	sklad_id.ДобавитьСтроку("FrankivskMagazin;Ів.-Франківськ магазин");
	sklad_id.ДобавитьСтроку("TernopilMagazin2;Тернопіль магазин 2");
	sklad_id.ДобавитьСтроку("ShepetivkaMagazin;Шепетівка магазин");
	sklad_id.ДобавитьСтроку("ChervonogradMagazin;Червоноград магазин");
	sklad_id.ДобавитьСтроку("RivneAllo;Соборна магазин 3");
	sklad_id.ДобавитьСтроку("Kostopil;Костопіль магазин");
	sklad_id.ДобавитьСтроку("YushukPriemka;СЦ:Рівне Соборна");
	sklad_id.Записать("C:\1C_LOGS\YT11_CSV\www.ktc-ua.com\sklad_id.csv", "UTF-8");
	
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	ВремяВыполненияЗаписиВФайл  = ТекущаяДата() - ВремяВыполненияЗаписиВФайл;
	ВремяВыполненияЗаписиПоFTP	= ТекущаяДата();
	
	ИмяАрхива= "C:\1C_LOGS\YT11_CSV\www.ktc-ua.com\import.zip";
	ZipАрхив = Новый ЗаписьZipФайла(ИмяАрхива, , , , УровеньСжатияZIP.Максимальный);
	ZipАрхив.Добавить("C:\1C_LOGS\YT11_CSV\www.ktc-ua.com\*.csv", РежимСохраненияПутейZIP.НеСохранятьПути, РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
	ZipАрхив.Записать();
		
	Если ktcОбщийМодульПротоколов.ОтправитьСообщениеПоFTP(Server, "C:\1C_LOGS\YT11_CSV\www.ktc-ua.com\import.zip","static/custom/ktc_pro/sites/www.ktc-ua.com/files/import/csv", "/import.zip", StructConnection) Тогда
		
		Тема = 	"Записать a_ktc_ua_com.zip на FTP сервер " 	+ StructConnection.ServerExchange + " не удалось";
		Тело = 	ВДНССформироватьТелоСообщения(StructConnection, , 0, ВремяВыполненияЗаписиВФайл, ТекущаяДата() - ВремяВыполненияЗаписиПоFTP);																						
				
		Кому = Новый Массив;
		Кому.Добавить(Новый Структура("Адрес, Представление", "1clog@ktc-ua.com", "Відділ тех. підтримки"));
		
		ПараметрыПисьма = ktcОбщийМодульПротоколов.СформироватьПараметрыПисьма(Тема, Тело, Кому);//, , , , Вложения);
		ktcОбщийМодульПротоколов.ОтправитьСообщениеПоSMTP(Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты, ПараметрыПисьма);

	КонецЕсли;
	
КонецПроцедуры


Функция mdb_goods_csv(Запрос)
		
	Запрос.Текст = "
		|ВЫБРАТЬ	
		|	СпрНоменклатура.sku,
		|	IsNull(ЦенаРозница.Цена, 0) 							КАК price,
		|	ВЫБОР
		|		КОГДА АктуальностьНоменклатуры.Актуально
		|		ТОГДА 1
		|		ИНАЧЕ """"
		|	КОНЕЦ 													КАК actual,
		|	ВЫБОР
		|		КОГДА IsNull(Остатки.ВНаличииОстаток, 0) - IsNull(Остатки.ВРезервеОстаток, 0) + IsNull(ОжидаемаяНоменклатура.Количество, 0) <= 0 
		|		ТОГДА """"
		|		ИНАЧЕ IsNull(ОжидаемаяНоменклатура.Количество, """")
		|	КОНЕЦ 														КАК waiting,
		| 	IsNull(ВложенныйRivneSoborna.ОстатокНоменклатуры, 0)		КАК RS,
		|   IsNull(ВложенныйKyznya.ОстатокНоменклатуры, 0)		  		КАК KZ,
		|   IsNull(ВложенныйRivneChornovola.ОстатокНоменклатуры, 0)		КАК RC,
		|   IsNull(ВложенныйNetishunMagazin.ОстатокНоменклатуры, 0)		КАК NM,
		|   IsNull(ВложенныйSarnuMagazin.ОстатокНоменклатуры, 0)		КАК SM,
		|	IsNull(ВложенныйTernopilMagazin.ОстатокНоменклатуры, 0) 	КАК TM,
		|	IsNull(ВложенныйRivneSoborna57.ОстатокНоменклатуры, 0) 		КАК RS57,
		|	IsNull(ВложенныйFrankivskMagazin.ОстатокНоменклатуры, 0)	КАК IF,
		|	IsNull(ВложенныйTernopilMagazin2.ОстатокНоменклатуры, 0)	КАК TM2,
		|	IsNull(ВложенныйShepetivkaMagazin.ОстатокНоменклатуры, 0)	КАК SHM,
		|	IsNull(ВложенныйChervonogradMagazin.ОстатокНоменклатуры, 0)	КАК CHM,
		|	IsNull(ВложенныйRivneAllo.ОстатокНоменклатуры, 0)			КАК RIA,
		|	IsNull(ВложенныйKostopil.ОстатокНоменклатуры, 0)			КАК KS,
		|	IsNull(ВложенныйYushukPriemka.ОстатокНоменклатуры, 0)		КАК YUR
		|
		|Из
		|  	НеАрхивнаяНоменклатура КАК СпрНоменклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ НеАрхивнаяНоменклатура) И ВидЦены = &Розница) КАК ЦенаРозница
		|ПО ЦенаРозница.Номенклатура = СпрНоменклатура.Номенклатура
        |	
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ALPS_АктуальностьНоменклатуры.СрезПоследних(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ НеАрхивнаяНоменклатура)) КАК АктуальностьНоменклатуры
		|ПО АктуальностьНоменклатуры.Номенклатура = СпрНоменклатура.Номенклатура
		|И	АктуальностьНоменклатуры.Актуально
		|И	АктуальностьНоменклатуры.ГарантияДоставки
		|
		//|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению.Остатки(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ НеАрхивнаяНоменклатура) И Склад В (ВЫБРАТЬ Склад ИЗ Cache_Склады)) КАК Ожидаемые
		//|ПО Ожидаемые.Номенклатура = СпрНоменклатура.Номенклатура
		|ЛЕВОЕ СОЕДИНЕНИЕ ОжидаемаяНоменклатура КАК ОжидаемаяНоменклатура
		|ПО ОжидаемаяНоменклатура.Номенклатура = СпрНоменклатура.Номенклатура
        |
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(,   Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ НеАрхивнаяНоменклатура) И Склад В (ВЫБРАТЬ Склад ИЗ Cache_Склады)) КАК Остатки
		|ПО Остатки.Номенклатура = СпрНоменклатура.Номенклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйRivneSoborna 
		|ПО  ВложенныйRivneSoborna.Номенклатура 		= СпрНоменклатура.Номенклатура 
		|И	 ВложенныйRivneSoborna.Склад				= &RivneSoborna	 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйRivneChornovola 
		|ПО  ВложенныйRivneChornovola.Номенклатура 		= СпрНоменклатура.Номенклатура
		|И	 ВложенныйRivneChornovola.Склад 			= &RivneChornovola
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйRivneSoborna57 
		|ПО  ВложенныйRivneSoborna57.Номенклатура 		= СпрНоменклатура.Номенклатура 
		|И	 ВложенныйRivneSoborna57.Склад				= &RivneSoborna57
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйKyznya 
		|ПО  ВложенныйKyznya.Номенклатура				= СпрНоменклатура.Номенклатура 
		|И	 ВложенныйKyznya.Склад						= &Kyznya			
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйNetishunMagazin 
		|ПО  ВложенныйNetishunMagazin.Номенклатура 		= СпрНоменклатура.Номенклатура 
		|И	 ВложенныйNetishunMagazin.Склад		   		= &NetishunMagazin
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйSarnuMagazin 
		|ПО  ВложенныйSarnuMagazin.Номенклатура			= СпрНоменклатура.Номенклатура
		|И	 ВложенныйSarnuMagazin.Склад				= &SarnuMagazin 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйTernopilMagazin 
		|ПО  ВложенныйTernopilMagazin.Номенклатура		= СпрНоменклатура.Номенклатура
		|И	 ВложенныйTernopilMagazin.Склад				= &TernopilMagazin 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйFrankivskMagazin 
		|ПО  ВложенныйFrankivskMagazin.Номенклатура		= СпрНоменклатура.Номенклатура 
		|И	 ВложенныйFrankivskMagazin.Склад			= &FrankivskMagazin	 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйTernopilMagazin2 
		|ПО  ВложенныйTernopilMagazin2.Номенклатура		= СпрНоменклатура.Номенклатура 
		|И	 ВложенныйTernopilMagazin2.Склад			= &TernopilMagazin2 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйShepetivkaMagazin 
		|ПО  ВложенныйShepetivkaMagazin.Номенклатура 	= СпрНоменклатура.Номенклатура 
		|И	 ВложенныйShepetivkaMagazin.Склад        	= &ShepetivkaMagazin 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйChervonogradMagazin 
		|ПО  ВложенныйChervonogradMagazin.Номенклатура 	= СпрНоменклатура.Номенклатура
		|И	 ВложенныйChervonogradMagazin.Склад        	= &ChervonogradMagazin
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйRivneAllo 
		|ПО  ВложенныйRivneAllo.Номенклатура 	= СпрНоменклатура.Номенклатура 
		|И	 ВложенныйRivneAllo.Склад        	= &RivneAllo 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйKostopil 
		|ПО  ВложенныйKostopil.Номенклатура 	= СпрНоменклатура.Номенклатура 
		|И	 ВложенныйKostopil.Склад        	= &Kostopil 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйYushukPriemka 
		|ПО  ВложенныйYushukPriemka.Номенклатура = СпрНоменклатура.Номенклатура 
		|И	 ВложенныйYushukPriemka.Склад 		 = &YushukPriemka		
		//|
		//|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйSarnuMagazin 
		//|ПО  ВложенныйSarnuMagazin.Номенклатура 	= СпрНоменклатура.Ссылка 
		//|И	 ВложенныйSarnuMagazin.Склад        	= &SarnuMagazin	
		//|
		//|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйTernopilMagazin 
		//|ПО  ВложенныйTernopilMagazin.Номенклатура 	= СпрНоменклатура.Ссылка 
		//|И	 ВложенныйTernopilMagazin.Склад        	= &TernopilMagazin 
		//|
		//|ЛЕВОЕ СОЕДИНЕНИЕ ТоварыВНаличии КАК ВложенныйFrankivskMagazin 
		//|ПО  ВложенныйFrankivskMagazin.Номенклатура = СпрНоменклатура.Ссылка
		//|И	 ВложенныйFrankivskMagazin.Склад        = &FrankivskMagazin	
		|";
	Возврат Запрос.Выполнить().Выбрать();		
	
КонецФункции

Функция ТекстЗапросаОжидаемыйТовар()

	ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПоступления 	КАК ДокументПоступления,
			|	Номенклатура 			КАК Номенклатура,
			|	КПоступлениюОстаток 	КАК КПоступлениюОстаток
			|ПОМЕСТИТЬ ТоварыКПоступлению
			|ИЗ
			|	РегистрНакопления.ТоварыКПоступлению.Остатки(, Номенклатура НЕ В (ВЫБРАТЬ Номенклатура ИЗ НеВыгружатьНаСайт) И Склад В (ВЫБРАТЬ Склад ИЗ Cache_Склады))
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
			|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
			|	ЗаказНаПеремещениеТовары.Количество КАК Количество,
			|	ВЫБОР
			|		КОГДА ЗаказНаПеремещениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказКлиента
			|			ТОГДА 4
			|		КОГДА ЗаказНаПеремещениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаСборку
			|			ТОГДА 3
			|		КОГДА ЗаказНаПеремещениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаВнутреннееПотребление
			|			ТОГДА 2
			|		КОГДА ЗаказНаПеремещениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаПеремещение
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Приоритет
			|ПОМЕСТИТЬ ТоварыПоЗаказамНаПеремещение
			|ИЗ
			|	ТоварыКПоступлению КАК ТоварыКПоступлению
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ЗаказНаПеремещениеТовары
			|		ПО ((ВЫРАЗИТЬ(ТоварыКПоступлению.ДокументПоступления КАК Документ.ЗаказНаПеремещение)) = ЗаказНаПеремещениеТовары.Ссылка)
			|			И ТоварыКПоступлению.Номенклатура = ЗаказНаПеремещениеТовары.Номенклатура
			|ГДЕ
			|	ТоварыКПоступлению.ДокументПоступления ССЫЛКА Документ.ЗаказНаПеремещение
			|	И ЗаказНаПеремещениеТовары.Отменено = ЛОЖЬ
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
			|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
			|	ЗаказНаПеремещениеТовары.Количество КАК Количество,
			|	ВЫБОР
			|		КОГДА ЗаказНаПеремещениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказКлиента
			|			ТОГДА 4
			|		КОГДА ЗаказНаПеремещениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаСборку
			|			ТОГДА 3
			|		КОГДА ЗаказНаПеремещениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаВнутреннееПотребление
			|			ТОГДА 2
			|		КОГДА ЗаказНаПеремещениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаПеремещение
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Приоритет
			|ПОМЕСТИТЬ ТоварыПоПеремещениям
			|ИЗ
			|	ТоварыКПоступлению КАК ТоварыКПоступлению
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ЗаказНаПеремещениеТовары
			|		ПО ((ВЫРАЗИТЬ(ТоварыКПоступлению.ДокументПоступления КАК Документ.ПеремещениеТоваров)) = ЗаказНаПеремещениеТовары.Ссылка)
			|			И ТоварыКПоступлению.Номенклатура = ЗаказНаПеремещениеТовары.Номенклатура
			|ГДЕ
			|	ТоварыКПоступлению.ДокументПоступления ССЫЛКА Документ.ПеремещениеТоваров
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
			|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
			|	ЗаказПоставщикуТовары.Количество КАК Количество,
			|	ВЫБОР
			|		КОГДА ЗаказПоставщикуТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказКлиента
			|			ТОГДА 4
			|		КОГДА ЗаказПоставщикуТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаСборку
			|			ТОГДА 3
			|		КОГДА ЗаказПоставщикуТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаВнутреннееПотребление
			|			ТОГДА 2
			|		КОГДА ЗаказПоставщикуТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаПеремещение
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Приоритет
			|ПОМЕСТИТЬ ТоварыПоЗаказамПоставщику
			|ИЗ
			|	ТоварыКПоступлению КАК ТоварыКПоступлению
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
			|		ПО ((ВЫРАЗИТЬ(ТоварыКПоступлению.ДокументПоступления КАК Документ.ЗаказПоставщику)) = ЗаказПоставщикуТовары.Ссылка)
			|			И ТоварыКПоступлению.Номенклатура = ЗаказПоставщикуТовары.Номенклатура
			|ГДЕ
			|	ТоварыКПоступлению.ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
			|	И ЗаказПоставщикуТовары.Отменено = ЛОЖЬ
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
			|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
			|	ПоступлениеТовары.Количество КАК Количество,
			|	ВЫБОР
			|		КОГДА ПоступлениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказКлиента
			|			ТОГДА 4
			|		КОГДА ПоступлениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаСборку
			|			ТОГДА 3
			|		КОГДА ПоступлениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаВнутреннееПотребление
			|			ТОГДА 2
			|		КОГДА ПоступлениеТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказНаПеремещение
			|			ТОГДА 1
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Приоритет
			|ПОМЕСТИТЬ ТоварыПоПоступлениям
			|ИЗ
			|	ТоварыКПоступлению КАК ТоварыКПоступлению
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТовары
			|		ПО ((ВЫРАЗИТЬ(ТоварыКПоступлению.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг)) = ПоступлениеТовары.Ссылка)
			|			И ТоварыКПоступлению.Номенклатура = ПоступлениеТовары.Номенклатура
			|ГДЕ
			|	ТоварыКПоступлению.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДокументПоступления КАК ДокументПоступления,
			|	Номенклатура 		КАК Номенклатура,
			|	СУММА(Количество) 	КАК Количество,
			|	Приоритет 			КАК Приоритет
			|ПОМЕСТИТЬ ТоварыПоЗаказамНаПеремещениеСвернутые
			|ИЗ
			|	ТоварыПоЗаказамНаПеремещение

			|СГРУППИРОВАТЬ ПО
			|	ДокументПоступления,
			|	Номенклатура,
			|	Приоритет
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДокументПоступления КАК ДокументПоступления,
			|	Номенклатура 		КАК Номенклатура,
			|	СУММА(Количество) 	КАК Количество,
			|	Приоритет 			КАК Приоритет
			|ПОМЕСТИТЬ ТоварыПоПеремещениямСвернутые
			|ИЗ
			|	ТоварыПоПеремещениям

			|СГРУППИРОВАТЬ ПО
			|	ДокументПоступления,
			|	Номенклатура,
			|	Приоритет
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДокументПоступления КАК ДокументПоступления,
			|	Номенклатура 		КАК Номенклатура,
			|	СУММА(Количество) 	КАК Количество,
			|	Приоритет 			КАК Приоритет
			|ПОМЕСТИТЬ ТоварыПоЗаказамПоставщикуСвернутые
			|ИЗ
			|	ТоварыПоЗаказамПоставщику

			|СГРУППИРОВАТЬ ПО
			|	ДокументПоступления,
			|	Номенклатура,
			|	Приоритет
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДокументПоступления КАК ДокументПоступления,
			|	Номенклатура 		КАК Номенклатура,
			|	СУММА(Количество) 	КАК Количество,
			|	Приоритет 			КАК Приоритет
			|ПОМЕСТИТЬ ТоварыПоПоступлениямСвернутые
			|ИЗ
			|	ТоварыПоПоступлениям

			|СГРУППИРОВАТЬ ПО
			|	ДокументПоступления,
			|	Номенклатура,
			|	Приоритет
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыПоЗаказамНаПеремещениеСвернутые.ДокументПоступления КАК ДокументПоступления,
			|	ТоварыПоЗаказамНаПеремещениеСвернутые.Номенклатура КАК Номенклатура,
			|	ТоварыПоЗаказамНаПеремещениеСвернутые.Приоритет КАК Приоритет,
			|	СУММА(ЕСТЬNULL(ТоварыПоЗаказамНаПеремещениеСвернутыеКопия.Количество, 0)) КАК КоличествоДо,
			|	ТоварыПоЗаказамНаПеремещениеСвернутые.Количество + СУММА(ЕСТЬNULL(ТоварыПоЗаказамНаПеремещениеСвернутыеКопия.Количество, 0)) КАК КоличествоПосле
			|ПОМЕСТИТЬ ЗаказыНаПеремещенияНаростающие
			|ИЗ
			|	ТоварыПоЗаказамНаПеремещениеСвернутые КАК ТоварыПоЗаказамНаПеремещениеСвернутые
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПоЗаказамНаПеремещениеСвернутые КАК ТоварыПоЗаказамНаПеремещениеСвернутыеКопия
			|		ПО ТоварыПоЗаказамНаПеремещениеСвернутые.ДокументПоступления = ТоварыПоЗаказамНаПеремещениеСвернутыеКопия.ДокументПоступления
			|			И ТоварыПоЗаказамНаПеремещениеСвернутые.Номенклатура = ТоварыПоЗаказамНаПеремещениеСвернутыеКопия.Номенклатура
			|			И ТоварыПоЗаказамНаПеремещениеСвернутые.Приоритет > ТоварыПоЗаказамНаПеремещениеСвернутыеКопия.Приоритет

			|СГРУППИРОВАТЬ ПО
			|	ТоварыПоЗаказамНаПеремещениеСвернутые.ДокументПоступления,
			|	ТоварыПоЗаказамНаПеремещениеСвернутые.Номенклатура,
			|	ТоварыПоЗаказамНаПеремещениеСвернутые.Приоритет,
			|	ТоварыПоЗаказамНаПеремещениеСвернутые.Количество
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыПоПеремещениямСвернутые.ДокументПоступления КАК ДокументПоступления,
			|	ТоварыПоПеремещениямСвернутые.Номенклатура КАК Номенклатура,
			|	ТоварыПоПеремещениямСвернутые.Приоритет КАК Приоритет,
			|	СУММА(ЕСТЬNULL(ТоварыПоПеремещениямСвернутыеКопия.Количество, 0)) КАК КоличествоДо,
			|	ТоварыПоПеремещениямСвернутые.Количество + СУММА(ЕСТЬNULL(ТоварыПоПеремещениямСвернутыеКопия.Количество, 0)) КАК КоличествоПосле
			|ПОМЕСТИТЬ ПеремещенияНаростающие
			|ИЗ
			|	ТоварыПоПеремещениямСвернутые КАК ТоварыПоПеремещениямСвернутые
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПоПеремещениямСвернутые КАК ТоварыПоПеремещениямСвернутыеКопия
			|		ПО ТоварыПоПеремещениямСвернутые.ДокументПоступления = ТоварыПоПеремещениямСвернутыеКопия.ДокументПоступления
			|			И ТоварыПоПеремещениямСвернутые.Номенклатура = ТоварыПоПеремещениямСвернутыеКопия.Номенклатура
			|			И ТоварыПоПеремещениямСвернутые.Приоритет > ТоварыПоПеремещениямСвернутыеКопия.Приоритет

			|СГРУППИРОВАТЬ ПО
			|	ТоварыПоПеремещениямСвернутые.ДокументПоступления,
			|	ТоварыПоПеремещениямСвернутые.Номенклатура,
			|	ТоварыПоПеремещениямСвернутые.Приоритет,
			|	ТоварыПоПеремещениямСвернутые.Количество
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыПоЗаказамПоставщикуСвернутые.ДокументПоступления КАК ДокументПоступления,
			|	ТоварыПоЗаказамПоставщикуСвернутые.Номенклатура КАК Номенклатура,
			|	ТоварыПоЗаказамПоставщикуСвернутые.Приоритет КАК Приоритет,
			|	СУММА(ЕСТЬNULL(ТоварыПоЗаказамПоставщикуСвернутыеКопия.Количество, 0)) КАК КоличествоДо,
			|	ТоварыПоЗаказамПоставщикуСвернутые.Количество + СУММА(ЕСТЬNULL(ТоварыПоЗаказамПоставщикуСвернутыеКопия.Количество, 0)) КАК КоличествоПосле
			|ПОМЕСТИТЬ ЗаказыПоставщикуНаростающие
			|ИЗ
			|	ТоварыПоЗаказамПоставщикуСвернутые КАК ТоварыПоЗаказамПоставщикуСвернутые
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПоЗаказамПоставщикуСвернутые КАК ТоварыПоЗаказамПоставщикуСвернутыеКопия
			|		ПО ТоварыПоЗаказамПоставщикуСвернутые.ДокументПоступления = ТоварыПоЗаказамПоставщикуСвернутыеКопия.ДокументПоступления
			|			И ТоварыПоЗаказамПоставщикуСвернутые.Номенклатура = ТоварыПоЗаказамПоставщикуСвернутыеКопия.Номенклатура
			|			И ТоварыПоЗаказамПоставщикуСвернутые.Приоритет > ТоварыПоЗаказамПоставщикуСвернутыеКопия.Приоритет

			|СГРУППИРОВАТЬ ПО
			|	ТоварыПоЗаказамПоставщикуСвернутые.ДокументПоступления,
			|	ТоварыПоЗаказамПоставщикуСвернутые.Номенклатура,
			|	ТоварыПоЗаказамПоставщикуСвернутые.Приоритет,
			|	ТоварыПоЗаказамПоставщикуСвернутые.Количество
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыПоПоступлениямСвернутые.ДокументПоступления КАК ДокументПоступления,
			|	ТоварыПоПоступлениямСвернутые.Номенклатура КАК Номенклатура,
			|	ТоварыПоПоступлениямСвернутые.Приоритет КАК Приоритет,
			|	СУММА(ЕСТЬNULL(ТоварыПоПоступлениямСвернутыеКопия.Количество, 0)) КАК КоличествоДо,
			|	ТоварыПоПоступлениямСвернутые.Количество + СУММА(ЕСТЬNULL(ТоварыПоПоступлениямСвернутыеКопия.Количество, 0)) КАК КоличествоПосле
			|ПОМЕСТИТЬ ПоступленияНаростающие
			|ИЗ
			|	ТоварыПоПоступлениямСвернутые КАК ТоварыПоПоступлениямСвернутые
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПоПоступлениямСвернутые КАК ТоварыПоПоступлениямСвернутыеКопия
			|		ПО ТоварыПоПоступлениямСвернутые.ДокументПоступления = ТоварыПоПоступлениямСвернутыеКопия.ДокументПоступления
			|			И ТоварыПоПоступлениямСвернутые.Номенклатура = ТоварыПоПоступлениямСвернутыеКопия.Номенклатура
			|			И ТоварыПоПоступлениямСвернутые.Приоритет > ТоварыПоПоступлениямСвернутыеКопия.Приоритет

			|СГРУППИРОВАТЬ ПО
			|	ТоварыПоПоступлениямСвернутые.ДокументПоступления,
			|	ТоварыПоПоступлениямСвернутые.Номенклатура,
			|	ТоварыПоПоступлениямСвернутые.Приоритет,
			|	ТоварыПоПоступлениямСвернутые.Количество
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПеремещенияНаростающие.ДокументПоступления КАК ДокументПоступления,
			|	ПеремещенияНаростающие.Номенклатура КАК Номенклатура,
			|	ПеремещенияНаростающие.Приоритет КАК Приоритет,
			|	ТоварыКПоступлению.КПоступлениюОстаток КАК КПоступлениюОстаток
			|ПОМЕСТИТЬ ПеремещенияПоПриоритетам
			|ИЗ
			|	ПеремещенияНаростающие КАК ПеремещенияНаростающие
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКПоступлению КАК ТоварыКПоступлению
			|		ПО (ПеремещенияНаростающие.ДокументПоступления = (ВЫРАЗИТЬ(ТоварыКПоступлению.ДокументПоступления КАК Документ.ПеремещениеТоваров)))
			|			И ПеремещенияНаростающие.Номенклатура = ТоварыКПоступлению.Номенклатура
			|			И ПеремещенияНаростающие.КоличествоДо < ТоварыКПоступлению.КПоступлениюОстаток
			|			И ПеремещенияНаростающие.КоличествоПосле >= ТоварыКПоступлению.КПоступлениюОстаток
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаказыНаПеремещенияНаростающие.ДокументПоступления КАК ДокументПоступления,
			|	ЗаказыНаПеремещенияНаростающие.Номенклатура КАК Номенклатура,
			|	ЗаказыНаПеремещенияНаростающие.Приоритет КАК Приоритет,
			|	ТоварыКПоступлению.КПоступлениюОстаток КАК КПоступлениюОстаток
			|ПОМЕСТИТЬ ЗаказыНаПеремещенияПоПриоритетам
			|ИЗ
			|	ЗаказыНаПеремещенияНаростающие КАК ЗаказыНаПеремещенияНаростающие
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКПоступлению КАК ТоварыКПоступлению
			|		ПО (ЗаказыНаПеремещенияНаростающие.ДокументПоступления = (ВЫРАЗИТЬ(ТоварыКПоступлению.ДокументПоступления КАК Документ.ЗаказНаПеремещение)))
			|			И ЗаказыНаПеремещенияНаростающие.Номенклатура = ТоварыКПоступлению.Номенклатура
			|			И ЗаказыНаПеремещенияНаростающие.КоличествоДо < ТоварыКПоступлению.КПоступлениюОстаток
			|			И ЗаказыНаПеремещенияНаростающие.КоличествоПосле >= ТоварыКПоступлению.КПоступлениюОстаток
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаказыПоставщикуНаростающие.ДокументПоступления КАК ДокументПоступления,
			|	ЗаказыПоставщикуНаростающие.Номенклатура КАК Номенклатура,
			|	ЗаказыПоставщикуНаростающие.Приоритет КАК Приоритет,
			|	ТоварыКПоступлению.КПоступлениюОстаток КАК КПоступлениюОстаток
			|ПОМЕСТИТЬ ЗаказыПоставщикуПоПриоритетам
			|ИЗ
			|	ЗаказыПоставщикуНаростающие КАК ЗаказыПоставщикуНаростающие
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКПоступлению КАК ТоварыКПоступлению
			|		ПО (ЗаказыПоставщикуНаростающие.ДокументПоступления = (ВЫРАЗИТЬ(ТоварыКПоступлению.ДокументПоступления КАК Документ.ЗаказПоставщику)))
			|			И ЗаказыПоставщикуНаростающие.Номенклатура = ТоварыКПоступлению.Номенклатура
			|			И ЗаказыПоставщикуНаростающие.КоличествоДо < ТоварыКПоступлению.КПоступлениюОстаток
			|			И ЗаказыПоставщикуНаростающие.КоличествоПосле >= ТоварыКПоступлению.КПоступлениюОстаток
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПоступленияНаростающие.ДокументПоступления КАК ДокументПоступления,
			|	ПоступленияНаростающие.Номенклатура КАК Номенклатура,
			|	ПоступленияНаростающие.Приоритет КАК Приоритет,
			|	ТоварыКПоступлению.КПоступлениюОстаток КАК КПоступлениюОстаток
			|ПОМЕСТИТЬ ПоступленияПоПриоритетам
			|ИЗ
			|	ПоступленияНаростающие КАК ПоступленияНаростающие
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКПоступлению КАК ТоварыКПоступлению
			|		ПО (ПоступленияНаростающие.ДокументПоступления = (ВЫРАЗИТЬ(ТоварыКПоступлению.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг)))
			|			И ПоступленияНаростающие.Номенклатура = ТоварыКПоступлению.Номенклатура
			|			И ПоступленияНаростающие.КоличествоДо < ТоварыКПоступлению.КПоступлениюОстаток
			|			И ПоступленияНаростающие.КоличествоПосле >= ТоварыКПоступлению.КПоступлениюОстаток
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПеремещенияНаростающие.Номенклатура КАК Номенклатура,
			|	ПеремещенияНаростающие.Приоритет КАК Приоритет,
			|	ВЫБОР
			|		КОГДА ПеремещенияНаростающие.КоличествоПосле <= ПеремещенияПоПриоритетам.КПоступлениюОстаток
			|			ТОГДА ПеремещенияНаростающие.КоличествоПосле
			|		ИНАЧЕ ПеремещенияПоПриоритетам.КПоступлениюОстаток - ПеремещенияНаростающие.КоличествоДо
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ НоменклатураИзПеремещений
			|ИЗ
			|	ПеремещенияНаростающие КАК ПеремещенияНаростающие
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПеремещенияПоПриоритетам КАК ПеремещенияПоПриоритетам
			|		ПО ПеремещенияНаростающие.ДокументПоступления = ПеремещенияПоПриоритетам.ДокументПоступления
			|			И ПеремещенияНаростающие.Номенклатура = ПеремещенияПоПриоритетам.Номенклатура
			|			И ПеремещенияНаростающие.Приоритет <= ПеремещенияПоПриоритетам.Приоритет
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаказыНаПеремещенияНаростающие.Номенклатура 	КАК Номенклатура,
			|	ЗаказыНаПеремещенияНаростающие.Приоритет 		КАК Приоритет,
			|	ВЫБОР
			|		КОГДА ЗаказыНаПеремещенияНаростающие.КоличествоПосле <= ЗаказыНаПеремещенияПоПриоритетам.КПоступлениюОстаток
			|			ТОГДА ЗаказыНаПеремещенияНаростающие.КоличествоПосле
			|		ИНАЧЕ ЗаказыНаПеремещенияПоПриоритетам.КПоступлениюОстаток - ЗаказыНаПеремещенияНаростающие.КоличествоДо
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ НоменклатураИзЗаказовНаПеремещение
			|ИЗ
			|	ЗаказыНаПеремещенияНаростающие КАК ЗаказыНаПеремещенияНаростающие
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаказыНаПеремещенияПоПриоритетам КАК ЗаказыНаПеремещенияПоПриоритетам
			|		ПО ЗаказыНаПеремещенияНаростающие.ДокументПоступления = ЗаказыНаПеремещенияПоПриоритетам.ДокументПоступления
			|			И ЗаказыНаПеремещенияНаростающие.Номенклатура = ЗаказыНаПеремещенияПоПриоритетам.Номенклатура
			|			И ЗаказыНаПеремещенияНаростающие.Приоритет <= ЗаказыНаПеремещенияПоПриоритетам.Приоритет
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ЗаказыПоставщикуНаростающие.Номенклатура 	КАК Номенклатура,
			|	ЗаказыПоставщикуНаростающие.Приоритет 		КАК Приоритет,
			|	ВЫБОР
			|		КОГДА ЗаказыПоставщикуНаростающие.КоличествоПосле <= ЗаказыПоставщикуПоПриоритетам.КПоступлениюОстаток
			|			ТОГДА ЗаказыПоставщикуНаростающие.КоличествоПосле
			|		ИНАЧЕ ЗаказыПоставщикуПоПриоритетам.КПоступлениюОстаток - ЗаказыПоставщикуНаростающие.КоличествоДо
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ НоменклатураИзЗаказовПоставщику
			|ИЗ
			|	ЗаказыПоставщикуНаростающие КАК ЗаказыПоставщикуНаростающие
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаказыПоставщикуПоПриоритетам КАК ЗаказыПоставщикуПоПриоритетам
			|		ПО ЗаказыПоставщикуНаростающие.ДокументПоступления = ЗаказыПоставщикуПоПриоритетам.ДокументПоступления
			|			И ЗаказыПоставщикуНаростающие.Номенклатура = ЗаказыПоставщикуПоПриоритетам.Номенклатура
			|			И ЗаказыПоставщикуНаростающие.Приоритет <= ЗаказыПоставщикуПоПриоритетам.Приоритет
			|;
			
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПоступленияНаростающие.Номенклатура 	КАК Номенклатура,
			|	ПоступленияНаростающие.Приоритет 		КАК Приоритет,
			|	ВЫБОР
			|		КОГДА ПоступленияНаростающие.КоличествоПосле <= ПоступленияПоПриоритетам.КПоступлениюОстаток
			|			ТОГДА ПоступленияНаростающие.КоличествоПосле
			|		ИНАЧЕ ПоступленияПоПриоритетам.КПоступлениюОстаток - ПоступленияНаростающие.КоличествоДо
			|	КОНЕЦ КАК Количество
			|ПОМЕСТИТЬ НоменклатураИзПоступлений
			|ИЗ
			|	ПоступленияНаростающие КАК ПоступленияНаростающие
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоступленияПоПриоритетам КАК ПоступленияПоПриоритетам
			|		ПО ПоступленияНаростающие.ДокументПоступления = ПоступленияПоПриоритетам.ДокументПоступления
			|			И ПоступленияНаростающие.Номенклатура = ПоступленияПоПриоритетам.Номенклатура
			|			И ПоступленияНаростающие.Приоритет <= ПоступленияПоПриоритетам.Приоритет
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.Номенклатура 		КАК Номенклатура,
			|	СУММА(ВложенныйЗапрос.Количество)   КАК Количество
			|ПОМЕСТИТЬ ОжидаемаяНоменклатура
			|ИЗ
			|	(
			|		ВЫБРАТЬ
			|			Номенклатура КАК Номенклатура,
			|			Количество	 КАК Количество
			|		ИЗ
			|			НоменклатураИзПеремещений
			|		ГДЕ
			|			Приоритет < 2
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			Номенклатура КАК Номенклатура,
			|			Количество	 КАК Количество
			|		ИЗ
			|			НоменклатураИзЗаказовНаПеремещение
			|		ГДЕ
			|			Приоритет < 2
			|
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			Номенклатура КАК Номенклатура,
			|			Количество	 КАК Количество
			|		ИЗ
			|			НоменклатураИзЗаказовПоставщику
			|		ГДЕ
			|			Приоритет < 2
			|
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			Номенклатура КАК Номенклатура,
			|			Количество	 КАК Количество
			|		ИЗ
			|			НоменклатураИзПоступлений
			|		ГДЕ
			|			Приоритет < 2
			|          
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			Номенклатура,
			|			КПоступлениюОстаток
			|		ИЗ 
			|			ТоварыКПоступлению
			|		ГДЕ
			|			ДокументПоступления ССЫЛКА Документ.ВозвратТоваровОтКлиента
			|          
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			Номенклатура,
			|			КПоступлениюОстаток
			|		ИЗ 
			|			ТоварыКПоступлению
			|		ГДЕ
			|			ДокументПоступления ССЫЛКА Документ.ЗаказНаСборку
			|
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			Номенклатура,
			|			КПоступлениюОстаток
			|		ИЗ 
			|			ТоварыКПоступлению
			|		ГДЕ
			|			ДокументПоступления ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
			|
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			Номенклатура,
			|			КПоступлениюОстаток
			|		ИЗ 
			|			ТоварыКПоступлению
			|		ГДЕ
			|			ДокументПоступления ССЫЛКА Документ.ПрочееОприходованиеТоваров
			|
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			Номенклатура,
			|			КПоступлениюОстаток
			|		ИЗ 
			|			ТоварыКПоступлению
			|		ГДЕ
			|			ДокументПоступления ССЫЛКА Документ.СборкаТоваров


			|	) КАК ВложенныйЗапрос

			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Номенклатура
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|УНИЧТОЖИТЬ ТоварыКПоступлению;
			|УНИЧТОЖИТЬ ТоварыПоЗаказамНаПеремещение;
			|УНИЧТОЖИТЬ ТоварыПоПеремещениям;
			|УНИЧТОЖИТЬ ТоварыПоЗаказамПоставщику;
			|УНИЧТОЖИТЬ ТоварыПоПоступлениям;
			|УНИЧТОЖИТЬ ТоварыПоЗаказамНаПеремещениеСвернутые;
			|УНИЧТОЖИТЬ ТоварыПоПеремещениямСвернутые;
			|УНИЧТОЖИТЬ ТоварыПоЗаказамПоставщикуСвернутые;
			|УНИЧТОЖИТЬ ТоварыПоПоступлениямСвернутые;
			|УНИЧТОЖИТЬ ЗаказыНаПеремещенияНаростающие;
			|УНИЧТОЖИТЬ ПеремещенияНаростающие;
			|УНИЧТОЖИТЬ ЗаказыПоставщикуНаростающие;
			|УНИЧТОЖИТЬ ПоступленияНаростающие;
			|УНИЧТОЖИТЬ ПеремещенияПоПриоритетам;
			|УНИЧТОЖИТЬ ЗаказыНаПеремещенияПоПриоритетам;
			|УНИЧТОЖИТЬ ЗаказыПоставщикуПоПриоритетам;
			|УНИЧТОЖИТЬ ПоступленияПоПриоритетам;
			|УНИЧТОЖИТЬ НоменклатураИзПеремещений;
			|УНИЧТОЖИТЬ НоменклатураИзЗаказовНаПеремещение;
			|УНИЧТОЖИТЬ НоменклатураИзЗаказовПоставщику;
			|УНИЧТОЖИТЬ НоменклатураИзПоступлений;";
	
	Возврат ТекстЗапроса;

конецфункции
 

Функция ВДНССформироватьТелоСообщения(StructConnection, ОписаниеОшибки = "", ВремяВыполненияЗапроса = 0, ВремяВыполненияЗаписиВФайл = 0, ВремяВыполненияЗаписиПоFTP = 0)
	
	Тело = 	"Технические данные подключения : " 														+ Символы.ПС +
			"Server: " 								+ StructConnection.ServerExchange 					+ Символы.ПС +
			"Port: " 								+ StructConnection.Port 							+ Символы.ПС +
			"User: " 								+ StructConnection.User 							+ Символы.ПС +
			"Password: ************" 																	+ Символы.ПС +
			"Proxy: " 								+ Строка(StructConnection.Proxy) 					+ Символы.ПС +
			"PassiveMode: " 						+ Строка(StructConnection.PassiveConnection)		+ Символы.ПС +
			"Timeout: "								+ Строка(StructConnection.Timeout)					+ Символы.ПС + 
			" "                                                                                         + Символы.ПС +
			ОписаниеОшибки																				+ Символы.ПС +
			"Время выполнения запроса : " 			+ ВремяВыполненияЗапроса 		+ " (сек)" 			+ Символы.ПС +
			"Время выполнения записи в файл : " 	+ ВремяВыполненияЗаписиВФайл 	+ " (сек)" 			+ Символы.ПС +
			"Время выполнения записи по FTP : " 	+ ВремяВыполненияЗаписиПоFTP 	+ " (сек)" 			+ Символы.ПС +
			" ";																						

	Возврат Тело;
	
КонецФункции


// http://r.ktc-ua.com/issues/5358
// Функция выполняет проверку необходимости выгрузки номенклатуры
// по актуальности на сайт.
//
// Возвращаемое значение:
//  Истина - выполняем выгрузку на сайт, Ложь - выгружаем только остатки.
//
Функция НеобходимоВыгружатьНоменклатуруПоАктуальностиНаСайт()

	Настройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиОбработокМодификацииКонфигурации", , , "ДополнительныеНастройкиОбработокМодификацииКонфигурации");
	
	Если ТипЗнч(Настройки) <> Тип("Структура") Тогда // Если настройки не заданы - выгружаем акуальную номенклатуру на сайт постоянно.
		ОповеститьОбОшибкеВSlack("Возможно не заданы настройки расписания выгрузки актуальной номенклатуры на сайт  ktc-ua.com. Установить расписание возможно в «Библиотеке внешних обработок».");
		Возврат Ложь;
	КонецЕсли;
	
	Если Не Настройки.Свойство("ktc_ua_com_расписание") Тогда // Если настройки не заданы - выгружаем акуальную номенклатуру на сайт постоянно.
		ОповеститьОбОшибкеВSlack("Возможно не заданы настройки расписания выгрузки актуальной номенклатуры на сайт ktc-ua.com. Установить расписание возможно в «Библиотеке внешних обработок».");
		Возврат Ложь;
	КонецЕсли;
	
	ktc_ua_com_расписание = Настройки.ktc_ua_com_расписание;
	
	Если ТипЗнч(ktc_ua_com_расписание) <> Тип("ТаблицаЗначений") Тогда
		ОповеститьОбОшибкеВSlack("Возможно не заданы настройки расписания выгрузки актуальной номенклатуры на сайт ktc-ua.com. Установить расписание возможно в «Библиотеке внешних обработок».");
		Возврат Ложь;
	КонецЕсли;
	
	Если ktc_ua_com_расписание.Количество() = 0 Тогда
		ОповеститьОбОшибкеВSlack("Возможно не заданы настройки расписания выгрузки актуальной номенклатуры на сайт ktc-ua.com. Установить расписание возможно в «Библиотеке внешних обработок».");
		Возврат Ложь;
	КонецЕсли;
	
	ПроверкаРасписания = Ложь;
	
	Для каждого СтрокаТаблицы Из ktc_ua_com_расписание Цикл
		Расписание = СтрокаТаблицы.Расписание;
		Если Расписание.Количество() > 0 Тогда
			ПроверкаРасписания = Истина;
			Если Расписание[0].Значение.ТребуетсяВыполнение(,, Дата("00010101")) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	Если Не ПроверкаРасписания Тогда
		ОповеститьОбОшибкеВSlack("Возможно не заданы настройки расписания выгрузки актуальной номенклатуры на сайт ktc-ua.com. Установить расписание возможно в «Библиотеке внешних обработок».");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции // НеобходимоВыгружатьНоменклатуруПоАктуальностиНаСайт()
 
Процедура ОповеститьОбОшибкеВSlack(ОписаниеОшибки)
	
	МассивПрикреплений = Новый Массив;
    СтруктураПрикреплений = git_Slack.ПолучитьСтруктуруПрикреплений();
    СтруктураПрикреплений.Вставить("fallback",  "Не удалось прочитать настройки расписания выгрузки актуальной номенклатуры на ktc-ua.com");
    СтруктураПрикреплений.Вставить("pretext",   ОписаниеОшибки);
    СтруктураПрикреплений.Вставить("color",     "danger");
    МассивПрикреплений.Добавить(СтруктураПрикреплений);

    СтруктураДанных = git_Slack.ПолучитьПустуюСтруктуруДанных();
    СтруктураДанных.Вставить("username",    "Base (yt11)");
    СтруктураДанных.Вставить("icon_emoji",  ":goberserk:");
    СтруктураДанных.Вставить("channel",     "#1с");
    СтруктураДанных.Вставить("attachments", МассивПрикреплений);
    git_Slack.ОтправитьДанные("ktchat.slack.com", "x2VEjiOJKl2UnSA5t2DinjEt", СтруктураДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	//Версия обработки
	Версия = "2.5.13";
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Регл. обновление ktc-ua.com [" + Версия + "]");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия",  Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Регл. обновление ktc-ua.com [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "Регл. обновление ktc-ua.com [" + Версия + "]", "ВыгрузитьВИнтернетМагазин();", "ВызовСерверногоМетода");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(ИдентификаторКоманды) Экспорт
	Выполнить(ИдентификаторКоманды);	
КонецПроцедуры

#КонецОбласти








