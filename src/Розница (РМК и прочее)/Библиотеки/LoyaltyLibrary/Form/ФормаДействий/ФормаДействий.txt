
&НаСервере
Функция GetLibrary(LibraryName)
	Ссылка 		    = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию(LibraryName);
	Если Ссылка = Неопределено Тогда
		ВызватьИсключение "Библиотека с именем не найдена: " + LibraryName;	
	КонецЕсли;
	ДвоичныеДанные  = Ссылка.ХранилищеОбработки.Получить();
	АдресХранилища  = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	ИмяВнОбработки  = ВнешниеОбработки.Подключить(АдресХранилища, , Ложь);
	ОбработкаОбъект = ВнешниеОбработки.Создать(ИмяВнОбработки);
	Возврат ОбработкаОбъект;	
КонецФункции

&НаСервере
Функция ПолучитьБиблиотекуФорм(ИмяБиблиотеки)
	СсылкаНаБиблиотеку = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию(ИмяБиблиотеки);        
    ДвоичныеДанные = СсылкаНаБиблиотеку.ХранилищеОбработки.Получить();
    АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
    Возврат ВнешниеОбработки.Подключить(АдресХранилища, , Ложь);
КонецФункции



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	pin_hide = GetLibrary("Библиотека внешних обработок").СоздатьПроизвольноеЧисло(1000, 9999);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Заголовок = "Номер телефона: " + МобНомер;
	СтрокаЛогирования = "Моб. номер: " + МобНомер + " нужно привязать или зарегистрировать.";
КонецПроцедуры





&НаКлиенте
Процедура ПривязатьНомер(Команда)
	Партнер = ОткрытьФормуМодально("Справочник.Партнеры.ФормаВыбора");
	ВыполнитьДействияПоПривязке(Партнер);
КонецПроцедуры

&НаКлиенте
Процедура Зарегистрировать(Команда)
	ФормаРегистрации = ПолучитьФорму("ВнешняяОбработка." + ПолучитьБиблиотекуФорм("LoyaltyLibrary") + ".Форма.ФормаРегистрации", Новый Структура("Организация, МобНомер", Организация, МобНомер), ЭтаФорма, Новый УникальныйИдентификатор());	
	Партнер = ФормаРегистрации.ОткрытьМодально();
    ВыполнитьДействияПоПривязке(Партнер);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействияПоПривязке(Партнер)
	Если ТипЗнч(Партнер) = Тип("СправочникСсылка.Партнеры") Тогда
		Если НЕ Партнер.Пустая() Тогда
			Отказ = Ложь;
			ПривязатьНомерНаСервере(Партнер, Отказ);
			Если Не Отказ Тогда
				Элементы.ПривязатьНомер.Доступность   = Ложь;
				Элементы.Зарегистрировать.Доступность = Ложь;
				ПодключитьОбработчикОжидания("ВыслатьПарольНаПочту", 			45, Истина);
				ПодключитьОбработчикОжидания("ВыслатьПарольВСтрокуЛогирования", 75, Истина);
			КонецЕсли;
		Иначе
			Предупреждение("Партнер не выбран! Повторите попытку еще раз...");
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВыслатьПарольНаПочту()
	ВыслатьПарольНаПочтуНаСервере();			
КонецПроцедуры

&НаСервере
Процедура ВыслатьПарольНаПочтуНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого Строка Из ПараметрыСеанса.ТекущийПользователь.КонтактнаяИнформация Цикл
		Если Строка.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты 
		 И	 Строка.Вид = Справочники.ВидыКонтактнойИнформации.EmailПользователя Тогда
		 	АдресЭлектроннойПочты = Новый Массив;
			АдресЭлектроннойПочты.Добавить(Новый Структура("Адрес, Представление", Строка.АдресЭП, Строка(ПараметрыСеанса.ТекущийПользователь)));
			Прервать;
		 КонецЕсли;
	КонецЦикла;
	
	Если АдресЭлектроннойПочты = Неопределено Тогда
		СтрокаЛогирования = СтрокаЛогирования + Символы.ПС + "Пин код не может быть выслан на e-mail, у пользователя она не заполнена.";
		Возврат;
	КонецЕсли;
	
	ГлобальныеНастройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиОбработокМодификацииКонфигурации", , , "ДополнительныеНастройкиОбработокМодификацииКонфигурации");
	Если НЕ ТипЗнч(ГлобальныеНастройки) = Тип("Структура") Тогда
		ВызватьИсключение "Настройки библиотеки внешних обработок не найдены!" + Символы.ПС + "Задать настройки можно по адресу: ""Администрирование""->""Поддержка и обслуживание""->""Дополнительные обработки""->""Настройки внешних обработок""";	
	КонецЕсли;
	
	GetLibrary("Библиотека внешних обработок").ОтправитьСообщениеПоSMTP(ГлобальныеНастройки.СтандартнаяУчетнаяЗаписьЭлектроннойПочты, Новый Структура("Тема, Тело, Кому", "Пин код партнера: " + Партнер + " Моб.номер: " + МобНомер, pin_hide, АдресЭлектроннойПочты));
	СтрокаЛогирования = СтрокаЛогирования + Символы.ПС + "Пин код выслан на e-mail: " + АдресЭлектроннойПочты[0].Адрес;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ВыслатьПарольВСтрокуЛогирования()
	СтрокаЛогирования = СтрокаЛогирования + Символы.ПС + "Не будем заставлять клиента ждать, пин код входа: " + pin_hide;		
КонецПроцедуры

&НаСервере
Процедура ПривязатьНомерНаСервере(Партнер, Отказ)
	
	Перем Server, Path, FromWho, Status, ID;
	
	Результат = ПолучитьПартнераПоНомеру(МобНомер);
	Если НЕ Результат = Неопределено Тогда
		Сообщить("Номер уже привязан к клиенту: " + Строка(Результат) + "!" + Символы.ПС + "Чтобы выбрать клиента(" + Строка(Результат) + "), нужно закрыть это окно и заново ввести номер мобильного телефона.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЕстьОсновнойНомер = ПолучитьОсновнойНомерПартнера(Партнер);
	
	
	УстановитьПривилегированныйРежим(Истина);
	НаборЗаписей = РегистрыСведений.Лояльность_НомераТелефонов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Партнер.Установить(Партнер);
	НаборЗаписей.Отбор.НомерТелефона.Установить(МобНомер);
		Запись = НаборЗаписей.Добавить();
		Запись.Партнер 			= Партнер;
		Запись.НомерТелефона	= МобНомер;
		Запись.ДатаРегистрации	= ТекущаяДата();
		Запись.Организация		= Организация;
		Запись.Менеджер			= ПараметрыСеанса.ТекущийПользователь;
		Запись.Основной			= НЕ ЕстьОсновнойНомер;
	НаборЗаписей.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ktcОбщийМодульПротоколов.ПолучитьSMS_Server_Path(Server, Path, FromWho, "alphasms.com.ua");
	ktcОбщийМодульПротоколов.ОтправитьСообщениеПоSMS(Server, Path + "send&from=" + FromWho + "&to=" + СокрЛП(МобНомер) + "&message=Vittaemo v bonusnij programi KTC. Parol' pidtverdzhennja: " + СокрЛП(pin_hide) + "." + Символы.ПС + "Dovidka za tel. +38(093)177-04-49", Status, ID);
	СтрокаЛогирования = СтрокаЛогирования + Символы.ПС + "Статус: " + ?(ПустаяСтрока(Status), "sms отправлена успешно!", Status) + "(ID: " + ID + ")";
	
КонецПроцедуры



&НаКлиенте
Процедура Завершить(Команда)
	Если pin_code = pin_hide Тогда
		Закрыть(Партнер);
	Иначе
		Предупреждение("Пин код не верный, проверьте правильность и попытайтесь ввести еще раз...");	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьПартнераПоНомеру(Номер)
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ 
		|	* 
		|ИЗ 
		|	РегистрСведений.Лояльность_НомераТелефонов
		|ГДЕ
		|	НомерТелефона = &Номер";
	Запрос.УстановитьПараметр("Номер", Номер);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Партнер, Неопределено);
КонецФункции

&НаСервере
Функция ПолучитьОсновнойНомерПартнера(Партнер)
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ 
		|	* 
		|ИЗ 
		|	РегистрСведений.Лояльность_НомераТелефонов
		|ГДЕ
		|	Партнер = &Партнер
		|И	Основной";
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка.Следующий();
КонецФункции
