
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	СтандартнаяОбработка = Ложь;
	
	ТекстЗапроса = ТекстЗапросаОсновногоНабораДанных();
	СформироватьОтчетПрограммно(ТекстЗапроса, ДанныеРасшифровки, ДокументРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьОтчетПрограммно(ТекстЗапроса, ДанныеРасшифровки, ДокументРезультат)
		
	НаборыДанных 	= СхемаКомпоновкиДанных.НаборыДанных;
	ОсновнойНабор   = НаборыДанных.Найти("НаборДанных1");
	
	Если ОсновнойНабор = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Отчет сломался. Сообщите в службу поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	ОсновнойНабор.Запрос = ТекстЗапроса;
	
	УстановитьПараметрыКомпоновкиДанных(КомпоновщикНастроек);
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки, , , Ложь);
		
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры

Процедура УстановитьПараметрыКомпоновкиДанных(КомпоновщикНастроек)

	ПараметрыДанных 	= КомпоновщикНастроек.Настройки.ПараметрыДанных;
	НастройкиКТСПомощь  = ПолучитьНастройкиКТСПомощь();
	
	ВидНоменклатурыКТСПомощь	= Справочники.ВидыНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор("91f45981-0c03-11e2-9d4d-001e673c80fc"));
	УстановитьЗначениеПараметраКомпоновкиДанных("ВидНоменклатурыКТСПомощь", ВидНоменклатурыКТСПомощь, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ПроцентПродажыУслуги", НастройкиКТСПомощь.ПроцентПродажыУслуги, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ПроцентИсполненияУслуги", НастройкиКТСПомощь.ПроцентИсполненияУслуги, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ВидНоменклатурыСертификат", НастройкиКТСПомощь.ВидНоменклатурыСертификаты, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ПроцентОтПродажыСертификата", НастройкиКТСПомощь.ПроцентОтПродажыСертификата, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("СвойствоПомощьКТС", НастройкиКТСПомощь.СвойствоПомощьКТС, ПараметрыДанных);
	УИ = "afa17273-094a-11e1-b8a7-001517115d85";
	ПодразделениеКЦ = Справочники.СтруктураПредприятия.ПолучитьСсылку(Новый УникальныйИдентификатор(УИ));
	УстановитьЗначениеПараметраКомпоновкиДанных("ПодразделениеКЦ", ПодразделениеКЦ, ПараметрыДанных);
КонецПроцедуры

Процедура УстановитьЗначениеПараметраКомпоновкиДанных(ИмяПараметра, ЗначениеПараметра, ПараметрыДанных)

	Параметр = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	
	Если Параметр = Неопределено Тогда
		ТекстСообщения = НСтр("ru='Не удалось получить параметр «%1». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ИмяПараметра);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметр.Значение 		= ЗначениеПараметра;
	Параметр.Использование  = Истина;

КонецПроцедуры
 
Функция ПолучитьНастройкиКТСПомощь()

	Настройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиПроцентовКТСПомощь", , , "ДополнительныеНастройкиПроцентовКТСПомощь");
	
	Если ТипЗнч(Настройки) <> Тип("Структура") Тогда
		ВызватьИсключение НСтр("ru='Не удалось прочитать настройки «КТС Помощь». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Не Настройки.Свойство("СвойствоПомощьКТС") Тогда
		ВызватьИсключение НСтр("ru='Не установлено свойство «СвойствоПомощьКТС». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Не Настройки.Свойство("ПроцентПродажыУслуги") Тогда
		ВызватьИсключение НСтр("ru='Не установлено свойство «ПроцентПродажыУслуги». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Не Настройки.Свойство("ПроцентИсполненияУслуги") Тогда
		ВызватьИсключение НСтр("ru='Не установлено свойство «ПроцентИсполненияУслуги». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Не Настройки.Свойство("ВидНоменклатурыСертификаты") Тогда
		ВызватьИсключение НСтр("ru='Не установлено свойство «ВидНоменклатурыСертификаты». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Не Настройки.Свойство("ПроцентОтПродажыСертификата") Тогда
		ВызватьИсключение НСтр("ru='Не установлено свойство «ПроцентОтПродажыСертификата». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Возврат Настройки;

КонецФункции // ПолучитьНастройкиКТСПомощь()

Функция ТекстЗапросаОсновногоНабораДанных()

	ТекстЗапроса = 
		////////////////////////////////////////////////////////////////////////////////
		//0. Менеджеры КЦ
		"ВЫБРАТЬ
		|	Ссылка
		|ПОМЕСТИТЬ ВТ_МенеджерыКЦ
		|ИЗ
		|	Справочник.Пользователи
		|ГДЕ
		|	ТекущееПодразделение	= &ПодразделениеКЦ
		|И	Недействителен 			= ЛОЖЬ
		|И	НЕ ПометкаУдаления
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//1. Получаем таблицу с заказами клиентов
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг).ЗаказКлиента 	КАК ЗаказКлиента,
		|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг) 				КАК ДокументПродажи
		|ПОМЕСТИТЬ ВТ_ЗаказыКлиентов
		|ИЗ
		|	РегистрНакопления.КПП_БонусыМенеджерамНачисленые.Обороты({&ДатаНачала}, {&ДатаОкончания}, Регистратор, )
		|ГДЕ
		|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг).РеализацияПоЗаказам = ИСТИНА
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//2. Таблица номенклатуры в заказе клиента
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказКлиента 			КАК ЗаказКлиента,
		|	Номенклатура 			КАК Номенклатура
		|ПОМЕСТИТЬ ВТ_НоменклатураВЗаказеКлиента
		|ИЗ
		|	РегистрНакопления.ЗаказыКлиентов.Обороты(
		|			,
		|			,
		|			Регистратор,
		|			ЗаказКлиента В
		|				(ВЫБРАТЬ
		|					ЗаказКлиента
		|				ИЗ
		|					ВТ_ЗаказыКлиентов))
		|ГДЕ
		|	Регистратор ССЫЛКА Документ.ЗаказКлиента
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗаказКлиента,
		|	Номенклатура
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//3. Таблица не оплаченных полностю заказов клиента
		|ВЫБРАТЬ
		|	ЗаказКлиента 				КАК ЗаказКлиента,
		|	СуммаОстаток 				КАК Сумма
		|ПОМЕСТИТЬ ВТ_ДолгиПоЗаказам
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами.Остатки({&ДатаОкончания},)
		|ГДЕ
		|	СуммаОстаток > 0
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		// 4. Нам нужно получить список неоплаченных документов на начало периода
		//    поскольку их нужно выводить в отчете.
		|ВЫБРАТЬ
		|	ЗаказКлиента 				КАК ЗаказКлиента,
		|	СуммаОстаток 				КАК Сумма
		|ПОМЕСТИТЬ ВТ_ДолгиПоЗаказамНаНачалоПериода
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами.Остатки({&ДатаНачала}, )
		|ГДЕ
		|	СуммаОстаток > 0
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//4. Таблица документов с заработком КЦ
		|ВЫБРАТЬ
		|	ЗаказКлиента		КАК ЗаказКлиента,
		|	ДокументПродажи		КАК ДокументПродажи,
		|	Ссылка 				КАК МенеджерКЦ
		|ПОМЕСТИТЬ ВТ_ДокументыЗаработкуКЦ
		|ИЗ
		|	ВТ_ЗаказыКлиентов
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МенеджерыКЦ
		|	ПО 
		|		ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаказКлиента).Менеджер = Ссылка
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//5. Так как одна реализация может быть на основании нескольких заказов клиента
		// нужно проверить есть ли хотя бы один не оплаченный заказ клиента.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг) КАК Документ,
		|	ИСТИНА КАК ЕстьДолгПоДокументу
		|ПОМЕСТИТЬ ВТ_ДолгиПоРеализациям
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
		|			,
		|			,
		|			Регистратор,
		|			ЗаказКлиента В
		|				(ВЫБРАТЬ
		|					ЗаказКлиента
		|				ИЗ
		|					ВТ_ДолгиПоЗаказам)) 
		|ГДЕ
		|	Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//5. Так как одна реализация может быть на основании нескольких заказов клиента
		// нужно проверить есть ли хотя бы один не оплаченный заказ клиента на начало периода.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказКлиента КАК ЗаказКлиента,
		|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг) КАК Документ,
		|	ИСТИНА КАК ЕстьДолгПоДокументу
		|ПОМЕСТИТЬ ВТ_ДолгиПоРеализациямНаНачалоПериода
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
		|			,
		|			,
		|			Регистратор,
		|			ЗаказКлиента В
		|				(ВЫБРАТЬ
		|					ЗаказКлиента
		|				ИЗ
		|					ВТ_ДолгиПоЗаказамНаНачалоПериода)) 
		|ГДЕ
		|	Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Документ
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаказКлиента 	КАК ЗаказКлиента,
		|	Документ 		КАК ДокументПродажи
		|ПОМЕСТИТЬ ВТ_ЗаказыКлиентовНаНачалоПериода
		|ИЗ
		|	ВТ_ДолгиПоРеализациямНаНачалоПериода
		|ГДЕ
		|	Документ.РеализацияПоЗаказам = ИСТИНА
		|;
		|
		|ВЫБРАТЬ
		|	ЗаказКлиента		КАК ЗаказКлиента,
		|	ДокументПродажи		КАК ДокументПродажи,
		|	Ссылка 				КАК МенеджерКЦ
		|ПОМЕСТИТЬ ВТ_ДокументыЗаработкуКЦНаНачалоПериода
		|ИЗ
		|	ВТ_ЗаказыКлиентовНаНачалоПериода
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МенеджерыКЦ
		|	ПО 
		|		ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаказКлиента).Менеджер = Ссылка
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//6. Производим выбор номенкатуры из таблицы расширенной настройки процентов «КТС Помощь»
		|ВЫБРАТЬ
		|	Номенклатура 			КАК Номенклатура,
		|	ПроцентПродажы 			КАК ПроцентПродажы,
		|	ПроцентИсполнения 		КАК ПроцентИсполнения,
		|	ИСТИНА 					КАК ЭтоКТСПомощь
		|ПОМЕСТИТЬ ВТ_РасширенныеНастройкиКТСПомощь
		|ИЗ
		|	РегистрСведений.КТСПомощь 
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//7. Выбираем номенклатуру из видом «КТС Помощь»
		|ВЫБРАТЬ
		|	Ссылка 					КАК Номенклатура,
		|	ИСТИНА 					КАК ЭтоКТСПомощь
		|ПОМЕСТИТЬ ВТ_ТаблицаНоменклатурыКТСПомощь
		|ИЗ
		|	Справочник.Номенклатура
		|ГДЕ
		|	ВидНоменклатуры = &ВидНоменклатурыКТСПомощь
		|И	ПометкаУдаления = ЛОЖЬ
		|И	ЭтоГруппа		= ЛОЖЬ
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//8. Произодим выбор сертификатов из раширенной настройки процентов сертификатов
		|ВЫБРАТЬ
		|	Сертификат 						КАК Сертификат,
		|	&ПроцентОтПродажыСертификата	КАК Процент,
		|	ИСТИНА 							КАК ЭтоСертификат
		|ПОМЕСТИТЬ ВТ_РасширенныеНастройкиСертификатов
		|ИЗ
		|	РегистрСведений.КТС_НастройкаПроцентовСертификатов
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//9. Производим выбор номенклатуры из видом «Сертификаты ПДО».
		|ВЫБРАТЬ
		|	Ссылка 					КАК Номенклатура,
		|	ИСТИНА 					КАК ЭтоСертификат
		|ПОМЕСТИТЬ ВТ_ТаблицаСертификатов
		|ИЗ
		|	Справочник.Номенклатура 
		|ГДЕ
		|	ВидНоменклатуры	= &ВидНоменклатурыСертификат
		|И	ПометкаУдаления	= ЛОЖЬ
		|И	ЭтоГруппа		= ЛОЖЬ
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//10. Выборка данных для расчета заработка.
		|ВЫБРАТЬ
		|	БонусыМенеджерам.Регистратор 																	КАК Ссылка,
		|	БонусыМенеджерам.Подразделение 																	КАК Подразделение,
		|	БонусыМенеджерам.Менеджер 																		КАК Менеджер,
		|	БонусыМенеджерам.Номенклатура 																	КАК Номенклатура,
		|	БонусыМенеджерам.КоличествоОборот 																КАК Количество,
		|	БонусыМенеджерам.СуммаРеглОборот 																КАК Сумма,
		|	БонусыМенеджерам.ЗаработокМенеджераРеглОборот * ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) КАК ЗаработокМенеджера,
		|	ЕСТЬNULL(ВТ_ДолгиПоРеализациям.ЕстьДолгПоДокументу, ЛОЖЬ)										КАК ЕстьДолгПоДокументу,
		|	ВЫБОР
		|		КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
		|			ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
		|		ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
		|	КОНЕЦ 																							КАК КПП_Склад,
		|	ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) 									КАК Коэфф,
		|	ЕСТЬNULL(ВТ_ДокументыЗаработкуКЦ.МенеджерКЦ, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))	КАК МенеджерКЦ,
		|	ЕСТЬNULL(ВТ_ДокументыЗаработкуКЦ.ЗаказКлиента, ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка))	КАК ЗаказКлиента
		|ПОМЕСТИТЬ ВТ_ТаблицаЗаработковМенеджеров
		|ИЗ
		|	РегистрНакопления.КПП_БонусыМенеджерамНачисленые.Обороты({&ДатаНачала}, {&ДатаОкончания}, Регистратор, ) КАК БонусыМенеджерам
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгиПоРеализациям КАК ВТ_ДолгиПоРеализациям
		|	ПО 
		|		ВЫРАЗИТЬ(БонусыМенеджерам.Регистратор КАК Документ.РеализацияТоваровУслуг) = ВТ_ДолгиПоРеализациям.Документ
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераВыполнениеПлана КАК ЗаработокМенеджераВыполнениеПлана
		|	ПО 
		|		НАЧАЛОПЕРИОДА(БонусыМенеджерам.Период, ДЕНЬ)	>=	НАЧАЛОПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.НачалоПериода, ДЕНЬ)
		|	И	БонусыМенеджерам.Период							<	КОНЕЦПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.КонецПериода, ДЕНЬ)
		|	И	БонусыМенеджерам.Склад							=	ЗаработокМенеджераВыполнениеПлана.Склад
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
		|	ПО
		|		НАЧАЛОПЕРИОДА(БонусыМенеджерам.Период, ДЕНЬ)	>=	НАЧАЛОПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.НачалоПериода, ДЕНЬ)
		|	И	БонусыМенеджерам.Период							< 	КОНЕЦПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.КонецПериода, ДЕНЬ)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыЗаработкуКЦ КАК ВТ_ДокументыЗаработкуКЦ
		|	ПО 
		|		(ВЫБОР
		|			КОГДА БонусыМенеджерам.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|			ТОГДА БонусыМенеджерам.Регистратор = ВТ_ДокументыЗаработкуКЦ.ДокументПродажи
		|		ИНАЧЕ 
		|			ВЫРАЗИТЬ(БонусыМенеджерам.Регистратор КАК Документ.ВозвратТоваровОтКлиента).ДокументРеализации = ВТ_ДокументыЗаработкуКЦ.ДокументПродажи
		|		КОНЕЦ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БонусыМенеджерам.Регистратор 																	КАК Ссылка,
		|	БонусыМенеджерам.Подразделение 																	КАК Подразделение,
		|	БонусыМенеджерам.Менеджер 																		КАК Менеджер,
		|	БонусыМенеджерам.Номенклатура 																	КАК Номенклатура,
		|	БонусыМенеджерам.КоличествоОборот 																КАК Количество,
		|	БонусыМенеджерам.СуммаРеглОборот 																КАК Сумма,
		|	БонусыМенеджерам.ЗаработокМенеджераРеглОборот * ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) КАК ЗаработокМенеджера,
		|	ЕСТЬNULL(ВТ_ДолгиПоРеализациям.ЕстьДолгПоДокументу, ЛОЖЬ)										КАК ЕстьДолгПоДокументу,
		|	ВЫБОР
		|		КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
		|			ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
		|		ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
		|	КОНЕЦ 																							КАК КПП_Склад,
		|	ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) 									КАК Коэфф,
		|	ЕСТЬNULL(ВТ_ДокументыЗаработкуКЦНаНачалоПериода.МенеджерКЦ, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))	КАК МенеджерКЦ,
		|	ЕСТЬNULL(ВТ_ДокументыЗаработкуКЦНаНачалоПериода.ЗаказКлиента, ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка))	КАК ЗаказКлиента
		|ИЗ
		|	ВТ_ДолгиПоРеализациямНаНачалоПериода КАК ВТ_ДолгиПоРеализациямНаНачалоПериода
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.КПП_БонусыМенеджерамНачисленые.Обороты(, , Регистратор, ) КАК БонусыМенеджерам
		|		ПО (ВТ_ДолгиПоРеализациямНаНачалоПериода.Документ = (ВЫРАЗИТЬ(БонусыМенеджерам.Регистратор КАК Документ.РеализацияТоваровУслуг)))
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДолгиПоРеализациям КАК ВТ_ДолгиПоРеализациям
		|	ПО 
		|		ВЫРАЗИТЬ(БонусыМенеджерам.Регистратор КАК Документ.РеализацияТоваровУслуг) = ВТ_ДолгиПоРеализациям.Документ
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераВыполнениеПлана КАК ЗаработокМенеджераВыполнениеПлана
		|	ПО 
		|		НАЧАЛОПЕРИОДА(БонусыМенеджерам.Период, ДЕНЬ)	>=	НАЧАЛОПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.НачалоПериода, ДЕНЬ)
		|	И	БонусыМенеджерам.Период							<	КОНЕЦПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.КонецПериода, ДЕНЬ)
		|	И	БонусыМенеджерам.Склад							=	ЗаработокМенеджераВыполнениеПлана.Склад
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
		|	ПО
		|		НАЧАЛОПЕРИОДА(БонусыМенеджерам.Период, ДЕНЬ)	>=	НАЧАЛОПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.НачалоПериода, ДЕНЬ)
		|	И	БонусыМенеджерам.Период							< 	КОНЕЦПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.КонецПериода, ДЕНЬ)
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДокументыЗаработкуКЦНаНачалоПериода КАК ВТ_ДокументыЗаработкуКЦНаНачалоПериода
		|	ПО 
		|		(ВЫБОР
		|			КОГДА БонусыМенеджерам.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
		|			ТОГДА БонусыМенеджерам.Регистратор = ВТ_ДокументыЗаработкуКЦНаНачалоПериода.ДокументПродажи
		|		ИНАЧЕ 
		|			ВЫРАЗИТЬ(БонусыМенеджерам.Регистратор КАК Документ.ВозвратТоваровОтКлиента).ДокументРеализации = ВТ_ДокументыЗаработкуКЦНаНачалоПериода.ДокументПродажи
		|		КОНЕЦ)
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//11. Выборка данных для расчета заработка.
		|ВЫБРАТЬ
		|	ТаблицаЗаработков.Ссылка,
		|	ТаблицаЗаработков.Подразделение,
		|	ТаблицаЗаработков.Менеджер,
		|	ТаблицаЗаработков.Номенклатура,
		|	ТаблицаЗаработков.Количество,
		|	ТаблицаЗаработков.Сумма / 2 КАК Сумма,
		|	ТаблицаЗаработков.ЗаработокМенеджера / 2 КАК ЗаработокМенеджера,
		|	ТаблицаЗаработков.ЕстьДолгПоДокументу,
		|	ТаблицаЗаработков.КПП_Склад,
		|	ТаблицаЗаработков.Коэфф
		|ПОМЕСТИТЬ ВТ_ТаблицаЗаработков
		|ИЗ
		|	ВТ_ТаблицаЗаработковМенеджеров КАК ТаблицаЗаработков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураВЗаказеКлиента КАК ВТ_НоменклатураВЗаказеКлиента
		|		ПО ТаблицаЗаработков.ЗаказКлиента = ВТ_НоменклатураВЗаказеКлиента.ЗаказКлиента
		|			И ТаблицаЗаработков.Номенклатура = ВТ_НоменклатураВЗаказеКлиента.Номенклатура
		|ГДЕ
		|	ТаблицаЗаработков.Менеджер <> ТаблицаЗаработков.МенеджерКЦ
		|	И ТаблицаЗаработков.МенеджерКЦ <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаЗаработков.Ссылка,
		|	ТаблицаЗаработков.Подразделение,
		|	ТаблицаЗаработков.МенеджерКЦ,
		|	ТаблицаЗаработков.Номенклатура,
		|	ТаблицаЗаработков.Количество,
		|	ТаблицаЗаработков.Сумма / 2,
		|	ТаблицаЗаработков.ЗаработокМенеджера / 2,
		|	ТаблицаЗаработков.ЕстьДолгПоДокументу,
		|	ТаблицаЗаработков.КПП_Склад,
		|	ТаблицаЗаработков.Коэфф
		|ИЗ
		|	ВТ_ТаблицаЗаработковМенеджеров КАК ТаблицаЗаработков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НоменклатураВЗаказеКлиента КАК ВТ_НоменклатураВЗаказеКлиента
		|		ПО ТаблицаЗаработков.ЗаказКлиента = ВТ_НоменклатураВЗаказеКлиента.ЗаказКлиента
		|			И ТаблицаЗаработков.Номенклатура = ВТ_НоменклатураВЗаказеКлиента.Номенклатура
		|ГДЕ
		|	ТаблицаЗаработков.Менеджер <> ТаблицаЗаработков.МенеджерКЦ
		|	И ТаблицаЗаработков.МенеджерКЦ <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|	И (ТаблицаЗаработков.ЗаказКлиента, ТаблицаЗаработков.Номенклатура) В
		|			(ВЫБРАТЬ
		|				ВТ_НоменклатураВЗаказеКлиента.ЗаказКлиента,
		|				ВТ_НоменклатураВЗаказеКлиента.Номенклатура
		|			ИЗ
		|				ВТ_НоменклатураВЗаказеКлиента КАК ВТ_НоменклатураВЗаказеКлиента)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаЗаработков.Ссылка,
		|	ТаблицаЗаработков.Подразделение,
		|	ТаблицаЗаработков.Менеджер,
		|	ТаблицаЗаработков.Номенклатура,
		|	ТаблицаЗаработков.Количество,
		|	ТаблицаЗаработков.Сумма,
		|	ТаблицаЗаработков.ЗаработокМенеджера,
		|	ТаблицаЗаработков.ЕстьДолгПоДокументу,
		|	ТаблицаЗаработков.КПП_Склад,
		|	ТаблицаЗаработков.Коэфф
		|ИЗ
		|	ВТ_ТаблицаЗаработковМенеджеров КАК ТаблицаЗаработков
		|ГДЕ
		|	НЕ (ТаблицаЗаработков.ЗаказКлиента, ТаблицаЗаработков.Номенклатура) В
		|				(ВЫБРАТЬ
		|					ВТ_НоменклатураВЗаказеКлиента.ЗаказКлиента,
		|					ВТ_НоменклатураВЗаказеКлиента.Номенклатура
		|				ИЗ
		|					ВТ_НоменклатураВЗаказеКлиента КАК ВТ_НоменклатураВЗаказеКлиента)
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//12. Для расчета процента от выполнения услуги КТС Помощь необходимо отсеч номенклатуру
		//    из соответсвующим видом.
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаЗаработков.Ссылка КАК Документ.РеализацияТоваровУслуг)	КАК Ссылка,
		|	ТаблицаЗаработков.Подразделение 										КАК Подразделение,
		|	ТаблицаЗаработков.Номенклатура 											КАК Номенклатура,
		|	СУММА(ТаблицаЗаработков.Количество) 									КАК Количество,
		|	СУММА(ТаблицаЗаработков.Сумма) 											КАК Сумма,
		|	ТаблицаЗаработков.КПП_Склад 											КАК КПП_Склад,
		|	ТаблицаЗаработков.Коэфф 												КАК Коэфф,
		|	ТаблицаЗаработков.ЕстьДолгПоДокументу 									КАК ЕстьДолгПоДокументу
		|ПОМЕСТИТЬ ВТ_РеализацииКТСПомощь
		|ИЗ
		|	ВТ_ТаблицаЗаработков КАК ТаблицаЗаработков
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТаблицаНоменклатурыКТСПомощь КАК ВТ_ТаблицаНоменклатурыКТСПомощь
		|	ПО 
		|		ТаблицаЗаработков.Номенклатура = ВТ_ТаблицаНоменклатурыКТСПомощь.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫРАЗИТЬ(ТаблицаЗаработков.Ссылка КАК Документ.РеализацияТоваровУслуг),
		|	ТаблицаЗаработков.Подразделение,
		|	ТаблицаЗаработков.Номенклатура,
		|	ТаблицаЗаработков.ЕстьДолгПоДокументу,
		|	ТаблицаЗаработков.КПП_Склад,
		|	ТаблицаЗаработков.Коэфф
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//13. Получим менеджеров которые выполнили услугу «КТС Помощь».
		|ВЫБРАТЬ
		|	РеализацииКТСПомощь.Ссылка КАК Ссылка,
		|	РеализацииКТСПомощь.Подразделение КАК Подразделение,
		|	ВЫРАЗИТЬ(РегистрДопСведения.Значение КАК Справочник.Пользователи) КАК Менеджер,
		|	РеализацииКТСПомощь.Номенклатура КАК Номенклатура,
		|	РеализацииКТСПомощь.Количество КАК Количество,
		|	РеализацииКТСПомощь.Сумма КАК Сумма,
		|	РеализацииКТСПомощь.КПП_Склад КАК КПП_Склад,
		|	РеализацииКТСПомощь.Коэфф КАК Коэфф,
		|	РеализацииКТСПомощь.ЕстьДолгПоДокументу КАК ЕстьДолгПоДокументу
		|ПОМЕСТИТЬ ВТ_РеализацииКТСПомощьПоМенеджерам
		|ИЗ
		|	ВТ_РеализацииКТСПомощь КАК РеализацииКТСПомощь
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК РегистрДопСведения
		|	ПО 
		|		РеализацииКТСПомощь.Ссылка	= ВЫРАЗИТЬ(РегистрДопСведения.Объект КАК Документ.РеализацияТоваровУслуг)
		|	И	РегистрДопСведения.Свойство = &СвойствоПомощьКТС
		|	
		|	{ГДЕ
		|		РеализацииКТСПомощь.Подразделение.* КАК Подразделение,
		|		ВЫРАЗИТЬ(РегистрДопСведения.Значение КАК Справочник.Пользователи).* КАК МенеджерОтбор,
		|		РеализацииКТСПомощь.Номенклатура.* КАК Номенклатура}
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//14. Результат 
		|ВЫБРАТЬ
		|	ТаблицаЗаработков.Ссылка 							КАК Ссылка,
		|	ТаблицаЗаработков.Подразделение 					КАК Подразделение,
		|	ТаблицаЗаработков.Менеджер 							КАК Менеджер,
		|	ТаблицаЗаработков.Номенклатура 						КАК Номенклатура,
		|	ТаблицаЗаработков.Количество 						КАК Количество,
		|	ТаблицаЗаработков.Сумма 							КАК Сумма,
		|	ВЫБОР
		|		КОГДА ТаблицаЗаработков.ЕстьДолгПоДокументу = ИСТИНА
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(ВТ_РасширенныеНастройкиКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
		|						ТОГДА ТаблицаЗаработков.Сумма * ВТ_РасширенныеНастройкиКТСПомощь.ПроцентПродажы * 0.01 * ТаблицаЗаработков.Коэфф
		|					КОГДА ЕСТЬNULL(ВТ_ТаблицаНоменклатурыКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
		|						ТОГДА ТаблицаЗаработков.Сумма * &ПроцентПродажыУслуги * 0.01 * ТаблицаЗаработков.Коэфф
		|					КОГДА ЕСТЬNULL(ВТ_РасширенныеНастройкиСертификатов.ЭтоСертификат, ЛОЖЬ) = ИСТИНА
		|						ТОГДА ТаблицаЗаработков.Сумма * ВТ_РасширенныеНастройкиСертификатов.Процент * 0.01
		|					КОГДА ЕСТЬNULL(ВТ_ТаблицаСертификатов.ЭтоСертификат, ЛОЖЬ) = ИСТИНА
		|						ТОГДА ТаблицаЗаработков.Сумма * &ПроцентОтПродажыСертификата * 0.01
		|					ИНАЧЕ ТаблицаЗаработков.ЗаработокМенеджера
		|				КОНЕЦ * ТаблицаЗаработков.КПП_Склад
		|		ИНАЧЕ 0
		|	КОНЕЦ 												КАК ВозможныйЗаработок,
		|	ВЫБОР
		|		КОГДА ТаблицаЗаработков.ЕстьДолгПоДокументу = ЛОЖЬ
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(ВТ_РасширенныеНастройкиКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
		|						ТОГДА ТаблицаЗаработков.Сумма * ЕСТЬNULL(ВТ_РасширенныеНастройкиКТСПомощь.ПроцентПродажы, 0) * 0.01 * ТаблицаЗаработков.Коэфф
		|					КОГДА ЕСТЬNULL(ВТ_ТаблицаНоменклатурыКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
		|						ТОГДА ТаблицаЗаработков.Сумма * &ПроцентПродажыУслуги * 0.01 * ТаблицаЗаработков.Коэфф
		|					КОГДА ЕСТЬNULL(ВТ_РасширенныеНастройкиСертификатов.ЭтоСертификат, ЛОЖЬ) = ИСТИНА
		|						ТОГДА ТаблицаЗаработков.Сумма * ЕСТЬNULL(ВТ_РасширенныеНастройкиСертификатов.Процент, 0) * 0.01
		|					КОГДА ЕСТЬNULL(ВТ_ТаблицаСертификатов.ЭтоСертификат, ЛОЖЬ) = ИСТИНА
		|						ТОГДА ТаблицаЗаработков.Сумма * &ПроцентОтПродажыСертификата * 0.01
		|					ИНАЧЕ ТаблицаЗаработков.ЗаработокМенеджера
		|				КОНЕЦ * ТаблицаЗаработков.КПП_Склад
		|		ИНАЧЕ 0
		|	КОНЕЦ 												КАК ЗаработокМенеджера
		|ПОМЕСТИТЬ ВТ_ТаблицаОкончательныйЗаработок
		|ИЗ
		|	ВТ_ТаблицаЗаработков КАК ТаблицаЗаработков
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасширенныеНастройкиКТСПомощь КАК ВТ_РасширенныеНастройкиКТСПомощь
		|	ПО
		|		ТаблицаЗаработков.Номенклатура = ВТ_РасширенныеНастройкиКТСПомощь.Номенклатура
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаНоменклатурыКТСПомощь КАК ВТ_ТаблицаНоменклатурыКТСПомощь
		|	ПО 
		|		ТаблицаЗаработков.Номенклатура = ВТ_ТаблицаНоменклатурыКТСПомощь.Номенклатура
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасширенныеНастройкиСертификатов КАК ВТ_РасширенныеНастройкиСертификатов
		|	ПО 
		|		ТаблицаЗаработков.Номенклатура = ВТ_РасширенныеНастройкиСертификатов.Сертификат
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаСертификатов КАК ВТ_ТаблицаСертификатов
		|	ПО 
		|		ТаблицаЗаработков.Номенклатура = ВТ_ТаблицаСертификатов.Номенклатура
		|
		|{ГДЕ
		|	ТаблицаЗаработков.Менеджер.* КАК МенеджерОтбор}
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацииКТСПомощьПоМенеджерам.Ссылка,
		|	РеализацииКТСПомощьПоМенеджерам.Подразделение,
		|	РеализацииКТСПомощьПоМенеджерам.Менеджер,
		|	РеализацииКТСПомощьПоМенеджерам.Номенклатура,
		|	0,
		|	0,
		|	ВЫБОР
		|		КОГДА РеализацииКТСПомощьПоМенеджерам.ЕстьДолгПоДокументу = ИСТИНА
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(ВТ_РасширенныеНастройкиКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
		|						ТОГДА РеализацииКТСПомощьПоМенеджерам.Сумма * ЕСТЬNULL(ВТ_РасширенныеНастройкиКТСПомощь.ПроцентИсполнения, 0) * 0.01
		|					ИНАЧЕ РеализацииКТСПомощьПоМенеджерам.Сумма * &ПроцентИсполненияУслуги * 0.01
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ * РеализацииКТСПомощьПоМенеджерам.КПП_Склад * РеализацииКТСПомощьПоМенеджерам.Коэфф,
		|	ВЫБОР
		|		КОГДА РеализацииКТСПомощьПоМенеджерам.ЕстьДолгПоДокументу = ЛОЖЬ
		|			ТОГДА ВЫБОР
		|					КОГДА ЕСТЬNULL(ВТ_РасширенныеНастройкиКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
		|						ТОГДА РеализацииКТСПомощьПоМенеджерам.Сумма * ЕСТЬNULL(ВТ_РасширенныеНастройкиКТСПомощь.ПроцентИсполнения, 0) * 0.01
		|					ИНАЧЕ РеализацииКТСПомощьПоМенеджерам.Сумма * &ПроцентИсполненияУслуги * 0.01
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ * РеализацииКТСПомощьПоМенеджерам.КПП_Склад * РеализацииКТСПомощьПоМенеджерам.Коэфф
		|ИЗ
		|	ВТ_РеализацииКТСПомощьПоМенеджерам КАК РеализацииКТСПомощьПоМенеджерам
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РасширенныеНастройкиКТСПомощь КАК ВТ_РасширенныеНастройкиКТСПомощь
		|	ПО 
		|		РеализацииКТСПомощьПоМенеджерам.Номенклатура = ВТ_РасширенныеНастройкиКТСПомощь.Номенклатура
		|ГДЕ
		|	РеализацииКТСПомощьПоМенеджерам.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОкончательныйЗаработок.Ссылка 				КАК Ссылка,
		|	ТаблицаОкончательныйЗаработок.Подразделение 		КАК Подразделение,
		|	ТаблицаОкончательныйЗаработок.Менеджер 				КАК Менеджер,
		|	ТаблицаОкончательныйЗаработок.Номенклатура 			КАК Номенклатура,
		|	ТаблицаОкончательныйЗаработок.Количество 			КАК Количество,
		|	ТаблицаОкончательныйЗаработок.Сумма 				КАК Сумма,
		|	ТаблицаОкончательныйЗаработок.ВозможныйЗаработок 	КАК ВозможныйЗаработок,
		|	ТаблицаОкончательныйЗаработок.ЗаработокМенеджера 	КАК ЗаработокМенеджера
		|ИЗ
		|	ВТ_ТаблицаОкончательныйЗаработок КАК ТаблицаОкончательныйЗаработок";

	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаОсновногоНабораДанных()

#КонецОбласти

#Область СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "2.2.39";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Отчет по заработной плате (розница) ["+Версия+"]");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Отчет по заработной плате (розница) ["+Версия+"]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Отчет по заработной плате (розница) ["+Версия+"]", "ОДП", "ОткрытиеФормы", Ложь, "ОПЗПР");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура СчитатьДокументыНазначений(МассивНазначений)
	
	//Макет = ПолучитьМакет("МакетДокументыНазначений");
	//
	//Для Инд = 1 По Макет.ВысотаТаблицы Цикл
	//	МассивНазначений.Добавить(Макет.Область(Инд,1).Текст);
	//КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры
	
#КонецОбласти 