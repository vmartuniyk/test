
#Область ПрограммныйИнтерфейс

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	УстановитьПривилегированныйРежим(Истина);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ОтчетПоПродажам", ПолучитьТаблицуПродаж());
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки(); 

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);

	Если МакетКомпоновки.НаборыДанных.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru= 'Отчет не сформирован. Включите хотя бы одну группировку в ""Элементы оформления и группировки"".'") ;
	КонецЕсли;
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ГенерированиеНабораДанных

Функция ПолучитьТаблицуПродаж()

	Перем ПроцентПродажыУслуги;
	Перем ПроцентИсполненияУслуги;
	Перем СвойствоПомощьКТС;
	Перем ГруппаСертификаты;
	Перем ПроцентОтПродажыСертификата;
	Перем ВидНоменклатурыСертификаты;
	
	Настройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиПроцентовКТСПомощь", , , "ДополнительныеНастройкиПроцентовКТСПомощь");
	
	Если ТипЗнч(Настройки) <> Тип("Структура") Тогда
		ВызватьИсключение НСтр("ru='Не удалось получить настройки «КТС Помощь». Обратитесь в службу технической поддрежки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
	
	Настройки.Свойство("ПроцентПродажыУслуги", ПроцентПродажыУслуги);
	Настройки.Свойство("ПроцентИсполненияУслуги", ПроцентИсполненияУслуги);
	Настройки.Свойство("СвойствоПомощьКТС", СвойствоПомощьКТС);
	Настройки.Свойство("ГруппаСертификаты", ГруппаСертификаты);
	Настройки.Свойство("ПроцентОтПродажыСертификата", ПроцентОтПродажыСертификата);
	Настройки.Свойство("ВидНоменклатурыСертификаты", ВидНоменклатурыСертификаты);
		
	Если ПроцентПродажыУслуги = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задан процент от продажы услуги «КТС Помощь». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
	
	Если ПроцентИсполненияУслуги = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задан процент от исполнения услуги «КТС Помощь». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
	
	Если СвойствоПомощьКТС = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задано свойство «КТС Помощь». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
			
	Если ПроцентОтПродажыСертификата = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задан процент от продажы сертификата на дополнительное обслужывание. Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
	
	Если ВидНоменклатурыСертификаты = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Вид номенклатуры сертификата на дополнительное обслужывание. Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураОптимизации		= ПолучитьТекстОтбораДляОптимизации();
	ПериодОтчета 				= ПолучитьЗначениеПараметра("ПериодОтчета");
	ТекстЗароса                 = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапросаТаблицаПродаж(), 
																							СтруктураОптимизации.ТекстЗапросаРеализации, 
																							СтруктураОптимизации.ТекстЗапросаВозвраты, 
																							СтруктураОптимизации.ТекстЗапросаКТСПомощь);
	
	Запрос 		 = Новый Запрос;
	Запрос.Текст = ТекстЗароса;
	
	Запрос.УстановитьПараметр("ДатаНачало", ПериодОтчета.ДатаНачала);	
	Запрос.УстановитьПараметр("ДатаОкончание", ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("ВалютаРегламентированогоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВидНоменклатурыСертификаты", ВидНоменклатурыСертификаты);
	Запрос.УстановитьПараметр("ПустаяУпаковка", Справочники.УпаковкиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяКПП", Справочники.КоефициентПриоритетностиНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПроцентОтПродажыСертификата", ПроцентОтПродажыСертификата);
	Запрос.УстановитьПараметр("ВидНоменклатурыСертификаты", ВидНоменклатурыСертификаты);
	Запрос.УстановитьПараметр("ПроцентПродажыУслуги", ПроцентПродажыУслуги);
	Запрос.УстановитьПараметр("ПроцентИсполненияУслуги", ПроцентИсполненияУслуги);
	Запрос.УстановитьПараметр("ПустойПользователь", Справочники.Пользователи.ПустаяСсылка());
	Запрос.УстановитьПараметр("СвойствоПомощьКТС", СвойствоПомощьКТС);
	Запрос.УстановитьПараметр("ВидНоменклатурыКТСПомощь", Справочники.ВидыНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор("91f45981-0c03-11e2-9d4d-001e673c80fc")));
	Запрос.УстановитьПараметр("РозничнаяЦена", Справочники.ВидыЦен.ПолучитьСсылку(Новый УникальныйИдентификатор("8bdf84ff-404c-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("БезналЦена", Справочники.ВидыЦен.ПолучитьСсылку(Новый УникальныйИдентификатор("8bdf8500-404c-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("Подразделение", СтруктураОптимизации.Подразделение);
	Запрос.УстановитьПараметр("Менеджер", СтруктураОптимизации.Менеджер);
		
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьТаблицупоПродажам()

Функция ТекстЗапросаТаблицаПродаж()

	ТекстЗапроса = "
	
			// ПОДГОТОВКА ТАБЛИЦ КУРСОВ ВАЛЮТ ДЛЯ ИСПОЛЬЗОВАНИЯ
	
			|// Курсы валют.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫРАЗИТЬ(КурсыВалют.Курс / КурсыВалют.Кратность КАК ЧИСЛО(15, 4)) КАК Курс,
			|	КурсыВалют.Валюта КАК Валюта,
			|	КурсыВалют.Период КАК Период
			|ПОМЕСТИТЬ КурсыВалют
			|ИЗ
			|	РегистрСведений.КурсыВалют КАК КурсыВалют
			|;
			|
			|// Курсы валют.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|  	КурсыВалют.Курс,
			|  	КурсыВалют.Валюта,
			|  	КурсыВалют.Период КАК НачалоПериода,
			|  	МИНИМУМ(ЕСТЬNULL(КурсыВалютКопия.Период, ДАТАВРЕМЯ(3999, 1, 1))) КАК КонецПериода
			|ПОМЕСТИТЬ ТаблицаКурсов
			|ИЗ
			|  	КурсыВалют КАК КурсыВалют
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалютКопия
			|		ПО КурсыВалютКопия.Период > КурсыВалют.Период
			|			И КурсыВалютКопия.Валюта = КурсыВалют.Валюта
			|			
			|СГРУППИРОВАТЬ ПО
			|  	КурсыВалют.Период,
			|  	КурсыВалют.Курс,
			|  	КурсыВалют.Валюта
			|
			|ИНДЕКСИРОВАТЬ ПО 
			|	КурсыВалют.Валюта
			|;
			
			// ПОДГОТОВКА ДОПОЛНИТЕЛЬНЫХ ТАБЛИЦ ИЗ НОМЕНКЛАТУРОЙ (НОМЕНКЛАТУРА-СЕРТИФИКАТЫ И НОМЕНКЛАТУРА ЗА КОТОРУЮ НАЧИСЛЯЮТ З/П ПРОДАВЦАМ)						
			
			|// Получаем список номенклатура за которую менеджер получает зароботную плату.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Ссылка КАК Номенклатура
			|ПОМЕСТИТЬ КешДопустимаяНоменклатура
			|ИЗ
			|	Справочник.Номенклатура
			|ГДЕ
			|	НЕ ЭтоГруппа
			|	И НЕ ПометкаУдаления
			|	И Родитель В ИЕРАРХИИ (ВЫБРАТЬ ГруппыНоменклатуры ИЗ РегистрСведений.ktcНастройкиЗароботкаМенеджераГруппы)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|// Получаем таблицу номенклатуры сертификатов.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Ссылка КАК Номенклатура
			|ПОМЕСТИТЬ КешСертификаты
			|ИЗ
			|	Справочник.Номенклатура
			|ГДЕ
			|	НЕ ЭтоГруппа
			|	И НЕ ПометкаУдаления
			|	И ВидНоменклатуры = &ВидНоменклатурыСертификаты
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Ссылка КАК Номенклатура
			|ПОМЕСТИТЬ КешНоменклатураКТСПомощь
			|ИЗ
			|	Справочник.Номенклатура
			|ГДЕ
			|	НЕ ЭтоГруппа
			|	И НЕ ПометкаУдаления
			|	И	ВидНоменклатуры = &ВидНоменклатурыКТСПомощь
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			
			
			
			
			// ПОЛУЧАЕМ ДОКУМЕНТЫ ВЫПОЛНЕНИЯ УСЛУГ КТС ПОМОЩЬ
			
			|// Таблица документов, по которым услуги выполнил пользователь
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫРАЗИТЬ(Объект КАК Документ.РеализацияТоваровУслуг) КАК ДокументРеализации,
			|	ВЫРАЗИТЬ(Значение КАК Справочник.Пользователи)		 КАК Менеджер
			|ПОМЕСТИТЬ КешВыполненныеУслуги
			|ИЗ
			|	РегистрСведений.ДополнительныеСведения
			|ГДЕ
			|	Свойство = &СвойствоПомощьКТС
			|	И ВЫРАЗИТЬ(Объект КАК Документ.РеализацияТоваровУслуг).Дата >= &ДатаНачало
			|	И ВЫРАЗИТЬ(Объект КАК Документ.РеализацияТоваровУслуг).Дата <= &ДатаОкончание
			|	%3
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ДокументРеализации
			|;
			|
			|// Получим значения табличных частей
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ВыполненныеУслуги.ДокументРеализации.ЗаказКлиента = ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка)
			|			ТОГДА ВыполненныеУслуги.ДокументРеализации
			|		ИНАЧЕ ВыполненныеУслуги.ДокументРеализации.ЗаказКлиента
			|	КОНЕЦ 																								КАК ЗаказКлиента,
			|	ВыполненныеУслуги.ДокументРеализации.Дата															КАК Дата,
			|	ВыполненныеУслуги.ДокументРеализации 																КАК Ссылка,
			|	ТоварыРеализации.Номенклатура 																		КАК Номенклатура,
			|	ТоварыРеализации.Характеристика 																	КАК Характеристика,
			|	ВЫРАЗИТЬ(ВыполненныеУслуги.ДокументРеализации КАК Документ.РеализацияТоваровУслуг).Склад 			КАК Склад,  // услуги не делают движения по складам
			|	0																									КАК Количество,
			|	ТоварыРеализации.СуммаСНДС																			КАК Сумма,
			|	ВыполненныеУслуги.Менеджер																			КАК Менеджер,
			|	ВыполненныеУслуги.ДокументРеализации.Подразделение													КАК Подразделение
			|ПОМЕСТИТЬ КешТаблицаКТСПомощь
			|ИЗ
			|	КешВыполненныеУслуги КАК ВыполненныеУслуги
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ТоварыРеализации
			|		ПО ВыполненныеУслуги.ДокументРеализации = ТоварыРеализации.Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|// Оставим только номенклатуру «КТС Помощь»
			|ВЫБРАТЬ
			|	ТаблицаКТСПомощь.ЗаказКлиента			КАК ЗаказКлиента,
			|	ТаблицаКТСПомощь.Дата					КАК Дата,
			|	ТаблицаКТСПомощь.Ссылка					КАК Ссылка,
			|	ТаблицаКТСПомощь.Номенклатура			КАК Номенклатура,
			|	ТаблицаКТСПомощь.Характеристика			КАК Характеристика,
			|	ТаблицаКТСПомощь.Склад					КАК Склад,
			|	ТаблицаКТСПомощь.Количество				КАК Количество,
			|	ТаблицаКТСПомощь.Сумма					КАК Сумма,
			|	ТаблицаКТСПомощь.Менеджер				КАК Менеджер,
			|	ТаблицаКТСПомощь.Подразделение			КАК Подразделение
			|ПОМЕСТИТЬ РеализацииКТСПомощь
			|ИЗ
			|	КешТаблицаКТСПомощь КАК ТаблицаКТСПомощь
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешНоменклатураКТСПомощь КАК НоменклатураКТСПомощь
			|		ПО ТаблицаКТСПомощь.Номенклатура = НоменклатураКТСПомощь.Номенклатура
			|;
			
			// ПОЛУЧАЕМ ОСТАТКИ ЗАДОЛЖЕННОСТИ ПО ДОКУМЕНТАМ КЛИЕНТОВ
			|ВЫБРАТЬ
			|	ЗаказКлиента КАК ЗаказКлиента,
			|	СуммаОстаток КАК Сумма
			|ПОМЕСТИТЬ ТаблицаРасчетов
			|ИЗ
			|	РегистрНакопления.РасчетыСКлиентами.Остатки
			|;
			
			
			// ПОДГОТОВКА ТАБЛИЦЫ РЕАЛИЗАЦИЙ И ВОЗВРАТОВ ИЗ НОМЕНКЛАТУРОЙ ДЛЯ ДАЛЬНЕЙШЕЙ ОБРАБОТКИ
			
			|// Отсекаем документы реализации товаров и услуг по дате.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Продажи.Период																КАК Дата,
			|	ВЫРАЗИТЬ(Продажи.Регистратор КАК Документ.РеализацияТоваровУслуг)			КАК Ссылка,
			|	ВЫРАЗИТЬ(Продажи.Регистратор КАК Документ.РеализацияТоваровУслуг).Валюта	КАК Валюта,
			|	Продажи.Подразделение  														КАК Подразделение,
			|	Продажи.Менеджер															КАК Менеджер,
			|	ЕСТЬNULL(ТаблицаРасчетов.Сумма, 0)											КАК ДолгПоДокументу
			|ПОМЕСТИТЬ ТаблицаРеализацийВОтчете
			|ИЗ
			|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&ДатаНачало, &ДатаОкончание, Регистратор, %1) КАК Продажи
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасчетов КАК ТаблицаРасчетов
			|		ПО Продажи.ЗаказКлиента = ТаблицаРасчетов.ЗаказКлиента 
			|ГДЕ
			|	Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка
			|;
			|
			|// Получаем все табличные части документов реализация товаров и услуг, нужно для дальнейшей обработки.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаРеализацийВОтчете.Дата										КАК Дата,
			|	ТаблицаРеализацийВОтчете.Ссылка										КАК Ссылка,
			|	ТаблицаРеализацийВОтчете.Валюта										КАК Валюта,
			|	ТаблицаРеализацийВОтчете.ДолгПоДокументу							КАК ДолгПоДокументу,
			|	ТоварыРеализаций.Номенклатура										КАК Номенклатура,
			|	ТоварыРеализаций.Характеристика										КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ТоварыРеализаций.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
			|			ТОГДА ВЫРАЗИТЬ(ТаблицаРеализацийВОтчете.Ссылка КАК Документ.РеализацияТоваровУслуг).Склад
			|		ИНАЧЕ ТоварыРеализаций.Склад
			|	КОНЕЦ																КАК Склад,
			|	ТаблицаРеализацийВОтчете.Подразделение								КАК Подразделение,
			|	ТаблицаРеализацийВОтчете.Менеджер									КАК Менеджер,
			|	ТоварыРеализаций.Количество											КАК Количество,
			|	ТоварыРеализаций.СуммаСНДС											КАК Сумма,
			|	ТоварыРеализаций.СуммаАвтоматическойСкидки							КАК СуммаАвтоматическойСкидки,
			|	ТоварыРеализаций.СуммаРучнойСкидки									КАК СуммаРучнойСкидки,
			|	ТоварыРеализаций.ВидЦены											КАК ВидЦены
			|ПОМЕСТИТЬ КешТоварыРеализацийОбщие
			|ИЗ
			|	ТаблицаРеализацийВОтчете КАК ТаблицаРеализацийВОтчете
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ТоварыРеализаций
			|		ПО ТаблицаРеализацийВОтчете.Ссылка = ТоварыРеализаций.Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|// Отсекаем только допустимую номенклатуру.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КешТоварыРеализацийОбщие.Дата										КАК Дата,
			|	КешТоварыРеализацийОбщие.Ссылка										КАК Ссылка,
			|	КешТоварыРеализацийОбщие.ДолгПоДокументу							КАК ДолгПоДокументу,
			|	КешТоварыРеализацийОбщие.Номенклатура								КАК Номенклатура,
			|	КешТоварыРеализацийОбщие.Характеристика								КАК Характеристика,
			|	КешТоварыРеализацийОбщие.Склад										КАК Склад,
			|	КешТоварыРеализацийОбщие.Подразделение								КАК Подразделение,
			|	КешТоварыРеализацийОбщие.Менеджер									КАК Менеджер,
			|	КешТоварыРеализацийОбщие.Количество									КАК Количество,
			|	ВЫБОР
			|		КОГДА КешТоварыРеализацийОбщие.Валюта = &ВалютаРегламентированогоУчета
			|			ТОГДА КешТоварыРеализацийОбщие.Сумма
			|		ИНАЧЕ КешТоварыРеализацийОбщие.Сумма * (ТаблицаКурсовРеализаций.Курс / ТаблицаКурсовРегл.Курс)
			|	КОНЕЦ КАК Сумма,
			|	ВЫБОР
			|		КОГДА КешТоварыРеализацийОбщие.Валюта = &ВалютаРегламентированогоУчета
			|			ТОГДА КешТоварыРеализацийОбщие.СуммаАвтоматическойСкидки
			|		ИНАЧЕ КешТоварыРеализацийОбщие.СуммаАвтоматическойСкидки * (ТаблицаКурсовРеализаций.Курс / ТаблицаКурсовРегл.Курс)
			|	КОНЕЦ КАК СуммаАвтоматическойСкидки,
			|	ВЫБОР
			|		КОГДА КешТоварыРеализацийОбщие.Валюта = &ВалютаРегламентированогоУчета
			|			ТОГДА КешТоварыРеализацийОбщие.СуммаРучнойСкидки
			|		ИНАЧЕ КешТоварыРеализацийОбщие.СуммаРучнойСкидки * (ТаблицаКурсовРеализаций.Курс / ТаблицаКурсовРегл.Курс)
			|	КОНЕЦ КАК СуммаРучнойСкидки,
			|	КешТоварыРеализацийОбщие.ВидЦены									КАК ВидЦены
			|ПОМЕСТИТЬ КешТоварыРеализаций
			|ИЗ
			|	КешТоварыРеализацийОбщие КАК КешТоварыРеализацийОбщие
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешДопустимаяНоменклатура КАК ДопустимаяНоменклатура
			|		ПО КешТоварыРеализацийОбщие.Номенклатура = ДопустимаяНоменклатура.Номенклатура
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовРеализаций
			|       ПО КешТоварыРеализацийОбщие.Валюта = ТаблицаКурсовРеализаций.Валюта
			|			И КешТоварыРеализацийОбщие.Дата >= ТаблицаКурсовРеализаций.НачалоПериода
			|			И КешТоварыРеализацийОбщие.Дата < ТаблицаКурсовРеализаций.КонецПериода
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовРегл
			|       ПО ТаблицаКурсовРегл.Валюта = &ВалютаРегламентированогоУчета
			|			И КешТоварыРеализацийОбщие.Дата >= ТаблицаКурсовРегл.НачалоПериода
			|			И КешТоварыРеализацийОбщие.Дата < ТаблицаКурсовРегл.КонецПериода
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура,
			|	Характеристика
			|;
			|
			|// Отсекаем документы возвратом товаров и услуг по дате.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Возвраты.Период																КАК Дата,
			|	ВЫРАЗИТЬ(Возвраты.Регистратор КАК Документ.ВозвратТоваровОтКлиента)			КАК Ссылка,
			|	ВЫРАЗИТЬ(Возвраты.Регистратор КАК Документ.ВозвратТоваровОтКлиента).Валюта	КАК Валюта,
			|	ВЫРАЗИТЬ(Возвраты.Регистратор КАК Документ.ВозвратТоваровОтКлиента).Склад	КАК Склад,
			|	Возвраты.Подразделение       												КАК Подразделение,
			|	Возвраты.Менеджер															КАК Менеджер
			|ПОМЕСТИТЬ ТаблицаВозвратовВОтчете
			|ИЗ
			|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&ДатаНачало, &ДатаОкончание, Регистратор, %2) КАК Возвраты
			|ГДЕ
			|	Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка
			|;
			|
			|// Получаем все табличные части документов возвратов товаров от клиента, нужно для того
			|// чтобы найти реализации на основании которых были проведены возвраты.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаВозвратовВОтчете.Дата															КАК Дата,
			|	ТаблицаВозвратовВОтчете.Ссылка															КАК Ссылка,
			|	ТаблицаВозвратовВОтчете.Валюта															КАК Валюта,
			|	ТоварыВозвратов.Номенклатура															КАК Номенклатура,
			|	ТоварыВозвратов.Характеристика															КАК Характеристика,
			|	ВЫРАЗИТЬ(ТоварыВозвратов.ДокументРеализации КАК Документ.РеализацияТоваровУслуг).Склад	КАК Склад,
			|	ТаблицаВозвратовВОтчете.Подразделение													КАК Подразделение,
			|	ТаблицаВозвратовВОтчете.Менеджер														КАК Менеджер,
			|	ТоварыВозвратов.Количество																КАК Количество,
			|	ТоварыВозвратов.СуммаСНДС																КАК Сумма,
			|	ТоварыВозвратов.ДокументРеализации														КАК ДокументРеализации
			|ПОМЕСТИТЬ КешТоварыВозвратовОбщие
			|ИЗ
			|	ТаблицаВозвратовВОтчете КАК ТаблицаВозвратовВОтчете
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ТоварыВозвратов
			|		ПО ТаблицаВозвратовВОтчете.Ссылка = ТоварыВозвратов.Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|// Отсекаем только допустимую номенклатуру.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КешТоварыВозвратовОбщие.Дата										КАК Дата,
			|	КешТоварыВозвратовОбщие.Ссылка										КАК Ссылка,
			|	КешТоварыВозвратовОбщие.Номенклатура								КАК Номенклатура,
			|	КешТоварыВозвратовОбщие.Характеристика								КАК Характеристика,
			|	КешТоварыВозвратовОбщие.Склад										КАК Склад,
			|	КешТоварыВозвратовОбщие.Подразделение								КАК Подразделение,
			|	КешТоварыВозвратовОбщие.Менеджер									КАК Менеджер,
			|	КешТоварыВозвратовОбщие.Количество									КАК Количество,
			|	ВЫБОР
			|		КОГДА КешТоварыВозвратовОбщие.Ссылка = &ВалютаРегламентированогоУчета
			|			ТОГДА КешТоварыВозвратовОбщие.Сумма
			|		ИНАЧЕ КешТоварыВозвратовОбщие.Сумма * (ТаблицаКурсовВозвратов.Курс / ТаблицаКурсовРегл.Курс)
			|	КОНЕЦ КАК Сумма,
			|	КешТоварыВозвратовОбщие.ДокументРеализации							КАК ДокументРеализации
			|ПОМЕСТИТЬ КешТоварыВозвратов
			|ИЗ
			|	КешТоварыВозвратовОбщие КАК КешТоварыВозвратовОбщие
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешДопустимаяНоменклатура КАК ДопустимаяНоменклатура
			|		ПО КешТоварыВозвратовОбщие.Номенклатура = ДопустимаяНоменклатура.Номенклатура
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовВозвратов
			|       ПО КешТоварыВозвратовОбщие.Валюта = ТаблицаКурсовВозвратов.Валюта
			|			И КешТоварыВозвратовОбщие.Дата >= ТаблицаКурсовВозвратов.НачалоПериода
			|			И КешТоварыВозвратовОбщие.Дата < ТаблицаКурсовВозвратов.КонецПериода
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовРегл
			|       ПО ТаблицаКурсовРегл.Валюта = &ВалютаРегламентированогоУчета
			|			И КешТоварыВозвратовОбщие.Дата >= ТаблицаКурсовРегл.НачалоПериода
			|			И КешТоварыВозвратовОбщие.Дата < ТаблицаКурсовРегл.КонецПериода
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ДокументРеализации,
			|	Номенклатура,
			|	Характеристика,
			|	Склад
			|;
						
			
			
			// ПОДГОТОВКА ТАБЛИЦЫ РОЗНИЧНЫХ ЦЕН НОМЕНКЛАТУРЫ ДЛЯ КОТОРОЙ УСТАНОВЛЕНА ЦЕНА БЕЗНАЛ В ДОКУМЕНТЕ РЕАЛИЗАЦИИ
			
			|// Формируем таблицу номенклатуры которая была продана по безналу.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Номенклатура КАК Номенклатура
			|ПОМЕСТИТЬ ТаблицаНоменклатурыБезнал
			|ИЗ
			|	КешТоварыРеализаций
			|ГДЕ
			|	ВидЦены = &БезналЦена
			|;
			|
			|// Получаем розничные цены номенклактуры которая была продана по безналу.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.Период			КАК Период,
			|	ВложенныйЗапрос.Номенклатура 	КАК Номенклатура,
			|	ВложенныйЗапрос.Цена			КАК Цена
			|ПОМЕСТИТЬ ТаблицаРозничныхЦен
			|ИЗ
			|(
			|	ВЫБРАТЬ
			|		Период			КАК Период,
			|		Номенклатура 	КАК Номенклатура,
			|		ВЫБОР
			|			КОГДА Упаковка = &ПустаяУпаковка
			|				ТОГДА Цена
			|			ИНАЧЕ Цена * Упаковка.Коэффициент
			|		КОНЕЦ КАК Цена
			|	ИЗ
			|		РегистрСведений.ЦеныНоменклатуры
			|	ГДЕ
			|		ВидЦены 		= &РозничнаяЦена
			|		И Период 		>= &ДатаНачало
			|		И Период 		< &ДатаОкончание
			|		
			|	ОБЪЕДИНИТЬ

			|	ВЫБРАТЬ
			|		Период			КАК Период,
			|		Номенклатура 	КАК Номенклатура,
			|		ВЫБОР
			|			КОГДА Упаковка = &ПустаяУпаковка
			|				ТОГДА Цена
			|			ИНАЧЕ Цена * Упаковка.Коэффициент
			|		КОНЕЦ КАК Цена
			|	ИЗ
			|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаНачало, ВидЦены = &РозничнаяЦена)
			|) КАК ВложенныйЗапрос
			|;
			|
			|// Наростающие итоги по розничным ценам, необходимые для того, чтиобы заменить 
			|// цены номенклатуры проданные по безналу.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|  ТаблицаРозничныхЦен.Цена													КАК Цена,
			|  ТаблицаРозничныхЦен.Номенклатура											КАК Номенклатура,
			|  ТаблицаРозничныхЦен.Период 												КАК НачалоПериода,
			|  МИНИМУМ(ЕСТЬNULL(ТаблицаРозничныхЦенКопия.Период, ДАТАВРЕМЯ(3999, 1, 1))) КАК КонецПериода
			|ПОМЕСТИТЬ ТаблицаРозничныхЦенНаростающие
			|ИЗ
			|  ТаблицаРозничныхЦен КАК ТаблицаРозничныхЦен
			|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРозничныхЦен КАК ТаблицаРозничныхЦенКопия
			|	ПО ТаблицаРозничныхЦенКопия.Период		> ТаблицаРозничныхЦен.Период
			|	И ТаблицаРозничныхЦенКопия.Номенклатура = ТаблицаРозничныхЦен.Номенклатура
			|СГРУППИРОВАТЬ ПО
			|  ТаблицаРозничныхЦен.Период,
			|  ТаблицаРозничныхЦен.Цена,
			|  ТаблицаРозничныхЦен.Номенклатура
			|;
			
			
			
			// ПОДГОТОВКА ВОЗВРАТОВ ТОВАРОВ КЛИЕНТУ ДЛЯ ОКОНЧАТЕЛЬНОГО РАСЧЕТА СУММИ
			// НЕОБХОДИМО ПРОАНАЛИЗИРОВАТЬ РЕАЛИЗАЦИИ НА ОСНОВАНИИ КОТОРЫХ БЫЛИ ПРОВЕДЕНЫ ВОЗВРАТЫ
			// НУЖНО ВЫБРАТЬ СООТВЕТСТВЕННЫЕ ВИДЫ ЦЕН И УСТАНОВИТЬ СУММЫ
			
			|// Выбираем какие виды цен были в реализации товаро и услуг, на основании которой был продан товар.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТоварыРеализаций.Ссылка.Дата			КАК ДатаРеализации,
			|	ТоварыРеализаций.Ссылка 				КАК ДокументРеализации,
			|	ТоварыРеализаций.Ссылка.Менеджер 		КАК Менеджер,
			|	ТоварыРеализаций.Ссылка.Подразделение 	КАК Подразделение,
			|	ТоварыРеализаций.ВидЦены 				КАК ВидЦены,
			|	ТоварыРеализаций.Номенклатура 			КАК Номенклатура,
			|	ТоварыРеализаций.Характеристика 		КАК Характеристика,
			|	ТоварыВозвратов.Ссылка					КАК ВозвратТоваров
			|ПОМЕСТИТЬ КешРеализацийПоВозвратам
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Товары КАК ТоварыРеализаций
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешТоварыВозвратов КАК ТоварыВозвратов
			|		ПО ТоварыРеализаций.Ссылка = ВЫРАЗИТЬ(ТоварыВозвратов.ДокументРеализации КАК Документ.РеализацияТоваровУслуг)
			|			И ТоварыРеализаций.Номенклатура = ТоварыВозвратов.Номенклатура
			|			И ТоварыРеализаций.Характеристика = ТоварыВозвратов.Характеристика
			|ИНДЕКСИРОВАТЬ ПО
			|	ДокументРеализации,
			|	Номенклатура,
			|	Характеристика
			|;
			|
			|// Выполняем подстановку видов цен у документ возврата товаров
			|ВЫБРАТЬ
			|	ТоварыВозвратов.Дата															КАК Дата,
			|	ТоварыВозвратов.Ссылка															КАК Ссылка,
			|	ТоварыВозвратов.Номенклатура													КАК Номенклатура,
			|	ТоварыВозвратов.Характеристика													КАК Характеристика,
			|	ТоварыВозвратов.Склад															КАК Склад,
			|	ЕСТЬNULL(РеализацииПоВозвратам.Подразделение, ТоварыВозвратов.Подразделение)	КАК Подразделение,
			|	ЕСТЬNULL(РеализацииПоВозвратам.Менеджер, ТоварыВозвратов.Менеджер)				КАК Менеджер,
			|	ЕСТЬNULL(РеализацииПоВозвратам.ДатаРеализации, ТоварыВозвратов.Дата)			КАК ДатаРеализации,
			|	-ТоварыВозвратов.Количество														КАК Количество,
			|	ВЫБОР
			|		КОГДА РеализацииПоВозвратам.ВидЦены ЕСТЬ NULL
			|			ТОГДА -ТоварыВозвратов.Сумма
			|		КОГДА РеализацииПоВозвратам.ВидЦены = &РозничнаяЦена
			|			ТОГДА -ТоварыВозвратов.Сумма
			|		КОГДА РеализацииПоВозвратам.ВидЦены = &БезналЦена
			|			ТОГДА -ТоварыВозвратов.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Сумма
			|ПОМЕСТИТЬ ТаблицаВозвратовИзСумами
			|ИЗ
			|	КешТоварыВозвратов КАК ТоварыВозвратов
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ КешРеализацийПоВозвратам КАК РеализацииПоВозвратам
			|		ПО ТоварыВозвратов.ДокументРеализации 		= РеализацииПоВозвратам.ДокументРеализации
			|			И ТоварыВозвратов.Ссылка 				= РеализацииПоВозвратам.ВозвратТоваров
			|			И ТоварыВозвратов.Номенклатура 			= РеализацииПоВозвратам.Номенклатура
			|			И ТоварыВозвратов.Характеристика 		= РеализацииПоВозвратам.Характеристика
			|;
			
			// ВЫПОЛНЯЕМ РАСЧЕТ ОКОНЧАТЕЛЬНОЙ СУММЫ КОТОРАЯ ДОЛЖНА СВЕТИТСЯ В ОТЧЕТЕ ПО ДОКУМЕНТАХ РЕАЛИЗАЦИИ
			// РАСЧЕТ СУММЫ ВКЛЮЧАЕТ ОБРАБОТКУ ВИДОВ ЦЕН ТАБЛИЧНОЙ ЧАСТИ:
			// - РОЗНИЦА - ПОЛНОСТЬЮ ПОПАДАЕТ В ОТЧЕТ
			// - БЕЗНАЛ  - ЦЕНА ПЕРЕСЧИТЫВАЕТСЯ В РОЗНИЦУ ПО ЦЕНАМ НА ДАТУ РЕАЛИЗАЦИИ, ЕСЛИ РОЗНИЦЫ НА МОМЕНТ НЕТУ - ПЕРЕСЧЕТ НА ТЕКУЩУЮ ДАТУ
			// - ДРУГОЙ ВИД ЦЕНЫ - 0
			//
			// ТАКЖЕ РАСЧЕТ СУММЫ УЧИТЫВАЕТ РУЧНЫЕ И АВТОМАТИЧЕСКИЕ СКИДКИ
			// ТАКЖЕ РАСЧЕТ СУММЫ УЧИТЫВАЕТ СИТУАЦИЮ КОГДА РЕАЛИЗАЦИЮ ВЫПИСАЛИ НЕ В ВАЛЮТЕ РЕГЛАМЕНТИРОВАНОГО УЧЕТА
			
			|// Если в реализации товаров продано по безнальной цене - выполняем пересчет в розничную.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыРеализаций.Дата										КАК Дата,
			|	ТоварыРеализаций.Ссылка										КАК Ссылка,
			|	ТоварыРеализаций.ДолгПоДокументу							КАК ДолгПоДокументу,
			|	ТоварыРеализаций.Номенклатура								КАК Номенклатура,
			|	ТоварыРеализаций.Характеристика								КАК Характеристика,
			|	ТоварыРеализаций.Склад										КАК Склад,
			|	ТоварыРеализаций.Подразделение								КАК Подразделение,
			|	ТоварыРеализаций.Менеджер									КАК Менеджер,
			|	ТоварыРеализаций.Количество									КАК Количество,
			|	ВЫБОР
			|		КОГДА ТоварыРеализаций.ВидЦены = &РозничнаяЦена
			|			ТОГДА ТоварыРеализаций.Сумма
			|		КОГДА ТоварыРеализаций.ВидЦены = &БезналЦена
			|			ТОГДА (ТоварыРеализаций.Количество * ЕСТЬNULL(ТаблицаРозничныхЦен.Цена, 0)) 
			|						+ (ТоварыРеализаций.Количество * ЕСТЬNULL(ТаблицаРозничныхЦен.Цена, 0)) * ТоварыРеализаций.СуммаАвтоматическойСкидки / ТоварыРеализаций.Сумма
			|						+ (ТоварыРеализаций.Количество * ЕСТЬNULL(ТаблицаРозничныхЦен.Цена, 0)) * ТоварыРеализаций.СуммаРучнойСкидки / ТоварыРеализаций.Сумма
			|		ИНАЧЕ 0 
			|	КОНЕЦ КАК Сумма
			|ПОМЕСТИТЬ ТаблицаРеализацийИзСумами
			|ИЗ
			|	КешТоварыРеализаций КАК ТоварыРеализаций
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРозничныхЦенНаростающие КАК ТаблицаРозничныхЦен
			|		ПО ТоварыРеализаций.Номенклатура = ТаблицаРозничныхЦен.Номенклатура
			|			И ТоварыРеализаций.Дата >= ТаблицаРозничныхЦен.НачалоПериода
			|			И ТоварыРеализаций.Дата < ТаблицаРозничныхЦен.КонецПериода
			|;
			|
			|// Сводная таблица реализаций и возвратов.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Дата						КАК Дата,
			|	Дата						КАК ДатаРеализации,
			|	Ссылка						КАК Ссылка,
			|	Номенклатура				КАК Номенклатура,
			|	Характеристика				КАК Характеристика,
			|	Склад						КАК Склад,
			|	Подразделение				КАК Подразделение,
			|	Менеджер					КАК Менеджер,
			|	Количество					КАК Количество,
			|	Сумма						КАК Сумма,
			|	ДолгПоДокументу				КАК ДолгПоДокументу
			|ПОМЕСТИТЬ СводнаяТаблицаПредварительная
			|ИЗ
			|	ТаблицаРеализацийИзСумами
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Дата						КАК Дата,
			|	ДатаРеализации				КАК ДатаРеализации,
			|	Ссылка						КАК Ссылка,
			|	Номенклатура				КАК Номенклатура,
			|	Характеристика				КАК Характеристика,
			|	Склад						КАК Склад,
			|	Подразделение				КАК Подразделение,
			|	Менеджер					КАК Менеджер,
			|	Количество					КАК Количество,
			|	Сумма						КАК Сумма,
			|	0							КАК ДолгПоДокументу
			|ИЗ
			|	ТаблицаВозвратовИзСумами
			|;
			
			
			// ПОЛУЧАЕМ ЗНАЧЕНИЯ КПП ДЛЯ ПОЗИЦЫЙ НОМЕНКЛАТУРЫ
			
			|ВЫБРАТЬ
			|	РегистрКПП.Период 			КАК Период,
			|	РегистрКПП.Номенклатура 	КАК Номенклатура,
			|	РегистрКПП.Значение 		КАК Значение
			|ПОМЕСТИТЬ КПППоНоменклатуре
			|ИЗ
			|	РегистрСведений.КПП_Розница_ЗначениеКоефициентаПриоритетностиПродаж КАК РегистрКПП
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СводнаяТаблицаПредварительная КАК ТаблицаНоменклатуры
			|		ПО РегистрКПП.Номенклатура = ТаблицаНоменклатуры.Номенклатура
			//|ГДЕ
			//|	РегистрКПП.Период >= &ДатаНачало И РегистрКПП.Период < &ДатаОкончание
			|;
			|
			|ВЫБРАТЬ
			|  	КПППоНоменклатуре.Значение			КАК КПП,
			|  	КПППоНоменклатуре.Номенклатура		КАК Номенклатура,  
			|  	КПППоНоменклатуре.Период 			КАК НачалоПериода,
			|  	МИНИМУМ(ЕСТЬNULL(КПППоНоменклатуреКопия.Период, ДАТАВРЕМЯ(3999, 1, 1))) КАК КонецПериода
			|ПОМЕСТИТЬ КПППоНоменклатуреНаростающие
			|ИЗ
			|  	КПППоНоменклатуре КАК КПППоНоменклатуре
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ КПППоНоменклатуре КАК КПППоНоменклатуреКопия
			|		ПО КПППоНоменклатуреКопия.Период > КПППоНоменклатуре.Период
			|			И КПППоНоменклатуреКопия.Номенклатура = КПППоНоменклатуре.Номенклатура
			|			
			|СГРУППИРОВАТЬ ПО
			|  	КПППоНоменклатуре.Значение,
			|  	КПППоНоменклатуре.Номенклатура,  
			|  	КПППоНоменклатуре.Период
			|;
			
			
			// ПОЛУЧАЕМ КОЭФФИЦИЕНТЫ КПП ДЛЯ ВИДОВ НОМЕНКЛАТУРЫ
			|
			|ВЫБРАТЬ
			|	Период				КАК Период,
			|	ВидНоменклатуры 	КАК ВидНоменклатуры,
			|	КПП 				КАК КПП,
			|	Значение 			КАК Значение
			|ПОМЕСТИТЬ КПППоВидуНоменклатурыПредварительная
			|ИЗ
			|	РегистрСведений.КПП_КоэффициентыПриоритетностиПоВидуНоменклатурыРозница
			//|ГДЕ
			//|	Период >= &ДатаНачало И Период < &ДатаОкончание
			|;
			|
			|ВЫБРАТЬ
			|  	КПППредварительная.Значение			КАК Значение,
			|  	КПППредварительная.ВидНоменклатуры	КАК ВидНоменклатуры, 
			|  	КПППредварительная.КПП				КАК КПП, 
			|  	КПППредварительная.Период 			КАК НачалоПериода,
			|  	МИНИМУМ(ЕСТЬNULL(КППКопия.Период, ДАТАВРЕМЯ(3999, 1, 1))) КАК КонецПериода
			|ПОМЕСТИТЬ КПППоВидуНоменклатуры
			|ИЗ
			|  	КПППоВидуНоменклатурыПредварительная КАК КПППредварительная
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ КПППоВидуНоменклатурыПредварительная КАК КППКопия
			|		ПО КППКопия.Период > КПППредварительная.Период
			|			И КППКопия.ВидНоменклатуры = КПППредварительная.ВидНоменклатуры
			|			И КППКопия.КПП = КПППредварительная.КПП
			|			
			|СГРУППИРОВАТЬ ПО
			|  	КПППредварительная.Значение,
			|  	КПППредварительная.ВидНоменклатуры, 
			|  	КПППредварительная.КПП, 
			|  	КПППредварительная.Период
			|;
				
			
			// ПОЛУЧАЕМ РЕЛИЗАЦИИ СЕРТИФИКАТОВ НА ДОПОЛНИТЕЛЬНОЕ ОБСЛУЖИВАНИЕ
			
			|ВЫБРАТЬ
			|	ТоварыРеализаций.Дата						КАК Дата,
			|	ТоварыРеализаций.Ссылка						КАК Ссылка,
			|	ТоварыРеализаций.Номенклатура				КАК Номенклатура,
			|	ТоварыРеализаций.Характеристика				КАК Характеристика,
			|	ТоварыРеализаций.Склад						КАК Склад,
			|	ТоварыРеализаций.Подразделение				КАК Подразделение,
			|	ТоварыРеализаций.Менеджер					КАК Менеджер,
			|	ТоварыРеализаций.Количество					КАК Количество,
			|	ТоварыРеализаций.Сумма						КАК Сумма,
			|	ТоварыРеализаций.ДолгПоДокументу			КАК ДолгПоДокументу
			|ПОМЕСТИТЬ РеализацииСертификатов
			|ИЗ
			|	КешТоварыРеализацийОбщие КАК ТоварыРеализаций
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешСертификаты КАК КешСертификаты
			|		ПО ТоварыРеализаций.Номенклатура = КешСертификаты.Номенклатура
			|;
			|
			|ВЫБРАТЬ
			|	ТоварыВозвратов.Дата						КАК Дата,
			|	ТоварыВозвратов.Ссылка						КАК Ссылка,
			|	ТоварыВозвратов.Номенклатура				КАК Номенклатура,
			|	ТоварыВозвратов.Характеристика				КАК Характеристика,
			|	ТоварыВозвратов.Склад						КАК Склад,
			|	ТоварыВозвратов.Подразделение				КАК Подразделение,
			|	ТоварыВозвратов.Менеджер					КАК Менеджер,
			|	-ТоварыВозвратов.Количество					КАК Количество,
			|	-ТоварыВозвратов.Сумма						КАК Сумма
			|ПОМЕСТИТЬ ВозвратыСертификатов
			|ИЗ
			|	КешТоварыВозвратовОбщие КАК ТоварыВозвратов
			|
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешСертификаты КАК КешСертификаты
			|		ПО ТоварыВозвратов.Номенклатура = КешСертификаты.Номенклатура
			|;
			
			
			// ПОЛУЧАЕМ СВОДНУЮ ТАБЛИЦУ ИЗ ЗНАЧЕНИЕЯМИ КПП, УСТАНОВЛЕННЫМИ НА ОПРЕДЕЛЕННЫЕ ДАТЫ
			
			|ВЫБРАТЬ
			|	ТаблицаДокументов.Дата						КАК Дата,
			|	ТаблицаДокументов.ДатаРеализации			КАК ДатаРеализации,
			|	ТаблицаДокументов.Ссылка					КАК Ссылка,
			|	ТаблицаДокументов.Номенклатура				КАК Номенклатура,
			|	ТаблицаДокументов.Характеристика			КАК Характеристика,
			|	ТаблицаДокументов.Склад						КАК Склад,
			|	ТаблицаДокументов.Подразделение				КАК Подразделение,
			|	ТаблицаДокументов.Менеджер					КАК Менеджер,
			|	ТаблицаДокументов.Количество				КАК Количество,
			|	ТаблицаДокументов.Сумма						КАК Сумма,
			|	ТаблицаДокументов.ДолгПоДокументу			КАК ДолгПоДокументу,
			|	ЕСТЬNULL(КППНоменклатура.КПП, &ПустаяКПП)	КАК КПП
			|ПОМЕСТИТЬ СводнаяТаблица
			|ИЗ
			|	СводнаяТаблицаПредварительная КАК ТаблицаДокументов
			|		ЛЕВОЕ СОЕДИНЕНИЕ КПППоНоменклатуреНаростающие КАК КППНоменклатура
			|		ПО ТаблицаДокументов.Номенклатура = КППНоменклатура.Номенклатура
			|			И ТаблицаДокументов.Дата >= КППНоменклатура.НачалоПериода
			|			И ТаблицаДокументов.Дата < КППНоменклатура.КонецПериода
			|;
			|
			|ВЫБРАТЬ
			|	ТаблицаДокументов.Дата						КАК Дата,
			|	ТаблицаДокументов.Ссылка					КАК Ссылка,
			|	ТаблицаДокументов.Номенклатура				КАК Номенклатура,
			|	ТаблицаДокументов.Характеристика			КАК Характеристика,
			|	ТаблицаДокументов.Склад						КАК Склад,
			|	ТаблицаДокументов.Подразделение				КАК Подразделение,
			|	ТаблицаДокументов.Менеджер					КАК Менеджер,
			|	ТаблицаДокументов.Количество				КАК Количество,
			|	ТаблицаДокументов.Сумма						КАК Сумма,
			|	ВЫБОР
			|		КОГДА ТаблицаДокументов.ДолгПоДокументу > 0
			|			ТОГДА
			|				ВЫБОР
			|					КОГДА НоменклатураКТСПомощь.Номенклатура ЕСТЬ NULL
			|						ТОГДА 
			|							ТаблицаДокументов.Сумма 
			|								* ЕСТЬNULL(КПППоВидуНоменклатуры.Значение * 0.01, 0) 
			|								* ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) 
			|								* ВЫБОР
			|									КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
			|										ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
			|									ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
			|			  		 			 КОНЕЦ
			|					ИНАЧЕ ТаблицаДокументов.Сумма *
			|									(ВЫБОР
			|										КОГДА КТСПомощь.Номенклатура ЕСТЬ NULL 
			|											ТОГДА &ПроцентПродажыУслуги 
			|										ИНАЧЕ КТСПомощь.ПроцентПродажы
			|									КОНЕЦ * 0.01)
			|									* ВЫБОР
			|											КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
			|												ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
			|											ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
			|			  		 			 		КОНЕЦ
			|				КОНЕЦ 
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ВозможныйЗароботок,
			|	ВЫБОР
			|		КОГДА ТаблицаДокументов.ДолгПоДокументу <= 0
			|			ТОГДА 
			|				ВЫБОР
			|					КОГДА НоменклатураКТСПомощь.Номенклатура ЕСТЬ NULL
			|						ТОГДА 
			|							ТаблицаДокументов.Сумма 
			|								* ЕСТЬNULL(КПППоВидуНоменклатуры.Значение * 0.01, 0) 
			|								* ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) 
			|								* ВЫБОР
			|									КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
			|										ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
			|									ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
			|			  		 			 КОНЕЦ
			|					ИНАЧЕ ТаблицаДокументов.Сумма *
			|									(ВЫБОР
			|										КОГДА КТСПомощь.Номенклатура ЕСТЬ NULL 
			|											ТОГДА &ПроцентПродажыУслуги 
			|										ИНАЧЕ КТСПомощь.ПроцентПродажы
			|									КОНЕЦ * 0.01)
			|									* ВЫБОР
			|											КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
			|												ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
			|											ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
			|			  		 			 		КОНЕЦ

			|				КОНЕЦ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Заработок
			|ИЗ
			|	СводнаяТаблица КАК ТаблицаДокументов
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ КПППоВидуНоменклатуры КАК КПППоВидуНоменклатуры
			|		ПО ТаблицаДокументов.Номенклатура.ВидНоменклатуры = КПППоВидуНоменклатуры.ВидНоменклатуры
			|			И ТаблицаДокументов.КПП	= КПППоВидуНоменклатуры.КПП
			|			И ТаблицаДокументов.ДатаРеализации >= КПППоВидуНоменклатуры.НачалоПериода
			|			И ТаблицаДокументов.ДатаРеализации < КПППоВидуНоменклатуры.КонецПериода
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
			|		ПО ТаблицаДокументов.Дата >= ЗаработокМенеджераМножительПоМесяцам.НачалоПериода
			|			И ТаблицаДокументов.Дата < КОНЕЦПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.КонецПериода, ДЕНЬ)
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераВыполнениеПлана КАК ЗаработокМенеджераВыполнениеПлана
			|		ПО ТаблицаДокументов.Дата >= ЗаработокМенеджераВыполнениеПлана.НачалоПериода
			|			И ТаблицаДокументов.Дата < КОНЕЦПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.КонецПериода, ДЕНЬ)
			|			И ТаблицаДокументов.Склад = ЗаработокМенеджераВыполнениеПлана.Склад
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ КешНоменклатураКТСПомощь КАК НоменклатураКТСПомощь
			|		ПО ТаблицаДокументов.Номенклатура = НоменклатураКТСПомощь.Номенклатура
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КТСПомощь КАК КТСПомощь
			|		ПО ТаблицаДокументов.Номенклатура = КТСПомощь.Номенклатура
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	РеализацииСертификатов.Дата						КАК Дата,
			|	РеализацииСертификатов.Ссылка					КАК Ссылка,
			|	РеализацииСертификатов.Номенклатура				КАК Номенклатура,
			|	РеализацииСертификатов.Характеристика			КАК Характеристика,
			|	РеализацииСертификатов.Склад					КАК Склад,
			|	РеализацииСертификатов.Подразделение			КАК Подразделение,
			|	РеализацииСертификатов.Менеджер					КАК Менеджер,
			|	РеализацииСертификатов.Количество				КАК Количество,
			|	РеализацииСертификатов.Сумма					КАК Сумма,
			|	ВЫБОР
			|		КОГДА РеализацииСертификатов.ДолгПоДокументу > 0 
			|			ТОГДА РеализацииСертификатов.Сумма * &ПроцентОтПродажыСертификата * 0.01
			|				* ВЫБОР
			|					КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
			|						ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
			|				  	ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
			|			  	  КОНЕЦ 
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ВозможныйЗароботок,
			|	ВЫБОР
			|		КОГДА РеализацииСертификатов.ДолгПоДокументу <= 0 
			|			ТОГДА РеализацииСертификатов.Сумма * &ПроцентОтПродажыСертификата * 0.01
			|				* ВЫБОР
			|					КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
			|						ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
			|				  	ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
			|			  	  КОНЕЦ 
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Зароботок
			|ИЗ
			|	РеализацииСертификатов КАК РеализацииСертификатов
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераВыполнениеПлана КАК ЗаработокМенеджераВыполнениеПлана
			|		ПО РеализацииСертификатов.Дата >= ЗаработокМенеджераВыполнениеПлана.НачалоПериода
			|			И РеализацииСертификатов.Дата < КОНЕЦПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.КонецПериода, ДЕНЬ)
			|			И РеализацииСертификатов.Склад = ЗаработокМенеджераВыполнениеПлана.Склад
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
			|		ПО РеализацииСертификатов.Дата >= ЗаработокМенеджераМножительПоМесяцам.НачалоПериода
			|			И РеализацииСертификатов.Дата < КОНЕЦПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.КонецПериода, ДЕНЬ)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ВозвратыСертификатов.Дата						КАК Дата,
			|	ВозвратыСертификатов.Ссылка						КАК Ссылка,
			|	ВозвратыСертификатов.Номенклатура				КАК Номенклатура,
			|	ВозвратыСертификатов.Характеристика				КАК Характеристика,
			|	ВозвратыСертификатов.Склад						КАК Склад,
			|	ВозвратыСертификатов.Подразделение				КАК Подразделение,
			|	ВозвратыСертификатов.Менеджер					КАК Менеджер,
			|	ВозвратыСертификатов.Количество					КАК Количество,
			|	ВозвратыСертификатов.Сумма						КАК Сумма,
			|	0 												КАК ВозможныйЗароботок,
			|	ВозвратыСертификатов.Сумма * &ПроцентОтПродажыСертификата * 0.01
			|									* ВЫБОР
			|										КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
			|											ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
			|										ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
			|									  КОНЕЦ 	    КАК Зароботок
			|ИЗ
			|	ВозвратыСертификатов КАК ВозвратыСертификатов
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераВыполнениеПлана КАК ЗаработокМенеджераВыполнениеПлана
			|		ПО ВозвратыСертификатов.Дата >= ЗаработокМенеджераВыполнениеПлана.НачалоПериода
			|			И ВозвратыСертификатов.Дата < КОНЕЦПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.КонецПериода, ДЕНЬ)
			|			И ВозвратыСертификатов.Склад = ЗаработокМенеджераВыполнениеПлана.Склад
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
			|		ПО ВозвратыСертификатов.Дата >= ЗаработокМенеджераМножительПоМесяцам.НачалоПериода
			|			И ВозвратыСертификатов.Дата < КОНЕЦПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.КонецПериода, ДЕНЬ)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			| 
			|ВЫБРАТЬ
			|	РеализацииКТСПомощь.Дата						КАК Дата,
			|	РеализацииКТСПомощь.Ссылка						КАК Ссылка,
			|	РеализацииКТСПомощь.Номенклатура				КАК Номенклатура,
			|	РеализацииКТСПомощь.Характеристика				КАК Характеристика,
			|	РеализацииКТСПомощь.Склад						КАК Склад,
			|	РеализацииКТСПомощь.Подразделение				КАК Подразделение,
			|	РеализацииКТСПомощь.Менеджер					КАК Менеджер,
			|	0												КАК Количество,
			|	ВЫБОР
			|		КОГДА РеализацииКТСПомощь.Менеджер = ВЫРАЗИТЬ(РеализацииКТСПомощь.Ссылка КАК Документ.РеализацияТоваровУслуг).Менеджер
			|			ТОГДА 0
			|		ИНАЧЕ РеализацииКТСПомощь.Сумма
			|	КОНЕЦ 											КАК Сумма,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ТаблицаРасчетов.Сумма, 0) > 0 
			|			ТОГДА РеализацииКТСПомощь.Сумма *
			|									ВЫБОР
			|										КОГДА КТСПомощь.Номенклатура ЕСТЬ NULL 
			|											ТОГДА &ПроцентИсполненияУслуги 
			|										ИНАЧЕ КТСПомощь.ПроцентИсполнения
			|									КОНЕЦ * 0.01
			|									* ВЫБОР
			|										КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
			|											ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
			|										ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
			|									  КОНЕЦ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ВозможныйЗароботок,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ТаблицаРасчетов.Сумма, 0) <= 0 
			|			ТОГДА РеализацииКТСПомощь.Сумма *
			|									ВЫБОР
			|										КОГДА КТСПомощь.Номенклатура ЕСТЬ NULL 
			|											ТОГДА &ПроцентИсполненияУслуги 
			|										ИНАЧЕ КТСПомощь.ПроцентИсполнения
			|									КОНЕЦ * 0.01
			|									* ВЫБОР
			|										КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL 
			|											ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
			|										ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
			|									  КОНЕЦ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Зароботок
			|ИЗ
			|	РеализацииКТСПомощь КАК РеализацииКТСПомощь
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасчетов КАК ТаблицаРасчетов
			|		ПО РеализацииКТСПомощь.Ссылка = ТаблицаРасчетов.ЗаказКлиента
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КТСПомощь КАК КТСПомощь
			|		ПО РеализацииКТСПомощь.Номенклатура = КТСПомощь.Номенклатура
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераВыполнениеПлана КАК ЗаработокМенеджераВыполнениеПлана
			|		ПО РеализацииКТСПомощь.Дата >= ЗаработокМенеджераВыполнениеПлана.НачалоПериода
			|			И РеализацииКТСПомощь.Дата < КОНЕЦПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.КонецПериода, ДЕНЬ)
			|			И РеализацииКТСПомощь.Склад = ЗаработокМенеджераВыполнениеПлана.Склад
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
			|		ПО РеализацииКТСПомощь.Дата >= ЗаработокМенеджераМножительПоМесяцам.НачалоПериода
			|			И РеализацииКТСПомощь.Дата < КОНЕЦПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.КонецПериода, ДЕНЬ)";
			
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаТаблицаПродаж()
 
#КонецОбласти 

#Область СхемаКомпановкиДанных

Функция ПолучитьЗначениеПараметра(ИмяПараметра)
	
	ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
   	Если ПараметрДанных <> Неопределено Тогда
    	ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
   		Если ПараметрПользовательскойНастройки <> Неопределено Тогда
			Возврат ПараметрПользовательскойНастройки.Значение;
     	Иначе
       		Возврат ПараметрДанных.Значение;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции

Функция ПолучитьТекстОтбораДляОптимизации()

	СтруктураОптимизации = Новый Структура("ТекстЗапросаРеализации, ТекстЗапросаВозвраты, Менеджер, Подразделение, ТекстЗапросаКТСПомощь", "", "");
	
	ПользовательскиеНастройки 	= КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;	
	ОтборМенеджер 				= ПользовательскиеНастройки.Найти("4d0cac36-4b51-401c-a890-4f614d3845b7");
	ОтборПодразделение			= ПользовательскиеНастройки.Найти("fa5d3ce1-dde7-4fc4-8642-ee7d34574579");
	
	Если ОтборПодразделение <> Неопределено Тогда
		Если ОтборПодразделение.Использование Тогда
			СтруктураОптимизации.ТекстЗапросаРеализации	= ПолучитьКонструкциюОтбора(ОтборПодразделение.ВидСравнения, "Подразделение");
			СтруктураОптимизации.Подразделение = ОтборПодразделение.ПравоеЗначение;
		Иначе
			СтруктураОптимизации.ТекстЗапросаРеализации = "Подразделение В (ВЫБРАТЬ Подразделение ИЗ РегистрСведений.ktcНастройкиЗароботкаМенеджераВидыЦен)";
		КонецЕсли;
	Иначе
		СтруктураОптимизации.ТекстЗапросаРеализации = "Подразделение В (ВЫБРАТЬ Подразделение ИЗ РегистрСведений.ktcНастройкиЗароботкаМенеджераВидыЦен)";
	КонецЕсли;
	
	СтруктураОптимизации.ТекстЗапросаВозвраты = СтруктураОптимизации.ТекстЗапросаРеализации;
	
	Если ОтборМенеджер <> Неопределено Тогда
		Если ОтборМенеджер.Использование Тогда
			СтруктураОптимизации.ТекстЗапросаРеализации = СтруктураОптимизации.ТекстЗапросаРеализации + ПолучитьКонструкциюОтбора(ОтборМенеджер.ВидСравнения, "Менеджер", " И ");
			СтруктураОптимизации.Менеджер				= ОтборМенеджер.ПравоеЗначение;
			СтруктураОптимизации.ТекстЗапросаКТСПомощь  = " И ВЫРАЗИТЬ(Значение КАК Справочник.Пользователи) = &Менеджер";
		Иначе
			СтруктураОптимизации.ТекстЗапросаКТСПомощь  = " И ВЫРАЗИТЬ(Значение КАК Справочник.Пользователи) <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
		КонецЕсли;
	Иначе
		СтруктураОптимизации.ТекстЗапросаКТСПомощь  = " И ВЫРАЗИТЬ(Значение КАК Справочник.Пользователи) <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)";
	КонецЕсли;
		
	Возврат СтруктураОптимизации;

КонецФункции // ПолучитьТекстОтбораДляОптимизации()

Функция ПолучитьКонструкциюОтбора(ВидСравнения, ИмяПараметра, ОператорУсловия = "")

	ТекстЗапроса = "";
	
	Если ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
		ТекстЗапроса = ОператорУсловия + ИмяПараметра + " = &" + ИмяПараметра;
	ИначеЕсли ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Тогда
		ТекстЗапроса = ОператорУсловия + ИмяПараметра + " <> &" + ИмяПараметра;
	ИначеЕсли ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
		ТекстЗапроса = ОператорУсловия + ИмяПараметра + " В (&" + ИмяПараметра + ")";
	ИначеЕсли ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии Тогда
		ТекстЗапроса = ОператорУсловия + ИмяПараметра + " В ИЕРАРХИИ(&" + ИмяПараметра + ")";
	ИначеЕсли ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии Тогда
		ТекстЗапроса = ОператорУсловия + ИмяПараметра + " В ИЕРАРХИИ(&" + ИмяПараметра + ")";
	ИначеЕсли ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке Тогда
		ТекстЗапроса = ОператорУсловия + ИмяПараметра + " НЕ В(&" + ИмяПараметра + ")";
	ИначеЕсли ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии Тогда
		ТекстЗапроса = ОператорУсловия + ИмяПараметра + " НЕ В ИЕРАРХИИ(&" + ИмяПараметра + ")";
	ИначеЕсли ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
		ТекстЗапроса = ОператорУсловия + ИмяПараметра + " НЕ В ИЕРАРХИИ(&" + ИмяПараметра + ")";
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьКонструкциюОтбора()
 
	
#КонецОбласти 

#Область НастройкиКТСПомощь

Функция ПолучитьНастройкиКТСПомощь()

	

КонецФункции // ПолучитьНастройкиКТСПомощь()

#КонецОбласти 

#КонецОбласти

#Область СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "1.0.22";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Отчет по заработной плате (розница) ["+Версия+"]");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Отчет по заработной плате (розница) ["+Версия+"]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Отчет по заработной плате (розница) ["+Версия+"]", "ОДП", "ОткрытиеФормы", Ложь, "ОПЗПР");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
КонецФункции

Процедура СчитатьДокументыНазначений(МассивНазначений)
	
	//Макет = ПолучитьМакет("МакетДокументыНазначений");
	//
	//Для Инд = 1 По Макет.ВысотаТаблицы Цикл
	//	МассивНазначений.Добавить(Макет.Область(Инд,1).Текст);
	//КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры
	
#КонецОбласти 