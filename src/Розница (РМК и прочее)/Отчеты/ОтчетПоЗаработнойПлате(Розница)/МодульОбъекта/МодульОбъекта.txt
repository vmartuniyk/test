
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	СтандартнаяОбработка = Ложь;
	
	ТекстЗапроса = ТекстЗапросаОсновногоНабораДанных();
	СформироватьОтчетПрограммно(ТекстЗапроса, ДанныеРасшифровки, ДокументРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьОтчетПрограммно(ТекстЗапроса, ДанныеРасшифровки, ДокументРезультат)
		
	НаборыДанных 	= СхемаКомпоновкиДанных.НаборыДанных;
	ОсновнойНабор   = НаборыДанных.Найти("НаборДанных1");
	
	Если ОсновнойНабор = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Отчет сломался. Сообщите в службу поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	ОсновнойНабор.Запрос = ТекстЗапроса;
	
	УстановитьПараметрыКомпоновкиДанных(КомпоновщикНастроек);
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки, , , Ложь);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры

Процедура УстановитьПараметрыКомпоновкиДанных(КомпоновщикНастроек)

	ПараметрыДанных 	= КомпоновщикНастроек.Настройки.ПараметрыДанных;
	НастройкиКТСПомощь  = ПолучитьНастройкиКТСПомощь();
	
	ВидНоменклатурыКТСПомощь	= Справочники.ВидыНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор("91f45981-0c03-11e2-9d4d-001e673c80fc"));
	УстановитьЗначениеПараметраКомпоновкиДанных("ВидНоменклатурыКТСПомощь", ВидНоменклатурыКТСПомощь, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ПроцентПродажыУслуги", НастройкиКТСПомощь.ПроцентПродажыУслуги, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ПроцентИсполненияУслуги", НастройкиКТСПомощь.ПроцентИсполненияУслуги, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ВидНоменклатурыСертификат", НастройкиКТСПомощь.ВидНоменклатурыСертификаты, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ПроцентОтПродажыСертификата", НастройкиКТСПомощь.ПроцентОтПродажыСертификата, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("СвойствоПомощьКТС", НастройкиКТСПомощь.СвойствоПомощьКТС, ПараметрыДанных);

КонецПроцедуры

Процедура УстановитьЗначениеПараметраКомпоновкиДанных(ИмяПараметра, ЗначениеПараметра, ПараметрыДанных)

	Параметр = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	
	Если Параметр = Неопределено Тогда
		ТекстСообщения = НСтр("ru='Не удалось получить параметр «%1». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ИмяПараметра);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметр.Значение 		= ЗначениеПараметра;
	Параметр.Использование  = Истина;

КонецПроцедуры
 
Функция ПолучитьНастройкиКТСПомощь()

	Настройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиПроцентовКТСПомощь", , , "ДополнительныеНастройкиПроцентовКТСПомощь");
	
	Если ТипЗнч(Настройки) <> Тип("Структура") Тогда
		ВызватьИсключение НСтр("ru='Не удалось прочитать настройки «КТС Помощь». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Не Настройки.Свойство("СвойствоПомощьКТС") Тогда
		ВызватьИсключение НСтр("ru='Не установлено свойство «СвойствоПомощьКТС». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Не Настройки.Свойство("ПроцентПродажыУслуги") Тогда
		ВызватьИсключение НСтр("ru='Не установлено свойство «ПроцентПродажыУслуги». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Не Настройки.Свойство("ПроцентИсполненияУслуги") Тогда
		ВызватьИсключение НСтр("ru='Не установлено свойство «ПроцентИсполненияУслуги». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Не Настройки.Свойство("ВидНоменклатурыСертификаты") Тогда
		ВызватьИсключение НСтр("ru='Не установлено свойство «ВидНоменклатурыСертификаты». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Не Настройки.Свойство("ПроцентОтПродажыСертификата") Тогда
		ВызватьИсключение НСтр("ru='Не установлено свойство «ПроцентОтПродажыСертификата». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Возврат Настройки;

КонецФункции // ПолучитьНастройкиКТСПомощь()

Функция ТекстЗапросаОсновногоНабораДанных()

	ТекстЗапроса = "
				   	|ВЫБРАТЬ
					|	ЗаказКлиента КАК ЗаказКлиента,
					|	СуммаОстаток КАК Сумма
					|ПОМЕСТИТЬ ДолгиПоЗаказам
					|ИЗ
					|	РегистрНакопления.РасчетыСКлиентами.Остатки({&ДатаОкончания}, )
					|ГДЕ
					|	СуммаОстаток > 0
					|;
					|
					|ВЫБРАТЬ
					|	ЗаказКлиента 				КАК ЗаказКлиента,
					|	СуммаОстаток 				КАК Сумма
					|ПОМЕСТИТЬ ВТ_ДолгиПоЗаказамНаНачалоПериода
					|ИЗ
					|	РегистрНакопления.РасчетыСКлиентами.Остатки({&ДатаНачала}, )
					|ГДЕ
					|	СуммаОстаток > 0 И ЗаказКлиента.Дата >= ДАТАВРЕМЯ(2015, 1, 1)
					|;
					|
					// Так как одна реализация может быть на основании нескольких заказов клиента
					// нужно проверить есть ли хотябы обин не оплаченный заказ клиента.
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг) КАК Документ,
					|	ИСТИНА													  КАК ЕстьДолгПоДокументу
					|ПОМЕСТИТЬ ДолгиПоРеализациям
					|ИЗ
					|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(,, Регистратор, ЗаказКлиента В (ВЫБРАТЬ ЗаказКлиента ИЗ ДолгиПоЗаказам))
					|ГДЕ
					|	Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
					|
					|ИНДЕКСИРОВАТЬ ПО
					|	Документ
					|;
					|
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг) КАК Документ,
					|	ИСТИНА													  КАК ЕстьДолгПоДокументу
					|ПОМЕСТИТЬ ДолгиПоРеализациямНаНачалоПериода
					|ИЗ
					|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(,, Регистратор, ЗаказКлиента В (ВЫБРАТЬ ЗаказКлиента ИЗ ВТ_ДолгиПоЗаказамНаНачалоПериода))
					|ГДЕ
					|	Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
					|
					|ИНДЕКСИРОВАТЬ ПО
					|	Документ
					|;
					|
					// Производим выбор номенкатуры из таблицы расширенной настройки процентов «КТС Помощь»
					|ВЫБРАТЬ
					|	Номенклатура 		КАК Номенклатура,
					|	ПроцентПродажы      КАК ПроцентПродажы,
					|	ПроцентИсполнения	КАК ПроцентИсполнения,
					|	ИСТИНА				КАК ЭтоКТСПомощь
					|ПОМЕСТИТЬ РасширенныеНастройкиКТСПомощь
					|ИЗ
					|	РегистрСведений.КТСПомощь
					|;
					|
					// Выбираем номенклатуру из видом «КТС Помощь»
					|ВЫБРАТЬ
					|	Ссылка КАК Номенклатура,
					|	ИСТИНА КАК ЭтоКТСПомощь
					|ПОМЕСТИТЬ ТаблицаНоменклатурыКТСПомощь
					|ИЗ
					|	Справочник.Номенклатура
					|ГДЕ
					|	ВидНоменклатуры		= &ВидНоменклатурыКТСПомощь
					|	И ПометкаУдаления 	= ЛОЖЬ
					|	И ЭтоГруппа			= ЛОЖЬ
					|;
					|
					// Произодим выбор сертификатов из раширенной настройки процентов сертификатов
					|ВЫБРАТЬ
					|	Сертификат 	КАК Сертификат,
					|	Процент		КАК Процент,
					|	ИСТИНА 		КАК ЭтоСертификат
					|ПОМЕСТИТЬ РасширенныеНастройкиСертификатов
					|ИЗ
					|	РегистрСведений.КТС_НастройкаПроцентовСертификатов
					|;
					|
					// Производим выбор номенклатуры из видо «Сертификаты ПДО».
					|ВЫБРАТЬ
					|	Ссылка КАК Номенклатура,
					|	ИСТИНА КАК ЭтоСертификат
					|ПОМЕСТИТЬ ТаблицаСертификатов
					|ИЗ
					|	Справочник.Номенклатура
					|ГДЕ
					|	ВидНоменклатуры		= &ВидНоменклатурыСертификат
					|	И ПометкаУдаления 	= ЛОЖЬ
					|	И ЭтоГруппа			= ЛОЖЬ
					|;
					|
					// Выборка данных для расчета заработка.
				   	|ВЫБРАТЬ
	               	|	БонусыМенеджерам.Регистратор 										КАК Ссылка,
	               	|	БонусыМенеджерам.Подразделение										КАК Подразделение,
	               	|	БонусыМенеджерам.Менеджер											КАК Менеджер,
	               	|	БонусыМенеджерам.Номенклатура										КАК Номенклатура,
	               	|	БонусыМенеджерам.КоличествоОборот 									КАК Количество,
	               	|	БонусыМенеджерам.СуммаРеглОборот 									КАК Сумма,
					|	БонусыМенеджерам.ЗаработокМенеджераРеглОборот
					|		* ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) КАК ЗаработокМенеджера,
					|	ЕСТЬNULL(ДолгиПоРеализациям.ЕстьДолгПоДокументу, ЛОЖЬ)  			КАК ЕстьДолгПоДокументу,
					|	ВЫБОР
					|		КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL
					|			ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
					|		ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
					|	КОНЕЦ 																КАК КПП_Склад,
					|	ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1)		КАК Коэфф
					|ПОМЕСТИТЬ ТаблицаЗаработков
	               	|ИЗ
					|	РегистрНакопления.КПП_БонусыМенеджерамНачисленые.Обороты({&ДатаНачала}, {&ДатаОкончания}, Регистратор,) КАК БонусыМенеджерам
					|	
					|		ЛЕВОЕ СОЕДИНЕНИЕ ДолгиПоРеализациям КАК ДолгиПоРеализациям
					|		ПО ВЫРАЗИТЬ(БонусыМенеджерам.Регистратор КАК Документ.РеализацияТоваровУслуг) = ДолгиПоРеализациям.Документ
					|
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераВыполнениеПлана КАК ЗаработокМенеджераВыполнениеПлана
					|		ПО НАЧАЛОПЕРИОДА(БонусыМенеджерам.Период, ДЕНЬ) >= НАЧАЛОПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.НачалоПериода, ДЕНЬ)
					|			И БонусыМенеджерам.Период < КОНЕЦПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.КонецПериода, ДЕНЬ)
					|			И БонусыМенеджерам.Склад = ЗаработокМенеджераВыполнениеПлана.Склад
					|
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
					|		ПО НАЧАЛОПЕРИОДА(БонусыМенеджерам.Период, ДЕНЬ) >= НАЧАЛОПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.НачалоПериода, ДЕНЬ)
					|			И БонусыМенеджерам.Период < КОНЕЦПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.КонецПериода, ДЕНЬ)
					|
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
	               	|	БонусыМенеджерам.Регистратор 										КАК Ссылка,
	               	|	БонусыМенеджерам.Подразделение										КАК Подразделение,
	               	|	БонусыМенеджерам.Менеджер											КАК Менеджер,
	               	|	БонусыМенеджерам.Номенклатура										КАК Номенклатура,
	               	|	БонусыМенеджерам.КоличествоОборот 									КАК Количество,
	               	|	БонусыМенеджерам.СуммаРеглОборот 									КАК Сумма,
					|	БонусыМенеджерам.ЗаработокМенеджераРеглОборот
					|		* ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) КАК ЗаработокМенеджера,
					|	ЕСТЬNULL(ДолгиПоРеализациям.ЕстьДолгПоДокументу, ЛОЖЬ)  			КАК ЕстьДолгПоДокументу,
					|	ВЫБОР
					|		КОГДА ЗаработокМенеджераВыполнениеПлана.Склад ЕСТЬ NULL
					|			ТОГДА ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Минус, 1)
					|		ИНАЧЕ ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.КПП_Плюс, 1)
					|	КОНЕЦ 																КАК КПП_Склад,
					|	ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1)		КАК Коэфф
	               	|ИЗ 
					|	ДолгиПоРеализациямНаНачалоПериода КАК ДолгиПоРеализациямНаНачалоПериода
	               	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.КПП_БонусыМенеджерамНачисленые.Обороты(, , Регистратор,) КАК БонусыМенеджерам
					|	ПО ДолгиПоРеализациямНаНачалоПериода.Документ = ВЫРАЗИТЬ(БонусыМенеджерам.Регистратор КАК Документ.РеализацияТоваровУслуг)
					|	
					|		ЛЕВОЕ СОЕДИНЕНИЕ ДолгиПоРеализациям КАК ДолгиПоРеализациям
					|		ПО ВЫРАЗИТЬ(БонусыМенеджерам.Регистратор КАК Документ.РеализацияТоваровУслуг) = ДолгиПоРеализациям.Документ
					|
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераВыполнениеПлана КАК ЗаработокМенеджераВыполнениеПлана
					|		ПО НАЧАЛОПЕРИОДА(БонусыМенеджерам.Период, ДЕНЬ) >= НАЧАЛОПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.НачалоПериода, ДЕНЬ)
					|			И БонусыМенеджерам.Период < КОНЕЦПЕРИОДА(ЗаработокМенеджераВыполнениеПлана.КонецПериода, ДЕНЬ)
					|			И БонусыМенеджерам.Склад = ЗаработокМенеджераВыполнениеПлана.Склад
					|
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
					|		ПО НАЧАЛОПЕРИОДА(БонусыМенеджерам.Период, ДЕНЬ) >= НАЧАЛОПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.НачалоПериода, ДЕНЬ)
					|			И БонусыМенеджерам.Период < КОНЕЦПЕРИОДА(ЗаработокМенеджераМножительПоМесяцам.КонецПериода, ДЕНЬ)
					|;
					|
					// Для расчета процента от выполнения услуги КТС Помощь необходимо отсеч номенклатуру
					// из соответсвующим видом.
					|ВЫБРАТЬ
					|	ВЫРАЗИТЬ(ТаблицаЗаработков.Ссылка КАК Документ.РеализацияТоваровУслуг)	КАК Ссылка,
	               	|	ТаблицаЗаработков.Подразделение											КАК Подразделение,
	               	|	ТаблицаЗаработков.Номенклатура											КАК Номенклатура,
	               	|	ТаблицаЗаработков.Количество 											КАК Количество,
	               	|	ТаблицаЗаработков.Сумма 												КАК Сумма,
					|	ТаблицаЗаработков.КПП_Склад                                             КАК КПП_Склад,
					|	ТаблицаЗаработков.Коэфф                                             	КАК Коэфф,
					|	ТаблицаЗаработков.ЕстьДолгПоДокументу                                   КАК ЕстьДолгПоДокументу
					|ПОМЕСТИТЬ РеализацииКТСПомощь
					|ИЗ
					|	ТаблицаЗаработков КАК ТаблицаЗаработков
					|		
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаНоменклатурыКТСПомощь КАК ТаблицаНоменклатурыКТСПомощь
					|		ПО ТаблицаЗаработков.Номенклатура = ТаблицаНоменклатурыКТСПомощь.Номенклатура
					|;
					|
					// Получим менеджеров которые выполнили услугу «КТС Помощь».
					|ВЫБРАТЬ
					|	РеализацииКТСПомощь.Ссылка											КАК Ссылка,
	               	|	РеализацииКТСПомощь.Подразделение									КАК Подразделение,
					|	ВЫРАЗИТЬ(РегистрДопСведения.Значение КАК Справочник.Пользователи)   КАК Менеджер,
	               	|	РеализацииКТСПомощь.Номенклатура									КАК Номенклатура,
	               	|	РеализацииКТСПомощь.Количество 										КАК Количество,
	               	|	РеализацииКТСПомощь.Сумма											КАК Сумма,
					|	РеализацииКТСПомощь.КПП_Склад                                       КАК КПП_Склад,
					|	РеализацииКТСПомощь.Коэфф                                           КАК Коэфф,
					|	РеализацииКТСПомощь.ЕстьДолгПоДокументу                             КАК ЕстьДолгПоДокументу
					|ПОМЕСТИТЬ РеализацииКТСПомощьПоМенеджерам
					|ИЗ
					|	РеализацииКТСПомощь КАК РеализацииКТСПомощь
					|
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК РегистрДопСведения
					|		ПО РеализацииКТСПомощь.Ссылка 		= ВЫРАЗИТЬ(РегистрДопСведения.Объект КАК Документ.РеализацияТоваровУслуг)
					|			И РегистрДопСведения.Свойство   = &СвойствоПомощьКТС
					|{ГДЕ
					|	РеализацииКТСПомощь.Подразделение.* КАК Подразделение,
					|	ВЫРАЗИТЬ(РегистрДопСведения.Значение КАК Справочник.Пользователи).* КАК МенеджерОтбор,
					|	РеализацииКТСПомощь.Номенклатура.* КАК Номенклатура}
					|;
					|
					|ВЫБРАТЬ
	               	|	ТаблицаЗаработков.Ссылка 			КАК Ссылка,
	               	|	ТаблицаЗаработков.Подразделение		КАК Подразделение,
	               	|	ТаблицаЗаработков.Менеджер			КАК Менеджер,
	               	|	ТаблицаЗаработков.Номенклатура		КАК Номенклатура,
	               	|	ТаблицаЗаработков.Количество 		КАК Количество,
	               	|	ТаблицаЗаработков.Сумма 			КАК Сумма,
					|	ВЫБОР
					|		КОГДА ТаблицаЗаработков.ЕстьДолгПоДокументу = ИСТИНА
					|			ТОГДА
					|				ВЫБОР
					|					КОГДА ЕСТЬNULL(РасширенныеНастройкиКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
					|						ТОГДА ТаблицаЗаработков.Сумма * РасширенныеНастройкиКТСПомощь.ПроцентПродажы * 0.01 * ТаблицаЗаработков.Коэфф
					|					КОГДА ЕСТЬNULL(ТаблицаНоменклатурыКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
					|						ТОГДА ТаблицаЗаработков.Сумма * &ПроцентПродажыУслуги * 0.01 * ТаблицаЗаработков.Коэфф
					|					КОГДА ЕСТЬNULL(РасширенныеНастройкиСертификатов.ЭтоСертификат, ЛОЖЬ) = ИСТИНА
					|						ТОГДА ТаблицаЗаработков.Сумма * РасширенныеНастройкиСертификатов.Процент * 0.01
					|					КОГДА ЕСТЬNULL(ТаблицаСертификатов.ЭтоСертификат, ЛОЖЬ) = ИСТИНА
					|						ТОГДА ТаблицаЗаработков.Сумма * &ПроцентОтПродажыСертификата * 0.01
					|					ИНАЧЕ ТаблицаЗаработков.ЗаработокМенеджера
					|				КОНЕЦ
					|				*  ТаблицаЗаработков.КПП_Склад
					|			ИНАЧЕ 0
					|	КОНЕЦ КАК ВозможныйЗаработок,
					|	ВЫБОР
					|		КОГДА ТаблицаЗаработков.ЕстьДолгПоДокументу = ЛОЖЬ
					|			ТОГДА
					|				ВЫБОР
					|					КОГДА ЕСТЬNULL(РасширенныеНастройкиКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
					|						ТОГДА ТаблицаЗаработков.Сумма * ЕСТЬNULL(РасширенныеНастройкиКТСПомощь.ПроцентПродажы, 0) * 0.01 * ТаблицаЗаработков.Коэфф
					|					КОГДА ЕСТЬNULL(ТаблицаНоменклатурыКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
					|						ТОГДА ТаблицаЗаработков.Сумма * &ПроцентПродажыУслуги * 0.01 * ТаблицаЗаработков.Коэфф
					|					КОГДА ЕСТЬNULL(РасширенныеНастройкиСертификатов.ЭтоСертификат, ЛОЖЬ) = ИСТИНА
					|						ТОГДА ТаблицаЗаработков.Сумма * ЕСТЬNULL(РасширенныеНастройкиСертификатов.Процент, 0) * 0.01
					|					КОГДА ЕСТЬNULL(ТаблицаСертификатов.ЭтоСертификат, ЛОЖЬ) = ИСТИНА
					|						ТОГДА ТаблицаЗаработков.Сумма * &ПроцентОтПродажыСертификата * 0.01
					|					ИНАЧЕ ТаблицаЗаработков.ЗаработокМенеджера
					|				КОНЕЦ
					|				*  ТаблицаЗаработков.КПП_Склад
					|			ИНАЧЕ 0
					|	КОНЕЦ КАК ЗаработокМенеджера
					|ПОМЕСТИТЬ ТаблицаОкончательныйЗаработок
					|ИЗ
					|	ТаблицаЗаработков КАК ТаблицаЗаработков
					|
					|		ЛЕВОЕ СОЕДИНЕНИЕ РасширенныеНастройкиКТСПомощь КАК РасширенныеНастройкиКТСПомощь
					|		ПО ТаблицаЗаработков.Номенклатура = РасширенныеНастройкиКТСПомощь.Номенклатура
					|
					|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНоменклатурыКТСПомощь КАК ТаблицаНоменклатурыКТСПомощь
					|		ПО ТаблицаЗаработков.Номенклатура = ТаблицаНоменклатурыКТСПомощь.Номенклатура
					|
					|		ЛЕВОЕ СОЕДИНЕНИЕ РасширенныеНастройкиСертификатов КАК РасширенныеНастройкиСертификатов
					|		ПО ТаблицаЗаработков.Номенклатура = РасширенныеНастройкиСертификатов.Сертификат
					|
					|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСертификатов КАК ТаблицаСертификатов
					|		ПО ТаблицаЗаработков.Номенклатура = ТаблицаСертификатов.Номенклатура
					|{ГДЕ
					|	ТаблицаЗаработков.Менеджер.* КАК МенеджерОтбор}
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	РеализацииКТСПомощьПоМенеджерам.Ссылка 			КАК Ссылка,
					|	РеализацииКТСПомощьПоМенеджерам.Подразделение	КАК Подразделение,
					|	РеализацииКТСПомощьПоМенеджерам.Менеджер		КАК Менеджер,
					|	РеализацииКТСПомощьПоМенеджерам.Номенклатура	КАК Номенклатура,
					|	0 												КАК Количество,
					|	0 												КАК Сумма,
					|	ВЫБОР
					|		КОГДА РеализацииКТСПомощьПоМенеджерам.ЕстьДолгПоДокументу = ИСТИНА
					|			ТОГДА
					|				ВЫБОР
					|					КОГДА ЕСТЬNULL(РасширенныеНастройкиКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
					|						ТОГДА РеализацииКТСПомощьПоМенеджерам.Сумма * ЕСТЬNULL(РасширенныеНастройкиКТСПомощь.ПроцентИсполнения, 0) * 0.01
					|					ИНАЧЕ РеализацииКТСПомощьПоМенеджерам.Сумма * &ПроцентИсполненияУслуги * 0.01
					|				КОНЕЦ
					|		ИНАЧЕ 0
					|	КОНЕЦ * РеализацииКТСПомощьПоМенеджерам.КПП_Склад * РеализацииКТСПомощьПоМенеджерам.Коэфф	КАК ВозможныйЗаработок,
					|	ВЫБОР
					|		КОГДА РеализацииКТСПомощьПоМенеджерам.ЕстьДолгПоДокументу = ЛОЖЬ
					|			ТОГДА
					|				ВЫБОР
					|					КОГДА ЕСТЬNULL(РасширенныеНастройкиКТСПомощь.ЭтоКТСПомощь, ЛОЖЬ) = ИСТИНА
					|						ТОГДА РеализацииКТСПомощьПоМенеджерам.Сумма * ЕСТЬNULL(РасширенныеНастройкиКТСПомощь.ПроцентИсполнения, 0) * 0.01
					|					ИНАЧЕ РеализацииКТСПомощьПоМенеджерам.Сумма * &ПроцентИсполненияУслуги * 0.01
					|				КОНЕЦ
					|		ИНАЧЕ 0
					|	КОНЕЦ * РеализацииКТСПомощьПоМенеджерам.КПП_Склад * РеализацииКТСПомощьПоМенеджерам.Коэфф  КАК ЗаработокМенеджера
					|ИЗ
					|	РеализацииКТСПомощьПоМенеджерам КАК РеализацииКТСПомощьПоМенеджерам
					|
					|		ЛЕВОЕ СОЕДИНЕНИЕ РасширенныеНастройкиКТСПомощь КАК РасширенныеНастройкиКТСПомощь
					|		ПО РеализацииКТСПомощьПоМенеджерам.Номенклатура = РасширенныеНастройкиКТСПомощь.Номенклатура
					|
					|;
					|
					|ВЫБРАТЬ
					|	Ссылка 					КАК Ссылка,
					|	Подразделение			КАК Подразделение,
					|	Менеджер				КАК Менеджер,
					|	Номенклатура			КАК Номенклатура,
					|	Количество 				КАК Количество,
					|	Сумма 					КАК Сумма,
					|	ВозможныйЗаработок      КАК ВозможныйЗаработок,
					|	ЗаработокМенеджера      КАК ЗаработокМенеджера
					|ИЗ
					|	ТаблицаОкончательныйЗаработок";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаОсновногоНабораДанных()

#КонецОбласти

#Область СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "2.2.37";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Отчет по заработной плате (розница) ["+Версия+"]");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Отчет по заработной плате (розница) ["+Версия+"]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Отчет по заработной плате (розница) ["+Версия+"]", "ОДП", "ОткрытиеФормы", Ложь, "ОПЗПР");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура СчитатьДокументыНазначений(МассивНазначений)
	
	//Макет = ПолучитьМакет("МакетДокументыНазначений");
	//
	//Для Инд = 1 По Макет.ВысотаТаблицы Цикл
	//	МассивНазначений.Добавить(Макет.Область(Инд,1).Текст);
	//КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры
	
#КонецОбласти 