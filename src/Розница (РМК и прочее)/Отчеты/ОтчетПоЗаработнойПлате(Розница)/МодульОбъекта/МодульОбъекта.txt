
#Область ПрограммныйИнтерфейс

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	СтандартнаяОбработка 	  = Ложь;	
	ИерархияВидовНоменклатуры = РазвернутьИерархиюВидовНоменклатуры();
	НаборДанных				  = СформироватьНаборДанных();
	
	ВывестиОтчетВТабличныйДокумент(ДокументРезультат, ДанныеРасшифровки, НаборДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИерархияВидовНоменклатуры

Функция РазвернутьИерархиюВидовНоменклатуры()

	ИерархияВидовНоменклатуры = ИнициализироватьРазвернутуюТаблицуВидоНоменклатуры();
	
	Запрос 			= Новый Запрос;
	Запрос.Текст    = ТекстЗапросаИерархияВидовНоменклатуры();
	
	ДеревоРезультатов	= Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Родители 			= Новый ФиксированныйМассив(Новый Массив);
		
	РекурсивноОбойтиИерархиюВидовНоменклатуры(ДеревоРезультатов, ИерархияВидовНоменклатуры, Родители);
	
	Возврат ИерархияВидовНоменклатуры;

КонецФункции

Процедура РекурсивноОбойтиИерархиюВидовНоменклатуры(ДеревоРезультатов, ИерархияВидовНоменклатуры, Родители)

	РодителиТекущейВетки = Новый Массив(Родители);
	
	Для каждого СтрокаДерева Из ДеревоРезультатов.Строки Цикл
	
		Если СтрокаДерева.ЭтоГруппа Тогда
			РодителиТекущейВетки.Добавить(СтрокаДерева.ВидНоменклатуры);
			РекурсивноОбойтиИерархиюВидовНоменклатуры(СтрокаДерева, ИерархияВидовНоменклатуры, Новый ФиксированныйМассив(РодителиТекущейВетки));
			РодителиТекущейВетки.Удалить(РодителиТекущейВетки.ВГраница());
		Иначе
			Индекс = 1;
			Для каждого Родитель Из РодителиТекущейВетки Цикл
				НоваяСтрока 				= ИерархияВидовНоменклатуры.Добавить();
				НоваяСтрока.ВидНоменклатуры = СтрокаДерева.ВидНоменклатуры;
				НоваяСтрока.Родитель 		= Родитель;
				НоваяСтрока.Индекс 			= Индекс;
				Индекс						= Индекс + 1;
			КонецЦикла;			
		КонецЕсли;
	
	КонецЦикла; 
	
КонецПроцедуры
 
Функция ТекстЗапросаИерархияВидовНоменклатуры()

	ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Ссылка 		КАК ВидНоменклатуры,
			|	ЭтоГруппа   КАК ЭтоГруппа
			|ИЗ
			|	Справочник.ВидыНоменклатуры
			|ГДЕ
			|	НЕ ПометкаУдаления
			|ИТОГИ ПО
			|	Ссылка ИЕРАРХИЯ";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаИерархияВидовНоменклатуры()
  
Функция ИнициализироватьРазвернутуюТаблицуВидоНоменклатуры()

	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ВидНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.ВидыНоменклатуры"));
	Таблица.Колонки.Добавить("Родитель", Новый ОписаниеТипов("СправочникСсылка.ВидыНоменклатуры"));
	Таблица.Колонки.Добавить("Индекс", Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 0)));
	
	Возврат Таблица;

КонецФункции // ИнициализироватьРазвернутуюТаблицуВидоНоменклатуры()

#КонецОбласти 

#Область ГенерированиеНабораДанных

Функция СформироватьНаборДанных()

	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ОтчетПоПрадажам", ПолучитьТаблицуПродаж());
	
	Возврат ВнешниеНаборыДанных;

КонецФункции // СформироватьНаборДанных()

Функция ПолучитьТаблицуПродаж()

	Перем ПроцентПродажыУслуги;
	Перем ПроцентИсполненияУслуги;
	Перем СвойствоПомощьКТС;
	Перем ГруппаСертификаты;
	Перем ПроцентОтПродажыСертификата;
	Перем ВидНоменклатурыСертификаты;
	
	Настройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиПроцентовКТСПомощь", , , "ДополнительныеНастройкиПроцентовКТСПомощь");
	
	Если ТипЗнч(Настройки) <> Тип("Структура") Тогда
		ВызватьИсключение НСтр("ru='Не удалось получить настройки «КТС Помощь». Обратитесь в службу технической поддрежки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
	
	Настройки.Свойство("ПроцентПродажыУслуги", ПроцентПродажыУслуги);
	Настройки.Свойство("ПроцентИсполненияУслуги", ПроцентИсполненияУслуги);
	Настройки.Свойство("СвойствоПомощьКТС", СвойствоПомощьКТС);
	Настройки.Свойство("ГруппаСертификаты", ГруппаСертификаты);
	Настройки.Свойство("ПроцентОтПродажыСертификата", ПроцентОтПродажыСертификата);
	Настройки.Свойство("ВидНоменклатурыСертификаты", ВидНоменклатурыСертификаты);
		
	Если ПроцентПродажыУслуги = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задан процент от продажы услуги «КТС Помощь». Обратитесь в службу технической поддрежки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
	
	Если ПроцентИсполненияУслуги = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задан процент от исполнения услуги «КТС Помощь». Обратитесь в службу технической поддрежки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
	
	Если СвойствоПомощьКТС = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задано свойство «КТС Помощь». Обратитесь в службу технической поддрежки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
			
	Если ПроцентОтПродажыСертификата = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задан процент от продажы сертификата на дополнительное обслужывание. Обратитесь в службу технической поддрежки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
	
	Если ВидНоменклатурыСертификаты = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Вид номенклатуры сертификата на дополнительное обслужывание. Обратитесь в службу технической поддрежки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос 		 = Новый Запрос;
	Запрос.Текст = ТекстЗапросаТаблицаПродаж();
	
	ПериодОтчета = ПолучитьЗначениеПараметра("ПериодОтчета");
	
	Запрос.УстановитьПараметр("ДатаНачало", ПериодОтчета.ДатаНачала);	
	Запрос.УстановитьПараметр("ДатаОкончание", ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("ВалютаРегламентированогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВидНоменклатурыСертификаты", ВидНоменклатурыСертификаты);
	Запрос.УстановитьПараметр("РозничнаяЦена", Справочники.ВидыЦен.ПолучитьСсылку(Новый УникальныйИдентификатор("8bdf84ff-404c-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("БезналЦена", Справочники.ВидыЦен.ПолучитьСсылку(Новый УникальныйИдентификатор("8bdf8500-404c-11e0-9f98-001517115d85")));
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьТаблицупоПродажам()

Функция ТекстЗапросаТаблицаПродаж()

	ТекстЗапроса = "
	
			// ПОДГОТОВКА ТАБЛИЦ КУРСОВ ВАЛЮТ ДЛЯ ИСПОЛЬЗОВАНИЯ
	
			|// Курсы валют.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫРАЗИТЬ(КурсыВалют.Курс / КурсыВалют.Кратность КАК ЧИСЛО(15, 4)) КАК Курс,
			|	КурсыВалют.Валюта КАК Валюта,
			|	КурсыВалют.Период КАК Период
			|ПОМЕСТИТЬ КурсыВалют
			|ИЗ
			|	РегистрСведений.КурсыВалют КАК КурсыВалют
			|;
			|
			|// Курсы валют.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|  	КурсыВалют.Курс,
			|  	КурсыВалют.Валюта,
			|  	КурсыВалют.Период КАК НачалоПериода,
			|  	МИНИМУМ(ЕСТЬNULL(КурсыВалютКопия.Период, ДАТАВРЕМЯ(3999, 1, 1))) КАК КонецПериода
			|ПОМЕСТИТЬ ТаблицаКурсов
			|ИЗ
			|  	КурсыВалют КАК КурсыВалют
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалютКопия
			|		ПО КурсыВалютКопия.Период > КурсыВалют.Период
			|			И КурсыВалютКопия.Валюта = КурсыВалют.Валюта
			|			
			|СГРУППИРОВАТЬ ПО
			|  	КурсыВалют.Период,
			|  	КурсыВалют.Курс,
			|  	КурсыВалют.Валюта
			|
			|ИНДЕКСИРОВАТЬ ПО 
			|	КурсыВалют.Валюта
			|;
			
			
			// ПОДГОТОВКА ДОПОЛНИТЕЛЬНЫХ ТАБЛИЦ ИЗ НОМЕНКЛАТУРОЙ (НОМЕНКЛАТУРА-СЕРТИФИКАТЫ И НОМЕНКЛАТУРА ЗА КОТОРУЮ НАЧИСЛЯЮТ З/П ПРОДАВЦАМ)						
			
			|// Получаем список номенклатура за которую менеджер получает зароботную плату.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Ссылка КАК Номенклатура
			|ПОМЕСТИТЬ КешДопустимаяНоменклатура
			|ИЗ
			|	Справочник.Номенклатура
			|ГДЕ
			|	НЕ ЭтоГруппа
			|	И НЕ ПометкаУдаления
			|	И Родитель В ИЕРАРХИИ (ВЫБРАТЬ ГруппыНоменклатуры ИЗ РегистрСведений.ktcНастройкиЗароботкаМенеджераГруппы)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			|
			|// Получаем таблицу номенклатуры сертификатов.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Ссылка КАК Номенклатура
			|ПОМЕСТИТЬ КешСертификаты
			|ИЗ
			|	Справочник.Номенклатура
			|ГДЕ
			|	НЕ ЭтоГруппа
			|	И НЕ ПометкаУдаления
			|	И ВидНоменклатуры = &ВидНоменклатурыСертификаты
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура
			|;
			
			
			// ПОДГОТОВКА ТАБЛИЦЫ РЕАЛИЗАЦИЙ И ВОЗВРАТОВ ИЗ НОМЕНКЛАТУРОЙ ДЛЯ ДАЛЬНЕЙШЕЙ ОБРАБОТКИ
			
			|// Отсекаем документы реализации товаров и услуг по дате.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Период																КАК Дата,
			|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг)			КАК Ссылка,
			|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг).Валюта	КАК Валюта,
			|	Подразделение       												КАК Подразделение,
			|	Менеджер															КАК Менеджер
			|ПОМЕСТИТЬ ТаблицаРеализацийВОтчете
			|ИЗ
			|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&ДатаНачало, &ДатаОкончание, Регистратор)
			|ГДЕ
			|	Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка
			|;
			|
			|// Получаем все табличные части документов реализация товаров и услуг, нужно для того
			|// чтобы отсеч товары проданные по безналу и без установленной цены.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаРеализацийВОтчете.Дата										КАК Дата,
			|	ТаблицаРеализацийВОтчете.Ссылка										КАК Ссылка,
			|	ТаблицаРеализацийВОтчете.Валюта										КАК Валюта,
			|	ТоварыРеализаций.Номенклатура										КАК Номенклатура,
			|	ТоварыРеализаций.Характеристика										КАК Характеристика,
			|	ТоварыРеализаций.Склад												КАК Склад,
			|	ТаблицаРеализацийВОтчете.Подразделение								КАК Подразделение,
			|	ТаблицаРеализацийВОтчете.Менеджер									КАК Менеджер,
			|	ТоварыРеализаций.Количество											КАК Количество,
			|	ТоварыРеализаций.СуммаСНДС											КАК Сумма,
			|	ТоварыРеализаций.СуммаАвтоматическойСкидки							КАК СуммаАвтоматическойСкидки,
			|	ТоварыРеализаций.СуммаРучнойСкидки									КАК СуммаРучнойСкидки,
			|	ТоварыРеализаций.ВидЦены											КАК ВидЦены
			|ПОМЕСТИТЬ КешТоварыРеализций
			|ИЗ
			|	ТаблицаРеализацийВОтчете КАК ТаблицаРеализацийВОтчете
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ТоварыРеализаций
			|		ПО ТаблицаРеализацийВОтчете.Ссылка = ТоварыРеализаций.Ссылка
			|;
			|
			|// Отсекаем документы возвратом товаров и услуг по дате.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Возвраты.Период																КАК Дата,
			|	ВЫРАЗИТЬ(Возвраты.Регистратор КАК Документ.ВозвратТоваровОтКлиента)			КАК Ссылка,
			|	ВЫРАЗИТЬ(Возвраты.Регистратор КАК Документ.ВозвратТоваровОтКлиента).Валюта	КАК Валюта,
			|	Возвраты.Подразделение       												КАК Подразделение,
			|	Возвраты.Менеджер															КАК Менеджер,
			|	АналитикаНоменклатуры.Склад													КАК Склад
			|ПОМЕСТИТЬ ТаблицаВозвратовВОтчете
			|ИЗ
			|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&ДатаНачало, &ДатаОкончание, Регистратор) КАК Возвраты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
			|		ПО Возвраты.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.КлючАналитики
			|ГДЕ
			|	Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
			|ИНДЕКСИРОВАТЬ ПО
			|	Ссылка
			|;
			|
			|// Получаем все табличные части документов возвратов товаров от клиента, нужно для того
			|// чтобы найти реализации на основании которых были проведены возвраты.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаВозвратовВОтчете.Дата										КАК Дата,
			|	ТаблицаВозвратовВОтчете.Ссылка										КАК Ссылка,
			|	ТаблицаВозвратовВОтчете.Валюта										КАК Валюта,
			|	ТоварыВозвратов.Номенклатура										КАК Номенклатура,
			|	ТоварыВозвратов.Характеристика										КАК Характеристика,
			|	ТаблицаВозвратовВОтчете.Склад										КАК Склад,
			|	ТаблицаВозвратовВОтчете.Подразделение								КАК Подразделение,
			|	ТаблицаВозвратовВОтчете.Менеджер									КАК Менеджер,
			|	ТоварыВозвратов.Количество											КАК Количество,
			|	ТоварыВозвратов.СуммаСНДС											КАК Сумма,
			|	ТоварыВозвратов.ДокументРеализации									КАК ДокументРеализации
			|ПОМЕСТИТЬ КешТоварыВозвратов
			|ИЗ
			|	ТаблицаВозвратовВОтчете КАК ТаблицаВозвратовВОтчете
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ТоварыВозвратов
			|		ПО ТаблицаВозвратовВОтчете.Ссылка = ТоварыВозвратов.Ссылка
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ДокументРеализации,
			|	Номенклатура,
			|	Характеристика,
			|	Склад
			|;
			
			
			
			
			// ПОДГОТОВКА ТАБЛИЦЫ РОЗНИЧНЫХ ЦЕН НОМЕНКЛАТУРЫ ДЛЯ КОТОРОЙ УСТАНОВЛЕНА ЦЕНА БЕЗНАЛ В ДОКУМЕНТЕ РЕАЛИЗАЦИИ
			
			|// Формируем таблицу номенклатуры которая была продана по безналу.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Номенклатура КАК Номенклатура
			|ПОМЕСТИТЬ ТаблицаНоменклатурыБезнал
			|ИЗ
			|	КешТоварыРеализций
			|ГДЕ
			|	ВидЦены = &БезналЦена
			|;
			|
			|// Получаем розничные цены номенклактуры которая была продана по безналу.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.Период			КАК Период,
			|	ВложенныйЗапрос.Номенклатура 	КАК Номенклатура,
			|	ВложенныйЗапрос.Цена			КАК Цена
			|ПОМЕСТИТЬ ТаблицаРозничныхЦен
			|ИЗ
			|(
			|	ВЫБРАТЬ
			|		Период			КАК Период,
			|		Номенклатура 	КАК Номенклатура,
			|		ВЫБОР
			|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|				ТОГДА Цена
			|			ИНАЧЕ Цена * Упаковка.Коэффициент
			|		КОНЕЦ КАК Цена
			|	ИЗ
			|		РегистрСведений.ЦеныНоменклатуры
			|	ГДЕ
			|		ВидЦены 		= &РозничнаяЦена
			|		И Период 		>= &ДатаНачало
			|		И Период 		< &ДатаОкончание
			|		И Номенклатура  В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаНоменклатурыБезнал)
			|		
			|	ОБЪЕДИНИТЬ

			|	ВЫБРАТЬ
			|		Период			КАК Период,
			|		Номенклатура 	КАК Номенклатура,
			|		ВЫБОР
			|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
			|				ТОГДА Цена
			|			ИНАЧЕ Цена * Упаковка.Коэффициент
			|		КОНЕЦ КАК Цена
			|	ИЗ
			|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаНачало, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ТаблицаНоменклатурыБезнал) И ВидЦены = &РозничнаяЦена)
			|) КАК ВложенныйЗапрос
			|;
			|
			|// Наростающие итоги по розничным ценам, необходимые для того, чтиобы заменить 
			|// цены номенклатуры проданные по безналу.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|  ТаблицаРозничныхЦен.Цена													КАК Цена,
			|  ТаблицаРозничныхЦен.Номенклатура											КАК Номенклатура,
			|  ТаблицаРозничныхЦен.Период 												КАК НачалоПериода,
			|  МИНИМУМ(ЕСТЬNULL(ТаблицаРозничныхЦенКопия.Период, ДАТАВРЕМЯ(3999, 1, 1))) КАК КонецПериода
			|ПОМЕСТИТЬ ТаблицаРозничныхЦенНаростающие
			|ИЗ
			|  ТаблицаРозничныхЦен КАК ТаблицаРозничныхЦен
			|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРозничныхЦен КАК ТаблицаРозничныхЦенКопия
			|	ПО ТаблицаРозничныхЦенКопия.Период		> ТаблицаРозничныхЦен.Период
			|	И ТаблицаРозничныхЦенКопия.Номенклатура = ТаблицаРозничныхЦен.Номенклатура
			|СГРУППИРОВАТЬ ПО
			|  ТаблицаРозничныхЦен.Период,
			|  ТаблицаРозничныхЦен.Цена,
			|  ТаблицаРозничныхЦен.Номенклатура
			|;
			
			
			
			// ПОДГОТОВКА ВОЗВРАТОВ ТОВАРОВ КЛИЕНТУ ДЛЯ ОКОНЧАТЕЛЬНОГО РАСЧЕТА СУММИ
			// НЕОБХОДИМО ПРОАНАЛИЗИРОВАТЬ РЕАЛИЗАЦИИ НА ОСНОВАНИИ КОТОРЫХ БЫЛИ ПРОВЕДЕНЫ ВОЗВРАТЫ
			// НУЖНО ВЫБРАТЬ СООТВЕТСТВЕННЫЕ ВИДЫ ЦЕН И УСТАНОВИТЬ СУММЫ
			
			|// Выбираем какие виды цен были в реализации товаро и услуг, на основании которой был продан товар.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТоварыРеализаций.Ссылка 				КАК ДокументРеализации,
			|	ТоварыРеализаций.Ссылка.Менеджер 		КАК Менеджер,
			|	ТоварыРеализаций.Ссылка.Подразделение 	КАК Подразделение,
			|	ТоварыРеализаций.ВидЦены 				КАК ВидЦены,
			|	ТоварыРеализаций.Номенклатура 			КАК Номенклатура,
			|	ТоварыРеализаций.Характеристика 		КАК Характеристика
			|ПОМЕСТИТЬ КешРеализацийПоВозвратам
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Товары КАК ТоварыРеализаций
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешТоварыВозвратов КАК ТоварыВозвратов
			|		ПО ТоварыРеализаций.Ссылка = ТоварыВозвратов.ДокументРеализации
			|			И ТоварыРеализаций.Номенклатура = ТоварыВозвратов.Номенклатура
			|			И ТоварыРеализаций.Характеристика = ТоварыВозвратов.Характеристика
			|			И ТоварыРеализаций.Склад = ТоварыВозвратов.Склад
			|ИНДЕКСИРОВАТЬ ПО
			|	ДокументРеализации,
			|	Номенклатура,
			|	Характеристика
			|;
			|
			|// Выполняем подстановку видов цен у документ возврата товаров
			|ВЫБРАТЬ
			|	ТоварыВозвратов.Дата															КАК Дата,
			|	ТоварыВозвратов.Ссылка															КАК Ссылка,
			|	ТоварыВозвратов.Валюта															КАК Валюта,
			|	ТоварыВозвратов.Номенклатура													КАК Номенклатура,
			|	ТоварыВозвратов.Характеристика													КАК Характеристика,
			|	ТоварыВозвратов.Склад															КАК Склад,
			|	ЕСТЬNULL(РеализацииПоВозвратам.Подразделение, ТоварыВозвратов.Подразделение)	КАК Подразделение,
			|	ЕСТЬNULL(РеализацииПоВозвратам.Менеджер, ТоварыВозвратов.Менеджер)				КАК Менеджер,
			|	-ТоварыВозвратов.Количество														КАК Количество,
			|	ВЫБОР
			|		КОГДА РеализацииПоВозвратам.ВидЦены ЕСТЬ NULL
			|			ТОГДА -ТоварыВозвратов.Сумма
			|		КОГДА РеализацииПоВозвратам.ВидЦены = &РозничнаяЦена
			|			ТОГДА -ТоварыВозвратов.Сумма
			|		КОГДА РеализацииПоВозвратам.ВидЦены = &БезналЦена
			|			ТОГДА -ТоварыВозвратов.Сумма
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК Сумма
			|ПОМЕСТИТЬ ТаблицаВозвратовПредварительная
			|ИЗ
			|	КешТоварыВозвратов КАК ТоварыВозвратов
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ КешРеализацийПоВозвратам КАК РеализацииПоВозвратам
			|		ПО ТоварыВозвратов.ДокументРеализации 	= РеализацииПоВозвратам.ДокументРеализации
			|			И ТоварыВозвратов.Номенклатура 		= РеализацииПоВозвратам.Номенклатура
			|			И ТоварыВозвратов.Характеристика 	= РеализацииПоВозвратам.Характеристика
			|;
			|
			|// Если возврат товаров проведен в другой валюте - необходимо пересчитать в валюту 
			|// регламентированого учета. В результате почим список возвратов готовый к расчету бонусов.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаВозвратов.Дата										КАК Дата,
			|	ТаблицаВозвратов.Ссылка										КАК Ссылка,
			|	ТаблицаВозвратов.Номенклатура								КАК Номенклатура,
			|	ТаблицаВозвратов.Характеристика								КАК Характеристика,
			|	ТаблицаВозвратов.Склад										КАК Склад,
			|	ТаблицаВозвратов.Подразделение								КАК Подразделение,
			|	ТаблицаВозвратов.Менеджер									КАК Менеджер,
			|	ТаблицаВозвратов.Количество									КАК Количество,
			|	ВЫБОР
			|		КОГДА ТаблицаВозвратов.Валюта = &ВалютаРегламентированогоУчета
			|			ТОГДА ТаблицаВозвратов.Сумма
			|		ИНАЧЕ ТаблицаВозвратов.Сумма * (ТаблицаКурсовВозвратов.Курс / ТаблицаКурсовРегл.Курс)
			|	КОНЕЦ КАК Сумма
			|ПОМЕСТИТЬ ТаблицаВозвратовИзСумами
			|ИЗ
			|	ТаблицаВозвратовПредварительная КАК ТаблицаВозвратов
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовВозвратов
			|       ПО ТаблицаВозвратов.Валюта = ТаблицаКурсовВозвратов.Валюта
			|			И ТаблицаВозвратов.Дата >= ТаблицаКурсовВозвратов.НачалоПериода
			|			И ТаблицаВозвратов.Дата < ТаблицаКурсовВозвратов.КонецПериода
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовРегл
			|       ПО ТаблицаКурсовРегл.Валюта = &ВалютаРегламентированогоУчета
			|			И ТаблицаВозвратов.Дата >= ТаблицаКурсовРегл.НачалоПериода
			|			И ТаблицаВозвратов.Дата < ТаблицаКурсовРегл.КонецПериода
			|;
			
			// ВЫПОЛНЯЕМ РАСЧЕТ ОКОНЧАТЕЛЬНОЙ СУММЫ КОТОРАЯ ДОЛЖНА СВЕТИТСЯ В ОТЧЕТЕ ПО ДОКУМЕНТАХ РЕАЛИЗАЦИИ
			// РАСЧЕТ СУММЫ ВКЛЮЧАЕТ ОБРАБОТКУ ВИДОВ ЦЕН ТАБЛИЧНОЙ ЧАСТИ:
			// - РОЗНИЦА - ПОЛНОСТЬЮ ПОПАДАЕТ В ОТЧЕТ
			// - БЕЗНАЛ  - ЦЕНА ПЕРЕСЧИТЫВАЕТСЯ В РОЗНИЦУ ПО ЦЕНАМ НА ДАТУ РЕАЛИЗАЦИИ, ЕСЛИ РОЗНИЦЫ НА МОМЕНТ НЕТУ - ПЕРЕСЧЕТ НА ТЕКУЩУЮ ДАТУ
			// - ДРУГОЙ ВИД ЦЕНЫ - 0
			//
			// ТАКЖЕ РАСЧЕТ СУММЫ УЧИТЫВАЕТ РУЧНЫЕ И АВТОМАТИЧЕСКИЕ СКИДКИ
			// ТАКЖЕ РАСЧЕТ СУММЫ УЧИТЫВАЕТ СИТУАЦИЮ КОГДА РЕАЛИЗАЦИЮ ВЫПИСАЛИ НЕ В ВАЛЮТЕ РЕГЛАМЕНТИРОВАНОГО УЧЕТА
			
			|// Если в реализации товаров продано по безнальной цене - выполняем пересчет в розничную.
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТоварыРеализаций.Дата										КАК Дата,
			|	ТоварыРеализаций.Ссылка										КАК Ссылка,
			|	ТоварыРеализаций.Валюта										КАК Валюта,
			|	ТоварыРеализаций.Номенклатура								КАК Номенклатура,
			|	ТоварыРеализаций.Характеристика								КАК Характеристика,
			|	ТоварыРеализаций.Склад										КАК Склад,
			|	ТоварыРеализаций.Подразделение								КАК Подразделение,
			|	ТоварыРеализаций.Менеджер									КАК Менеджер,
			|	ТоварыРеализаций.Количество									КАК Количество,
			|	ВЫБОР
			|		КОГДА ТоварыРеализаций.ВидЦены = &РозничнаяЦена
			|			ТОГДА ТоварыРеализаций.Сумма
			|		КОГДА ТоварыРеализаций.ВидЦены = &БезналЦена
			|			ТОГДА (ТоварыРеализаций.Количество * ЕСТЬNULL(ТаблицаРозничныхЦен.Цена, 0)) 
			|						+ (ТоварыРеализаций.Количество * ЕСТЬNULL(ТаблицаРозничныхЦен.Цена, 0)) * ТоварыРеализаций.СуммаАвтоматическойСкидки / ТоварыРеализаций.Сумма
			|						+ (ТоварыРеализаций.Количество * ЕСТЬNULL(ТаблицаРозничныхЦен.Цена, 0)) * ТоварыРеализаций.СуммаРучнойСкидки / ТоварыРеализаций.Сумма
			|		ИНАЧЕ 0 
			|	КОНЕЦ КАК Сумма
			|ПОМЕСТИТЬ ТаблицаРеализацийПоРозничнымЦенам
			|ИЗ
			|	КешТоварыРеализций КАК ТоварыРеализаций
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРозничныхЦенНаростающие КАК ТаблицаРозничныхЦен
			|		ПО ТоварыРеализаций.Номенклатура = ТаблицаРозничныхЦен.Номенклатура
			|			И ТоварыРеализаций.Дата >= ТаблицаРозничныхЦен.НачалоПериода
			|			И ТоварыРеализаций.Дата < ТаблицаРозничныхЦен.КонецПериода
			|;
			|
			|// Если реализация товаров проведена в другой валюте - необходимо пересчитать в валюту 
			|// регламентированого учета. В результате почим список реализаций готовый к расчету бонусов.	
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаРеализаций.Дата										КАК Дата,
			|	ТаблицаРеализаций.Ссылка										КАК Ссылка,
			|	ТаблицаРеализаций.Номенклатура								КАК Номенклатура,
			|	ТаблицаРеализаций.Характеристика								КАК Характеристика,
			|	ТаблицаРеализаций.Склад										КАК Склад,
			|	ТаблицаРеализаций.Подразделение								КАК Подразделение,
			|	ТаблицаРеализаций.Менеджер									КАК Менеджер,
			|	ТаблицаРеализаций.Количество									КАК Количество,
			|	ВЫБОР
			|		КОГДА ТаблицаРеализаций.Валюта = &ВалютаРегламентированогоУчета
			|			ТОГДА ТаблицаРеализаций.Сумма
			|		ИНАЧЕ ТаблицаРеализаций.Сумма * (ТаблицаКурсовРеализации.Курс / ТаблицаКурсовРегл.Курс)
			|	КОНЕЦ КАК Сумма
			|ПОМЕСТИТЬ ТаблицаРеализацийИзСумами
			|ИЗ
			|	ТаблицаРеализацийПоРозничнымЦенам КАК ТаблицаРеализаций
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовРеализации
			|       ПО ТаблицаРеализаций.Валюта = ТаблицаКурсовРеализации.Валюта
			|			И ТаблицаРеализаций.Дата >= ТаблицаКурсовРеализации.НачалоПериода
			|			И ТаблицаРеализаций.Дата < ТаблицаКурсовРеализации.КонецПериода
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовРегл
			|       ПО ТаблицаРеализаций.Валюта = &ВалютаРегламентированогоУчета
			|			И ТаблицаРеализаций.Дата >= ТаблицаКурсовРеализации.НачалоПериода
			|			И ТаблицаРеализаций.Дата < ТаблицаКурсовРеализации.КонецПериода
			|;
			//|// Результирующий запрос.
			//|////////////////////////////////////////////////////////////////////////////////
			//|ВЫБРАТЬ
			//|	ТаблицаРеализаций.Дата							КАК Дата,
			//|	ТаблицаРеализаций.Регистратор					КАК Ссылка,
			//|	ТаблицаРеализаций.Номенклатура					КАК Номенклатура,
			//|	ТаблицаРеализаций.Характеристика				КАК Характеристика,
			//|	ТаблицаРеализаций.Склад							КАК Склад,
			//|	ТаблицаРеализаций.Подразделение					КАК Подразделение,
			//|	ТаблицаРеализаций.Менеджер						КАК Менеджер,
			//|	ТаблицаРеализаций.Количество					КАК Количество,
			//|	ТаблицаРеализаций.Сумма							КАК Сумма,
			//|	0												КАК Заработок,
			//|	0												КАК ВозможныйЗароботок
			//|ИЗ
			//|	ТаблицаРеализаций
			|";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаТаблицаПродаж()
 
#КонецОбласти 

#Область СхемаКомпановкиДанных

Процедура ВывестиОтчетВТабличныйДокумент(ДокументРезультат, ДанныеРасшифровки, НаборДанных)

	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки(); 

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);

	Если МакетКомпоновки.НаборыДанных.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru= 'Отчет не сформирован. Включите хотя бы одну группировку в ""Элементы оформления и группировки"".'") ;
	КонецЕсли;
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, НаборДанных, ДанныеРасшифровки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры

Функция ПолучитьЗначениеПараметра(ИмяПараметра)

  ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
   Если ПараметрДанных <> Неопределено Тогда
     ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
     Если ПараметрПользовательскойНастройки <> Неопределено Тогда
       Возврат ПараметрПользовательскойНастройки.Значение;
     Иначе
       Возврат ПараметрДанных.Значение;
     КонецЕсли;
   КонецЕсли;

  Возврат Неопределено;

КонецФункции
	
#КонецОбласти 

#Область НастройкиКТСПомощь

Функция ПолучитьНастройкиКТСПомощь()

	

КонецФункции // ПолучитьНастройкиКТСПомощь()
 
	
#КонецОбласти 

#КонецОбласти