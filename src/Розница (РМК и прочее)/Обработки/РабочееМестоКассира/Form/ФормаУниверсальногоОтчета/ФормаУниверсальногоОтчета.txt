
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СформироватьОтчетНаСервере(Параметры.Организация, Параметры.Касса, Параметры.ТипОтчета);
КонецПроцедуры


&НаСервере
Процедура СформироватьОтчетНаСервере(Организация, Касса, ТипОтчета)
	
	ОбработкаОбъект 		= РеквизитФормыВЗначение("Объект");
	СхемаКомпоновкиДанных	= ОбработкаОбъект.ПолучитьМакет(ТипОтчета);	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	Настройки 			= СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ЭлементыНастроек 	= Настройки.ПараметрыДанных.Элементы;
	
	УстановитьПараметрыОтчета(ЭлементыНастроек, Организация, Касса, ТипОтчета);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	МакетКомпоновки	  = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	ПроцессорВывода	= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры // СформироватьОтчетНаСервере()


//&НаСервере
//Функция ЗагрузитьСхемуКомпоновкиДанных(ОбработкаОбъект, ТипОтчета)

//	Перем СхемаКомпоновкиДанных;
//	
//	//Если ТипОтчета = "ОтчетПоВсемВзаиморасчетам" Тогда
//	//	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("ОтчетПоВсемВзаиморасчетам");
//	//КонецЕсли;
//	//
//	//Если ТипОтчета = "ОтчетПоЭквайрингу" Тогда
//	//	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("ОтчетПоЭквайрингу");
//	//КонецЕсли;
//	//
//	//Если ТипОтчета = "ОтчетПоПКО" Тогда
//	//	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("ОтчетПоПКО");
//	//КонецЕсли;
//	//
//	//Если ТипОтчета = "ОтчетПоРКО" Тогда
//	//	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("ОтчетПоРКО");
//	//КонецЕсли;
//	
//	Возврат СхемаКомпоновкиДанных;

//КонецФункции // ЗагрузитьСхемуКомпоновкиДанных()

&НаСервере
Процедура УстановитьПараметрыОтчета(ЭлементыНастроек, Организация, Касса, ТипОтчета)

	Если ТипОтчета = "ОтчетПоВсемВзаиморасчетам" Тогда
		УстановитьПараметрыОтчетПоВсемВзаиморасчетам(ЭлементыНастроек, Организация);
	КонецЕсли;
	
	Если ТипОтчета = "ОтчетПоЭквайрингу" Тогда
		УстановитьПараметрыОтчетПоЭквайрингу(ЭлементыНастроек, Касса.Владелец);
	КонецЕсли;
	
	Если ТипОтчета = "ОтчетПоПКО" Тогда
		УстановитьПараметрыОтчетПоПКО(ЭлементыНастроек, Касса);
	КонецЕсли;
	
	Если ТипОтчета = "ОтчетПоРКО" Тогда
		УстановитьПараметрыОтчетПоРКО(ЭлементыНастроек, Касса);
	КонецЕсли;

КонецПроцедуры // УстановитьПараметрыОтчета()
 
 


&НаСервере
Процедура УстановитьПараметрыОтчетПоВсемВзаиморасчетам(ЭлементыНастроек, Организация)

	ТекДата	= ТекущаяДата();

	
	ПараметрНачалоПериода = ЭлементыНастроек[0];
	Если ПараметрНачалоПериода <> Неопределено Тогда
		ПараметрНачалоПериода.Использование = Истина;
		ПараметрНачалоПериода.Значение		= НачалоДня(ТекДата);
	КонецЕсли;
	
	ПараметрКонецПериода = ЭлементыНастроек[1];
	Если ПараметрКонецПериода <> Неопределено Тогда
		ПараметрКонецПериода.Использование = Истина;
		ПараметрКонецПериода.Значение	   = КонецДня(ТекДата);
	КонецЕсли;
	
	ПараметрОрганизация = ЭлементыНастроек[2];
	Если ПараметрОрганизация <> Неопределено Тогда
		ПараметрОрганизация.Использование = Истина;
		ПараметрОрганизация.Значение	  = Организация;
	КонецЕсли;

КонецПроцедуры // УстановитьПараметрыОтчетПовсемВзаиморасчетом()
 
&НаСервере
Процедура УстановитьПараметрыОтчетПоЭквайрингу(ЭлементыНастроек, Организация)
	ТекДата	= ТекущаяДата();

	ПараметрНачалоПериода = ЭлементыНастроек[0];
	Если ПараметрНачалоПериода <> Неопределено Тогда
		ПараметрНачалоПериода.Использование = Истина;
		ПараметрНачалоПериода.Значение		= НачалоДня(ТекДата);
	КонецЕсли;
	
	ПараметрКонецПериода = ЭлементыНастроек[1];
	Если ПараметрКонецПериода <> Неопределено Тогда
		ПараметрКонецПериода.Использование = Истина;
		ПараметрКонецПериода.Значение	   = КонецДня(ТекДата);
	КонецЕсли;
	
	ПараметрПериод = ЭлементыНастроек[2];
	Если ПараметрПериод <> Неопределено Тогда
		ПараметрПериод.Использование = Истина;
		ПараметрПериод.Значение	  	 = ТекДата;
	КонецЕсли;
	
	ПараметрОрганизация = ЭлементыНастроек[3];
	Если ПараметрОрганизация <> Неопределено Тогда
		ПараметрОрганизация.Использование = Истина;
		ПараметрОрганизация.Значение	  = Организация;
	КонецЕсли;	
КонецПроцедуры // УстановитьПараметрыОтчетПоЭквайрингу()
 
&НаСервере
Процедура УстановитьПараметрыОтчетПоПКО(ЭлементыНастроек, Касса)

	ПараметрНачалоПериода = ЭлементыНастроек[0];
	Если ПараметрНачалоПериода <> Неопределено Тогда
		ПараметрНачалоПериода.Использование = Истина;
		ПараметрНачалоПериода.Значение		= Касса;
	КонецЕсли;
	
	ПараметрКонецПериода = ЭлементыНастроек[1];
	Если ПараметрКонецПериода <> Неопределено Тогда
		ПараметрКонецПериода.Использование = Истина;
		ПараметрКонецПериода.Значение	   = НачалоДня(ТекущаяДата());
	КонецЕсли;
КонецПроцедуры // УстановитьПараметрыОтчетПоПКО()
 
&НаСервере
Процедура УстановитьПараметрыОтчетПоРКО(ЭлементыНастроек, Касса)
	ТекДата	= ТекущаяДата();

	ПараметрНачалоПериода = ЭлементыНастроек[0];
	Если ПараметрНачалоПериода <> Неопределено Тогда
		ПараметрНачалоПериода.Использование = Истина;
		ПараметрНачалоПериода.Значение		= НачалоДня(ТекДата);
	КонецЕсли;
	
	ПараметрКонецПериода = ЭлементыНастроек[1];
	Если ПараметрКонецПериода <> Неопределено Тогда
		ПараметрКонецПериода.Использование = Истина;
		ПараметрКонецПериода.Значение	   = КонецДня(ТекДата);
	КонецЕсли;
	
	ПараметрКасса = ЭлементыНастроек[2];
	Если ПараметрКасса <> Неопределено Тогда
		ПараметрКасса.Использование = Истина;
		ПараметрКасса.Значение	  	= Касса;
	КонецЕсли;
КонецПроцедуры // УстановитьПараметрыОтчетПоРКО()
 