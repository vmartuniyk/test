
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Касса 							= Параметры.Касса;
	СтрокаИстория					= Параметры.СтрокаИстория;	
	ВалютаОплаты 	= Касса.ВалютаДенежныхСредств.Наименование;
	ДолгЗаголовок	= "Долг клиента:";
	СуммаЗаголовок	= "Принять:";
	КомментарийЗаголовок = "Комментарий:";
	
КонецПроцедуры


&НаКлиенте
Функция ПроверкаЗаполнения()
	
	Если Элементы.СписокКлиентов.ТекущиеДанные = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо выбрать партнера.";
		
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если Сумма = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сумма оплаты должна быть больше 0.";
		
		Сообщение.Сообщить();
		
		Возврат Ложь;

		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПринятьОплату(Команда)
	
	Если ПроверкаЗаполнения() Тогда
		
		ДокументСсылка 		= ОплатитьНаСервере(Элементы.СписокКлиентов.ТекущиеДанные.Ссылка);
		НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(ДокументСсылка);
		
		ПоказатьОповещениеПользователя("Документ создан.", НавигационнаяСсылка, Строка(ДокументСсылка), БиблиотекаКартинок.Информация32);
		
		СтруктураВозврата = Новый Структура;
		СтруктураВозврата.Вставить("ДокументСсылка", ДокументСсылка);
		СтруктураВозврата.Вставить("СтрокаИстория", СтрокаИстория);
		
		Закрыть(СтруктураВозврата);
		
	КонецЕсли;
	
КонецПроцедуры



&НаСервере
Функция ОплатитьНаСервере(Партнер)
				
	ДокументПКО 	= Документы.ПриходныйКассовыйОрдер.СоздатьДокумент();
	
	ДокументПКО.Заполнить(Неопределено);
	ДокументПКО.Дата = ТекущаяДата();
	ДокументПКО.УстановитьНовыйНомер();
	
	ДокументПКО.Организация						= Касса.Владелец;
	ДокументПКО.Контрагент						= ПолучитьКонтрагента(Партнер); 
	ДокументПКО.Касса 			    			= Касса;
	ДокументПКО.ХозяйственнаяОперация   		= Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента;
	ДокументПКО.СтатьяДвиженияДенежныхСредств   = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Поступление оплаты от клиента");
	ДокументПКО.СуммаДокумента					= Сумма;
	ДокументПКО.ПринятоОт						= Строка(Партнер);
	
	Если Не ПустаяСтрока(Комментарий) Тогда
		ДокументПКО.Комментарий = Комментарий;
	КонецЕсли;
	
	СтрокаРасшыфровкиПлатежа = ДокументПКО.РасшифровкаПлатежа.Добавить();
	СтрокаРасшыфровкиПлатежа.Партнер 				= Партнер;
	СтрокаРасшыфровкиПлатежа.Сумма      			= Сумма;
	СтрокаРасшыфровкиПлатежа.СуммаВзаиморасчетов    = Сумма;
	СтрокаРасшыфровкиПлатежа.ВалютаВзаиморасчетов = Касса.ВалютаДенежныхСредств;
	
	ДокументПКО.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
	
	// Делаем запись в историю.
	
	ТаблицаИстория 			= ЗначениеИзСтрокиВнутр(СтрокаИстория);
	
	НоваяСтрокаТЗ			= ТаблицаИстория.Добавить();
	НоваяСтрокаТЗ.Дата    	= ДокументПКО.Дата;
	НоваяСтрокаТЗ.Документ  = ДокументПКО.Ссылка;
	НоваяСтрокаТЗ.Сумма		= ДокументПКО.СуммаДокумента;
	НоваяСтрокаТЗ.Валюта	= ДокументПКО.Валюта;
	
	СтрокаИстория = ЗначениеВСтрокуВнутр(ТаблицаИстория);
	
	////////////////////////////
		
	Возврат ДокументПКО.Ссылка;
	
Конецфункции

&НаСервере
Функция ПолучитьКонтрагента(Партнер)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.Ссылка
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	Контрагенты.Партнер = &Партнер";
				   
	Запрос.УстановитьПараметр("Партнер", Партнер);
	
	Результат 	= Запрос.Выполнить();
	Выборка		= Результат.Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Справочники.Контрагенты.ПустаяСсылка());
	
КонецФункции





&НаКлиенте
Процедура СписокКлиентовПриАктивизацииСтроки(Элемент)
	
	Долг 	= 0;
	Сумма 	= 0;
	
	ПодключитьОбработчикОжидания("ОбработчикВыделенияСтроки", 0.4, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикВыделенияСтроки()
	
	ПолучитьДолгПартнера(Элементы.СписокКлиентов.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДолгПартнера(ПартнерСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ВложенныйЗапрос.ДолгКлиента * ((КурсЗапроса.Курс/КурсЗапроса.Кратность)/(КурсКассы.Курс/КурсКассы.Кратность))) КАК ДолгКлиента
		|ИЗ
		|(
		|	ВЫБРАТЬ
		|		РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|		РасчетыСКлиентами.ЗаказКлиента КАК ЗаказКлиента,
		|		РасчетыСКлиентами.Валюта КАК Валюта,
		|			
		|		ВЫБОР КОГДА РасчетыСКлиентами.СуммаОстаток > 0 ТОГДА
		|			РасчетыСКлиентами.СуммаОстаток
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ ДолгКлиента
		|			
		|	ИЗ
		|		РегистрНакопления.РасчетыСКлиентами.Остатки(,) КАК РасчетыСКлиентами
		|		
		|	ГДЕ
		|		РасчетыСКлиентами.АналитикаУчетаПоПартнерам.Партнер = &Партнер
		|) КАК ВложенныйЗапрос
        |
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(,) КАК КурсЗапроса
		|ПО
		|	КурсЗапроса.Валюта = ВложенныйЗапрос.Валюта
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(,Валюта = &ВалютаКассы) КАК КурсКассы
		|ПО
		|	(ИСТИНА)";
		
	Запрос.УстановитьПараметр("Партнер", ПартнерСсылка);
	Запрос.УстановитьПараметр("ВалютаКассы", Касса.ВалютаДенежныхСредств);
		
	РезультатЗапроса 	= Запрос.Выполнить();
	Выборка				= РезультатЗапроса.Выбрать();
	
	Долг 	= ?(Выборка.Следующий(), Выборка.ДолгКлиента, 0);
	Сумма   = Долг;
	
КонецПроцедуры