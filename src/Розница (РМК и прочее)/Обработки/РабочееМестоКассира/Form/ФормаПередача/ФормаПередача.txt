#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Касса 			= Параметры.Касса;
	
	КомментарийЗаголовок = "Комментарий:";
	
	Заголовок = Касса.Наименование;
	
	Организация = Касса.Владелец;
	
	Операция = "Выдача ДС в другую кассу";
	
	ИнициализироватьЗаголовки();
	
	ПолучитьСуммуВКассе();
	
	ИнициализироватьВалюты();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы 
&НаКлиенте
Процедура Передать(Команда)
	
	Если ПроверкаЗаполнения() Тогда
		
		СсылкаНаДокумент 	= СоздатьДокументРКО();
		НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(СсылкаНаДокумент);
		ПоказатьОповещениеПользователя("Документ создан.", НавигационнаяСсылка, Строка(СсылкаНаДокумент), БиблиотекаКартинок.Информация32);
		
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетВзаиморасчетыПоКлиенту(Команда)	
	ОткрытьФорму("Отчет.РасчетыСКлиентами.Форма");
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоЭквайрингу(Команда)
	ОткрытьФорму("ВнешняяОбработка.РабочееМестоКассира.Форма.ФормаУниверсальногоОтчета", Новый Структура("Касса, ТипОтчета", Касса, "ОтчетПоЭквайрингу"));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьСуммуВКассе()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДенежныеСредства.СуммаКонечныйОстаток КАК СейчасВКассе
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные.ОстаткиИОбороты(&Дата,, Авто,, Касса = &Касса) КАК ДенежныеСредства";
	
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Касса", Касса);
	
	РезультатЗапрос = Запрос.Выполнить();
	Выборка			= РезультатЗапрос.Выбрать();
	
	СуммаВКассе 	= ?(Выборка.Следующий(), Выборка.СейчасВКассе, 0);
	СуммаКПередаче 	= 0;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьЗаголовки()
	
	СуммаВКассеЗаголовок 		= "Сумма в кассе:";
	СуммаКПередачеЗаголовок 	= "Сумма к передаче:";
	ОперацияЗаголовок			= "Операция:";
	КассаПолучательЗаголовок    = "Касса получатель:";
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьВалюты()
	
	СуммаВКассеВалюта 		= Касса.ВалютаДенежныхСредств.Наименование;
	СуммаКПередачеВалюта    = Касса.ВалютаДенежныхСредств.Наименование;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция СформироватьСписокКасс(Операция, КассаОтправитель)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрКассы.Ссылка КАК Касса
	|ИЗ
	|	Справочник.Кассы КАК СпрКассы
	|ГДЕ
	|	СпрКассы.ВалютаДенежныхСредств = &ВалютаКассыОтправителя " +
	?(Операция = "Выдача ДС в другую кассу", " И СпрКассы.Владелец = &ОрганизацияКассыОтправителя" ," ") + "
	|И	НЕ СпрКассы.Ссылка = &ТекущаяКасса";
	
	Запрос.УстановитьПараметр("ВалютаКассыОтправителя", КассаОтправитель.ВалютаДенежныхСредств);
	Запрос.УстановитьПараметр("ОрганизацияКассыОтправителя", КассаОтправитель.Владелец);
	Запрос.УстановитьПараметр("ТекущаяКасса", КассаОтправитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Касса");
	
КонецФункции

&НаКлиенте
Процедура КассаПолучательНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	Элементы.КассаПолучатель.СписокВыбора.ЗагрузитьЗначения(СформироватьСписокКасс(Операция, Касса));
КонецПроцедуры

&НаКлиенте
Процедура КассаПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	Обработчик 				= Новый ОписаниеОповещения("ВыборКассаПолучательИзВыпадающегоСписка", ЭтаФорма);
	СписокВыбора			= Новый СписокЗначений;
	
	СписокВыбора.ЗагрузитьЗначения(СформироватьСписокКасс(Операция, Касса));
	
	НачальныйЭлемент = СписокВыбора.НайтиПоЗначению(КассаПолучатель);
	Если НачальныйЭлемент = Неопределено Тогда
		ПоказатьВыборИзСписка(Обработчик, СписокВыбора, Элемент);
	Иначе 
		ПоказатьВыборИзСписка(Обработчик, СписокВыбора, Элемент, НачальныйЭлемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКассаПолучательИзВыпадающегоСписка(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		КассаПолучатель = ВыбранныйЭлемент.Значение;
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Функция ПроверкаЗаполнения()
	
	Если СуммаВКассе < СуммаКПередаче Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сумма к передаче не может быть больше суммы в кассе.";
		Сообщение.Поле	= "СуммаКПередаче";
		
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если СуммаКПередаче = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сумма к передаче в другую кассу должна быть больше 0.";
		Сообщение.Поле	= "СуммаКПередаче";
		
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КассаПолучатель) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Укажыте кассу получатель.";
		Сообщение.Поле 	= "КассаПолучатель";
		
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
		
	Возврат Истина;
	
КонецФункции


&НаСервере
Функция СоздатьДокументРКО()
	
	ДокументРКО = Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
	
	ДокументРКО.Заполнить(Неопределено);
	ДокументРКО.Дата = ТекущаяДата();
	ДокументРКО.УстановитьНовыйНомер();
	
	ДокументРКО.НеКонтролироватьЗаполнениеЗаявки = Истина;
			
	Если Операция = "Выдача ДС в другую организацию" Тогда
		
		ДокументРКО.СтатьяДвиженияДенежныхСредств   = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаДенежныхСредствВДругуюОрганизацию;
		ДокументРКО.ХозяйственнаяОперация			= Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию;
		
		НоваяСтрока 						= ДокументРКО.РасшифровкаПлатежа.Добавить();
		НоваяСтрока.Сумма   				= СуммаКПередаче;
		//НоваяСтрока.СуммаВзаиморасчетов 	= СуммаКПередаче;
		НоваяСтрока.ВалютаВзаиморасчетов    = Константы.ВалютаУправленческогоУчета.Получить();//Касса.ВалютаДенежныхСредств;
		
	Иначе
		
		ДокументРКО.СтатьяДвиженияДенежныхСредств   = Справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВДругуюКассу;
		ДокументРКО.ХозяйственнаяОперация			= Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу;
		
	КонецЕсли;
	
	ДокументРКО.Валюта 					= КассаПолучатель.ВалютаДенежныхСредств;	
	ДокументРКО.Организация 			= Касса.Владелец;
	ДокументРКО.ОрганизацияПолучатель   = КассаПолучатель.Владелец;
	ДокументРКО.Касса					= Касса;
	ДокументРКО.КассаПолучатель			= КассаПолучатель;
	ДокументРКО.СуммаДокумента			= СуммаКПередаче;
	ДокументРКО.Кассир					= ПараметрыСеанса.ТекущийПользователь;
	
	Если Не ПустаяСтрока(Комментарий) Тогда
		ДокументРКО.Комментарий = Комментарий;
	КонецЕсли;
	
	Попытка
		ДокументРКО.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Оперативный);
		РеквизитФормыВЗначение("Объект").ДобавитьСсылкуВИсториюРаботыПользователя(ДокументРКО.Ссылка);
	Исключение
		
	КонецПопытки;
		
	Возврат ДокументРКО.Ссылка;
	
КонецФункции




&НаКлиенте
Процедура ОтчетПовсемВзаиморасчетам(Команда)
	ОткрытьФорму("ВнешняяОбработка.РабочееМестоКассира.Форма.ФормаУниверсальногоОтчета", Новый Структура("Организация, ТипОтчета", Организация, "ОтчетПоВсемВзаиморасчетам"));	
КонецПроцедуры


&НаКлиенте
Функция СформироватьОтчет(ИмяОтчета, НаименованиеОтчета, ПараметрыОтчета)
	
	Попытка
		ПодключитьВнешнююОбработку(ИмяОтчета, Ложь);	
		ФормаОтчета = ПолучитьФорму("ВнешнийОтчет." + НаименованиеОтчета + ".Форма", 
		ПараметрыОтчета,
		ЭтаФорма,
		УникальныйИдентификатор);
		
		ФормаОтчета.Открыть();
		Если НаименованиеОтчета <> "ВзаиморасчетыПоКлиенту" Тогда
			ФормаОтчета.СкомпоноватьРезультат();
		КонецЕсли;
		ФормаОтчета.Активизировать();
	Исключение
		Сообщить("Отчет " + ИмяОтчета + " не найден");
	КонецПопытки;
	
КонецФункции
  
&НаСервере
Функция ПодключитьВнешнююОбработку(НаименованиеОтчета, БезопасныйРежим)
	
	ВнешняяОбработка = ПолучитьСсылкуНаОбработкуОтчет(НаименованиеОтчета);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДвоичныеДанныеОбработки 	= ВнешняяОбработка.ПолучитьОбъект().ХранилищеОбработки.Получить();
	АдресВоВременномХранилище 	= ПоместитьВоВременноеХранилище(ДвоичныеДанныеОбработки);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ВнешниеОтчеты.Подключить(АдресВоВременномХранилище,, БезопасныйРежим);
	
КонецФункции

&НаСервере
Функция ПолучитьСсылкуНаОбработкуОтчет(Наименование)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДополнительныеОбработки.Ссылка
	|ИЗ
	|	Справочник.ДополнительныеОтчетыИОбработки КАК ДополнительныеОбработки
	|ГДЕ
	|	ДополнительныеОбработки.Наименование = &Наименование
	|И	ДополнительныеОбработки.ПометкаУдаления = Ложь";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ссылка;
		
	КонецЕсли;
	
	Возврат Справочники.ДополнительныеОтчетыИОбработки.ПустаяСсылка();
	
КонецФункции


#КонецОбласти
