
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗагрузитьТаблицуНастроек();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ТекстВопроса = НСтр("ru='Настройки шаблонов ценников были изменены. Сохранить настройки?'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		Ответ 		 = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			РезультатЗаписи = ЗаписатьТаблицуНастроек();
			Если РезультатЗаписи Тогда
				Модифицированность = Ложь;
				Возврат;
			Иначе
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			Модифицированность = Ложь;
			Возврат;
		Иначе
			Отказ = Истина;
		КонецЕсли;	
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗаписатьНастройки(Команда)
	РезультатЗаписи = ЗаписатьТаблицуНастроек();
	Если РезультатЗаписи Тогда
		Модифицированность = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиЦенников

&НаКлиенте
Процедура НастройкиЦенниковПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Загрузка таблицы настроек из регистра в талицу значений НастройкиЦенников.
//
&НаСервере
Процедура ЗагрузитьТаблицуНастроек()

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Организация				КАК Организация,
	                      |	ВидНоменклатуры			КАК ВидНоменклатуры,
	                      |	ШаблонЦенника       	КАК ШаблонЦенника
	                      |ИЗ
	                      |	РегистрСведений.КТС_НастройкиЦенников.СрезПоследних(&ТекущаяДата, )");
						 	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	НастройкиЦенников.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры // ПолучитьТаблицуНастроек()

// Запись таблицы НастройкиЦенников в регистр КТС_НастройкиЦенников
//
// Возвращаемое значение:
//  Истина   - запись прошла успешно, Ложь - запись не удалась.
//
&НаСервере
Функция ЗаписатьТаблицуНастроек()

	УстановитьПривилегированныйРежим(Истина);
	
	Период 			  = ТекущаяДатаСеанса();	
	РезультатПроверки = ВыполнитьПроверкуЗаполненияТаблицы(Период);
	
	Если Не РезультатПроверки Тогда
		Возврат Ложь;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	НаборЗаписей = РегистрыСведений.КТС_НастройкиЦенников.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Период);
	НаборЗаписей.Загрузить(НастройкиЦенников.Выгрузить());
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		ОтменитьТранзакцию();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	Возврат Истина;

КонецФункции // ЗаписатьТаблицуНастроек()
 
// Проверяет таблицу НастройкиЦенников перед записью в регистр. Если найдено ошибку -
// выводит удобное сообщение.
// Также процедура устанавливает поле период (необходимо для записи в регистр всей
// таблицей) и текущего пользователя (для истории).
//
// Параметры:
//	Период - Дата - период для записи в регистр.
//
// Возвращаемое значение:
//  Истина   - проверка прошла успешно, Ложь - проверка не удалась.
//
&НаСервере
Функция ВыполнитьПроверкуЗаполненияТаблицы(Период)
	
	РезультатПроверки 	= Истина;
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;

	Для каждого СтрокаТаблицы Из НастройкиЦенников Цикл
		
		СтрокаТаблицы.Период 		= Период;
		СтрокаТаблицы.Пользователь 	= ТекущийПользователь;
	
		Если СтрокаТаблицы.Организация.Пустая() Тогда
			Поле 			  = "НастройкиЦенников[%1].Организация";
			Поле 			  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Поле, НастройкиЦенников.Индекс(СтрокаТаблицы));
			РезультатПроверки = Ложь;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Поле «Организация» обязательное к заполнению.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),, Поле);
		КонецЕсли;
		
		Если СтрокаТаблицы.ШаблонЦенника.Пустая() Тогда
			Поле 			  = "НастройкиЦенников[%1].ШаблонЦенника";
			Поле			  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Поле, НастройкиЦенников.Индекс(СтрокаТаблицы));
			РезультатПроверки = Ложь;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Поле «Шаблон» обязательное к заполнению.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),, Поле);
		КонецЕсли;
	
	КонецЦикла; 
	
	Возврат РезультатПроверки;

КонецФункции // ВыполнитьПроверкуЗаполненияТаблицы()

#КонецОбласти