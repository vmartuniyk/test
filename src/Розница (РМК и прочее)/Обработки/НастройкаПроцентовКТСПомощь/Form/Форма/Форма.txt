
#Область ИнтерфейсАвтоматическихТестов

&НаКлиенте
Перем ЮнитТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СписокТестов = Новый Массив;
	
	ПараметрыТеста = Новый Структура("ИмяТеста, Транзакция, Параметр", "Тест_Заглушка");	
	СписокТестов.Добавить(ПараметрыТеста);
	
	Возврат СписокТестов;
	
КонецФункции

&НаКлиенте
Процедура Тест_Заглушка(Параметр) Экспорт
	ЮнитТест.ПроверитьИстину(Истина, );
КонецПроцедуры // Тест_Заглушка()

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;	
	КонецЕсли;
	
	ОтветственныйПользователь = Справочники.Пользователи.ПолучитьСсылку(Новый УникальныйИдентификатор("df42269d-c4e0-11e1-9d4d-001e673c80fc"));
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	Если ОтветственныйПользователь = ТекущийПользователь Или РольДоступна("ПолныеПрава") Тогда 
		Элементы.НастройкиКоэффициентовЗП.Видимость = Истина;
	Иначе 
		Элементы.НастройкиКоэффициентовЗП.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Настройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиПроцентовКТСПомощь", , , "ДополнительныеНастройкиПроцентовКТСПомощь");
	Если ТипЗнч(Настройки) = Тип("Структура") Тогда
		Настройки.Свойство("ПроцентПродажыУслуги", ПроцентПродажыУслуги);
		Настройки.Свойство("ПроцентИсполненияУслуги", ПроцентИсполненияУслуги);
		Настройки.Свойство("СвойствоПомощьКТС", СвойствоПомощьКТС);
		Настройки.Свойство("ВидНоменклатурыСертификаты", ВидНоменклатурыСертификаты);
		Настройки.Свойство("ПроцентОтПродажыСертификата", ПроцентОтПродажыСертификата);
		Если Настройки.Свойство("НастройкаСертификатов") Тогда
			НастройкаСертификатов.Загрузить(Настройки.НастройкаСертификатов.Получить());
		КонецЕсли;
		ЗагрузитьНастройкиПроцентов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Модифицированность Тогда
		РезультатОтвета = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
			ЗаписатьНастройкиНаСервере();
		ИначеЕсли РезультатОтвета = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Год = Год(ТекущаяДата());
	СформироватьСписокВыбораМесяца();
	СформироватьСписокВыбораГода();
	ЗаполнитьНастройкаКоэффициентов();
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПроцентПродажыУслугиПриИзменении(Элемент)
	Модифицированность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПроцентИсполненияУслугиПриИзменении(Элемент)
	Модифицированность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура СвойствоПомощьКТСПриИзменении(Элемент)
	Модифицированность=Истина;
КонецПроцедуры


&НаКлиенте
Процедура ГруппаСертификаты1ПриИзменении(Элемент)
	Модифицированность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПроцентОтПродажыСертификатаПриИзменении(Элемент)
	Модифицированность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении(Элемент)
	Если Модифицированность Тогда 
		Режим = РежимДиалогаВопрос.ДаНет;                                 
		Ответ = Вопрос("Значение коэффициентов было изменено.Сохранить изменения?", Режим, 0);
		Если Ответ = КодВозвратаДиалога.Да Тогда
	    	СохранитьНастройкиКоэффициентов();
		КонецЕсли;
    КонецЕсли;
	Если ЗначениеЗаполнено(Число(Элемент.ТекстРедактирования)) Тогда 
		ЗаполнитьНастройкаКоэффициентов();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкаПроцетов

&НаКлиенте
Процедура НастройкаПроцетовПриИзменении(Элемент)
	Модифицированность=Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкаКоэффициентов

&НаКлиенте
Процедура НастройкаКоэффициентовКоэффициентПриИзменении(Элемент)
	//Модифицированность=Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкаСертификатов

&НаКлиенте
Процедура НастройкаСертификатовПриИзменении(Элемент)
	Модифицированность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСертификатовВидыНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.НастройкаСертификатов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ОткрытьФормуМодально("ВнешняяОбработка.НастройкаПроцентовКТСПомощь.Форма.ФормаВыбора", 
								Новый Структура("ВидыНоменклатуры", ТекущиеДанные.ВидыНоменклатуры.ВыгрузитьЗначения()), ЭтаФорма);
								
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ВидыНоменклатуры.ЗагрузитьЗначения(Результат);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСертификатовСертификатНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВидНоменклатурыСертификаты.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо задать настройку вида номенклатуры для сертификатов'"),
										,
										"ВидНоменклатурыСертификаты");
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.НастройкаСертификатов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	Иначе
		Номенклатура = ТекущиеДанные.Сертификат;
	КонецЕсли;
	
	Результат = ОткрытьФормуМодально("ВнешняяОбработка.НастройкаПроцентовКТСПомощь.Форма.ФормаВыбораСертификата", 
								Новый Структура("Номенклатура, ВидНоменклатуры", Номенклатура, ВидНоменклатурыСертификаты), ЭтаФорма);
								
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Сертификат = Результат;
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)
	ПроверитьНаЗаполнение();
	ЗаписатьНастройкиНаСервере();
	Модифицированность=Ложь;
КонецПроцедуры
 
&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	ПроверитьНаЗаполнение();
	ЗаписатьНастройкиНаСервере();
	Модифицированность=Ложь;
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьНастройкиПроцентов()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КТСПомощь.Номенклатура,
	                      |	КТСПомощь.ПроцентПродажы,
	                      |	КТСПомощь.ПроцентИсполнения
	                      |ИЗ
	                      |	РегистрСведений.КТСПомощь КАК КТСПомощь");
						  
	НастройкаПроцентов.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры // ЗагрузитьНастройкиПроцентов()

&НаСервере
Процедура ЗаписатьНастройкиНаСервере()

	УстановитьПривилегированныйРежим(Истина);
	
	Настройки = Новый Структура;
	Настройки.Вставить("ПроцентПродажыУслуги", ПроцентПродажыУслуги);
	Настройки.Вставить("ПроцентИсполненияУслуги", ПроцентИсполненияУслуги);
	Настройки.Вставить("СвойствоПомощьКТС", СвойствоПомощьКТС);
	Настройки.Вставить("ВидНоменклатурыСертификаты", ВидНоменклатурыСертификаты);
	Настройки.Вставить("ПроцентОтПродажыСертификата", ПроцентОтПродажыСертификата);
	Настройки.Вставить("НастройкаСертификатов", Новый ХранилищеЗначения(НастройкаСертификатов.Выгрузить(),Новый СжатиеДанных(9)));
	СохранитьНастройкиПроцентов();
   	СохранитьНастройкиКоэффициентов();

	ХранилищеНастроекДанныхФорм.Сохранить("ДополнительныеНастройкиПроцентовКТСПомощь", , Настройки, , "ДополнительныеНастройкиПроцентовКТСПомощь");

КонецПроцедуры // ЗаписатьНастройкиНаСервере()

&НаСервере
Процедура СохранитьНастройкиПроцентов()
	
	НаборЗаписей = РегистрыСведений.КТСПомощь.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(НастройкаПроцентов.Выгрузить());
	НаборЗаписей.Записать();
	
КонецПроцедуры // СохранитьНастройкиПроцентов()
 
&НаСервере
Процедура СформироватьСписокВыбораМесяца()
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление =  1; ЭлементСписка.Значение = "Январь";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление =  2; ЭлементСписка.Значение = "Февраль";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление =  3; ЭлементСписка.Значение = "Март";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление =  4; ЭлементСписка.Значение = "Апрель";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление =  5; ЭлементСписка.Значение = "Май";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление =  6; ЭлементСписка.Значение = "Июнь";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление =  7; ЭлементСписка.Значение = "Июль";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление =  8; ЭлементСписка.Значение = "Август";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление =  9; ЭлементСписка.Значение = "Сентябрь";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление = 10; ЭлементСписка.Значение = "Октябрь";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление = 11; ЭлементСписка.Значение = "Ноябрь";
	ЭлементСписка = СписокМесяцов.Добавить(); ЭлементСписка.Представление = 12; ЭлементСписка.Значение = "Декабрь";
КонецПроцедуры

&НаСервере
Процедура СформироватьСписокВыбораГода()
	СписокГодов = Новый  СписокЗначений;
	Индекс = 0;
	ГодНачалаИспользование = 2013;
	Пока Индекс <= 10 Цикл 
		 СписокГодов.Добавить(ГодНачалаИспользование+Индекс);
		 Индекс = Индекс+1;
	КонецЦикла;
	Элементы.Год.СписокВыбора.ЗагрузитьЗначения(СписокГодов.ВыгрузитьЗначения());
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкаКоэффициентов()
	УстановитьПривилегированныйРежим(Истина);
	НастройкаКоэффициентов.Очистить();
	Для Каждого Элемент Из СписокМесяцов Цикл 
		НоваяСтрока 				= НастройкаКоэффициентов.Добавить();
		НоваяСтрока.Год 			= Год;
		НоваяСтрока.Месяц 			= Элемент.Значение;
		НоваяСтрока.НачалоПериода	= НачалоДня(Дата(Год,Число(Элемент.Представление),01));
		НоваяСтрока.Период			= НоваяСтрока.НачалоПериода;
		НоваяСтрока.КонецПериода   	= КонецМесяца(НоваяСтрока.НачалоПериода);
	КонецЦикла;
	Запрос 				= Новый Запрос(ПолучитьТекстЗапросаПоискКоэффициентов());
	Запрос.УстановитьПараметр("НастройкиКоэффициентов", НастройкаКоэффициентов.Выгрузить());
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	НастройкаКоэффициентов.Загрузить(ТаблицаРезультат);
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиКоэффициентов()
    НаборЗаписей = РегистрыСведений.ЗаработокМенеджераМножительПоМесяцам.СоздатьНаборЗаписей();
    Для каждого Запись Из НастройкаКоэффициентов Цикл
        НаборЗаписей.Отбор.НачалоПериода.Установить(Запись.НачалоПериода);        
        НаборЗаписей.Отбор.КонецПериода.Установить(Запись.КонецПериода);
        ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Запись);
        НаборЗаписей.Записать();
        НаборЗаписей.Очистить();
	КонецЦикла; 
	Модифицированность = Ложь;
КонецПроцедуры // СохранитьНастройкиКоэффициентов()

&НаКлиенте
Функция ПроверитьНаЗаполнение()
	Если Не ЗначениеЗаполнено(Год) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru = 'Не заполнено поле года'"),,
		"Год");
		Возврат Ложь;
	Иначе 	
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаПоискКоэффициентов()
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	НастройкиКоэффициентов.НачалоПериода КАК НачалоПериода,
		|	НастройкиКоэффициентов.НачалоПериода КАК Период,
		|	НастройкиКоэффициентов.КонецПериода КАК КонецПериода,
		|	НастройкиКоэффициентов.Год КАК Год,
		|	НастройкиКоэффициентов.Месяц КАК Месяц
		|ПОМЕСТИТЬ ТЗ
		|ИЗ
		|	&НастройкиКоэффициентов КАК НастройкиКоэффициентов
		|;
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцамСрезПоследних.Коэффициент, 1) КАК Коэффициент,
		|	ТЗ.НачалоПериода КАК НачалоПериода,
		|	ТЗ.КонецПериода КАК КонецПериода,
		|	ТЗ.Год КАК Год,
		|	ТЗ.Месяц КАК Месяц,
		|	ТЗ.Период КАК Период
		|ИЗ
		|	ТЗ КАК ТЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам.СрезПоследних КАК ЗаработокМенеджераМножительПоМесяцамСрезПоследних
		|		ПО ТЗ.НачалоПериода = ЗаработокМенеджераМножительПоМесяцамСрезПоследних.НачалоПериода
		|			И ТЗ.КонецПериода = ЗаработокМенеджераМножительПоМесяцамСрезПоследних.КонецПериода";	
	Возврат ТекстЗапроса;
КонецФункции

&НаКлиенте
Процедура НастройкаКоэффициентовПриИзменении(Элемент)
	Модифицированность=Истина;
КонецПроцедуры

#КонецОбласти

