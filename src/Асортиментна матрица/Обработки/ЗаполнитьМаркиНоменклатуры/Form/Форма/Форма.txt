////////////////////////////////////////////////////////////////////////////////
// #3700: Автоматичне створення і заповнення марок в довіднику "Номенклатура" //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Количество  = 100000;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ <ИМЯ ТАБЛИЦЫ ФОРМЫ>

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыполнитьКоманду(Команда)
	СписокНоменклатуры.Очистить();
	ЗаполнитьМаркуБрендНаСервере();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьМаркуБрендНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос 				= Новый Запрос(ПолучитьТекстЗапросаПроизводитель());
	РезультатЗапроса	= Запрос.Выполнить();
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл  
		СоздатьМаркуБрендСправочник(ВыборкаИзРезультатаЗапроса.Производитель);
	КонецЦикла;
	
	
	Запрос 						= Новый Запрос(ПолучитьТекстЗапросаНоменклатура());
	РезультатЗапроса			= Запрос.Выполнить();
	ВыборкаИзРезультатаЗапроса	= РезультатЗапроса.Выбрать();
	
	Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл  
		СправочникСсылка	= ВыборкаИзРезультатаЗапроса.Ссылка;
		Справочникбъект		= СправочникСсылка.ПолучитьОбъект();
		Если Не ВыборкаИзРезультатаЗапроса.Марка = Справочники.Марки.ПустаяСсылка() Тогда 
			Справочникбъект.Марка = ВыборкаИзРезультатаЗапроса.Марка;
		КонецЕсли;
		
		Если Справочникбъект.Марка.Пустая() Тогда 
			СписокНоменклатуры.Добавить(СправочникСсылка, "Проверте марку/бренд номенклатуры");
			Продолжить;
		КонецЕсли;
		
		Попытка
			Справочникбъект.Записать();	
		Исключение
			НоваяСтрока = СписокНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СправочникСсылка);
			НоваяСтрока.Ошибка = ОписаниеОшибки();
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстЗапросаПроизводитель()
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Производители.Ссылка 											КАК Производитель
		|ИЗ
		|	Справочник.Производители КАК Производители
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Марки КАК Марки
		|		ПО Производители.Ссылка = Марки.Производитель
		|			И (НЕ Марки.ПометкаУдаления)
		|ГДЕ
		|	НЕ Производители.ПометкаУдаления
		|	И ЕСТЬNULL(Марки.Ссылка, ЗНАЧЕНИЕ(Справочник.Марки.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Марки.ПустаяСсылка)";
	Возврат ТекстЗапроса;
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаНоменклатура()
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ  "+СтрЗаменить(Количество,Символы.НПП,"")+" 
		|	Номенклатура.Ссылка 											КАК Ссылка,
		|	Номенклатура.Производитель 										КАК Производитель,
		|	ЕСТЬNULL(Марки.Ссылка, ЗНАЧЕНИЕ(Справочник.Марки.ПустаяСсылка)) КАК Марка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Марки КАК Марки
		|		ПО Номенклатура.Производитель = Марки.Производитель
		|			И (НЕ Марки.ПометкаУдаления)
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И НЕ Номенклатура.ЭтоГруппа
		|	И НЕ Номенклатура.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|	И Номенклатура.Марка = ЗНАЧЕНИЕ(Справочник.Марки.ПустаяСсылка)
		|	И НЕ Номенклатура.Производитель.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура.Код";
	Возврат ТекстЗапроса;
КонецФункции

&НаСервере
Функция  СоздатьМаркуБрендСправочник(Источник)
	
	НовыйЭлементСправочника 				= Справочники.Марки.СоздатьЭлемент();
	НовыйЭлементСправочника.Наименование	= Источник.Наименование;
	НовыйЭлементСправочника.Производитель	= Источник.Ссылка;
	
	Попытка
		НовыйЭлементСправочника.Записать();
	Исключение
	КонецПопытки;
	
	Возврат ?(Не НовыйЭлементСправочника.Ссылка.Пустая(), НовыйЭлементСправочника.Ссылка, Справочники.Марки.ПустаяСсылка());
	
КонецФункции



