
&НаКлиенте
Процедура ПеренаправитьВызовНаМодуль(мФорма, мПарам1=Неопределено, мПарам2=Неопределено, мПарам=Неопределено) Экспорт
	
	ОбъектФормы = мФорма.Объект;
			
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыводитьУлицу", Истина);
	ПараметрыФормы.Вставить("Адрес", мФорма[мПарам1.Имя]);
	
	Если мПарам2 <> Неопределено Тогда
		ПараметрыФормы.Вставить("ЭтоПартнер", мПарам2);
	КонецЕсли;
	
	Результат = ОткрытьФормуМодально("Справочник.ВариантыМаршрутов.Форма.ПодборИзКлассификатора", ПараметрыФормы);
	
	Если Результат <> Неопределено Тогда
		
		мФорма[мПарам1.Имя] = Результат;
		мФорма.Модифицированность = Истина;
		
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиНачалоВыбора(Форма) Экспорт
	
	ОбъектФормы = Форма.Объект;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Адрес", 			ОбъектФормы.АдресДоставки);
	ПараметрыФормы.Вставить("ВыводитьУлицу", 	Истина);
	
	Результат = ОткрытьФормуМодально("Справочник.Маршруты_Маршруты.Форма.ПодборИзКлассификатора", ПараметрыФормы);
	Если Результат <> Неопределено Тогда
		Форма.Модифицированность = Истина;
		ОбъектФормы.АдресДоставки = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСкладаПартнераНачалоВыбора(Форма) Экспорт
	
	ОбъектФормы = Форма.Объект;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Адрес", 			ОбъектФормы.КТС_АдресСкладаПеревозчика);
	ПараметрыФормы.Вставить("ВыводитьУлицу", 	Истина);
	
	Результат = ОткрытьФормуМодально("Справочник.Маршруты_Маршруты.Форма.ПодборИзКлассификатора", ПараметрыФормы);
	Если Результат <> Неопределено Тогда
		Форма.Модифицированность = Истина;
		ОбъектФормы.АдресДоставки = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоперемещенияТоварыОтмененоПриИнменении(Форма) Экспорт
	
	ЗаказСсылка = Форма.Объект.Ссылка;
	ОткрытьФормуОбработки("ФормаЗаказыНаПеремещение", Новый Структура("ЗаказКлиента", ЗаказСсылка,,Ложь));
	
КонецПроцедуры



&НаСервере
Функция ПолучитьПунктНазначенияПоАдресу(АдресДоставки) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьГородПоАдресу(АдресДоставки);
КонецФункции // ПолучитьПунктНазначенияПоАдресу()
 



&НаКлиенте
Функция ОткрытьФормуОбработки(ИмяФорми, ПараметрыФормы, Родитель=Неопределено, Модально=Истина) Экспорт
	
	Результат = Истина;
	
	Если Модально Тогда
		Результат = ОткрытьФормуМодально("ВнешняяОбработка.Маршруты_АдресныйКлассификатор.Форма." + ИмяФорми, ПараметрыФормы, Родитель);
	Иначе
		ОткрытьФорму("ВнешняяОбработка.Маршруты_АдресныйКлассификатор.Форма." + ИмяФорми, ПараметрыФормы, Родитель, Новый УникальныйИдентификатор);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьАдресПартнера(ПартнерСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПартнерыКонтактнаяИнформация.Ссылка,
	|	ПартнерыКонтактнаяИнформация.Представление
	|ИЗ
	|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
	|ГДЕ
	|	ПартнерыКонтактнаяИнформация.Ссылка = &Ссылка
	|И	ПартнерыКонтактнаяИнформация.Тип = &Тип");	
	Запрос.УстановитьПараметр("Тип", 	Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Ссылка", ПартнерСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат ?(Выборка.Следующий(), Выборка.Представление, "");
	
КонецФункции



&НаСервере
Функция ПолучитьМаршрутПоАдресу(АдресДоставки) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМаршрутПоАдресу(АдресДоставки);	
КонецФункции 

&НаСервере
Функция ПолучитьМаршрутПоПареСкладов(СкладОтправитель, СкладПолучатель) Экспорт	
	УстановитьПривилегированныйРежим(Истина);
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьМаршрутПоПареСкладов(СкладОтправитель, СкладПолучатель);	
КонецФункции

&НаСервере
Функция ПолучитьГородПоАдресу(АдресДоставки) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьГородПоАдресу(АдресДоставки);		
КонецФункции

&НаСервере
Процедура ВключитьАдресВМаршурт(АдресДоставки, Маршрут) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	РеквизитФормыВЗначение("Объект").ВключитьСкладыВМаршурт(АдресДоставки, Маршрут);	
КонецПроцедуры

&НаСервере
Процедура ВключитьСкладыВМаршурт(СкладОтправитель, СкладПолучатель, Маршрут) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	РеквизитФормыВЗначение("Объект").ВключитьСкладыВМаршурт(СкладОтправитель, СкладПолучатель, Маршрут);
КонецПроцедуры 

&НаСервере
Функция ПолучитьВремяИДатаВыезда(ДатаДокумента, Маршрут) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьВремяИДатаВыезда(ДатаДокумента, Маршрут);	
КонецФункции




