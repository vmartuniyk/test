////////////////////////////////////////////////////////////////////////////////
// ИНТЕРФЕЙС АВТОМАТИЧЕСКИХ ТЕСТОВ

Перем ЮнитТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СпиокТестов = Новый Массив;	
	Возврат СпиокТестов;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СслыкаНаДокумент 			= Параметры.СсылкаНаДокумент;
	ДеревоСписокНоменклатуры 	= РеквизитФормыВЗначение("СписокНоменклатуры", Тип("ДеревоЗначений"));
	Дерево						= ПолучитьИзВременногоХранилища(Параметры.АдресДерева);
	Для каждого СтрокаДерева Из Дерево.Строки Цикл
		Строка 				= ДеревоСписокНоменклатуры.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаДерева);
		Для каждого СтрокаПодстроки Из СтрокаДерева.Строки Цикл
			Подстрока 						= Строка.Строки.Добавить();
			Подстрока.ЗаказПоставщикуДоп	= СтрокаПодстроки.ЗаказПоставщикуДоп;
			Подстрока.Поставщик 			= СтрокаПодстроки.Поставщик;
			Подстрока.НомерТТН 				= СтрокаПодстроки.НомерТТН;
			Подстрока.НазначениеДоп			= СтрокаПодстроки.НазначениеДоп;
			Подстрока.КоличествоДоп 		= СтрокаПодстроки.КоличествоДоп;
			Подстрока.КоличествоОстатокДоп	= СтрокаПодстроки.КоличествоОстатокДоп;
			Подстрока.ЕдиницаИзмеренияДоп 	= СтрокаПодстроки.ЕдиницаИзмеренияДоп;
			Подстрока.ЦенаДоп 				= СтрокаПодстроки.ЦенаДоп;
			Подстрока.DDPДоп 				= СтрокаПодстроки.DDPДоп;
			Подстрока.УпаковкаДоп 			= СтрокаПодстроки.УпаковкаДоп;
			Подстрока.КодСтрокиДоп	 		= СтрокаПодстроки.КодСтрокиДоп;
		КонецЦикла; 
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(ДеревоСписокНоменклатуры, "СписокНоменклатуры");
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	ПровестиДокументНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрытьДокумент(Команда)
	ПровестиДокументНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ НА КЛИЕНТЕ 
&НаКлиенте
Процедура ПровестиДокументНаКлиенте()
	ПересчитатьDDP  =	Ложь;
	ТоварыЗаказа 	=	ВладелецФормы.Объект.Товары;
	УникальныйИндентификаторСтроки = 1;	
	Для каждого Строка  Из ТоварыЗаказа Цикл
		НоваяСтрока = 	Объект.ТоварыИзЗаказа.Добавить();
		НоваяСтрока.УникальныйИндентификаторСтроки =УникальныйИндентификаторСтроки;
		УникальныйИндентификаторСтроки = УникальныйИндентификаторСтроки+1;
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка) 
	КонецЦикла;

	
	ПересчитатьDDP  = Ложь;
	Результат 		= ПровестиДокументНаСервере();
	
	
	Если Результат Тогда
		ФормаДокумента	= ВладелецФормы;
		ОбъектФормы		= ФормаДокумента.Объект;
		ДокументТовары	= ОбъектФормы.Товары;
		ДокументТовары.Очистить();	
		СтруктураДействий = Новый Структура;
		ЗаполнитьСтруктуруДействия(СтруктураДействий, ОбъектФормы);
		Для Каждого ТекущаяСтрока Из Объект.Товары Цикл
			НоваяСтрока = ДокументТовары.Добавить();
			Если ТекущаяСтрока.КодСтроки =	0 Тогда 
				ТекущаяСтрока.КодСтроки	 = Новый УникальныйИдентификатор();
			КонецЕсли;
			СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", НоваяСтрока.Упаковка);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, );
		КонецЦикла;
	Иначе
		ПоказатьОповещениеПользователя("Документ проведен без изменений:", ПолучитьНавигационнуюСсылку(СслыкаНаДокумент), Строка(СслыкаНаДокумент), БиблиотекаКартинок.Информация32);
	КонецЕсли;
	Закрыть(Ложь);
КонецПроцедуры // ПровестиДокументНаКлиенте()



////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБРАБОТКИ ТАБЛИЦИ ФОРМЫ

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтоговыеПоказателиЗаказа(Форма)
	
	// Заполнение итогов по таблице "Товары"
	
	КоллекцияТовары = Форма.Объект.Товары;
	
	Форма.СуммаЗаказано     = КоллекцияТовары.Итог("СуммаСНДСБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаСНДСОтмененоБезВозвратнойТары");
	Форма.СуммаНДСЗаказано  = КоллекцияТовары.Итог("СуммаНДСБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаНДСОтмененоБезВозвратнойТары");
	Форма.СуммаАвтоСкидки   = КоллекцияТовары.Итог("СуммаАвтоматическойСкидкиБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаАвтоматическойСкидкиОтмененоБезВозвратнойТары");
	Форма.СуммаРучнойСкидки = КоллекцияТовары.Итог("СуммаРучнойСкидкиБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаРучнойСкидкиОтмененоБезВозвратнойТары");
	Форма.СуммаСкидки       = Форма.СуммаАвтоСкидки + Форма.СуммаРучнойСкидки;
	Форма.СуммаОтменено     = КоллекцияТовары.Итог("СуммаСНДСОтмененоБезВозвратнойТары");
	
	Если КоллекцияТовары.Итог("СуммаСНДСОтмененоБезВозвратнойТары") = КоллекцияТовары.Итог("СуммаСНДСБезВозвратнойТары") Тогда
		Форма.ВсеСтрокиОтменены = Истина;
	Иначе
		Форма.ВсеСтрокиОтменены = Ложь;
	КонецЕсли;
	
	СуммаЗаказано = КоллекцияТовары.Итог("СуммаБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаОтмененоБезВозвратнойТары");
	
	Если СуммаЗаказано > 0 Тогда
		Форма.ПроцентАвтоСкидки   = Форма.СуммаАвтоСкидки * 100 / (СуммаЗаказано + Форма.СуммаСкидки);
		Форма.ПроцентРучнойСкидки = Форма.СуммаРучнойСкидки * 100 / (СуммаЗаказано + Форма.СуммаСкидки);
		Форма.ПроцентСкидки       = Форма.ПроцентАвтоСкидки + Форма.ПроцентРучнойСкидки;
	ИначеЕсли Форма.СуммаСкидки > 0 Тогда
		Форма.ПроцентАвтоСкидки   = Форма.СуммаАвтоСкидки * 100 / Форма.СуммаСкидки;
		Форма.ПроцентРучнойСкидки = Форма.СуммаРучнойСкидки * 100 / Форма.СуммаСкидки;
		Форма.ПроцентСкидки       = 100;
	Иначе
		Форма.ПроцентАвтоСкидки   = 0;
		Форма.ПроцентРучнойСкидки = 0;
		Форма.ПроцентСкидки       = 0;
	КонецЕсли;
	
	// Заполнение итогов по этапам оплаты
	
	ПредыдущееЗначениеДаты = Дата(1,1,1);
	Форма.НомерСтрокиПолнойОплаты = 0;
	ПроцентПлатежейОбщий = 0;
	
	Форма.СуммаАвансаДоОбеспечения = 0;
	Форма.СуммаПредоплатыДоОтгрузки = 0;
	Форма.СуммаКредитаПослеОтгрузки = 0;
	Форма.ПроцентАвансаДоОбеспечения = 0;
	Форма.ПроцентПредоплатыДоОтгрузки = 0;
	Форма.ПроцентКредитаПослеОтгрузки = 0;
	
	СоответствиеВариантовОплаты = Новый Соответствие;
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.АвансДоОбеспечения"),
	Новый Структура("Сумма, Проценты", "СуммаАвансаДоОбеспечения", "ПроцентАвансаДоОбеспечения"));
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки"),
	Новый Структура("Сумма, Проценты", "СуммаПредоплатыДоОтгрузки", "ПроцентПредоплатыДоОтгрузки"));
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.КредитПослеОтгрузки"),
	Новый Структура("Сумма, Проценты", "СуммаКредитаПослеОтгрузки", "ПроцентКредитаПослеОтгрузки"));
	
	Для Каждого ТекСтрока Из Форма.Объект.ЭтапыГрафикаОплаты Цикл
		ПроцентПлатежейОбщий = ПроцентПлатежейОбщий + ТекСтрока.ПроцентПлатежа;
		ТекСтрока.ПроцентЗаполненНеВерно = (ПроцентПлатежейОбщий > 100);
		ТекСтрока.ДатаЗаполненаНеВерно = (ПредыдущееЗначениеДаты > ТекСтрока.ДатаПлатежа);
		ПредыдущееЗначениеДаты = ТекСтрока.ДатаПлатежа;
		Если ПроцентПлатежейОбщий = 100 Тогда
			Форма.НомерСтрокиПолнойОплаты = ТекСтрока.НомерСтроки;
		КонецЕсли;
		ИменаЭлементов = СоответствиеВариантовОплаты[ТекСтрока.ВариантОплаты];
		Если ИменаЭлементов <> Неопределено Тогда
			Форма[ИменаЭлементов.Сумма] = Форма[ИменаЭлементов.Сумма] + ТекСтрока.СуммаПлатежа;
			Форма[ИменаЭлементов.Проценты] = Форма[ИменаЭлементов.Проценты] + ТекСтрока.ПроцентПлатежа;
		КонецЕсли;
	КонецЦикла;
	
	// Выбор странцицы отображения НДС
	
	Если Форма.Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС")
		ИЛИ Форма.Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД") Тогда
		
		Форма.Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Форма.Элементы.СтраницаБезНДС;
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоБезНДС;
		
	Иначе
		
		Форма.Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Форма.Элементы.СтраницаСНДС;
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоСНДС;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСтруктуруДействия(СтруктураДействий, ОбъектФормы)
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(ОбъектФормы);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	СтруктураДействий.Вставить("ПересчитатьСуммуРучнойСкидки");
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать", Ложь));
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	
	СтруктураДействий.Вставить("ЗаполнитьСодержание", 
	ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияСодержанияУслугиВСтрокеТЧ(ОбъектФормы, Ложь));
	//СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов"		, ПолучитьСтруктуруЗависимыхРеквизитов());
	//СтруктураДействий.Вставить("ЗаполнитьПризнакБезВозвратнойТары"			, ОбъектФормы.ВернутьМногооборотнуюТару);
	//СтруктураДействий.Вставить("ЗаполнитьПризнакОтмененоБезВозвратнойТары"	, ОбъектФормы.ВернутьМногооборотнуюТару);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтруктуруЗависимыхРеквизитов()
	
	Возврат Новый Структура(
	"БезВозвратнойТары,ОтмененоБезВозвратнойТары",
	"Сумма,СуммаНДС,СуммаСНДС,СуммаАвтоматическойСкидки,СуммаРучнойСкидки",
	"Сумма,СуммаНДС,СуммаСНДС,СуммаАвтоматическойСкидки,СуммаРучнойСкидки");
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ   С ПРОВЕДЕНИЯМ ДОКУМЕНТА

&НаСервере
Процедура ОтменитьСтрокуВЗаказе()
	УстановитьПривилегированныйРежим(Истина);
	УслугаDDP 				= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор("8014b949-4cca-4dc2-808e-e6fb286406d2"));

	Запрос					= Новый Запрос;
	Запрос.Текст			= ПолучитьТекстЗапросаСпискаНоменклатурыДляОтмени();		
	Запрос.УстановитьПараметр("СписокНоменклатурыДляОтменения",СписокОтменныхЗаказов.Выгрузить());
	
	РезультатЗапроса		= Запрос.Выполнить();
	ПричиныОтмены			= Справочники.ПричиныОтменыЗаказовПоставщикам.ПолучитьСсылку(Новый УникальныйИдентификатор("3b8e4dd8-221d-11e2-b1c4-14dae9dfbe72"));
	ВыборкаЗаказПоставщика	= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаЗаказПоставщика.Следующий() Цикл
		
		ЗаказСсылка			= ВыборкаЗаказПоставщика.ЗаказПоставщика;
		ЗаказОбъект			= ЗаказСсылка.ПолучитьОбъект();
		Товары 				= ЗаказОбъект.Товары;
		КоличествоСтрокСDDP = Товары.НайтиСтроки(Новый Структура("Номенклатура",УслугаDDP));
		Если КоличествоСтрокСDDP.Количество()>0 Тогда
			СтрокаУслугаDDP 	= КоличествоСтрокСDDP[0];
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи 	= ВыборкаЗаказПоставщика.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Номенклатура 	= ВыборкаДетальныеЗаписи.Номенклатура;
			КодСтрокиДоп	= ВыборкаДетальныеЗаписи.КодСтрокиДоп;
			СтруктураПоиска = Новый Структура("Номенклатура, КодСтроки", Номенклатура,КодСтрокиДоп);
			
			МассивСтрок 	= Товары.НайтиСтроки(СтруктураПоиска);
			Для каждого СтрокаТЧ Из МассивСтрок Цикл
				СтрокаТЧ.Отменено 			= Истина;    			
				СтрокаТЧ.ПричинаОтмены  	= ПричиныОтмены;
				Если СтрокаТЧ.DDP И СтрокаУслугаDDP<>Неопределено Тогда
					СтрокаТЧ.DDP				= Ложь;
					СтрокаУслугаDDP.Цена		= СтрокаУслугаDDP.Цена-СтрокаТЧ.КурсоваяРазницаDDP;
					СтрокаУслугаDDP.Сумма		= СтрокаУслугаDDP.Цена;
				КонецЕсли;
				СтрокаТЧ.КурсоваяРазницаDDP = 0;    			
				СтрокаТЧ.СуммаСDDP		 	= 0;
			КонецЦикла;
		КонецЦикла;
	
		Если СтрокаУслугаDDP<>Неопределено Тогда
			Если СтрокаУслугаDDP.Цена<=0 Тогда
				ЗаказОбъект.Товары.Удалить(СтрокаУслугаDDP);
			КонецЕсли;
		КонецЕсли;
		Если МассивСтрок.Количество() > 0 Тогда
			ЗаказОбъект.ЗаполнитьЭтапыГрафикаОплаты();
			ЗаказОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ОтменитьСтрокуВЗаказе()

&НаСервере
Функция ПровестиДокументНаСервере()
	
	ОтменитьСтроки 	= Ложь;
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Флаг", Истина);
		
	ДеревоСписокНоменклатуры 	= РеквизитФормыВЗначение("СписокНоменклатуры", Тип("ДеревоЗначений")); 
	Для каждого СтрокаДерева Из ДеревоСписокНоменклатуры.Строки Цикл
		Номенклатура 	= СтрокаДерева.Номенклатура;
		НайденныеСтроки = СтрокаДерева.Строки.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество()>0 Тогда
			ПеренестиЗначенияНоменклатурыСОтменогоЗаказа(НайденныеСтроки,Номенклатура);
			ОтменитьСтроки = Истина;
		КонецЕсли;
	КонецЦикла;

	Если ОтменитьСтроки Тогда
		Изменения 	= 	ПеребратьНоменклатураДокументаВладельца();
		ИтогДо		= 	Объект.ТоварыИзЗаказа.Итог("Количество");
		ИтогПосле	=	Объект.Товары.Итог("Количество");
		Если  ИтогДо=ИтогПосле И Изменения Тогда
			Если ПересчитатьDDP Тогда
				ПодготовитьТаблицуТоваровДляПересчетаDDP();
			КонецЕсли; 
			ОтменитьСтрокуВЗаказе();
			Возврат Изменения;
		КонецЕсли;	
	КонецЕсли;
	Возврат Ложь;	
КонецФункции // ПровестиДокументНаСервере()

&НаСервере
Процедура ПеренестиЗначенияНоменклатурыСОтменогоЗаказа(Массив,Номенклатура)
	Для Каждого Строка Из Массив Цикл
		НоваяСтрока = СписокОтменныхЗаказов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		НоваяСтрока.Номенклатура = Номенклатура;
	КонецЦикла;
КонецПроцедуры // ПеренестиЗначенияНоменклатурыСОтменогоЗаказа()

&НаСервере
Функция ПеребратьНоменклатураДокументаВладельца()
	УстановитьПривилегированныйРежим(Истина);
	
	УслугаDDP 		= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор("8014b949-4cca-4dc2-808e-e6fb286406d2"));
	Проведен		= СслыкаНаДокумент.Проведен;
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= ПолучитьТекстЗапросаНоменклатурыПослеОтмены();
	Запрос.УстановитьПараметр("СписокЗаказовПоставщиков",СписокОтменныхЗаказов.Выгрузить());
	Запрос.УстановитьПараметр("Товары",Объект.ТоварыИзЗаказа.Выгрузить());
	Запрос.УстановитьПараметр("ЗаказПоставщику",СслыкаНаДокумент);
	Запрос.УстановитьПараметр("Проведен",Проведен);
	Запрос.УстановитьПараметр("УслугаDDP",УслугаDDP);

	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	
	РезультатПакета				= Запрос.ВыполнитьПакет();
	ПроверкаНаИзмененияЗапроса 	= РезультатПакета[2].Пустой();
	ПроверкаПеребивкиDDP		= РезультатПакета[1].Пустой();
	

	Если НЕ ПроверкаНаИзмененияЗапроса Тогда
		Если НЕ ПроверкаПеребивкиDDP Тогда
			ПересчитатьDDP = Истина;
		КонецЕсли;
		Объект.Товары.Очистить();
		Объект.Товары.Загрузить(РезультатЗапроса.Выгрузить());	
	Иначе Возврат Ложь;
	КонецЕсли;
	
	Если ПривилегированныйРежим()  Тогда
	     УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли; 
	Возврат Истина;
КонецФункции // ПеребратьНоменклатураДокументаВладельца(Номенклатура)


///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ДЛЯ ОБРАБОТКИ DDP
&НаСервере
Процедура ПодготовитьТаблицуТоваровДляПересчетаDDP()
	
	УслугаDDP 				= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор("8014b949-4cca-4dc2-808e-e6fb286406d2"));
	КоличествоСтрокСDDP = Объект.Товары.НайтиСтроки(Новый Структура("DDP",Истина)); 
	
	// Пересоздаем номенклатуру услуга ДДР
	Массив 				= Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура",УслугаDDP));
	Если Массив.Количество()>0 Тогда
		СтрокаУслугаDDP 		= Массив[0]; 
		Объект.Товары.Удалить(СтрокаУслугаDDP);	
	КонецЕсли;
	
	Если КоличествоСтрокСDDP.Количество()>0 Тогда
		СтрокаУслугаDDP = Объект.Товары.Добавить();
		СтрокаУслугаDDP.Номенклатура 			= УслугаDDP;
		СтрокаУслугаDDP.Цена 					= 0;
		СтрокаУслугаDDP.КодСтроки 				= 0;
		СтатьяРасходовУникальныйИдентификатор	= Новый УникальныйИдентификатор("c18cfac8-ae9b-11e3-80c2-001e676b0174");
		СтрокаУслугаDDP.СтатьяРасходов			= ПланыВидовХарактеристик.СтатьиРасходов.ПолучитьСсылку(СтатьяРасходовУникальныйИдентификатор);
		СтрокаУслугаDDP.КоличествоУпаковок		= 1;
		СтрокаУслугаDDP.Количество 				= 1;
		СтрокаУслугаDDP.ДатаПоступления			= ТекущаяДата();
	КонецЕсли;
	
	Для каждого ТекущаяСтрока Из КоличествоСтрокСDDP Цикл
		Если ТекущаяСтрока.СуммаСDDP<>0 И ТекущаяСтрока.КурсоваяРазницаDDP<>0   Тогда
			Если СслыкаНаДокумент.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС И Не СслыкаНаДокумент.ЦенаВключаетНДС  Тогда 
				ТекПроцентНДС		=	ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(ТекущаяСтрока.СтавкаНДС);
				СуммаНДС 			=	ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(ТекущаяСтрока.СуммаСDDP, ТекПроцентНДС, Не СслыкаНаДокумент.ЦенаВключаетНДС);
				ТекущаяСтрока.Цена	=	(ТекущаяСтрока.СуммаСDDP-СуммаНДС)/ТекущаяСтрока.КоличествоУпаковок;
			Иначе
				ТекущаяСтрока.Цена	=	ТекущаяСтрока.СуммаСDDP/ТекущаяСтрока.КолчествоДоDDP;	
			КонецЕсли;
			ТекущаяСтрока.СуммаСDDP 			= 0;
			ТекущаяСтрока.КурсоваяРазницаDDP	= 0;
		КонецЕсли; 
		ПриИзменениеЦеныОбработатьСтрокуТЧ(ТекущаяСтрока);
		ТоварыDDPПриИзмененииНаСервере(ТекущаяСтрока);
	КонецЦикла;
КонецПроцедуры // ПодготовитьТаблицуТоваровДляПересчетаDDP()

&НаСервере
Процедура ТоварыDDPПриИзмененииНаСервере(ТекущаяСтрока)
	
	УслугаDDP 				= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор("8014b949-4cca-4dc2-808e-e6fb286406d2"));
	
	КурсыВалюты 	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(Справочники.Валюты.ПолучитьСсылку(Новый УникальныйИдентификатор("f255395e-a9e2-11e3-80c2-001e676b0174")), СслыкаНаДокумент.Дата);
	КурсDDP 		= КурсыВалюты.Курс;					
	
	КурсыВалюты		= РаботаСКурсамиВалют.ПолучитьКурсВалюты(Константы.ВалютаУправленческогоУчета.Получить(), СслыкаНаДокумент.Дата);
	КурсУпр 		= КурсыВалюты.Курс;	
	
	ТекущаяСтрока.СуммаСDDP 			= ТекущаяСтрока.СуммаСНДС;
	ТекущаяСтрока.Цена  				= ТекущаяСтрока.Цена*КурсDDP/КурсУпр;
	
	ПриИзменениеЦеныОбработатьСтрокуТЧ(ТекущаяСтрока);
	ТекущаяСтрока.КурсоваяРазницаDDP 	= ТекущаяСтрока.СуммаСDDP - ТекущаяСтрока.СуммаСНДС;
	
	Массив = Объект.Товары.НайтиСтроки(Новый	Структура("Номенклатура",УслугаDDP));
	
	СтрокаУслугаDDP 						= Массив[0]; 
	СтрокаУслугаDDP.Цена  					= СтрокаУслугаDDP.Цена + ТекущаяСтрока.КурсоваяРазницаDDP;
	СтрокаУслугаDDP.СтавкаНДС				= Перечисления.СтавкиНДС.БезНДС;
	СтрокаУслугаDDP.КоличествоУпаковок			= 1;
	СтрокаУслугаDDP.Количество 					= 1;
	ПриИзменениеЦеныОбработатьСтрокуТЧ(СтрокаУслугаDDP);
	СтрокаУслугаDDP.ДатаПоступления				= ТекущаяДата();
	
КонецПроцедуры	

&НаСервере
Процедура ПриИзменениеЦеныОбработатьСтрокуТЧ(ТекущаяСтрока)
	СтруктураДействий	= Новый Структура;	
	ЗаполнитьСтруктуруДействий(СтруктураДействий);
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);
КонецПроцедуры	

&НаСервере	
Процедура ЗаполнитьСтруктуруДействий(СтруктураДействий)
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(СслыкаНаДокумент);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
	//СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ПолучитьСтруктуруЗависимыхРеквизитов());
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
// Функция текстов запросов
&НаСервере
Функция ПолучитьТекстЗапросаНоменклатурыПослеОтмены()
	ТекстЗапроса ="ВЫБРАТЬ
	              |	СписокНазначения.Номенклатура КАК Номенклатура,
	              |	СписокНазначения.НазначениеДоп КАК Назначение,
	              |	СписокНазначения.КоличествоДоп КАК КоличествоОстаток,
	              |	СписокНазначения.УпаковкаДоп КАК Упаковка,
	              |	СписокНазначения.DDPДоп КАК DDP
	              |ПОМЕСТИТЬ ТаблицаОтменныхЗаказов
	              |ИЗ
	              |	&СписокЗаказовПоставщиков КАК СписокНазначения
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТаблицаОтменныхЗаказов.Номенклатура КАК Номенклатура,
	              |	МАКСИМУМ(ТаблицаОтменныхЗаказов.DDP) КАК DDP
	              |ПОМЕСТИТЬ КешDDP
	              |ИЗ
	              |	ТаблицаОтменныхЗаказов КАК ТаблицаОтменныхЗаказов
				  | ГДЕ
				  |  ТаблицаОтменныхЗаказов.DDP=ИСТИНА
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ТаблицаОтменныхЗаказов.Номенклатура
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТаблицаОтменныхЗаказов.Номенклатура КАК Номенклатура,
	              |	ТаблицаОтменныхЗаказов.Назначение,
	              |	СУММА(ТаблицаОтменныхЗаказов.КоличествоОстаток) КАК КоличествоОстаток,
	              |	ТаблицаОтменныхЗаказов.Упаковка КАК Упаковка,
	              |	МАКСИМУМ(ТаблицаОтменныхЗаказов.DDP) КАК DDP
	              |ПОМЕСТИТЬ ПроверкаНаРазнесенияНазначенияССпискаОтменныхЗаказов
	              |ИЗ
	              |	ТаблицаОтменныхЗаказов КАК ТаблицаОтменныхЗаказов
	              |ГДЕ
	              |	(ТаблицаОтменныхЗаказов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	              |			ИЛИ ТаблицаОтменныхЗаказов.DDP = ЛОЖЬ)
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ТаблицаОтменныхЗаказов.Номенклатура,
	              |	ТаблицаОтменныхЗаказов.Назначение,
	              |	ТаблицаОтменныхЗаказов.Упаковка
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТаблицаОтменныхЗаказов.Номенклатура КАК Номенклатура,
	              |	ТаблицаОтменныхЗаказов.Назначение,
	              |	ТаблицаОтменныхЗаказов.КоличествоОстаток,
	              |	ТаблицаОтменныхЗаказов.Упаковка КАК Упаковка,
	              |	ТаблицаОтменныхЗаказов.DDP
	              |ПОМЕСТИТЬ РазнесенияНазначенияССпискаОтменныхЗаказов
	              |ИЗ
	              |	ТаблицаОтменныхЗаказов КАК ТаблицаОтменныхЗаказов
	              |ГДЕ
	              |	ТаблицаОтменныхЗаказов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ЗаказПоставщикуТовары.НомерСтроки КАК НомерСтроки,
	              |	ЗаказПоставщикуТовары.НоменклатураПоставщика,
	              |	ЗаказПоставщикуТовары.УникальныйИндентификаторСтроки,
	              |	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
	              |	ЗаказПоставщикуТовары.Характеристика,
	              |	ЗаказПоставщикуТовары.Упаковка КАК Упаковка,
	              |	ЗаказПоставщикуТовары.КоличествоУпаковок,
	              |	ЗаказПоставщикуТовары.Количество,
	              |	ЗаказПоставщикуТовары.ДатаПоступления,
	              |	ЗаказПоставщикуТовары.УсловиеЦеныПоставщика,
	              |	ЗаказПоставщикуТовары.Цена,
	              |	ЗаказПоставщикуТовары.Сумма,
	              |	ЗаказПоставщикуТовары.ПроцентРучнойСкидки,
	              |	ЗаказПоставщикуТовары.СуммаРучнойСкидки,
	              |	ЗаказПоставщикуТовары.СтавкаНДС,
	              |	ЗаказПоставщикуТовары.СуммаНДС,
	              |	ЗаказПоставщикуТовары.СуммаСНДС,
	              |	ЗаказПоставщикуТовары.КодСтроки,
	              |	ЗаказПоставщикуТовары.Отменено,
	              |	ЗаказПоставщикуТовары.СтатьяРасходов,
	              |	ЗаказПоставщикуТовары.АналитикаРасходов,
	              |	ЗаказПоставщикуТовары.ПричинаОтмены,
	              |	ЗаказПоставщикуТовары.Склад,
	              |	ЗаказПоставщикуТовары.Назначение,
	              |	ЗаказПоставщикуТовары.DDP,
	              |	ЗаказПоставщикуТовары.КурсоваяРазницаDDP,
	              |	ЗаказПоставщикуТовары.СуммаСDDP,
	              |	ЗаказПоставщикуТовары.Количество КАК КолчествоДоDDP
	              |ПОМЕСТИТЬ ТаблицаТоваров
	              |ИЗ
	              |	&Товары КАК ЗаказПоставщикуТовары
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	НомерСтроки,
	              |	Номенклатура,
	              |	Упаковка
	              |;
	              |
				  |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	&ЗаказПоставщику КАК ЗаказПоставщику,
	              |	ТаблицаТоваров.КодСтроки,
	              |	ТаблицаТоваров.УникальныйИндентификаторСтроки,
	              |	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	              |	ТаблицаТоваров.Склад КАК Склад,
	              |	ТаблицаТоваров.Упаковка КАК Упаковка,
	              |	ТаблицаТоваров.Количество КАК Количество,
	              |	ТаблицаТоваров.Цена КАК Цена
	              |ПОМЕСТИТЬ КешНоменклатура
	              |ИЗ
	              |	ТаблицаТоваров КАК ТаблицаТоваров
	              |ГДЕ
	              |	НЕ ТаблицаТоваров.Отменено
	              |	И НЕ ТаблицаТоваров.Номенклатура = &УслугаDDP
	              |	И ТаблицаТоваров.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	КешНоменклатура.ЗаказПоставщику КАК ЗаказПоставщику,
	              |	КешНоменклатура.УникальныйИндентификаторСтроки,
	              |	КешНоменклатура.КодСтроки КАК КодСтроки,
	              |	КешНоменклатура.Номенклатура КАК Номенклатура,
	              |	КешНоменклатура.Склад КАК Склад,
	              |	КешНоменклатура.Упаковка КАК Упаковка,
	              |	КешНоменклатура.Количество,
	              |	КешНоменклатура.Цена,
	              |	ВЫБОР
	              |		КОГДА &Проведен
	              |			ТОГДА ЕСТЬNULL(ЗаказыПоставщикамОстатки.ЗаказаноОстаток, 0)
	              |		ИНАЧЕ КешНоменклатура.Количество
	              |	КОНЕЦ КАК КоличествоОстаток
	              |ПОМЕСТИТЬ ОприходованоПоЗаказу
	              |ИЗ
	              |	КешНоменклатура КАК КешНоменклатура
	              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Остатки(, ) КАК ЗаказыПоставщикамОстатки
	              |		ПО КешНоменклатура.ЗаказПоставщику = ЗаказыПоставщикамОстатки.ЗаказПоставщику
	              |			И КешНоменклатура.Номенклатура = ЗаказыПоставщикамОстатки.Номенклатура
	              |			И КешНоменклатура.КодСтроки = ЗаказыПоставщикамОстатки.КодСтроки
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	РазнесенияНазначения.Номенклатура КАК Номенклатура,
	              |	РазнесенияНазначения.Упаковка КАК Упаковка,
	              |	РазнесенияНазначения.Назначение,
	              |	РазнесенияНазначения.КоличествоОстаток,
	              |	РазнесенияНазначения.DDP
	              |ПОМЕСТИТЬ ТаблицаДляПереназначения
	              |ИЗ
	              |	ОприходованоПоЗаказу КАК ОприходованоПоЗаказу
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РазнесенияНазначенияССпискаОтменныхЗаказов КАК РазнесенияНазначения
	              |		ПО ОприходованоПоЗаказу.Номенклатура = РазнесенияНазначения.Номенклатура
	              |			И ОприходованоПоЗаказу.Упаковка = РазнесенияНазначения.Упаковка
	              |ГДЕ
	              |	ОприходованоПоЗаказу.Количество = ОприходованоПоЗаказу.КоличествоОстаток
	              |	И РазнесенияНазначения.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	Таб.Номенклатура КАК Номенклатура,
	              |	Таб.Упаковка КАК Упаковка,
	              |	Таб.Назначение,
	              |	СУММА(Таб.КоличествоОстаток) КАК КоличествоОстаток,
	              |	ВЫРАЗИТЬ(Таб.Назначение КАК Справочник.Назначения).Заказ КАК НазначениеЗаказ,
	              |	МАКСИМУМ(Таб.DDP) КАК DDP
	              |ПОМЕСТИТЬ НоменклатураСНазначениям
	              |ИЗ
	              |	ТаблицаДляПереназначения КАК Таб
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	Таб.Номенклатура,
	              |	Таб.Упаковка,
	              |	Таб.Назначение,
	              |	ВЫРАЗИТЬ(Таб.Назначение КАК Справочник.Назначения).Заказ
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НоменклатураСНазначениям.Номенклатура,
	              |	НоменклатураСНазначениям.Назначение,
	              |	НоменклатураСНазначениям.Упаковка,
	              |	СУММА(НоменклатураСНазначениямКопия.КоличествоОстаток) - НоменклатураСНазначениям.КоличествоОстаток КАК СуммаДо,
	              |	СУММА(НоменклатураСНазначениямКопия.КоличествоОстаток) КАК СуммаПосле,
	              |	НоменклатураСНазначениям.DDP
	              |ПОМЕСТИТЬ НаростающиеПоНазначению
	              |ИЗ
	              |	НоменклатураСНазначениям КАК НоменклатураСНазначениям
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураСНазначениям КАК НоменклатураСНазначениямКопия
	              |		ПО НоменклатураСНазначениям.Номенклатура = НоменклатураСНазначениямКопия.Номенклатура
	              |			И НоменклатураСНазначениям.Упаковка = НоменклатураСНазначениямКопия.Упаковка
			      |			И НоменклатураСНазначениям.НазначениеЗаказ.Ссылка >= НоменклатураСНазначениямКопия.НазначениеЗаказ.Ссылка
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	НоменклатураСНазначениям.Номенклатура,
	              |	НоменклатураСНазначениям.Назначение,
	              |	НоменклатураСНазначениям.Упаковка,
	              |	НоменклатураСНазначениям.КоличествоОстаток,
	              |	НоменклатураСНазначениям.DDP
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	НоменклатураСНазначениям.Номенклатура,
	              |	НоменклатураСНазначениям.Назначение,
	              |	НоменклатураСНазначениям.Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ РАЗЛИЧНЫЕ
	              |	ОприходованоПоЗаказу.ЗаказПоставщику,
	              |	ОприходованоПоЗаказу.КодСтроки КАК КодСтроки,
	              |	ОприходованоПоЗаказу.Номенклатура КАК Номенклатура,
	              |	ОприходованоПоЗаказу.УникальныйИндентификаторСтроки,
	              |	ОприходованоПоЗаказу.Упаковка КАК Упаковка,
	              |	ОприходованоПоЗаказу.Количество,
	              |	РазнесенияНазначения.DDP
	              |ПОМЕСТИТЬ ТаблицаДляПереназначенияТовары
	              |ИЗ
	              |	ОприходованоПоЗаказу КАК ОприходованоПоЗаказу
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РазнесенияНазначенияССпискаОтменныхЗаказов КАК РазнесенияНазначения
	              |		ПО ОприходованоПоЗаказу.Номенклатура = РазнесенияНазначения.Номенклатура
	              |			И ОприходованоПоЗаказу.Упаковка = РазнесенияНазначения.Упаковка
	              |ГДЕ
	              |	ОприходованоПоЗаказу.Количество = ОприходованоПоЗаказу.КоличествоОстаток
	              |	И РазнесенияНазначения.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка,
	              |	КодСтроки
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТаблицаДляПереназначенияТовары.КодСтроки,
	              |	ТаблицаДляПереназначенияТовары.УникальныйИндентификаторСтроки,
	              |	ТаблицаДляПереназначенияТовары.Номенклатура КАК Номенклатура,
	              |	ТаблицаДляПереназначенияТовары.Упаковка КАК Упаковка,
	              |	СУММА(Копия.Количество) - ТаблицаДляПереназначенияТовары.Количество КАК СуммаДо,
	              |	СУММА(Копия.Количество) КАК СуммаПосле,
	              |	ТаблицаДляПереназначенияТовары.DDP
	              |ПОМЕСТИТЬ НаростающиеПоНоменклатуре
	              |ИЗ
	              |	ТаблицаДляПереназначенияТовары КАК ТаблицаДляПереназначенияТовары
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДляПереназначенияТовары КАК Копия
	              |		ПО ТаблицаДляПереназначенияТовары.ЗаказПоставщику = Копия.ЗаказПоставщику
	              |			И ТаблицаДляПереназначенияТовары.Номенклатура = Копия.Номенклатура
	              |			И ТаблицаДляПереназначенияТовары.Упаковка = Копия.Упаковка
	              |			И ТаблицаДляПереназначенияТовары.КодСтроки >= Копия.КодСтроки
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ТаблицаДляПереназначенияТовары.КодСтроки,
	              |	ТаблицаДляПереназначенияТовары.УникальныйИндентификаторСтроки,
	              |	ТаблицаДляПереназначенияТовары.Номенклатура,
	              |	ТаблицаДляПереназначенияТовары.Упаковка,
	              |	ТаблицаДляПереназначенияТовары.Количество,
	              |	ТаблицаДляПереназначенияТовары.DDP
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка,
	              |	СуммаПосле
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НаростающиеПоНоменклатуре.Номенклатура КАК Номенклатура,
	              |	НаростающиеПоНоменклатуре.СуммаПосле КАК Точка,
	              |	НаростающиеПоНоменклатуре.Упаковка КАК Упаковка
	              |ПОМЕСТИТЬ ТочкиПересечений
	              |ИЗ
	              |	НаростающиеПоНоменклатуре КАК НаростающиеПоНоменклатуре
	              |
	              |ОБЪЕДИНИТЬ
	              |
	              |ВЫБРАТЬ
	              |	НаростающиеПоНазначению.Номенклатура,
	              |	НаростающиеПоНазначению.СуммаПосле,
	              |	НаростающиеПоНазначению.Упаковка
	              |ИЗ
	              |	НаростающиеПоНазначению КАК НаростающиеПоНазначению
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Точка,
	              |	Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	НаростающиеПоНазначению.Номенклатура КАК Номенклатура,
	              |	НаростающиеПоНазначению.Упаковка КАК Упаковка,
	              |	МАКСИМУМ(НаростающиеПоНазначению.СуммаПосле) КАК КоличествоОстаток
	              |ПОМЕСТИТЬ КоличествоРазнесения
	              |ИЗ
	              |	НаростающиеПоНазначению КАК НаростающиеПоНазначению
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	НаростающиеПоНазначению.Номенклатура,
	              |	НаростающиеПоНазначению.Упаковка
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТочкиПересечений.Номенклатура КАК Номенклатура,
	              |	ТочкиПересечений.Точка,
	              |	ТочкиПересечений.Упаковка КАК Упаковка,
	              |	НаростающиеПоНоменклатуре.КодСтроки КАК СтарыйКодСтроки,
	              |	НаростающиеПоНоменклатуре.УникальныйИндентификаторСтроки КАК УникальныйИндентификаторСтроки,
	              |	ВЫБОР
	              |		КОГДА НаростающиеПоНоменклатуре.СуммаДо >= НаростающиеПоНазначению.СуммаДо
	              |			ТОГДА НаростающиеПоНоменклатуре.КодСтроки
	              |		ИНАЧЕ 0
	              |	КОНЕЦ КАК КодСтроки,
	              |	ЕСТЬNULL(НаростающиеПоНазначению.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
	              |	ВЫБОР
	              |		КОГДА ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаПосле, 0) >= ЕСТЬNULL(НаростающиеПоНазначению.СуммаПосле, 0)
	              |				И ЕСТЬNULL(НаростающиеПоНазначению.СуммаПосле, 0) <> 0
	              |				И ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаДо, 0) <= ЕСТЬNULL(НаростающиеПоНазначению.СуммаДо, 0)
	              |			ТОГДА ЕСТЬNULL(НаростающиеПоНазначению.СуммаПосле, 0) - ЕСТЬNULL(НаростающиеПоНазначению.СуммаДо, 0)
	              |		КОГДА ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаПосле, 0) > ЕСТЬNULL(НаростающиеПоНазначению.СуммаДо, 0)
	              |				И ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаПосле, 0) < ЕСТЬNULL(НаростающиеПоНазначению.СуммаПосле, 0)
	              |			ТОГДА ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаПосле, 0) - ЕСТЬNULL(НаростающиеПоНазначению.СуммаДо, 0)
	              |		КОГДА ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаПосле, 0) >= ЕСТЬNULL(НаростающиеПоНазначению.СуммаПосле, 0)
	              |				И ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаДо, 0) > ЕСТЬNULL(НаростающиеПоНазначению.СуммаДо, 0)
	              |				И ЕСТЬNULL(НаростающиеПоНазначению.СуммаПосле, 0) <> 0
	              |			ТОГДА ЕСТЬNULL(НаростающиеПоНазначению.СуммаПосле, 0) - ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаДо, 0)
	              |		КОГДА ЕСТЬNULL(НаростающиеПоНазначению.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	              |				И ЕСТЬNULL(КоличествоРазнесения.КоличествоОстаток, 0) <> 0
	              |			ТОГДА ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаПосле, 0) - ЕСТЬNULL(КоличествоРазнесения.КоличествоОстаток, 0)
	              |		ИНАЧЕ ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаПосле, 0) - ЕСТЬNULL(НаростающиеПоНоменклатуре.СуммаДо, 0)
	              |	КОНЕЦ КАК Количество,
	              |	НаростающиеПоНоменклатуре.DDP
	              |ПОМЕСТИТЬ РазбивкаСтрокПоНазначению
	              |ИЗ
	              |	ТочкиПересечений КАК ТочкиПересечений
	              |		ЛЕВОЕ СОЕДИНЕНИЕ НаростающиеПоНоменклатуре КАК НаростающиеПоНоменклатуре
	              |			ЛЕВОЕ СОЕДИНЕНИЕ КоличествоРазнесения КАК КоличествоРазнесения
	              |			ПО НаростающиеПоНоменклатуре.Номенклатура = КоличествоРазнесения.Номенклатура
	              |				И НаростающиеПоНоменклатуре.Упаковка = КоличествоРазнесения.Упаковка
	              |				И НаростающиеПоНоменклатуре.СуммаПосле >= КоличествоРазнесения.КоличествоОстаток
	              |				И НаростающиеПоНоменклатуре.СуммаДо < КоличествоРазнесения.КоличествоОстаток
	              |		ПО ТочкиПересечений.Номенклатура = НаростающиеПоНоменклатуре.Номенклатура
	              |			И ТочкиПересечений.Точка <= НаростающиеПоНоменклатуре.СуммаПосле
	              |			И ТочкиПересечений.Точка > НаростающиеПоНоменклатуре.СуммаДо
	              |			И ТочкиПересечений.Упаковка = НаростающиеПоНоменклатуре.Упаковка
	              |		ЛЕВОЕ СОЕДИНЕНИЕ НаростающиеПоНазначению КАК НаростающиеПоНазначению
	              |		ПО ТочкиПересечений.Номенклатура = НаростающиеПоНазначению.Номенклатура
	              |			И ТочкиПересечений.Точка <= НаростающиеПоНазначению.СуммаПосле
	              |			И ТочкиПересечений.Точка > НаростающиеПоНазначению.СуммаДо
	              |			И ТочкиПересечений.Упаковка = НаростающиеПоНазначению.Упаковка
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	Номенклатура,
	              |	Упаковка
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	РазбивкаСтрокПоНазначению.Номенклатура,
	              |	РазбивкаСтрокПоНазначению.Точка,
	              |	РазбивкаСтрокПоНазначению.КодСтроки,
	              |	РазбивкаСтрокПоНазначению.УникальныйИндентификаторСтроки,
	              |	РазбивкаСтрокПоНазначению.Назначение,
	              |	РазбивкаСтрокПоНазначению.Количество,
	              |	ВЫБОР
	              |		КОГДА РазбивкаСтрокПоНазначению.DDP
	              |			ТОГДА РазбивкаСтрокПоНазначению.DDP
	              |		ИНАЧЕ ЕСТЬNULL(ТаблицаОтменныхЗаказов.DDP, ЛОЖЬ)
	              |	КОНЕЦ КАК DDP,
	              |	РазбивкаСтрокПоНазначению.СтарыйКодСтроки,
	              |	РазбивкаСтрокПоНазначению.Упаковка
	              |ПОМЕСТИТЬ РазбивкаСтрокСDDP
	              |ИЗ
	              |	РазбивкаСтрокПоНазначению КАК РазбивкаСтрокПоНазначению
	              |		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураСНазначениям КАК ТаблицаОтменныхЗаказов
	              |		ПО РазбивкаСтрокПоНазначению.Номенклатура = ТаблицаОтменныхЗаказов.Номенклатура
	              |			И РазбивкаСтрокПоНазначению.Назначение = ТаблицаОтменныхЗаказов.Назначение
	              |ГДЕ
	              |	РазбивкаСтрокПоНазначению.Количество <> 0
	              |
	              |ИНДЕКСИРОВАТЬ ПО
	              |	РазбивкаСтрокПоНазначению.Номенклатура,
	              |	РазбивкаСтрокПоНазначению.СтарыйКодСтроки
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ТаблицаТоваров.НомерСтроки,
	              |	ТаблицаТоваров.НоменклатураПоставщика,
	              |	ТаблицаТоваров.УникальныйИндентификаторСтроки,
	              |	ТаблицаТоваров.Номенклатура,
	              |	ТаблицаТоваров.Характеристика,
	              |	ТаблицаТоваров.Упаковка,
	              |	ТаблицаТоваров.КоличествоУпаковок,
	              |	ТаблицаТоваров.Количество,
	              |	ТаблицаТоваров.ДатаПоступления,
	              |	ТаблицаТоваров.УсловиеЦеныПоставщика,
	              |	ТаблицаТоваров.Цена,
	              |	ТаблицаТоваров.Сумма,
	              |	ТаблицаТоваров.ПроцентРучнойСкидки,
	              |	ТаблицаТоваров.СуммаРучнойСкидки,
	              |	ТаблицаТоваров.СтавкаНДС,
	              |	ТаблицаТоваров.СуммаНДС,
	              |	ТаблицаТоваров.СуммаСНДС,
	              |	ТаблицаТоваров.КодСтроки,
	              |	ТаблицаТоваров.Отменено,
	              |	ТаблицаТоваров.СтатьяРасходов,
	              |	ТаблицаТоваров.АналитикаРасходов,
	              |	ТаблицаТоваров.ПричинаОтмены,
	              |	ТаблицаТоваров.Склад,
	              |	ТаблицаТоваров.Назначение,
	              |	ВЫБОР
	              |		КОГДА ТаблицаТоваров.DDP
	              |			ТОГДА ТаблицаТоваров.DDP
	              |		ИНАЧЕ ЕСТЬNULL(КешDDP.DDP, ЛОЖЬ)
	              |	КОНЕЦ КАК DDP,
	              |	ТаблицаТоваров.КурсоваяРазницаDDP,
	              |	ТаблицаТоваров.СуммаСDDP,
	              |	ТаблицаТоваров.КолчествоДоDDP
	              |ИЗ
	              |	ТаблицаТоваров КАК ТаблицаТоваров
	              |		ЛЕВОЕ СОЕДИНЕНИЕ КешDDP КАК КешDDP
	              |		ПО ТаблицаТоваров.Номенклатура = КешDDP.Номенклатура
	              |ГДЕ
	              |	НЕ ТаблицаТоваров.УникальныйИндентификаторСтроки В
	              |				(ВЫБРАТЬ
	              |					РазбивкаСтрокСDDP.УникальныйИндентификаторСтроки
	              |				ИЗ
	              |					РазбивкаСтрокСDDP)
	              |
	              |ОБЪЕДИНИТЬ ВСЕ
	              |
	              |ВЫБРАТЬ
	              |	ВЫБОР
	              |		КОГДА РазбивкаСтрокСDDP.КодСтроки <> 0
	              |			ТОГДА ТаблицаТоваров.НомерСтроки
	              |		ИНАЧЕ РазбивкаСтрокСDDP.КодСтроки
	              |	КОНЕЦ,
	              |	ТаблицаТоваров.НоменклатураПоставщика,
	              |	ТаблицаТоваров.УникальныйИндентификаторСтроки,
	              |	ТаблицаТоваров.Номенклатура,
	              |	ТаблицаТоваров.Характеристика,
	              |	ТаблицаТоваров.Упаковка,
	              |	РазбивкаСтрокСDDP.Количество / ЕСТЬNULL(УпаковкиНоменклатуры.Коэффициент, 1),
	              |	РазбивкаСтрокСDDP.Количество,
	              |	ТаблицаТоваров.ДатаПоступления,
	              |	ТаблицаТоваров.УсловиеЦеныПоставщика,
	              |	ТаблицаТоваров.Цена,
	              |	ТаблицаТоваров.Сумма,
	              |	ТаблицаТоваров.ПроцентРучнойСкидки,
	              |	ТаблицаТоваров.СуммаРучнойСкидки,
	              |	ТаблицаТоваров.СтавкаНДС,
	              |	ТаблицаТоваров.СуммаНДС,
	              |	ТаблицаТоваров.СуммаСНДС,
	              |	РазбивкаСтрокСDDP.КодСтроки,
	              |	ТаблицаТоваров.Отменено,
	              |	ТаблицаТоваров.СтатьяРасходов,
	              |	ТаблицаТоваров.АналитикаРасходов,
	              |	ТаблицаТоваров.ПричинаОтмены,
	              |	ТаблицаТоваров.Склад,
	              |	РазбивкаСтрокСDDP.Назначение,
	              |	РазбивкаСтрокСDDP.DDP,
	              |	ТаблицаТоваров.КурсоваяРазницаDDP,
	              |	ТаблицаТоваров.СуммаСDDP,
	              |	ТаблицаТоваров.КолчествоДоDDP
	              |ИЗ
	              |	РазбивкаСтрокСDDP КАК РазбивкаСтрокСDDP
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	              |		ПО РазбивкаСтрокСDDP.Номенклатура = ТаблицаТоваров.Номенклатура
	              |			И РазбивкаСтрокСDDP.СтарыйКодСтроки = ТаблицаТоваров.КодСтроки
	              |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК УпаковкиНоменклатуры
	              |		ПО РазбивкаСтрокСDDP.Упаковка = УпаковкиНоменклатуры.Ссылка";
	Возврат ТекстЗапроса;
КонецФункции // ПолучитьТекстЗапросаНоменклатурыПослеОтмены()

&НаСервере
Функция ПолучитьТекстЗапросаСпискаНоменклатурыДляОтмени()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СписокНоменклатурыДляОтменения.ЗаказПоставщикуДоп,
	|	СписокНоменклатурыДляОтменения.Номенклатура,
	|	СписокНоменклатурыДляОтменения.КодСтрокиДоп
	|ПОМЕСТИТЬ КешСписокДокументов
	|ИЗ
	|	&СписокНоменклатурыДляОтменения КАК СписокНоменклатурыДляОтменения
	|;
	////////////////////////////////////////////////////////////////////////////////
	//1
	|ВЫБРАТЬ
	|	КешСписокДокументов.ЗаказПоставщикуДоп КАК ЗаказПоставщика,
	|	КешСписокДокументов.Номенклатура,
	|	КешСписокДокументов.КодСтрокиДоп
	|ИЗ
	|	КешСписокДокументов КАК КешСписокДокументов
	|ИТОГИ ПО
	|	ЗаказПоставщика";
	Возврат ТекстЗапроса;
КонецФункции // ПолучитьТекстЗапросаСпискаНоменклатурыДляОтмени()










