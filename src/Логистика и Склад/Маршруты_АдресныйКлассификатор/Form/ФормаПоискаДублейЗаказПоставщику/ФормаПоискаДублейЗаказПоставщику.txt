
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СслыкаНаДокумент 			= Параметры.СсылкаНаДокумент;
	ДеревоСписокНоменклатуры 	= РеквизитФормыВЗначение("СписокНоменклатуры", Тип("ДеревоЗначений"));
	Дерево						= ПолучитьИзВременногоХранилища(Параметры.АдресДерева);
	
	Для каждого СтрокаДерева Из Дерево.Строки Цикл
		Строка 				= ДеревоСписокНоменклатуры.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаДерева);
		Для каждого СтрокаПодстроки Из СтрокаДерева.Строки Цикл
			Подстрока 						= Строка.Строки.Добавить();
			Подстрока.ЗаказПоставщику 		= СтрокаПодстроки.ЗаказПоставщикуДоп;
			Подстрока.Поставщик 			= СтрокаПодстроки.Поставщик;
			Подстрока.НомерТТН 				= СтрокаПодстроки.НомерТТН;
			Подстрока.Назначение			= СтрокаПодстроки.Назначение;
			Подстрока.КоличествоДоп 		= СтрокаПодстроки.КоличествоДоп;
			Подстрока.КоличествоОстатокДоп	= СтрокаПодстроки.КоличествоОстатокДоп;
			Подстрока.ЕдиницаИзмеренияДоп 	= СтрокаПодстроки.ЕдиницаИзмеренияДоп;
			Подстрока.ЦенаДоп 				= СтрокаПодстроки.ЦенаДоп;
			Подстрока.DDP 					= СтрокаПодстроки.DDP;
		КонецЦикла; 
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(ДеревоСписокНоменклатуры, "СписокНоменклатуры");
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	ПровестиДокументНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрытьДокумент(Команда)
	ПровестиДокументНаКлиенте();
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ НА КЛИЕНТЕ 
&НаКлиенте
Процедура ПровестиДокументНаКлиенте()
	ПересчитатьDDP  =	Ложь;
	ТоварыЗаказа 	=	ВладелецФормы.Объект.Товары;
	УникальныйИндентификаторСтроки = 1;	
	Для каждого Строка  Из ТоварыЗаказа Цикл
		НоваяСтрока = 	Объект.ТоварыИзЗаказа.Добавить();
		НоваяСтрока.УникальныйИндентификаторСтроки =УникальныйИндентификаторСтроки;
		УникальныйИндентификаторСтроки = УникальныйИндентификаторСтроки+1;
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка) 
	КонецЦикла;
	
	ПересчитатьDDP  = Ложь;
	Результат 		= ПровестиДокументНаСервере();
	
	Если Результат Тогда
		ФормаДокумента	= ВладелецФормы;
		ОбъектФормы		= ФормаДокумента.Объект;
		ДокументТовары	= ОбъектФормы.Товары;
		ДокументТовары.Очистить();	
		СтруктураДействий = Новый Структура;
		ЗаполнитьСтруктуруДействия(СтруктураДействий, ОбъектФормы);
		Для Каждого ТекущаяСтрока Из Объект.Товары Цикл
			НоваяСтрока = ДокументТовары.Добавить();
			Если ТекущаяСтрока.КодСтроки =	0 Тогда 
				ТекущаяСтрока.КодСтроки	 = Новый УникальныйИдентификатор();
			КонецЕсли;
			СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", НоваяСтрока.Упаковка);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
			ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, );
		//	ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		КонецЦикла;
	Иначе
		ПоказатьОповещениеПользователя("Документ проведен без изменений:", ПолучитьНавигационнуюСсылку(СслыкаНаДокумент), Строка(СслыкаНаДокумент), БиблиотекаКартинок.Информация32);
	КонецЕсли;
	Закрыть(Ложь);
КонецПроцедуры // ПровестиДокументНаКлиенте()



////////////////////////////////////////////////////////////////////////////////
//ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБРАБОТКИ ТАБЛИЦИ ФОРМЫ

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтоговыеПоказателиЗаказа(Форма)
	
	// Заполнение итогов по таблице "Товары"
	
	КоллекцияТовары = Форма.Объект.Товары;
	
	Форма.СуммаЗаказано     = КоллекцияТовары.Итог("СуммаСНДСБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаСНДСОтмененоБезВозвратнойТары");
	Форма.СуммаНДСЗаказано  = КоллекцияТовары.Итог("СуммаНДСБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаНДСОтмененоБезВозвратнойТары");
	Форма.СуммаАвтоСкидки   = КоллекцияТовары.Итог("СуммаАвтоматическойСкидкиБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаАвтоматическойСкидкиОтмененоБезВозвратнойТары");
	Форма.СуммаРучнойСкидки = КоллекцияТовары.Итог("СуммаРучнойСкидкиБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаРучнойСкидкиОтмененоБезВозвратнойТары");
	Форма.СуммаСкидки       = Форма.СуммаАвтоСкидки + Форма.СуммаРучнойСкидки;
	Форма.СуммаОтменено     = КоллекцияТовары.Итог("СуммаСНДСОтмененоБезВозвратнойТары");
	
	Если КоллекцияТовары.Итог("СуммаСНДСОтмененоБезВозвратнойТары") = КоллекцияТовары.Итог("СуммаСНДСБезВозвратнойТары") Тогда
		Форма.ВсеСтрокиОтменены = Истина;
	Иначе
		Форма.ВсеСтрокиОтменены = Ложь;
	КонецЕсли;
	
	СуммаЗаказано = КоллекцияТовары.Итог("СуммаБезВозвратнойТары") - КоллекцияТовары.Итог("СуммаОтмененоБезВозвратнойТары");
	
	Если СуммаЗаказано > 0 Тогда
		Форма.ПроцентАвтоСкидки   = Форма.СуммаАвтоСкидки * 100 / (СуммаЗаказано + Форма.СуммаСкидки);
		Форма.ПроцентРучнойСкидки = Форма.СуммаРучнойСкидки * 100 / (СуммаЗаказано + Форма.СуммаСкидки);
		Форма.ПроцентСкидки       = Форма.ПроцентАвтоСкидки + Форма.ПроцентРучнойСкидки;
	ИначеЕсли Форма.СуммаСкидки > 0 Тогда
		Форма.ПроцентАвтоСкидки   = Форма.СуммаАвтоСкидки * 100 / Форма.СуммаСкидки;
		Форма.ПроцентРучнойСкидки = Форма.СуммаРучнойСкидки * 100 / Форма.СуммаСкидки;
		Форма.ПроцентСкидки       = 100;
	Иначе
		Форма.ПроцентАвтоСкидки   = 0;
		Форма.ПроцентРучнойСкидки = 0;
		Форма.ПроцентСкидки       = 0;
	КонецЕсли;
	
	// Заполнение итогов по этапам оплаты
	
	ПредыдущееЗначениеДаты = Дата(1,1,1);
	Форма.НомерСтрокиПолнойОплаты = 0;
	ПроцентПлатежейОбщий = 0;
	
	Форма.СуммаАвансаДоОбеспечения = 0;
	Форма.СуммаПредоплатыДоОтгрузки = 0;
	Форма.СуммаКредитаПослеОтгрузки = 0;
	Форма.ПроцентАвансаДоОбеспечения = 0;
	Форма.ПроцентПредоплатыДоОтгрузки = 0;
	Форма.ПроцентКредитаПослеОтгрузки = 0;
	
	СоответствиеВариантовОплаты = Новый Соответствие;
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.АвансДоОбеспечения"),
	Новый Структура("Сумма, Проценты", "СуммаАвансаДоОбеспечения", "ПроцентАвансаДоОбеспечения"));
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки"),
	Новый Структура("Сумма, Проценты", "СуммаПредоплатыДоОтгрузки", "ПроцентПредоплатыДоОтгрузки"));
	СоответствиеВариантовОплаты.Вставить(ПредопределенноеЗначение("Перечисление.ВариантыОплатыКлиентом.КредитПослеОтгрузки"),
	Новый Структура("Сумма, Проценты", "СуммаКредитаПослеОтгрузки", "ПроцентКредитаПослеОтгрузки"));
	
	Для Каждого ТекСтрока Из Форма.Объект.ЭтапыГрафикаОплаты Цикл
		ПроцентПлатежейОбщий = ПроцентПлатежейОбщий + ТекСтрока.ПроцентПлатежа;
		ТекСтрока.ПроцентЗаполненНеВерно = (ПроцентПлатежейОбщий > 100);
		ТекСтрока.ДатаЗаполненаНеВерно = (ПредыдущееЗначениеДаты > ТекСтрока.ДатаПлатежа);
		ПредыдущееЗначениеДаты = ТекСтрока.ДатаПлатежа;
		Если ПроцентПлатежейОбщий = 100 Тогда
			Форма.НомерСтрокиПолнойОплаты = ТекСтрока.НомерСтроки;
		КонецЕсли;
		ИменаЭлементов = СоответствиеВариантовОплаты[ТекСтрока.ВариантОплаты];
		Если ИменаЭлементов <> Неопределено Тогда
			Форма[ИменаЭлементов.Сумма] = Форма[ИменаЭлементов.Сумма] + ТекСтрока.СуммаПлатежа;
			Форма[ИменаЭлементов.Проценты] = Форма[ИменаЭлементов.Проценты] + ТекСтрока.ПроцентПлатежа;
		КонецЕсли;
	КонецЦикла;
	
	// Выбор странцицы отображения НДС
	
	Если Форма.Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС")
		ИЛИ Форма.Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД") Тогда
		
		Форма.Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Форма.Элементы.СтраницаБезНДС;
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоБезНДС;
		
	Иначе
		
		Форма.Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Форма.Элементы.СтраницаСНДС;
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоСНДС;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСтруктуруДействия(СтруктураДействий, ОбъектФормы)
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(ОбъектФормы);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	СтруктураДействий.Вставить("ПересчитатьСуммуРучнойСкидки");
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать", Ложь));
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	
	СтруктураДействий.Вставить("ЗаполнитьСодержание", 
	ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруЗаполненияСодержанияУслугиВСтрокеТЧ(ОбъектФормы, Ложь));
	//СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов"		, ПолучитьСтруктуруЗависимыхРеквизитов());
	//СтруктураДействий.Вставить("ЗаполнитьПризнакБезВозвратнойТары"			, ОбъектФормы.ВернутьМногооборотнуюТару);
	//СтруктураДействий.Вставить("ЗаполнитьПризнакОтмененоБезВозвратнойТары"	, ОбъектФормы.ВернутьМногооборотнуюТару);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтруктуруЗависимыхРеквизитов()
	
	Возврат Новый Структура(
	"БезВозвратнойТары,ОтмененоБезВозвратнойТары",
	"Сумма,СуммаНДС,СуммаСНДС,СуммаАвтоматическойСкидки,СуммаРучнойСкидки",
	"Сумма,СуммаНДС,СуммаСНДС,СуммаАвтоматическойСкидки,СуммаРучнойСкидки");
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ   С ПРОВЕДЕНИЯМ ДОКУМЕНТА
&НаСервере
Функция ПровестиДокументНаСервере()
	ОтменаСтроки 		= 	ПеребратьТоварДляОбробкиНаСервере();
	Возврат  ОтменаСтроки
КонецФункции // ПровестиДокументНаСервере()

&НаСервере
Процедура ОтменитьСтрокуВЗаказе()
	УстановитьПривилегированныйРежим(Истина);
	//УслугаDDP 			= ПредопределенноеЗначение("Справочник.Номенклатура.УслугаРасчетаDDP");
	//DDP--
	УслугаDDP 				= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор("8014b949-4cca-4dc2-808e-e6fb286406d2"));

	Запрос					= Новый Запрос;
	Запрос.Текст			= ПолучитьТекстЗапросаСпискаНоменклатурыДляОтмени();		
	Запрос.УстановитьПараметр("СписокНоменклатурыДляОтменения",СписокОтменныхЗаказов.Выгрузить());
	
	РезультатЗапроса		= Запрос.Выполнить();
	ПричиныОтмены			= Справочники.ПричиныОтменыЗаказовПоставщикам.ПолучитьСсылку(Новый УникальныйИдентификатор("3b8e4dd8-221d-11e2-b1c4-14dae9dfbe72"));
	ВыборкаЗаказПоставщика	= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаЗаказПоставщика.Следующий() Цикл
		
		ЗаказСсылка			= ВыборкаЗаказПоставщика.ЗаказПоставщика;
		ЗаказОбъект			= ЗаказСсылка.ПолучитьОбъект();
		Товары 				= ЗаказОбъект.Товары;
		КоличествоСтрокСDDP = Товары.НайтиСтроки(Новый Структура("Номенклатура",УслугаDDP));
		Если КоличествоСтрокСDDP.Количество()>0 Тогда
			СтрокаУслугаDDP 	= КоличествоСтрокСDDP[0];
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи 	= ВыборкаЗаказПоставщика.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Номенклатура 	= ВыборкаДетальныеЗаписи.Номенклатура;
			Назначение		= ВыборкаДетальныеЗаписи.Назначение;
			СтруктураПоиска = Новый Структура("Номенклатура, Назначение", Номенклатура,Назначение);
			МассивСтрок 	= Товары.НайтиСтроки(СтруктураПоиска);
			Для каждого СтрокаТЧ Из МассивСтрок Цикл
				СтрокаТЧ.Отменено 			= Истина;    			
				СтрокаТЧ.ПричинаОтмены  	= ПричиныОтмены;
				Если СтрокаТЧ.DDP И СтрокаУслугаDDP<>Неопределено Тогда
					СтрокаТЧ.DDP				= Ложь;
					СтрокаУслугаDDP.Цена		= СтрокаУслугаDDP.Цена-СтрокаТЧ.КурсоваяРазницаDDP;
					СтрокаУслугаDDP.Сумма		= СтрокаУслугаDDP.Цена;
				КонецЕсли;
				СтрокаТЧ.КурсоваяРазницаDDP = 0;    			
				СтрокаТЧ.СуммаСDDP		 	= 0;
			КонецЦикла;
		КонецЦикла;
		
		Если СтрокаУслугаDDP<>Неопределено Тогда
			Если СтрокаУслугаDDP.Цена<=0 Тогда
				ЗаказОбъект.Товары.Удалить(СтрокаУслугаDDP);
			КонецЕсли;
		КонецЕсли;
		Если МассивСтрок.Количество() > 0 Тогда
			ЗаказОбъект.ЗаполнитьЭтапыГрафикаОплаты();
			ЗаказОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ОтменитьСтрокуВЗаказе()

&НаСервере
Функция ПеребратьТоварДляОбробкиНаСервере()
	Объект.Товары.Загрузить(Объект.ТоварыИзЗаказа.Выгрузить());
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Флаг", Истина);
	
	ДеревоСписокНоменклатуры 	= РеквизитФормыВЗначение("СписокНоменклатуры", Тип("ДеревоЗначений")); 
	Для каждого СтрокаДерева Из ДеревоСписокНоменклатуры.Строки Цикл
		Номенклатура 	= СтрокаДерева.Номенклатура;
		НайденныеСтроки = СтрокаДерева.Строки.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество()>0 Тогда
			Изменения = ПеренестиЗначенияНоменклатурыСОтменогоЗаказа(НайденныеСтроки,Номенклатура);
		КонецЕсли;
	КонецЦикла;
	Если  Изменения=Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ИтогДо		= 	Объект.ТоварыИзЗаказа.Итог("Количество");
	ИтогПосле	=	Объект.Товары.Итог("Количество");
	
	Если  ИтогДо=ИтогПосле Тогда
		Если ПересчитатьDDP Тогда
			ПодготовитьТаблицуТоваровДляПересчетаDDP();
		КонецЕсли; 
		ОтменитьСтрокуВЗаказе();
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции // ПеребратьТоварДляОбробкиНаСервере()

&НаСервере
Функция ПеренестиЗначенияНоменклатурыСОтменогоЗаказа(Массив,Номенклатура)
	Для Каждого Строка Из Массив Цикл
		НоваяСтрока = СписокОтменныхЗаказов.Добавить();
		НоваяСтрока.Номенклатура = Номенклатура;
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		НоваяСтрока.Номенклатура = Номенклатура;
	КонецЦикла;
	Результат = ПеребратьНоменклатураДокументаВладельца(Номенклатура);
	Возврат Результат;	
КонецФункции // ПеренестиЗначенияНоменклатурыСОтменогоЗаказа()

&НаСервере
Функция ПеребратьНоменклатураДокументаВладельца(Номенклатура)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаНоменклатурыПослеОтмены();
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("СписокЗаказовПоставщиков",СписокОтменныхЗаказов.Выгрузить());
	Запрос.УстановитьПараметр("Товары",Объект.Товары.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли; 
	РезультатПакета				= Запрос.ВыполнитьПакет();
	ПроверкаНаИзмененияЗапроса 	= РезультатПакета[3].Выбрать();
	Если ПроверкаНаИзмененияЗапроса.Следующий() Тогда
		ПересчитатьDDP = Истина;
		Объект.Товары.Очистить();
		Объект.Товары.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
	Возврат Истина;
КонецФункции // ПеребратьНоменклатураДокументаВладельца(Номенклатура)


///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ДЛЯ ОБРАБОТКИ DDP
&НаСервере
Процедура ПодготовитьТаблицуТоваровДляПересчетаDDP()
	
	//УслугаDDP 			= ПредопределенноеЗначение("Справочник.Номенклатура.УслугаРасчетаDDP");
	//DDP-
	УслугаDDP 				= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор("8014b949-4cca-4dc2-808e-e6fb286406d2"));
	КоличествоСтрокСDDP = Объект.Товары.НайтиСтроки(Новый Структура("DDP",Истина)); 
	
	// Пересоздаем номенклатуру услуга ДДР
	Массив 				= Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура",УслугаDDP));
	Если Массив.Количество()>0 Тогда
		СтрокаУслугаDDP 		= Массив[0]; 
		Объект.Товары.Удалить(СтрокаУслугаDDP);	
	КонецЕсли;
	
	Если КоличествоСтрокСDDP.Количество()>0 Тогда
		СтрокаУслугаDDP = Объект.Товары.Добавить();
		СтрокаУслугаDDP.Номенклатура 			= УслугаDDP;
		СтрокаУслугаDDP.Цена 					= 0;
		СтрокаУслугаDDP.КодСтроки 				= 0;
		СтатьяРасходовУникальныйИдентификатор	= Новый УникальныйИдентификатор("c18cfac8-ae9b-11e3-80c2-001e676b0174");
		СтрокаУслугаDDP.СтатьяРасходов			= ПланыВидовХарактеристик.СтатьиРасходов.ПолучитьСсылку(СтатьяРасходовУникальныйИдентификатор);
		СтрокаУслугаDDP.КоличествоУпаковок		= 1;
		СтрокаУслугаDDP.Количество 				= 1;
		СтрокаУслугаDDP.ДатаПоступления			= ТекущаяДата();
	КонецЕсли;
	
	Для каждого ТекущаяСтрока Из КоличествоСтрокСDDP Цикл
		Если ТекущаяСтрока.СуммаСDDP<>0 И ТекущаяСтрока.КурсоваяРазницаDDP<>0   Тогда
			Если СслыкаНаДокумент.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС И Не СслыкаНаДокумент.ЦенаВключаетНДС  Тогда 
				ТекПроцентНДС		=	ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(ТекущаяСтрока.СтавкаНДС);
				СуммаНДС 			=	ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(ТекущаяСтрока.СуммаСDDP, ТекПроцентНДС, Не СслыкаНаДокумент.ЦенаВключаетНДС);
				ТекущаяСтрока.Цена	=	(ТекущаяСтрока.СуммаСDDP-СуммаНДС)/ТекущаяСтрока.КоличествоУпаковок;
			Иначе
				ТекущаяСтрока.Цена	=	ТекущаяСтрока.СуммаСDDP/ТекущаяСтрока.КолчествоДоDDP;	
			КонецЕсли;
			ТекущаяСтрока.СуммаСDDP 			= 0;
			ТекущаяСтрока.КурсоваяРазницаDDP	= 0;
		КонецЕсли; 
		ПриИзменениеЦеныОбработатьСтрокуТЧ(ТекущаяСтрока);
		ТоварыDDPПриИзмененииНаСервере(ТекущаяСтрока);
	КонецЦикла;
КонецПроцедуры // ПодготовитьТаблицуТоваровДляПересчетаDDP()

&НаСервере
Процедура ТоварыDDPПриИзмененииНаСервере(ТекущаяСтрока)
	
	//УслугаDDP 		= ПредопределенноеЗначение("Справочник.Номенклатура.УслугаРасчетаDDP");
	//DDP--
	УслугаDDP 				= Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор("8014b949-4cca-4dc2-808e-e6fb286406d2"));
	
	КурсыВалюты 	= РаботаСКурсамиВалют.ПолучитьКурсВалюты(Справочники.Валюты.ПолучитьСсылку(Новый УникальныйИдентификатор("f255395e-a9e2-11e3-80c2-001e676b0174")), СслыкаНаДокумент.Дата);
	КурсDDP 		= КурсыВалюты.Курс;					
	
	КурсыВалюты		= РаботаСКурсамиВалют.ПолучитьКурсВалюты(Константы.ВалютаУправленческогоУчета.Получить(), СслыкаНаДокумент.Дата);
	КурсУпр 		= КурсыВалюты.Курс;	
	
	ТекущаяСтрока.СуммаСDDP 			= ТекущаяСтрока.СуммаСНДС;
	ТекущаяСтрока.Цена  				= ТекущаяСтрока.Цена*КурсDDP/КурсУпр;
	
	ПриИзменениеЦеныОбработатьСтрокуТЧ(ТекущаяСтрока);
	ТекущаяСтрока.КурсоваяРазницаDDP 	= ТекущаяСтрока.СуммаСDDP - ТекущаяСтрока.СуммаСНДС;
	
	Массив = Объект.Товары.НайтиСтроки(Новый	Структура("Номенклатура",УслугаDDP));
	
	СтрокаУслугаDDP 						= Массив[0]; 
	СтрокаУслугаDDP.Цена  					= СтрокаУслугаDDP.Цена + ТекущаяСтрока.КурсоваяРазницаDDP;
	СтрокаУслугаDDP.СтавкаНДС				= Перечисления.СтавкиНДС.БезНДС;
	СтрокаУслугаDDP.КоличествоУпаковок			= 1;
	СтрокаУслугаDDP.Количество 					= 1;
	ПриИзменениеЦеныОбработатьСтрокуТЧ(СтрокаУслугаDDP);
	СтрокаУслугаDDP.ДатаПоступления				= ТекущаяДата();
	
КонецПроцедуры	

&НаСервере
Процедура ПриИзменениеЦеныОбработатьСтрокуТЧ(ТекущаяСтрока)
	СтруктураДействий	= Новый Структура;	
	ЗаполнитьСтруктуруДействий(СтруктураДействий);
	//СтруктураДействий.Вставить("ПроверитьСтатьюАналитикуРасходов", ТекущаяСтрока.Номенклатура);
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, Неопределено);
КонецПроцедуры	

&НаСервере	
Процедура ЗаполнитьСтруктуруДействий(СтруктураДействий)
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(СслыкаНаДокумент);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
	//СтруктураДействий.Вставить("ЗаполнитьДубликатыЗависимыхРеквизитов", ПолучитьСтруктуруЗависимыхРеквизитов());
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////
// Функция текстов запросов
&НаСервере
Функция ПолучитьТекстЗапросаНоменклатурыПослеОтмены()
	ТекстЗапроса ="ВЫБРАТЬ
	|	ЗаказПоставщикуТовары.НомерСтроки,
	|	ЗаказПоставщикуТовары.УникальныйИндентификаторСтроки,
	|	ЗаказПоставщикуТовары.НоменклатураПоставщика,
	|	ЗаказПоставщикуТовары.Номенклатура,
	|	ЗаказПоставщикуТовары.Характеристика,
	|	ЗаказПоставщикуТовары.Упаковка,
	|	ЗаказПоставщикуТовары.КоличествоУпаковок,
	|	ЗаказПоставщикуТовары.Количество,
	|	ЗаказПоставщикуТовары.ДатаПоступления,
	|	ЗаказПоставщикуТовары.УсловиеЦеныПоставщика,
	|	ЗаказПоставщикуТовары.Цена,
	|	ЗаказПоставщикуТовары.Сумма,
	|	ЗаказПоставщикуТовары.ПроцентРучнойСкидки,
	|	ЗаказПоставщикуТовары.СуммаРучнойСкидки,
	|	ЗаказПоставщикуТовары.СтавкаНДС,
	|	ЗаказПоставщикуТовары.СуммаНДС,
	|	ЗаказПоставщикуТовары.СуммаСНДС,
	|	ЗаказПоставщикуТовары.КодСтроки,
	|	ЗаказПоставщикуТовары.Отменено,
	|	ЗаказПоставщикуТовары.СтатьяРасходов,
	|	ЗаказПоставщикуТовары.АналитикаРасходов,
	|	ЗаказПоставщикуТовары.ПричинаОтмены,
	|	ЗаказПоставщикуТовары.Склад,
	|	ЗаказПоставщикуТовары.Назначение,
	|	ЗаказПоставщикуТовары.DDP,
	|	ЗаказПоставщикуТовары.КурсоваяРазницаDDP,
	|	ЗаказПоставщикуТовары.СуммаСDDP,
	|   ВЫБОР
	|		КОГДА ЗаказПоставщикуТовары.DDP И ЗаказПоставщикуТовары.КолчествоДоDDP=0
	|       	ТОГДА ЗаказПоставщикуТовары.КоличествоУпаковок
	|		КОГДА ЗаказПоставщикуТовары.DDP И ЗаказПоставщикуТовары.КолчествоДоDDP>0
	|       	ТОГДА ЗаказПоставщикуТовары.КолчествоДоDDP
	|       ИНАЧЕ ЗаказПоставщикуТовары.КоличествоУпаковок
	|   КОНЕЦ КАК КолчествоДоDDP
	|ПОМЕСТИТЬ ТаблицаТоваровЗаказа
	|ИЗ
	|	&Товары КАК ЗаказПоставщикуТовары
	|;
	|
	////////////////////////////////////////////////////////////////////////////////
	//1
	|ВЫБРАТЬ
	|	ТаблицаТоваровЗаказа.НомерСтроки,
	|	ТаблицаТоваровЗаказа.УникальныйИндентификаторСтроки,
	|	ТаблицаТоваровЗаказа.НоменклатураПоставщика,
	|	ТаблицаТоваровЗаказа.Номенклатура,
	|	ТаблицаТоваровЗаказа.Характеристика,
	|	ТаблицаТоваровЗаказа.Упаковка,
	|	ТаблицаТоваровЗаказа.КоличествоУпаковок,
	|	ТаблицаТоваровЗаказа.Количество,
	|	ТаблицаТоваровЗаказа.ДатаПоступления,
	|	ТаблицаТоваровЗаказа.УсловиеЦеныПоставщика,
	|	ТаблицаТоваровЗаказа.Цена,
	|	ТаблицаТоваровЗаказа.Сумма,
	|	ТаблицаТоваровЗаказа.ПроцентРучнойСкидки,
	|	ТаблицаТоваровЗаказа.СуммаРучнойСкидки,
	|	ТаблицаТоваровЗаказа.СтавкаНДС,
	|	ТаблицаТоваровЗаказа.СуммаНДС,
	|	ТаблицаТоваровЗаказа.СуммаСНДС,
	|	ТаблицаТоваровЗаказа.КодСтроки,
	|	ТаблицаТоваровЗаказа.Отменено,
	|	ТаблицаТоваровЗаказа.СтатьяРасходов,
	|	ТаблицаТоваровЗаказа.АналитикаРасходов,
	|	ТаблицаТоваровЗаказа.ПричинаОтмены,
	|	ТаблицаТоваровЗаказа.Склад,
	|	ТаблицаТоваровЗаказа.Назначение,
	|	ТаблицаТоваровЗаказа.DDP,
	|	ТаблицаТоваровЗаказа.КурсоваяРазницаDDP,
	|	ТаблицаТоваровЗаказа.СуммаСDDP,
	|	ТаблицаТоваровЗаказа.КолчествоДоDDP
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваровЗаказа КАК ТаблицаТоваровЗаказа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТоваровЗаказа.Номенклатура,
	|	ТаблицаТоваровЗаказа.КодСтроки
	|;
	////////////////////////////////////////////////////////////////////////////////
	//2
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.УникальныйИндентификаторСтроки,
	|	ТаблицаТоваров.НоменклатураПоставщика,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.КоличествоУпаковок,
	|	ТаблицаТоваров.Количество,
	|	ТаблицаТоваров.ДатаПоступления,
	|	ТаблицаТоваров.УсловиеЦеныПоставщика,
	|	ТаблицаТоваров.Цена,
	|	ТаблицаТоваров.Сумма,
	|	ТаблицаТоваров.ПроцентРучнойСкидки,
	|	ТаблицаТоваров.СуммаРучнойСкидки,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.СуммаНДС,
	|	ТаблицаТоваров.СуммаСНДС,
	|	ТаблицаТоваров.КодСтроки,
	|	ТаблицаТоваров.Отменено,
	|	ТаблицаТоваров.СтатьяРасходов,
	|	ТаблицаТоваров.АналитикаРасходов,
	|	ТаблицаТоваров.ПричинаОтмены,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.Назначение,
	|	ТаблицаТоваров.DDP,
	|	ТаблицаТоваров.КурсоваяРазницаDDP,
	|	ТаблицаТоваров.СуммаСDDP,
	|	ТаблицаТоваров.КолчествоДоDDP
	|ПОМЕСТИТЬ НоменклатураБезНазначения
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура = &Номенклатура
	|	И ТаблицаТоваров.Отменено = ЛОЖЬ
	|	И ТаблицаТоваров.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.КодСтроки
	|;
	
	////////////////////////////////////////////////////////////////////////////////
	//3 ДляПроверкиИзменений
	|ВЫБРАТЬ
	|	НоменклатураБезНазначения.НомерСтроки,
	|	НоменклатураБезНазначения.НоменклатураПоставщика,
	|	НоменклатураБезНазначения.Номенклатура,
	|	НоменклатураБезНазначения.Характеристика,
	|	НоменклатураБезНазначения.Упаковка,
	|	НоменклатураБезНазначения.КоличествоУпаковок,
	|	НоменклатураБезНазначения.Количество,
	|	НоменклатураБезНазначения.ДатаПоступления,
	|	НоменклатураБезНазначения.УсловиеЦеныПоставщика,
	|	НоменклатураБезНазначения.Цена,
	|	НоменклатураБезНазначения.Сумма,
	|	НоменклатураБезНазначения.ПроцентРучнойСкидки,
	|	НоменклатураБезНазначения.СуммаРучнойСкидки,
	|	НоменклатураБезНазначения.СтавкаНДС,
	|	НоменклатураБезНазначения.СуммаНДС,
	|	НоменклатураБезНазначения.СуммаСНДС,
	|	НоменклатураБезНазначения.КодСтроки,
	|	НоменклатураБезНазначения.Отменено,
	|	НоменклатураБезНазначения.СтатьяРасходов,
	|	НоменклатураБезНазначения.АналитикаРасходов,
	|	НоменклатураБезНазначения.ПричинаОтмены,
	|	НоменклатураБезНазначения.Склад,
	|	НоменклатураБезНазначения.Назначение,
	|	НоменклатураБезНазначения.DDP,
	|	НоменклатураБезНазначения.КурсоваяРазницаDDP,
	|	НоменклатураБезНазначения.СуммаСDDP,
	|	НоменклатураБезНазначения.КолчествоДоDDP
	|ПОМЕСТИТЬ ПроверкаПерезаполнения
	|ИЗ
	|	НоменклатураБезНазначения КАК НоменклатураБезНазначения
	|
	|ГДЕ
	|	НоменклатураБезНазначения.DDP = ЛОЖЬ
	|;
	
	////////////////////////////////////////////////////////////////////////////////
	//4
	|ВЫБРАТЬ
	|	СписокНазначения.Номенклатура КАК Номенклатура,
	|	СписокНазначения.Назначение КАК Назначение,
	|	СписокНазначения.КоличествоДоп КАК КоличествоОстаток,
	|	СписокНазначения.DDP КАК DDP
	|ПОМЕСТИТЬ ТаблицаОтменныхЗаказов
	|ИЗ
	|	&СписокЗаказовПоставщиков КАК СписокНазначения
	|	
	|;
	
	////////////////////////////////////////////////////////////////////////////////
	//5
	|ВЫБРАТЬ
	|	ТаблицаОтменныхЗаказов.Номенклатура КАК Номенклатура,
	|	ТаблицаОтменныхЗаказов.Назначение КАК Назначение,
	|	Сумма(ТаблицаОтменныхЗаказов.КоличествоОстаток) КАК КоличествоОстаток,
	|	ВЫРАЗИТЬ(ТаблицаОтменныхЗаказов.Назначение КАК Справочник.Назначения).Заказ КАК НазначениеЗаказ,
	|	МАКСИМУМ(ТаблицаОтменныхЗаказов.DDP) КАК DDP
	|ПОМЕСТИТЬ НоменклатураСНазначениям
	|ИЗ
	|	ТаблицаОтменныхЗаказов КАК ТаблицаОтменныхЗаказов
	|
	|ГДЕ
	|	ТаблицаОтменныхЗаказов.Номенклатура = &Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОтменныхЗаказов.Номенклатура,
	|	ТаблицаОтменныхЗаказов.Назначение,
	|	ТаблицаОтменныхЗаказов.Назначение.Заказ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаОтменныхЗаказов.Номенклатура
	|;
	
	////////////////////////////////////////////////////////////////////////////////
	//6
	|ВЫБРАТЬ
	|	НоменклатураБезНазначения.КодСтроки,
	|	НоменклатураБезНазначения.Номенклатура,
	|	НоменклатураБезНазначения.КолчествоДоDDP,
	|	НоменклатураБезНазначения.Упаковка,
	|	СУММА(НоменклатураБезНазначенияКопия.КоличествоУпаковок) - НоменклатураБезНазначения.КоличествоУпаковок КАК СуммаДо,
	|	СУММА(НоменклатураБезНазначенияКопия.КоличествоУпаковок) КАК СуммаПосле,
	|	НоменклатураБезНазначения.DDP
	|ПОМЕСТИТЬ НаростающиеПоНоменклатуре
	|ИЗ
	|	НоменклатураБезНазначения КАК НоменклатураБезНазначения
	|		
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураБезНазначения КАК НоменклатураБезНазначенияКопия
	|ПО НоменклатураБезНазначения.Номенклатура = НоменклатураБезНазначенияКопия.Номенклатура
	|И НоменклатураБезНазначения.КодСтроки >= НоменклатураБезНазначенияКопия.КодСтроки
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураБезНазначения.КодСтроки,
	|	НоменклатураБезНазначения.Номенклатура,
	|	НоменклатураБезНазначения.КолчествоДоDDP,
	|	НоменклатураБезНазначения.Упаковка,
	|	НоменклатураБезНазначения.КоличествоУпаковок,
	|	НоменклатураБезНазначения.DDP
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураБезНазначения.КодСтроки,
	|	НоменклатураБезНазначения.Номенклатура
	
	|;
	////////////////////////////////////////////////////////////////////////////////
	//7
	|ВЫБРАТЬ
	|	НоменклатураСНазначениям.Номенклатура,
	|	НоменклатураСНазначениям.Назначение,
	|	СУММА(НоменклатураСНазначениямКопия.КоличествоОстаток) - НоменклатураСНазначениям.КоличествоОстаток КАК СуммаДо,
	|	СУММА(НоменклатураСНазначениямКопия.КоличествоОстаток) КАК СуммаПосле
	|ПОМЕСТИТЬ НаростающиеПоНазначению
	|ИЗ
	|	НоменклатураСНазначениям КАК НоменклатураСНазначениям
	|		
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураСНазначениям КАК НоменклатураСНазначениямКопия
	|ПО НоменклатураСНазначениям.Номенклатура = НоменклатураСНазначениямКопия.Номенклатура
	|И НоменклатураСНазначениям.НазначениеЗаказ.Ссылка >= НоменклатураСНазначениямКопия.НазначениеЗаказ.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураСНазначениям.Номенклатура,
	|	НоменклатураСНазначениям.Назначение,
	|	НоменклатураСНазначениям.КоличествоОстаток
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НоменклатураСНазначениям.Номенклатура,
	|	НоменклатураСНазначениям.Назначение
	|;
	////////////////////////////////////////////////////////////////////////////////
	//8
	|ВЫБРАТЬ
	|	НаростающиеПоНоменклатуре.Номенклатура КАК Номенклатура,
	|	НаростающиеПоНоменклатуре.СуммаПосле КАК Точка
	|ПОМЕСТИТЬ ТочкиПересечений
	|ИЗ
	|	НаростающиеПоНоменклатуре КАК НаростающиеПоНоменклатуре
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	НаростающиеПоНазначению.Номенклатура,
	|	НаростающиеПоНазначению.СуммаПосле
	|ИЗ
	|	НаростающиеПоНазначению КАК НаростающиеПоНазначению
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Точка
	|;
	////////////////////////////////////////////////////////////////////////////////
	//9
	|ВЫБРАТЬ
	|	НаростающиеПоНазначению.Номенклатура,
	|	МАКСИМУМ(НаростающиеПоНазначению.СуммаПосле) КАК КоличествоОстаток
	|ПОМЕСТИТЬ КоличествоРазнесения
	|ИЗ
	|	НаростающиеПоНазначению КАК НаростающиеПоНазначению
	
	|СГРУППИРОВАТЬ ПО
	|	НаростающиеПоНазначению.Номенклатура
	|;
	////////////////////////////////////////////////////////////////////////////////
	//10
	|ВЫБРАТЬ
	|	ТочкиПересечений.Номенклатура,
	|	ТочкиПересечений.Точка,
	|	НаростающиеПоНоменклатуре.КодСтроки КАК СтарыйКодСтроки,
	|	ВЫБОР
	|		КОГДА НаростающиеПоНоменклатуре.СуммаДо >= НаростающиеПоНазначению.СуммаДо
	|			ТОГДА НаростающиеПоНоменклатуре.КодСтроки
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КодСтроки,
	|	ISNULL(НаростающиеПоНазначению.Назначение,ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
	|	ВЫБОР
	|		КОГДА ISNULL(НаростающиеПоНоменклатуре.СуммаПосле,0) >= ISNULL(НаростающиеПоНазначению.СуммаПосле,0)  И ISNULL(НаростающиеПоНазначению.СуммаПосле,0)<>0
	|				И ISNULL(НаростающиеПоНоменклатуре.СуммаДо,0) <= ISNULL(НаростающиеПоНазначению.СуммаДо,0)
	|			ТОГДА ISNULL(НаростающиеПоНазначению.СуммаПосле,0) - ISNULL(НаростающиеПоНазначению.СуммаДо,0)
	|		КОГДА ISNULL(НаростающиеПоНоменклатуре.СуммаПосле,0) > ISNULL(НаростающиеПоНазначению.СуммаДо,0)
	|				И ISNULL(НаростающиеПоНоменклатуре.СуммаПосле,0) < ISNULL(НаростающиеПоНазначению.СуммаПосле,0)
	|			ТОГДА ISNULL(НаростающиеПоНоменклатуре.СуммаПосле,0) - ISNULL(НаростающиеПоНазначению.СуммаДо,0)
	|		КОГДА ISNULL(НаростающиеПоНоменклатуре.СуммаПосле,0) >= ISNULL(НаростающиеПоНазначению.СуммаПосле,0)
	|				И ISNULL(НаростающиеПоНоменклатуре.СуммаДо,0) > ISNULL(НаростающиеПоНазначению.СуммаДо,0) И ISNULL(НаростающиеПоНазначению.СуммаПосле,0)<>0
	|			ТОГДА ISNULL(НаростающиеПоНазначению.СуммаПосле,0) - ISNULL(НаростающиеПоНоменклатуре.СуммаДо,0)
	|		КОГДА  ISNULL(НаростающиеПоНазначению.Назначение,ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))=ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И  ISNULL(КоличествоРазнесения.КоличествоОстаток,0)<>0
	|		ТОГДА  ISNULL(НаростающиеПоНоменклатуре.СуммаПосле,0)- ISNULL(КоличествоРазнесения.КоличествоОстаток,0)
	|		Иначе  ISNULL(НаростающиеПоНоменклатуре.СуммаПосле,0)-ISNULL(НаростающиеПоНоменклатуре.СуммаДо,0)
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	НаростающиеПоНоменклатуре.DDP
	|ПОМЕСТИТЬ РазбивкаСтрокПоНазначению
	|ИЗ
	|	ТочкиПересечений КАК ТочкиПересечений
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ НаростающиеПоНоменклатуре КАК НаростающиеПоНоменклатуре
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ КоличествоРазнесения КАК КоличествоРазнесения
	|	ПО НаростающиеПоНоменклатуре.Номенклатура = КоличествоРазнесения.Номенклатура
	|	И НаростающиеПоНоменклатуре.СуммаПосле >= КоличествоРазнесения.КоличествоОстаток
	|	И НаростающиеПоНоменклатуре.СуммаДо < КоличествоРазнесения.КоличествоОстаток
	|
	|ПО ТочкиПересечений.Номенклатура = НаростающиеПоНоменклатуре.Номенклатура
	|И ТочкиПересечений.Точка <= НаростающиеПоНоменклатуре.СуммаПосле
	|И ТочкиПересечений.Точка > НаростающиеПоНоменклатуре.СуммаДо
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ НаростающиеПоНазначению КАК НаростающиеПоНазначению
	|ПО ТочкиПересечений.Номенклатура = НаростающиеПоНазначению.Номенклатура
	|И ТочкиПересечений.Точка <= НаростающиеПоНазначению.СуммаПосле
	|И ТочкиПересечений.Точка > НаростающиеПоНазначению.СуммаДо
	|;		
	////////////////////////////////////////////////////////////////////////////////
	//11
	|ВЫБРАТЬ
	|	РазбивкаСтрокПоНазначению.Номенклатура,
	|	РазбивкаСтрокПоНазначению.Точка,
	|	РазбивкаСтрокПоНазначению.КодСтроки,
	|	РазбивкаСтрокПоНазначению.Назначение,
	|	РазбивкаСтрокПоНазначению.КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА РазбивкаСтрокПоНазначению.DDP
	|			ТОГДА РазбивкаСтрокПоНазначению.DDP
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаОтменныхЗаказов.DDP, ЛОЖЬ)
	|	КОНЕЦ КАК DDP,
	|	РазбивкаСтрокПоНазначению.СтарыйКодСтроки
	|ПОМЕСТИТЬ РазбивкаСтрокСDDP
	|ИЗ
	|	РазбивкаСтрокПоНазначению КАК РазбивкаСтрокПоНазначению
	|		
	|ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураСНазначениям КАК ТаблицаОтменныхЗаказов
	|ПО РазбивкаСтрокПоНазначению.Номенклатура = ТаблицаОтменныхЗаказов.Номенклатура
	|И РазбивкаСтрокПоНазначению.Назначение = ТаблицаОтменныхЗаказов.Назначение
	|
	|ГДЕ
	|	РазбивкаСтрокПоНазначению.КоличествоУпаковок <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РазбивкаСтрокПоНазначению.Номенклатура,
	|	РазбивкаСтрокПоНазначению.СтарыйКодСтроки
	|;
	////////////////////////////////////////////////////////////////////////////////
	//12
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки,
	|	ТаблицаТоваров.НоменклатураПоставщика,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.УникальныйИндентификаторСтроки,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Упаковка,
	|	ТаблицаТоваров.КоличествоУпаковок,
	|	ТаблицаТоваров.Количество,
	|	ТаблицаТоваров.ДатаПоступления,
	|	ТаблицаТоваров.УсловиеЦеныПоставщика,
	|	ТаблицаТоваров.Цена,
	|	ТаблицаТоваров.Сумма,
	|	ТаблицаТоваров.ПроцентРучнойСкидки,
	|	ТаблицаТоваров.СуммаРучнойСкидки,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.СуммаНДС,
	|	ТаблицаТоваров.СуммаСНДС,
	|	ТаблицаТоваров.КодСтроки,
	|	ТаблицаТоваров.Отменено,
	|	ТаблицаТоваров.СтатьяРасходов,
	|	ТаблицаТоваров.АналитикаРасходов,
	|	ТаблицаТоваров.ПричинаОтмены,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.Назначение,
	|	ТаблицаТоваров.DDP,
	|	ТаблицаТоваров.КурсоваяРазницаDDP,
	|	ТаблицаТоваров.СуммаСDDP,
	|	ТаблицаТоваров.КолчествоДоDDP
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	НЕ ТаблицаТоваров.УникальныйИндентификаторСтроки В
	|				(ВЫБРАТЬ
	|					НоменклатураБезНазначения.УникальныйИндентификаторСтроки
	|				ИЗ
	|					НоменклатураБезНазначения)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫбор
	|		Когда	РазбивкаСтрокСDDP.КодСтроки<>0
	|		Тогда НоменклатураБезНазначения.НомерСтроки
	|		Иначе РазбивкаСтрокСDDP.КодСтроки
	|	Конец,
	|	НоменклатураБезНазначения.НоменклатураПоставщика,
	|	НоменклатураБезНазначения.Номенклатура,
	|	НоменклатураБезНазначения.УникальныйИндентификаторСтроки,
	|	НоменклатураБезНазначения.Характеристика,
	|	НоменклатураБезНазначения.Упаковка,
	|	РазбивкаСтрокСDDP.КоличествоУпаковок,
	|	РазбивкаСтрокСDDP.КоличествоУпаковок,
	|	НоменклатураБезНазначения.ДатаПоступления,
	|	НоменклатураБезНазначения.УсловиеЦеныПоставщика,
	|	НоменклатураБезНазначения.Цена,
	|	НоменклатураБезНазначения.Сумма,
	|	НоменклатураБезНазначения.ПроцентРучнойСкидки,
	|	НоменклатураБезНазначения.СуммаРучнойСкидки,
	|	НоменклатураБезНазначения.СтавкаНДС,
	|	НоменклатураБезНазначения.СуммаНДС,
	|	НоменклатураБезНазначения.СуммаСНДС,
	|	РазбивкаСтрокСDDP.КодСтроки,
	|	НоменклатураБезНазначения.Отменено,
	|	НоменклатураБезНазначения.СтатьяРасходов,
	|	НоменклатураБезНазначения.АналитикаРасходов,
	|	НоменклатураБезНазначения.ПричинаОтмены,
	|	НоменклатураБезНазначения.Склад,
	|	РазбивкаСтрокСDDP.Назначение,
	|	РазбивкаСтрокСDDP.DDP,
	|	НоменклатураБезНазначения.КурсоваяРазницаDDP,
	|	НоменклатураБезНазначения.СуммаСDDP,
	|	НоменклатураБезНазначения.КолчествоДоDDP
	|ИЗ
	|	РазбивкаСтрокСDDP КАК РазбивкаСтрокСDDP
	|		
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураБезНазначения КАК НоменклатураБезНазначения
	|ПО РазбивкаСтрокСDDP.Номенклатура = НоменклатураБезНазначения.Номенклатура
	|И РазбивкаСтрокСDDP.СтарыйКодСтроки = НоменклатураБезНазначения.КодСтроки";
	Возврат ТекстЗапроса;
КонецФункции // ПолучитьТекстЗапросаНоменклатурыПослеОтмены()

&НаСервере
Функция ПолучитьТекстЗапросаСпискаНоменклатурыДляОтмени()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СписокНоменклатурыДляОтменения.ЗаказПоставщику,
	|	СписокНоменклатурыДляОтменения.Номенклатура,
	|	СписокНоменклатурыДляОтменения.Назначение
	|ПОМЕСТИТЬ КешСписокДокументов
	|ИЗ
	|	&СписокНоменклатурыДляОтменения КАК СписокНоменклатурыДляОтменения
	|;
	////////////////////////////////////////////////////////////////////////////////
	//1
	|ВЫБРАТЬ
	|	КешСписокДокументов.ЗаказПоставщику КАК ЗаказПоставщика,
	|	КешСписокДокументов.Номенклатура,
	|	КешСписокДокументов.Назначение
	|ИЗ
	|	КешСписокДокументов КАК КешСписокДокументов
	|ИТОГИ ПО
	|	ЗаказПоставщика";
	Возврат ТекстЗапроса;
КонецФункции // ПолучитьТекстЗапросаСпискаНоменклатурыДляОтмени()










