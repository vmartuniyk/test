

#Область ПрограммныйИнтерфейс

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка) Экспорт

	Если НЕ ДокументСсылка.Проведен
	 ИЛИ ДокументСсылка.СтатусПоездки = Перечисления.КТС_СтатусыПоездки.Завершена Тогда
		Возврат;
	КонецЕсли;
	
	

	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаПоездки(ДокументСсылка);	
	Запрос.УстановитьПараметр("ДатаДокумента", ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("НачалоДняДокумента", НачалоДня(ДокументСсылка.Дата));
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ВариантМаршрута", ДокументСсылка.ВариантМаршрута);
	Запрос.УстановитьПараметр("ТипКонтактнойИнформацииАдрес", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("ВидКонтактнойИнформацииАдресСклада", Справочники.ВидыКонтактнойИнформации.АдресСклада);
	РезультатПакета = Запрос.ВыполнитьПакет();
	РезультатЗапроса = РезультатПакета[ПолучитьИндексРезультатаПакетаПоездки(ДокументСсылка)];
	
	// Расчет мест
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
		Блокировка = Новый БлокировкаДанных;
		ПоездкаЗаМаршрутом 		 = Блокировка.Добавить("РегистрСведений.ПоездкаЗаМаршрутом");
		ПоездкаЗаМаршрутом.Режим = РежимБлокировкиДанных.Исключительный;
		ПоездкаЗаМаршрутом.ИсточникДанных = РезультатЗапроса;
		ПоездкаЗаМаршрутом.ИспользоватьИзИсточникаДанных("ДокументПоездки", "ДокументПоездки");		
		Попытка
			Блокировка.Заблокировать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			ОтменитьТранзакцию();
			Возврат;		
		КонецПопытки;
		
		ТаблицаДляЗаписи = РезультатЗапроса.Выгрузить();
		Для каждого Строка Из ТаблицаДляЗаписи Цикл
			Строка.OwnerGeoGUID 		= Строка(Строка.OwnerGeoLocation.УникальныйИдентификатор());	
		    Строка.IsPartner			= ТипЗнч(Строка.Owner) = Тип("СправочникСсылка.Партнеры");
			Строка.GUID					= Строка(Строка.МестоДоставки.УникальныйИдентификатор());
			Строка.ManualCode			= Число(Строка.Код);
			Строка.ОтправительGeoGUID   = Строка(Строка.ОтправительGeoLocation.УникальныйИдентификатор());		
		КонецЦикла; 
		
		НаборЗаписей = РегистрыСведений.ПоездкаЗаМаршрутом.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ДокументПоездки.Установить(ДокументСсылка);
		НаборЗаписей.Загрузить(ТаблицаДляЗаписи);
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			ОтменитьТранзакцию();
			Возврат;
		КонецПопытки;
		
	ЗафиксироватьТранзакцию();

КонецПроцедуры

Процедура ИнициализироватьОплатыДокумента(ДокументСсылка) Экспорт
	
	Если НЕ ДокументСсылка.Проведен
	 ИЛИ ДокументСсылка.СтатусПоездки = Перечисления.КТС_СтатусыПоездки.Завершена Тогда
		Возврат;
	КонецЕсли;
	
	
	Запрос 			= Новый Запрос;
	Запрос.Текст    = ПолучитьТекстЗапросаСуммаОплат();
	Запрос.УстановитьПараметр("ДокументПоездки", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор("0fba8a92-4010-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("КонецСегодня", КонецДня(ДокументСсылка.Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Расчет суммы, которую нужно забрать в партнера
	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
		Блокировка = Новый БлокировкаДанных;
		ПоездкаЗаМаршрутом 		 = Блокировка.Добавить("РегистрСведений.ПоездкаЗаМаршрутомФинансы");
		ПоездкаЗаМаршрутом.Режим = РежимБлокировкиДанных.Исключительный;
		ПоездкаЗаМаршрутом.ИсточникДанных = РезультатЗапроса;
		ПоездкаЗаМаршрутом.ИспользоватьИзИсточникаДанных("ДокументПоездки", "ДокументПоездки");		
		Попытка
			Блокировка.Заблокировать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			ОтменитьТранзакцию();
			Возврат;		
		КонецПопытки;
	
		Выборка = РезультатЗапроса.Выбрать();
		Порядок = 1;
		
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений.ПоездкаЗаМаршрутомФинансы.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДокументПоездки.Установить(Выборка.ДокументПоездки);
			НаборЗаписей.Отбор.Партнер.Установить(Выборка.Партнер);
			
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			
			// Порядок, хз че с ним
			Запись.Порядок = Порядок;
			
			Порядок = Порядок + 1;
			
			НаборЗаписей.Записать();
			
		КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

#КонецОбласти 



#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапросаПоездки(ДокументСсылка)
	
	Если ДокументСсылка.ВидПоездки = Перечисления.КТС_ВидыПоездки.ОсновнаяПоездка Тогда
		Возврат ПолучитьТекстЗапросаОсновнойПоездки();	
	Иначе
		Возврат ПолучитьТекстЗапросаДополнительнойПоездки();	
	КонецЕсли;	
	
КонецФункции

Функция ПолучитьТекстЗапросаОсновнойПоездки()

	ТекстЗапроса = "
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//1. Получаем список складов с которых может производится отгрузка
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Склад КАК Склад
			|ПОМЕСТИТЬ СкладыОтгрузки
			|ИЗ
			|	Справочник.ВариантыМаршрутов.СкладыОтгрузки
			|ГДЕ
			|	Ссылка = &ВариантМаршрута
			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//2. Получаем склады и время к отгрузке
			|ВЫБРАТЬ
			|	СкладыОтгрузки.Склад 				КАК Склад,	
			|   ПоездкаЗаМаршрутом.ВремяКОтгрузке   КАК ВремяКОтгрузке
			|ПОМЕСТИТЬ СкладыВремяКОтгрузке
			|ИЗ
			|	СкладыОтгрузки КАК СкладыОтгрузки	

			|ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоездкаЗаМаршрутом.Склады КАК ПоездкаЗаМаршрутом
			|ПО ПоездкаЗаМаршрутом.Ссылка = &ДокументСсылка
			|И	ПоездкаЗаМаршрутом.Склад  = СкладыОтгрузки.Склад

			|ИНДЕКСИРОВАТЬ ПО
			|	СкладыОтгрузки.Склад
			|;
			//3. Получаем адреса складов
			|ВЫБРАТЬ
			|	СкладыКонтактнаяИнформация.Ссылка 			КАК Склад,
			|	СкладыКонтактнаяИнформация.Представление 	КАК Адрес
			|ПОМЕСТИТЬ АдресаСкладов
			|ИЗ
			|	Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяИнформация
			|ГДЕ
			|	СкладыКонтактнаяИнформация.Ссылка В
			|			(ВЫБРАТЬ
			|				Склад
			|			ИЗ
			|				СкладыОтгрузки
			|			)
			|	И СкладыКонтактнаяИнформация.Тип = &ТипКонтактнойИнформацииАдрес
			|	И СкладыКонтактнаяИнформация.Вид = &ВидКонтактнойИнформацииАдресСклада
			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//4. Получаем документы доставки открытых по данному маршруту
			|ВЫБРАТЬ
			|	ПоездкаЗаМаршрутом.Ссылка
			|ПОМЕСТИТЬ АктивныеПоездкиПоВариантуМаршрута
			|ИЗ
			|	Документ.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом
			|ГДЕ
			|	ПоездкаЗаМаршрутом.Проведен
			|	И ПоездкаЗаМаршрутом.Ссылка <> &ДокументСсылка
			|	И ПоездкаЗаМаршрутом.ВариантМаршрута = &ВариантМаршрута
			|	И ПоездкаЗаМаршрутом.СтатусПоездки = ЗНАЧЕНИЕ(Перечисление.КТС_СтатусыПоездки.ВПроцессе)

			|ОБЪЕДИНИТЬ ВСЕ

			|ВЫБРАТЬ
			|	ПоездкаЗаМаршрутом.Ссылка
			|ИЗ
			|	Документ.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом
			|ГДЕ
			|	ПоездкаЗаМаршрутом.Проведен
			|	И ПоездкаЗаМаршрутом.Ссылка = &ДокументСсылка
			|	И ПоездкаЗаМаршрутом.ВариантМаршрута = &ВариантМаршрута
			|	И ПоездкаЗаМаршрутом.СтатусПоездки = ЗНАЧЕНИЕ(Перечисление.КТС_СтатусыПоездки.ВПроцессе)
			|
			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//5. Получаем места в других доставках
			|ВЫБРАТЬ
			|	МестоДоставки	
			|ПОМЕСТИТЬ АктивныеМестаПоВариантуМаршрута
			|ИЗ
			|	РегистрСведений.ПоездкаЗаМаршрутом 	
			|ГДЕ
			|	ДокументПоездки В (ВЫБРАТЬ Ссылка ИЗ АктивныеПоездкиПоВариантуМаршрута)		
			|И	НЕ ИсключеноИзДоставки

			|ИНДЕКСИРОВАТЬ ПО
			|	МестоДоставки	
			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//6. Получаем места, которые нужно добавить к маршруту
			|ВЫБРАТЬ
			|   ОтгрузкаМест.Период				КАК Период,
			|	&ДокументСсылка					КАК ДокументПоездки,
			|	ОтгрузкаМест.Место 				КАК МестоДоставки,
			|	ОтгрузкаМест.Склад				КАК Отправитель,
			|	Ложь							КАК ЭтоЗадача,
			|	ОтгрузкаМест.Место.Владелец 	КАК Owner,
			|	ОтгрузкаМест.Место.АдресДоставки КАК OwnerAdress

			|ПОМЕСТИТЬ ВозможноНовыеМестаПоМаршруту
			|ИЗ
			|	РегистрСведений.ОтгрузкаМест.СрезПоследних(, Склад В (ВЫБРАТЬ Склад ИЗ СкладыВремяКОтгрузке)
			|												И Место НЕ В (ВЫБРАТЬ МестоДоставки ИЗ АктивныеМестаПоВариантуМаршрута)
			|											 И НЕ Место.Архивный) КАК ОтгрузкаМест

			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ СкладыВремяКОтгрузке КАК СкладыВремяКОтгрузке
			|ПО	СкладыВремяКОтгрузке.Склад = ОтгрузкаМест.Склад
			|И	ВЫБОР
			|		КОГДА НачалоПериода(ОтгрузкаМест.Период, День) < &НачалоДняДокумента
			|			ТОГДА ИСТИНА
			|		КОГДА НачалоПериода(ОтгрузкаМест.Период, День) = &НачалоДняДокумента
			|			ТОГДА 	ВЫБОР
			|						КОГДА ЧАС(СкладыВремяКОтгрузке.ВремяКОтгрузке) > ЧАС(ОтгрузкаМест.Период)
			|							ТОГДА ИСТИНА
			|						КОГДА ЧАС(СкладыВремяКОтгрузке.ВремяКОтгрузке) = ЧАС(ОтгрузкаМест.Период)
			|							И МИНУТА(СкладыВремяКОтгрузке.ВремяКОтгрузке) >= МИНУТА(ОтгрузкаМест.Период)
			|							ТОГДА ИСТИНА
			|						ИНАЧЕ ЛОЖЬ
			|					КОНЕЦ
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ

			|ГДЕ
			|	ОтгрузкаМест.ВариантМаршрута = &ВариантМаршрута
			|И	ОтгрузкаМест.СтатусОтгрузки НЕ В (	ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.НачалоКомплектации),
			|										ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ПогруженоВМашину),
			|										ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру),
			|										ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.РазукомплектованиеНаСкладе),
			|										ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ВозвращеноНаСклад))
			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//7. Получаем задачи, которые нужно добавить к маршруту
			|ВЫБРАТЬ
			|	ЗадачиНаМаршрут.Период      КАК Период,
			|	&ДокументСсылка				КАК ДокументПоездки,
			|	ЗадачиНаМаршрут.Место 		КАК МестоДоставки,
			|	ЗадачиНаМаршрут.Отправитель КАК Отправитель,
			|	Истина						КАК ЭтоЗадача,
			|	ВЫБОР
			|		КОГДА НЕ ЗадачиНаМаршрут.Место.Транзит
			|			ТОГДА ЗадачиНаМаршрут.Место.Владелец
			|		ИНАЧЕ ЗадачиНаМаршрут.Место.ТранзитныйСклад
			|	КОНЕЦ КАК Owner,
			|	ВЫБОР
			|		КОГДА НЕ ЗадачиНаМаршрут.Место.Транзит
			|			ТОГДА ЗадачиНаМаршрут.Место.АдресДоставки
			|		ИНАЧЕ ЕСТЬNULL(ТранзитныйСкладАдресаСкладов.Адрес, """")
			|	КОНЕЦ КАК OwnerAdress
			|ПОМЕСТИТЬ ВозможноНовыеЗадачиПоМаршруту
			|ИЗ
			|	РегистрСведений.ЗадачиНаМаршрут.СрезПоследних(, Место НЕ В (ВЫБРАТЬ МестоДоставки ИЗ АктивныеМестаПоВариантуМаршрута)
			|											   И НЕ Место.Архивный) КАК ЗадачиНаМаршрут

			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ СкладыВремяКОтгрузке КАК СкладыВремяКОтгрузке
			|ПО	СкладыВремяКОтгрузке.Склад = 	ВЫБОР
			|										КОГДА ЗадачиНаМаршрут.Отправитель Ссылка Справочник.Склады
			|											ТОГДА ВЫРАЗИТЬ(ЗадачиНаМаршрут.Отправитель КАК Справочник.Склады)
			|										ИНАЧЕ ВЫБОР
	        |												КОГДА ЗадачиНаМаршрут.Место.Транзит
	        |												ТОГДА ВЫРАЗИТЬ(ЗадачиНаМаршрут.Место.ТранзитныйСклад КАК Справочник.Склады)
	        |												ИНАЧЕ ВЫРАЗИТЬ(ЗадачиНаМаршрут.Место.Владелец КАК Справочник.Склады)
	        |											 КОНЕЦ
			|								  	КОНЕЦ
			|И	ВЫБОР
			|		КОГДА НачалоПериода(ЗадачиНаМаршрут.Период, День) < &НачалоДняДокумента
			|			ТОГДА ИСТИНА
			|		КОГДА НачалоПериода(ЗадачиНаМаршрут.Период, День) = &НачалоДняДокумента
			|			ТОГДА 	ВЫБОР
			|						КОГДА ЧАС(СкладыВремяКОтгрузке.ВремяКОтгрузке) > ЧАС(ЗадачиНаМаршрут.Период)
			|							ТОГДА ИСТИНА
			|						КОГДА ЧАС(СкладыВремяКОтгрузке.ВремяКОтгрузке) 	   = ЧАС(ЗадачиНаМаршрут.Период)
			|							И МИНУТА(СкладыВремяКОтгрузке.ВремяКОтгрузке) >= МИНУТА(ЗадачиНаМаршрут.Период)
			|							ТОГДА ИСТИНА
			|						ИНАЧЕ ЛОЖЬ
			|					КОНЕЦ
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ
			|	ЛЕВОЕ СОЕДИНЕНИЕ АдресаСкладов КАК ТранзитныйСкладАдресаСкладов
			|		ПО ЗадачиНаМаршрут.Место.ТранзитныйСклад = ТранзитныйСкладАдресаСкладов.Склад
			|ГДЕ
			|	ЗадачиНаМаршрут.ВариантМаршрута = &ВариантМаршрута
			|И	ЗадачиНаМаршрут.СтатусОтгрузки НЕ В (	ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ЗадачаВПроцессеВыполнения),
			|											ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ЗадачаВыполнена),
			|											ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ЗадачаОтменена))
			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//8. 
			|ВЫБРАТЬ
			|   ВЫБОР
			|		КОГДА ПоездкаЗаМаршрутом.ЭтоЗадача
			|		ТОГДА ПоездкаЗаМаршрутом.ЗадачаПоставлена 
			|		ИНАЧЕ ПоездкаЗаМаршрутом.КомплектацияЗавершена
			|	КОНЕЦ КАК Период,

			|	ПоездкаЗаМаршрутом.ДокументПоездки 		КАК ДокументПоездки,	
			|   	ПоездкаЗаМаршрутом.МестоДоставки		КАК МестоДоставки,
			|   	ПоездкаЗаМаршрутом.Отправитель			КАК Отправитель,
			|	ПоездкаЗаМаршрутом.ЭтоЗадача        	КАК ЭтоЗадача,
			|	ПоездкаЗаМаршрутом.Owner 				КАК Owner,
			|	ПоездкаЗаМаршрутом.OwnerAdress          КАК OwnerAdress

			|ПОМЕСТИТЬ ПоездкаМестаДоставки
			|ИЗ
			|	РегистрСведений.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом
			|ГДЕ
			|	ДокументПоездки	= &ДокументСсылка

			|ОБЪЕДИНИТЬ

			|ВЫБРАТЬ
			|	*
			|ИЗ
			|	ВозможноНовыеМестаПоМаршруту

			|ОБЪЕДИНИТЬ

			|ВЫБРАТЬ
			|	*
			|ИЗ
			|	ВозможноНовыеЗадачиПоМаршруту

			|ИНДЕКСИРОВАТЬ ПО
			|	ДокументПоездки,	
			|   МестоДоставки
			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//9. 
			|ВЫБРАТЬ
			|  	ПоездкаМестаДоставки.Период					КАК Период,
			|	ПоездкаМестаДоставки.ДокументПоездки 		КАК ДокументПоездки, 		
			|   	ПоездкаМестаДоставки.МестоДоставки			КАК МестоДоставки,
			|	ПоездкаМестаДоставки.ЭтоЗадача        		КАК ЭтоЗадача,
			|   	ПоездкаМестаДоставки.МестоДоставки.Архивный КАК Архивное,
			|	ПоездкаМестаДоставки.Отправитель			КАК Отправитель,
			|   	ПоездкаЗаМаршрутом.МестоНеВыдано          	КАК МестоНеВыдано,
			|   	ПоездкаЗаМаршрутом.ИсключеноИзДоставки   	КАК ИсключеноИзДоставки,
			|   	ПоездкаМестаДоставки.Owner					КАК Owner,
			|	ПоездкаМестаДоставки.OwnerAdress 			КАК OwnerAdress
			|   	
			|ПОМЕСТИТЬ ПоездкаАктуальныеМестаДоставки
			|ИЗ
			|	ПоездкаМестаДоставки КАК ПоездкаМестаДоставки

			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом
			|ПО	ПоездкаЗаМаршрутом.ДокументПоездки 	= ПоездкаМестаДоставки.ДокументПоездки
			|И	ПоездкаЗаМаршрутом.МестоДоставки	= ПоездкаМестаДоставки.МестоДоставки
			|И 	ПоездкаЗаМаршрутом.Owner 			= ПоездкаМестаДоставки.Owner

			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ СкладыВремяКОтгрузке;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АктивныеПоездкиПоВариантуМаршрута;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АктивныеМестаПоВариантуМаршрута;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВозможноНовыеМестаПоМаршруту;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВозможноНовыеЗадачиПоМаршруту;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ПоездкаМестаДоставки;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//11. 
			|ВЫБРАТЬ
			|	ОтгрузкаМест.Период 		КАК Период, 		
			|   ОтгрузкаМест.Место			КАК МестоДоставки,
			|	ОтгрузкаМест.СтатусОтгрузки КАК СтатусОтгрузки,
			|	ОтгрузкаМест.Склад			КАК Отправитель,
			|	АдресаСкладов.Адрес			КАК АдресОтправителя
			|ПОМЕСТИТЬ КешОтгрузкаМест
			|ИЗ
			|	РегистрСведений.ОтгрузкаМест КАК ОтгрузкаМест

			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоездкаАктуальныеМестаДоставки КАК АктуальныеМеста
			|ПО	АктуальныеМеста.МестоДоставки = ОтгрузкаМест.Место
			|И	АктуальныеМеста.Отправитель	  = ОтгрузкаМест.Склад

			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресаСкладов КАК АдресаСкладов
			|ПО	АдресаСкладов.Склад = ОтгрузкаМест.Склад

			|ГДЕ
			|	ОтгрузкаМест.ВариантМаршрута = &ВариантМаршрута

			|ИНДЕКСИРОВАТЬ ПО
			|	МестоДоставки,
			|	СтатусОтгрузки
			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//12. 
			|ВЫБРАТЬ
			|	ЗадачиНаМаршрут.Период 				КАК Период, 		
			|   	ЗадачиНаМаршрут.Место				КАК МестоДоставки,
			|	ЗадачиНаМаршрут.СтатусОтгрузки 		КАК СтатусОтгрузки,
			|   	ЗадачиНаМаршрут.Отправитель     	КАК Отправитель,
			|   	ЗадачиНаМаршрут.АдресОтправителя	КАК АдресОтправителя,
			|	АктуальныеМеста.Owner				КАК Owner,
			|	АктуальныеМеста.OwnerAdress         КАК OwnerAdress

			|ПОМЕСТИТЬ КешЗадачиНаМаршрут
			|ИЗ
			|	РегистрСведений.ЗадачиНаМаршрут КАК ЗадачиНаМаршрут

			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоездкаАктуальныеМестаДоставки КАК АктуальныеМеста
			|ПО	АктуальныеМеста.Период		 <= ЗадачиНаМаршрут.Период
			|И	АктуальныеМеста.МестоДоставки = ЗадачиНаМаршрут.Место
			|И	АктуальныеМеста.Отправитель	  = ЗадачиНаМаршрут.Отправитель
			|ГДЕ
			|	ЗадачиНаМаршрут.ВариантМаршрута = &ВариантМаршрута

			|ИНДЕКСИРОВАТЬ ПО
			|	МестоДоставки,
			|	СтатусОтгрузки
			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			//13. 
			|ВЫБРАТЬ
			|	АктуальныеМеста.ДокументПоездки, 		
			|   АктуальныеМеста.МестоДоставки,
			|	АктуальныеМеста.ЭтоЗадача,
			|   АктуальныеМеста.Архивное,
			|   АктуальныеМеста.МестоНеВыдано,
			|   АктуальныеМеста.ИсключеноИзДоставки,

			|  	НачалоКомплектации.Период 			КАК НачалоКомплектации,
			|   КомплектацияЗавершена.Период		КАК КомплектацияЗавершена,
			|   ПогруженоВМашину.Период				КАК ПогруженоВМашину,
			|   ОтгруженоПартнеру.Период			КАК ОтгруженоПартнеру,
			|	РазукомплектованиеНаСкладе.Период 	КАК РазукомплектованиеНаСкладе,
			|   ВозвращеноНаСклад.Период			КАК ВозвращеноНаСклад,

			|	ЗадачаПоставлена.Период				КАК ЗадачаПоставлена,
			|   ЗадачаВПроцессеВыполнения.Период	КАК ЗадачаВПроцессеВыполнения,
			|   ЗадачаВыполнена.Период				КАК ЗадачаВыполнена,
			|   ЗадачаОтменена.Период				КАК ЗадачаОтменена,
			|   ВЫБОР
			|		КОГДА АктуальныеМеста.ЭтоЗадача
			|			ТОГДА ВЫБОР
			|					КОГДА АктуальныеМеста.МестоДоставки.Транзит
			|						ТОГДА АктуальныеМеста.МестоДоставки.ТранзитныйСклад
			|					ИНАЧЕ АктуальныеМеста.Owner
			|				КОНЕЦ
			|		ИНАЧЕ АктуальныеМеста.МестоДоставки.Владелец
			|	КОНЕЦ КАК Owner,
			|	ВЫБОР
			|		КОГДА АктуальныеМеста.ЭтоЗадача
			|			ТОГДА ВЫБОР
			|					КОГДА АктуальныеМеста.МестоДоставки.Транзит
			|						ТОГДА ТранзитыАдресаСкладов.Адрес
			|					ИНАЧЕ АктуальныеМеста.OwnerAdress
			|				КОНЕЦ
			|		ИНАЧЕ АктуальныеМеста.МестоДоставки.АдресДоставки
			|	КОНЕЦ КАК OwnerAdress,
			|	""00000000-0000-0000-0000-000000000000""				КАК OwnerGeoGUID,
			| 	OwnerGeoLocation.Ссылка									КАК OwnerGeoLocation,
			|	Ложь													КАК IsPartner,
			|	""00000000-0000-0000-0000-000000000000""				КАК GUID,
			|   АктуальныеМеста.МестоДоставки.Код          				КАК Код,
			|	0														КАК ManualCode,
			|   АктуальныеМеста.МестоДоставки.УникальныйИдентификатор	КАК AssignedQRCode,
			|   АктуальныеМеста.МестоДоставки.ЗаполнятьУникальныйИдентификатор КАК IsQRCodeScanningNeeded,
			|   АктуальныеМеста.МестоДоставки.Ответственный             КАК Author,
			|   АктуальныеМеста.МестоДоставки.ТекстЗадачи               КАК Comment,
			|   ВЫБОР
			|		КОГДА АктуальныеМеста.ЭтоЗадача
			|		ТОГДА ЗадачаПоставлена.Отправитель
			|		ИНАЧЕ IsNull(НачалоКомплектации.Отправитель, КомплектацияЗавершена.Отправитель)
			|	КОНЕЦ   												КАК Отправитель,
			|   ВЫБОР
			|		КОГДА АктуальныеМеста.ЭтоЗадача
			|		ТОГДА ЗадачаПоставлена.АдресОтправителя
			|		ИНАЧЕ IsNull(НачалоКомплектации.АдресОтправителя, КомплектацияЗавершена.АдресОтправителя) 
			|	КОНЕЦ                                                   КАК АдресОтправителя,
			|	""00000000-0000-0000-0000-000000000000""				КАК ОтправительGeoGUID,
			|   ОтправительGeoLocation.Ссылка                           КАК ОтправительGeoLocation
			|ИЗ
			|	ПоездкаАктуальныеМестаДоставки КАК АктуальныеМеста

			|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК НачалоКомплектации
			|ПО	НачалоКомплектации.МестоДоставки = АктуальныеМеста.МестоДоставки
			|И	НачалоКомплектации.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.НачалоКомплектации)

			|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК КомплектацияЗавершена
			|ПО	КомплектацияЗавершена.МестоДоставки = АктуальныеМеста.МестоДоставки
			|И	КомплектацияЗавершена.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.КомплектацияЗавершена)

			|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК ПогруженоВМашину
			|ПО	ПогруженоВМашину.МестоДоставки = АктуальныеМеста.МестоДоставки
			|И	ПогруженоВМашину.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ПогруженоВМашину)

			|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК ОтгруженоПартнеру
			|ПО	ОтгруженоПартнеру.МестоДоставки = АктуальныеМеста.МестоДоставки
			|И	ОтгруженоПартнеру.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)

			|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК РазукомплектованиеНаСкладе
			|ПО	РазукомплектованиеНаСкладе.МестоДоставки = АктуальныеМеста.МестоДоставки
			|И	РазукомплектованиеНаСкладе.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.РазукомплектованиеНаСкладе)

			|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК ВозвращеноНаСклад
			|ПО	ВозвращеноНаСклад.МестоДоставки = АктуальныеМеста.МестоДоставки
			|И	ВозвращеноНаСклад.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ВозвращеноНаСклад)

			|ЛЕВОЕ СОЕДИНЕНИЕ КешЗадачиНаМаршрут КАК ЗадачаПоставлена
			|ПО	ЗадачаПоставлена.МестоДоставки = АктуальныеМеста.МестоДоставки
			|И	ЗадачаПоставлена.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ЗадачаПоставлена)

			|ЛЕВОЕ СОЕДИНЕНИЕ КешЗадачиНаМаршрут КАК ЗадачаВПроцессеВыполнения
			|ПО	ЗадачаВПроцессеВыполнения.МестоДоставки = АктуальныеМеста.МестоДоставки
			|И	ЗадачаВПроцессеВыполнения.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ЗадачаВПроцессеВыполнения)

			|ЛЕВОЕ СОЕДИНЕНИЕ КешЗадачиНаМаршрут КАК ЗадачаВыполнена
			|ПО	ЗадачаВыполнена.МестоДоставки = АктуальныеМеста.МестоДоставки
			|И	ЗадачаВыполнена.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ЗадачаВыполнена)

			|ЛЕВОЕ СОЕДИНЕНИЕ КешЗадачиНаМаршрут КАК ЗадачаОтменена
			|ПО	ЗадачаОтменена.МестоДоставки = АктуальныеМеста.МестоДоставки
			|И	ЗадачаОтменена.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ЗадачаОтменена)

			|ЛЕВОЕ СОЕДИНЕНИЕ АдресаСкладов КАК ТранзитыАдресаСкладов
			|ПО	ТранзитыАдресаСкладов.Склад = АктуальныеМеста.МестоДоставки.ТранзитныйСклад 
			|												
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КТС_ГеографическиеРасположенияПартнеров КАК OwnerGeoLocation
			|ПО	OwnerGeoLocation.Владелец = ВЫБОР
			|									КОГДА АктуальныеМеста.ЭтоЗадача
			|									ТОГДА 	ВЫБОР
			|												КОГДА АктуальныеМеста.МестоДоставки.Транзит
			|												ТОГДА АктуальныеМеста.МестоДоставки.ТранзитныйСклад
			|												ИНАЧЕ АктуальныеМеста.Owner
			|											КОНЕЦ
			|									ИНАЧЕ АктуальныеМеста.МестоДоставки.Владелец
			|								КОНЕЦ
			|И	OwnerGeoLocation.ГородСклад = 	ВЫБОР
			|										КОГДА АктуальныеМеста.ЭтоЗадача
			|										ТОГДА 	ВЫБОР
			|													КОГДА АктуальныеМеста.МестоДоставки.Транзит
			|													ТОГДА ТранзитыАдресаСкладов.Адрес
			|													ИНАЧЕ АктуальныеМеста.OwnerAdress
			|												КОНЕЦ
			|										ИНАЧЕ АктуальныеМеста.МестоДоставки.АдресДоставки
			|									КОНЕЦ
			|И НЕ OwnerGeoLocation.ПометкаУдаления

			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КТС_ГеографическиеРасположенияПартнеров КАК ОтправительGeoLocation
			|ПО	ОтправительGeoLocation.Владелец   = ВЫБОР
			|											КОГДА АктуальныеМеста.ЭтоЗадача
			|											ТОГДА ЗадачаПоставлена.Отправитель
			|											ИНАЧЕ IsNull(НачалоКомплектации.Отправитель, КомплектацияЗавершена.Отправитель)
			|										КОНЕЦ	
			|И	ОтправительGeoLocation.ГородСклад = ВЫБОР
			|											КОГДА АктуальныеМеста.ЭтоЗадача
			|											ТОГДА ЗадачаПоставлена.АдресОтправителя
			|											ИНАЧЕ IsNull(НачалоКомплектации.АдресОтправителя, КомплектацияЗавершена.АдресОтправителя) 
			|										КОНЕЦ
			|И НЕ ОтправительGeoLocation.ПометкаУдаления
			|;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ СкладыОтгрузки;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ АдресаСкладов;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ КешОтгрузкаМест;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ КешЗадачиНаМаршрут;
			//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ПоездкаАктуальныеМестаДоставки;
			|";

	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаДанныеДокумента()

Функция ПолучитьТекстЗапросаДополнительнойПоездки()

	ТекстЗапроса = "
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//1. Получаем список складов с которых может производится отгрузка
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Склад КАК Склад
		|ПОМЕСТИТЬ СкладыОтгрузки
		|ИЗ
		|	Справочник.ВариантыМаршрутов.СкладыОтгрузки
		|ГДЕ
		|	Ссылка = &ВариантМаршрута
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//2. 
		|ВЫБРАТЬ
		|	ПоездкаМестаДоставки.ДокументПоездки 		КАК ДокументПоездки, 		
		|   ПоездкаМестаДоставки.МестоДоставки			КАК МестоДоставки,
		|	ПоездкаМестаДоставки.ЭтоЗадача        		КАК ЭтоЗадача,
		|   ПоездкаМестаДоставки.МестоДоставки.Архивный КАК Архивное,
		|	ПоездкаМестаДоставки.Отправитель			КАК Отправитель,
		|   ПоездкаМестаДоставки.МестоНеВыдано          КАК МестоНеВыдано,
		|   ПоездкаМестаДоставки.ИсключеноИзДоставки   	КАК ИсключеноИзДоставки
		|ПОМЕСТИТЬ ПоездкаАктуальныеМестаДоставки
		|ИЗ
		|	РегистрСведений.ПоездкаЗаМаршрутом КАК ПоездкаМестаДоставки
		|
		|ГДЕ
		|	ДокументПоездки	= &ДокументСсылка
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//3. Получаем адреса складов
		|ВЫБРАТЬ
		|	СкладыКонтактнаяИнформация.Ссылка 			КАК Склад,
		|	СкладыКонтактнаяИнформация.Представление 	КАК Адрес
		|ПОМЕСТИТЬ АдресаСкладов
		|ИЗ
		|	Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяИнформация
		|ГДЕ
		|	СкладыКонтактнаяИнформация.Ссылка В
		|			(ВЫБРАТЬ
		|				Склад
		|			ИЗ
		|				СкладыОтгрузки
		|			)
		|	И СкладыКонтактнаяИнформация.Тип = &ТипКонтактнойИнформацииАдрес
		|	И СкладыКонтактнаяИнформация.Вид = &ВидКонтактнойИнформацииАдресСклада
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//4. 
		|ВЫБРАТЬ
		|	ОтгрузкаМест.Период 		КАК Период, 		
		|   ОтгрузкаМест.Место			КАК МестоДоставки,
		|	ОтгрузкаМест.СтатусОтгрузки КАК СтатусОтгрузки,
		|	ОтгрузкаМест.Склад			КАК Отправитель,
		|	АдресаСкладов.Адрес			КАК АдресОтправителя
		|ПОМЕСТИТЬ КешОтгрузкаМест
		|ИЗ
		|	РегистрСведений.ОтгрузкаМест КАК ОтгрузкаМест
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоездкаАктуальныеМестаДоставки КАК АктуальныеМеста
		|ПО	АктуальныеМеста.МестоДоставки = ОтгрузкаМест.Место
		|И	АктуальныеМеста.Отправитель	  = ОтгрузкаМест.Склад
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресаСкладов КАК АдресаСкладов
		|ПО	АдресаСкладов.Склад = ОтгрузкаМест.Склад
		|
		|ГДЕ
		|	ОтгрузкаМест.ВариантМаршрута = &ВариантМаршрута
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МестоДоставки,
		|	СтатусОтгрузки
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//5. 
		|ВЫБРАТЬ
		|	ЗадачиНаМаршрут.Период 				КАК Период, 		
		|   ЗадачиНаМаршрут.Место				КАК МестоДоставки,
		|	ЗадачиНаМаршрут.СтатусОтгрузки 		КАК СтатусОтгрузки,
		|   ЗадачиНаМаршрут.Отправитель     	КАК Отправитель,
		|   ЗадачиНаМаршрут.АдресОтправителя	КАК АдресОтправителя
		|ПОМЕСТИТЬ КешЗадачиНаМаршрут
		|ИЗ
		|	РегистрСведений.ЗадачиНаМаршрут КАК ЗадачиНаМаршрут
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоездкаАктуальныеМестаДоставки КАК АктуальныеМеста
		|ПО	АктуальныеМеста.МестоДоставки = ЗадачиНаМаршрут.Место
		|И	АктуальныеМеста.Отправитель	  = ЗадачиНаМаршрут.Отправитель
		|
		|ГДЕ
		|	ЗадачиНаМаршрут.ВариантМаршрута = &ВариантМаршрута
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МестоДоставки,
		|	СтатусОтгрузки
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//6. 
		|ВЫБРАТЬ
		|	АктуальныеМеста.ДокументПоездки, 		
		|   АктуальныеМеста.МестоДоставки,
		|	АктуальныеМеста.ЭтоЗадача,
		|   АктуальныеМеста.Архивное,
		|   АктуальныеМеста.МестоНеВыдано,
		|   АктуальныеМеста.ИсключеноИзДоставки,
		|
		|  	НачалоКомплектации.Период 			КАК НачалоКомплектации,
		|   КомплектацияЗавершена.Период		КАК КомплектацияЗавершена,
		|   ПогруженоВМашину.Период				КАК ПогруженоВМашину,
		|   ОтгруженоПартнеру.Период			КАК ОтгруженоПартнеру,
		|	РазукомплектованиеНаСкладе.Период 	КАК РазукомплектованиеНаСкладе,
		|   ВозвращеноНаСклад.Период			КАК ВозвращеноНаСклад,
		|
		|	ЗадачаПоставлена.Период				КАК ЗадачаПоставлена,
		|   ЗадачаВПроцессеВыполнения.Период	КАК ЗадачаВПроцессеВыполнения,
		|   ЗадачаВыполнена.Период				КАК ЗадачаВыполнена,
		|   ЗадачаОтменена.Период				КАК ЗадачаОтменена,
		|
		|  	ВЫБОР
		|		КОГДА АктуальныеМеста.ЭтоЗадача
		|		ТОГДА 	ВЫБОР
		|					КОГДА АктуальныеМеста.МестоДоставки.Транзит
		|					ТОГДА АктуальныеМеста.МестоДоставки.ТранзитныйСклад
		|					ИНАЧЕ АктуальныеМеста.МестоДоставки.Владелец
		|				КОНЕЦ
		|		ИНАЧЕ АктуальныеМеста.МестоДоставки.Владелец
		|	КОНЕЦ   												КАК Owner,
		|  	ВЫБОР
		|		КОГДА АктуальныеМеста.ЭтоЗадача
		|		ТОГДА 	ВЫБОР
		|					КОГДА АктуальныеМеста.МестоДоставки.Транзит
		|					ТОГДА ТранзитыАдресаСкладов.Адрес
		|					ИНАЧЕ АктуальныеМеста.МестоДоставки.АдресДоставки
		|				КОНЕЦ
		|		ИНАЧЕ АктуальныеМеста.МестоДоставки.АдресДоставки
		|	КОНЕЦ													КАК OwnerAdress,
		|	""00000000-0000-0000-0000-000000000000""				КАК OwnerGeoGUID,
		| 	OwnerGeoLocation.Ссылка									КАК OwnerGeoLocation,
		|	Ложь													КАК IsPartner,
		|	""00000000-0000-0000-0000-000000000000""				КАК GUID,
		|   АктуальныеМеста.МестоДоставки.Код          				КАК Код,
		|	0														КАК ManualCode,
		|   АктуальныеМеста.МестоДоставки.УникальныйИдентификатор	КАК AssignedQRCode,
		|   АктуальныеМеста.МестоДоставки.ЗаполнятьУникальныйИдентификатор КАК IsQRCodeScanningNeeded,
		|   АктуальныеМеста.МестоДоставки.Ответственный             КАК Author,
		|   АктуальныеМеста.МестоДоставки.ТекстЗадачи               КАК Comment,
		|   ВЫБОР
		|		КОГДА АктуальныеМеста.ЭтоЗадача
		|		ТОГДА ЗадачаПоставлена.Отправитель
		|		ИНАЧЕ IsNull(НачалоКомплектации.Отправитель, КомплектацияЗавершена.Отправитель)
		|	КОНЕЦ   												КАК Отправитель,
		|   ВЫБОР
		|		КОГДА АктуальныеМеста.ЭтоЗадача
		|		ТОГДА ЗадачаПоставлена.АдресОтправителя
		|		ИНАЧЕ IsNull(НачалоКомплектации.АдресОтправителя, КомплектацияЗавершена.АдресОтправителя) 
		|	КОНЕЦ                                                   КАК АдресОтправителя,
		|	""00000000-0000-0000-0000-000000000000""				КАК ОтправительGeoGUID,
		|   ОтправительGeoLocation.Ссылка                           КАК ОтправительGeoLocation
		|ИЗ
		|	ПоездкаАктуальныеМестаДоставки КАК АктуальныеМеста
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК НачалоКомплектации
		|ПО	НачалоКомплектации.МестоДоставки = АктуальныеМеста.МестоДоставки
		|И	НачалоКомплектации.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.НачалоКомплектации)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК КомплектацияЗавершена
		|ПО	КомплектацияЗавершена.МестоДоставки = АктуальныеМеста.МестоДоставки
		|И	КомплектацияЗавершена.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.КомплектацияЗавершена)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК ПогруженоВМашину
		|ПО	ПогруженоВМашину.МестоДоставки = АктуальныеМеста.МестоДоставки
		|И	ПогруженоВМашину.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ПогруженоВМашину)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК ОтгруженоПартнеру
		|ПО	ОтгруженоПартнеру.МестоДоставки = АктуальныеМеста.МестоДоставки
		|И	ОтгруженоПартнеру.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК РазукомплектованиеНаСкладе
		|ПО	РазукомплектованиеНаСкладе.МестоДоставки = АктуальныеМеста.МестоДоставки
		|И	РазукомплектованиеНаСкладе.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.РазукомплектованиеНаСкладе)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешОтгрузкаМест КАК ВозвращеноНаСклад
		|ПО	ВозвращеноНаСклад.МестоДоставки = АктуальныеМеста.МестоДоставки
		|И	ВозвращеноНаСклад.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ВозвращеноНаСклад)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешЗадачиНаМаршрут КАК ЗадачаПоставлена
		|ПО	ЗадачаПоставлена.МестоДоставки = АктуальныеМеста.МестоДоставки
		|И	ЗадачаПоставлена.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ЗадачаПоставлена)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешЗадачиНаМаршрут КАК ЗадачаВПроцессеВыполнения
		|ПО	ЗадачаВПроцессеВыполнения.МестоДоставки = АктуальныеМеста.МестоДоставки
		|И	ЗадачаВПроцессеВыполнения.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ЗадачаВПроцессеВыполнения)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешЗадачиНаМаршрут КАК ЗадачаВыполнена
		|ПО	ЗадачаВыполнена.МестоДоставки = АктуальныеМеста.МестоДоставки
		|И	ЗадачаВыполнена.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ЗадачаВыполнена)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешЗадачиНаМаршрут КАК ЗадачаОтменена
		|ПО	ЗадачаОтменена.МестоДоставки = АктуальныеМеста.МестоДоставки
		|И	ЗадачаОтменена.СтатусОтгрузки = Значение(Перечисление.СтатусыОтгрузкиМест.ЗадачаОтменена)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АдресаСкладов КАК ТранзитыАдресаСкладов
		|ПО	ТранзитыАдресаСкладов.Склад = АктуальныеМеста.МестоДоставки.ТранзитныйСклад 
		|													
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КТС_ГеографическиеРасположенияПартнеров КАК OwnerGeoLocation
		|ПО	OwnerGeoLocation.Владелец = ВЫБОР
		|									КОГДА АктуальныеМеста.ЭтоЗадача
		|									ТОГДА 	ВЫБОР
		|												КОГДА АктуальныеМеста.МестоДоставки.Транзит
		|												ТОГДА АктуальныеМеста.МестоДоставки.ТранзитныйСклад
		|												ИНАЧЕ АктуальныеМеста.МестоДоставки.Владелец
		|											КОНЕЦ
		|									ИНАЧЕ АктуальныеМеста.МестоДоставки.Владелец
		|								КОНЕЦ
		|И	OwnerGeoLocation.ГородСклад = 	ВЫБОР
		|										КОГДА АктуальныеМеста.ЭтоЗадача
		|										ТОГДА 	ВЫБОР
		|													КОГДА АктуальныеМеста.МестоДоставки.Транзит
		|													ТОГДА ТранзитыАдресаСкладов.Адрес
		|													ИНАЧЕ АктуальныеМеста.МестоДоставки.АдресДоставки
		|												КОНЕЦ
		|										ИНАЧЕ АктуальныеМеста.МестоДоставки.АдресДоставки
		|									КОНЕЦ
		|И НЕ OwnerGeoLocation.ПометкаУдаления
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КТС_ГеографическиеРасположенияПартнеров КАК ОтправительGeoLocation
		|ПО	ОтправительGeoLocation.Владелец   = ВЫБОР
		|											КОГДА АктуальныеМеста.ЭтоЗадача
		|											ТОГДА ЗадачаПоставлена.Отправитель
		|											ИНАЧЕ IsNull(НачалоКомплектации.Отправитель, КомплектацияЗавершена.Отправитель)
		|										КОНЕЦ	
		|И	ОтправительGeoLocation.ГородСклад = ВЫБОР
		|											КОГДА АктуальныеМеста.ЭтоЗадача
		|											ТОГДА ЗадачаПоставлена.АдресОтправителя
		|											ИНАЧЕ IsNull(НачалоКомплектации.АдресОтправителя, КомплектацияЗавершена.АдресОтправителя) 
		|										КОНЕЦ
		|И НЕ ОтправительGeoLocation.ПометкаУдаления
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СкладыОтгрузки;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АдресаСкладов;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешОтгрузкаМест;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешЗадачиНаМаршрут;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПоездкаАктуальныеМестаДоставки;
		|";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаДанныеДокумента()

Функция ПолучитьТекстЗапросаСуммаОплат()

	ТекстЗапроса = "
		///////////////////////////////////////////////////////////////////////////////////////////
		// 1. Получаем все доступные места по маршруту, где получатель - партнер (только для партнеров нужно рассчитывать сумму)
		|ВЫБРАТЬ
		|	ДокументПоездки	КАК ДокументПоездки,
		|	Owner			КАК Получатель,
		|	МестоДоставки 	КАК МестоДоставки
		|ПОМЕСТИТЬ КешПоездкаЗаМаршрутом
		|ИЗ
		|	РегистрСведений.ПоездкаЗаМаршрутом
		|ГДЕ
		|	ДокументПоездки = &ДокументПоездки
		|И	Owner Ссылка Справочник.Партнеры	
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ДокументПоездки,
		|	Отправитель,
		|	МестоДоставки
		|ИЗ
		|	РегистрСведений.ПоездкаЗаМаршрутом
		|ГДЕ
		|	ДокументПоездки = &ДокументПоездки
		|И	Отправитель Ссылка Справочник.Партнеры
		|;
		///////////////////////////////////////////////////////////////////////////////////////////
		// 2. Получим партнеров, для которых вручную установили сумму отгрузки
		|ВЫБРАТЬ
		|	Финансы.ДокументПоездки КАК ДокументПоездки,
		|	Финансы.Партнер			КАК Партнер
		|ПОМЕСТИТЬ КешПартнерыНазначенныеЦены
		|ИЗ
		|	РегистрСведений.ПоездкаЗаМаршрутомФинансы КАК Финансы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешПоездкаЗаМаршрутом КАК КешПоездкаЗаМаршрутом
		|		ПО Финансы.ДокументПоездки = КешПоездкаЗаМаршрутом.ДокументПоездки
		|			И (Финансы.СуммаНазначеннаяМенеджером > 0
		|				ИЛИ Финансы.СуммаПолученнаяВодителем > 0
		|				ИЛИ Финансы.СуммаПоФакту > 0)
		|;
		///////////////////////////////////////////////////////////////////////////////////////////
		// 3. Выберем партнеров для которых мы можем расчитать сумму отгрузки
		|ВЫБРАТЬ
		|	ДокументПоездки	КАК ДокументПоездки,
		|	Получатель		КАК Получатель,
		|	МестоДоставки 	КАК МестоДоставки
		|ПОМЕСТИТЬ СписокМестИПартнеров
		|ИЗ
		|	КешПоездкаЗаМаршрутом
		|ГДЕ
		|	(ДокументПоездки, Получатель) НЕ В
		|		(ВЫБРАТЬ
		|			ДокументПоездки,
		|			Партнер
		|		ИЗ
		|			КешПартнерыНазначенныеЦены)
		|;
		///////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешПоездкаЗаМаршрутом;	 	
		///////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешПартнерыНазначенныеЦены; 
		///////////////////////////////////////////////////////////////////////////////////////////
		// 4. Получаем всех партнеров для которых должны устанавливаться настройки условий отгрузки
		// список сегментов партнеров доступен в регистре КТС_НастройкиСегментовУсловийОтгрузки
		|ВЫБРАТЬ
		|	ПартнерыСегмента.Партнер КАК Партнер
		|ПОМЕСТИТЬ ТаблицаДопустимыхПартнеровПредварительная
		|ИЗ
		|	РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КТС_НастройкиСегментовУсловийОтгрузки КАК СегментыУсловийОтгрузки
		|		ПО ПартнерыСегмента.Сегмент    = СегментыУсловийОтгрузки.СегментПартнеров
		|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 5.
					|// Сделаем отбор тех партнеров, для которых были сформированы места
					|//
					|ВЫБРАТЬ
					|	СписокМестИПартнеров.ДокументПоездки	КАК ДокументПоездки,
					|	СписокМестИПартнеров.Получатель			КАК Партнер,
					|	СписокМестИПартнеров.МестоДоставки 		КАК Место
					|ПОМЕСТИТЬ ТаблицаДопустимыхПартнеровИМест
					|ИЗ
					|	СписокМестИПартнеров КАК СписокМестИПартнеров
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДопустимыхПартнеровПредварительная КАК ДопустимыеПартнеры
					|		ПО СписокМестИПартнеров.Получатель = ДопустимыеПартнеры.Партнер
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 6. 
					|// Выбираем только партнеров
					|ВЫБРАТЬ РАЗЛИЧНЫЕ
					|	ДокументПоездки КАК ДокументПоездки,
					|	Партнер			КАК Партнер
					|ПОМЕСТИТЬ ТаблицаДопустимыхПартнеров
					|ИЗ
					|	ТаблицаДопустимыхПартнеровИМест
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|УНИЧТОЖИТЬ СписокМестИПартнеров;	 					// 3

					|///////////////////////////////////////////////////////////////////////////////////////////
					|УНИЧТОЖИТЬ ТаблицаДопустимыхПартнеровПредварительная;	// 4


					|// РАСЧЕТ ДОЛГА


					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 6.
					|//
					|ВЫБРАТЬ
					|	Валюта КАК Валюта,
					|	Курс / Кратность КАК Курс
					|ПОМЕСТИТЬ КурсыВалют	
					|ИЗ
					|	РегистрСведений.КурсыВалют.СрезПоследних
					|	
					|ИНДЕКСИРОВАТЬ ПО
					|	Валюта
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 7.
					|//
					|ВЫБРАТЬ
					|	АналитикаПоПартнерам.Партнер КАК Партнер,
					|	АналитикаПоПартнерам.Организация КАК Организация,
					|	АналитикаПоПартнерам.КлючАналитики КАК КлючАналитики
					|ПОМЕСТИТЬ Аналитика	
					|ИЗ
					|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДопустимыхПартнеров КАК ТаблицаПартнеров
					|		ПО АналитикаПоПартнерам.Партнер = ТаблицаПартнеров.Партнер
					|			И АналитикаПоПартнерам.Организация = &Организация
					|	
					|ИНДЕКСИРОВАТЬ ПО
					|	КлючАналитики		
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 8.
					|//
					|ВЫБРАТЬ
					|	Аналитика.Партнер КАК Партнер,
					|	Сумма(	ВЫБОР ВалютаУправленческогоУчета.Значение
					|				КОГДА Долги.Валюта
					|				ТОГДА Долги.СуммаОстаток
					|				ИНАЧЕ Долги.СуммаОстаток / КурсыВалютУПР.Курс * КурсыВалют.Курс
					|			КОНЕЦ
					|		  ) КАК Долг	

					|ПОМЕСТИТЬ Долги
					|ИЗ
					|	(
					|		ВЫБРАТЬ
					|			АналитикаУчетаПоПартнерам,
					|			Валюта,
					|			СуммаОстаток
					|		ИЗ
					|			РегистрНакопления.РасчетыСКлиентами.Остатки(&КонецСегодня, АналитикаУчетаПоПартнерам В (ВЫБРАТЬ КлючАналитики ИЗ Аналитика)) КАК РасчетыСКлиентами
					|			
					|		ОБЪЕДИНИТЬ ВСЕ
					|								
					|		ВЫБРАТЬ
					|			АналитикаУчетаПоПартнерам,
					|			Валюта,
					|			СуммаОстаток 				
					|		ИЗ
					|			РегистрНакопления.РасчетыСПоставщиками.Остатки(&КонецСегодня, АналитикаУчетаПоПартнерам В (ВЫБРАТЬ КлючАналитики ИЗ Аналитика)) КАК РасчетыСПоставщиками 
					|	) КАК Долги
					|	
					|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Аналитика КАК Аналитика
					|ПО Аналитика.КлючАналитики = Долги.АналитикаУчетаПоПартнерам

					|ЛЕВОЕ СОЕДИНЕНИЕ Константа.ВалютаУправленческогоУчета КАК ВалютаУправленческогоУчета
					|ПО Истина

					|ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалютУПР
					|ПО	КурсыВалютУПР.Валюта = ВалютаУправленческогоУчета.Значение

					|ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
					|ПО	КурсыВалют.Валюта = Долги.Валюта						

					|СГРУППИРОВАТЬ ПО
					|	Аналитика.Партнер
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 9.
					|//
					|ВЫБРАТЬ
					|	Ссылка КАК Ссылка,
					|	МИНИМУМ(ДатаПлатежа) КАК ДатаПлатежа
					|	
					|ПОМЕСТИТЬ ГрафикОплат
					|ИЗ
					|	Документ.ЗаказКлиента.ЭтапыГрафикаОплаты КАК ЭтапыОплаты
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДопустимыхПартнеров КАК ТаблицаПартнеров
					|		ПО ЭтапыОплаты.Ссылка.Партнер = ТаблицаПартнеров.Партнер
					| 			И ЭтапыОплаты.Ссылка.Организация = &Организация					

					|СГРУППИРОВАТЬ ПО 
					|	Ссылка
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 10.
					|//
					|ВЫБРАТЬ
					|	АналитикаУчетаПоПартнерам												КАК КлючАналитики,
					|	ВЫРАЗИТЬ(Регистратор КАК Документ.ВозвратТоваровОтКлиента)				КАК Регистратор,
					|	ВЫРАЗИТЬ(Регистратор КАК Документ.ВозвратТоваровОтКлиента).Валюта		КАК Валюта
					|ПОМЕСТИТЬ ПервыйКеш_Возвраты        
					|ИЗ
					|	РегистрНакопления.РасчетыСКлиентами.ОстаткиИОбороты(, &КонецСегодня, Регистратор, , АналитикаУчетаПоПартнерам В (ВЫБРАТЬ КлючАналитики ИЗ Аналитика))
					|ГДЕ
					|	Регистратор Ссылка Документ.ВозвратТоваровОтКлиента
					|И	СуммаОборот <> 0

					|ИНДЕКСИРОВАТЬ ПО
					|	Регистратор,
					|	КлючАналитики
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 11.
					|//
					|ВЫБРАТЬ
					|	Возвраты.КлючАналитики,
					|	Возвраты.Валюта,										
					|	ВозвратыТовары.ДокументРеализации,
					|	Сумма(ВозвратыТовары.СуммаСНДС) КАК СуммаРасход
					|ПОМЕСТИТЬ ВторойКеш_Возвраты        
					|ИЗ
					|	ПервыйКеш_Возвраты КАК Возвраты
					|	
					|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратыТовары
					|ПО	ВозвратыТовары.Ссылка = Возвраты.Регистратор

					|СГРУППИРОВАТЬ ПО 
					|	Возвраты.КлючАналитики,
					|	Возвраты.Валюта,										
					|   	ВозвратыТовары.ДокументРеализации	
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 12.
					|//
					|ВЫБРАТЬ
					|	АналитикаУчетаПоПартнерам												КАК КлючАналитики,
					|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг)				КАК Регистратор,
					|	Регистратор.МоментВремени КАК МоментВремени,
					|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг).ЗаказКлиента 	КАК ЗаказКлиента,	
					|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг).ДатаПлатежа  	КАК ДатаПлатежа,
					|	Период,
					|	Валюта,
					|	СуммаПриход,
					|	СуммаОборот
					|		
					|ПОМЕСТИТЬ Cache_Обороты
					|ИЗ
					|	РегистрНакопления.РасчетыСКлиентами.ОстаткиИОбороты(, &КонецСегодня, Регистратор, , АналитикаУчетаПоПартнерам В (ВЫБРАТЬ КлючАналитики ИЗ Аналитика))
					|ГДЕ
					|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
					|И	СуммаОборот <> 0			
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 12.
					|//
					|ВЫБРАТЬ
					| 	Аналитика.Партнер КАК Партнер,
					|	Обороты.Регистратор,
					|	Обороты.Период,
					|	ВЫБОР
					|		КОГДА Обороты.ЗаказКлиента = Значение(Документ.ЗаказКлиента.ПустаяСсылка) 
					|		  ИЛИ Обороты.ЗаказКлиента = Неопределено
					|		  ИЛИ Обороты.ЗаказКлиента = NULL
					|		ТОГДА Обороты.ДатаПлатежа
					|		ИНАЧЕ ГрафикОплат.ДатаПлатежа
					|	КОНЕЦ КАК ДатаПлатежа,
					|   	Обороты.МоментВремени,
					|	ВЫБОР 
					|		КОГДА ВалютаУправленческогоУчета.Значение = Обороты.Валюта
					|		ТОГДА Обороты.СуммаПриход 		
					|		ИНАЧЕ Обороты.СуммаПриход / КурсыВалютУПР.Курс * КурсыВалют.Курс
					|	КОНЕЦ -	ВЫБОР
					|			  	КОГДА IsNull(Возвраты.СуммаРасход, 0) = 0 
					|			  	ТОГДА 0
					|				КОГДА ВалютаУправленческогоУчета.Значение = Возвраты.Валюта
					|				ТОГДА Возвраты.СуммаРасход
					|				ИНАЧЕ Возвраты.СуммаРасход / КурсыВалютУПР.Курс * КурсыВозвраты.Курс
					|			КОНЕЦ КАК Сумма,
					|	ВЫБОР 
					|		КОГДА ВалютаУправленческогоУчета.Значение = Обороты.Валюта
					|		ТОГДА Обороты.СуммаОборот
					|		ИНАЧЕ Обороты.СуммаОборот / КурсыВалютУПР.Курс * КурсыВалют.Курс
					|	КОНЕЦ -	ВЫБОР
					|			  	КОГДА IsNull(Возвраты.СуммаРасход, 0) = 0 
					|			  	ТОГДА 0
					|				КОГДА ВалютаУправленческогоУчета.Значение = Возвраты.Валюта
					|				ТОГДА Возвраты.СуммаРасход
					|				ИНАЧЕ Возвраты.СуммаРасход / КурсыВалютУПР.Курс * КурсыВозвраты.Курс
					|			КОНЕЦ КАК СуммаОборот
					|   
					|ПОМЕСТИТЬ ОборотыПоКлиенту
					|ИЗ
					|	Cache_Обороты КАК Обороты
					|						
					|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Аналитика КАК Аналитика
					|ПО Аналитика.КлючАналитики = Обороты.КлючАналитики 						


					|ЛЕВОЕ СОЕДИНЕНИЕ ВторойКеш_Возвраты КАК Возвраты
					|ПО  Возвраты.КлючАналитики 		= Обороты.КлючАналитики
					|И	Возвраты.ДокументРеализации = Обороты.Регистратор

					|ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВозвраты
					|ПО	КурсыВозвраты.Валюта = Возвраты.Валюта


					|ЛЕВОЕ СОЕДИНЕНИЕ ГрафикОплат КАК ГрафикОплат
					|ПО ГрафикОплат.Ссылка = Обороты.ЗаказКлиента

					|ЛЕВОЕ СОЕДИНЕНИЕ Константа.ВалютаУправленческогоУчета КАК ВалютаУправленческогоУчета
					|ПО  Истина

					|ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалютУПР
					|ПО	КурсыВалютУПР.Валюта = ВалютаУправленческогоУчета.Значение

					|ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
					|ПО	КурсыВалют.Валюта = Обороты.Валюта
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 13.
					|//
					|ВЫБРАТЬ
					|	Партнер КАК Партнер,
					|	НАЧАЛОПЕРИОДА(ДатаПлатежа, МЕСЯЦ) КАК НачПериода,
					|	КОНЕЦПЕРИОДА(ДатаПлатежа, МЕСЯЦ) КАК КонПериода,
					|	СУММА(СуммаОборот) КАК Сумма
					|	
					|ПОМЕСТИТЬ ОборотыПоМесяцам	
					|ИЗ
					|	ОборотыПоКлиенту 
					|															
					|СГРУППИРОВАТЬ ПО
					|	Партнер,
					|	НАЧАЛОПЕРИОДА(ДатаПлатежа, МЕСЯЦ),
					|	КОНЕЦПЕРИОДА(ДатаПлатежа, МЕСЯЦ)
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 14.
					|//
					|ВЫБРАТЬ
					|	ОборотыПоМесяцам.Партнер КАК Партнер,
					|	ОборотыПоМесяцам.НачПериода КАК НачПериода,
					|	ОборотыПоМесяцам.КонПериода КАК КонПериода,
					|	ОборотыПоМесяцам.Сумма КАК Сумма,
					|	СУММА(ОборотыПоМесяцамКопия.Сумма) КАК СуммаПосле,
					|	СУММА(ОборотыПоМесяцамКопия.Сумма) - ОборотыПоМесяцам.Сумма КАК СуммаДо
					|ПОМЕСТИТЬ ОборотыПоМесяцамНарастающие
					|ИЗ
					|   ОборотыПоМесяцам КАК ОборотыПоМесяцам
					|   
					|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОборотыПоМесяцам КАК ОборотыПоМесяцамКопия
					|ПО ОборотыПоМесяцам.Партнер     = ОборотыПоМесяцамКопия.Партнер
					|И  ОборотыПоМесяцам.НачПериода <= ОборотыПоМесяцамКопия.НачПериода

					|СГРУППИРОВАТЬ ПО
					|	ОборотыПоМесяцам.НачПериода,
					|	ОборотыПоМесяцам.КонПериода,
					|	ОборотыПоМесяцам.Партнер,
					|	ОборотыПоМесяцам.Сумма
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 15.
					|//
					|ВЫБРАТЬ
					|	Долги.Партнер КАК Партнер,
					|	Долги.Долг КАК Долг,
					|	ОборотыПоМесНарастающие.НачПериода КАК НачПериода,
					|	ОборотыПоМесНарастающие.КонПериода КАК КонПериода,
					|	Долги.Долг - ОборотыПоМесНарастающие.СуммаДо КАК ОстатокДолга
					|ПОМЕСТИТЬ ДолгиПоВыбраннымМесяцам
					|ИЗ
					|	Долги КАК Долги
					|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОборотыПоМесяцамНарастающие КАК ОборотыПоМесНарастающие
					|	ПО Долги.Партнер = ОборотыПоМесНарастающие.Партнер
					|		И Долги.Долг > ОборотыПоМесНарастающие.СуммаДо
					|		И Долги.Долг <= ОборотыПоМесНарастающие.СуммаПосле
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 16.
					|//
					|ВЫБРАТЬ
					|	Обороты.Партнер КАК Партнер,
					|	Обороты.МоментВремени КАК МоментВремени,
					|	Обороты.Регистратор КАК Регистратор,
					|	Обороты.Период КАК Период,
					|	ДолгиПоВыбМесяцам.Долг КАК Долг,
					|	ДолгиПоВыбМесяцам.ОстатокДолга КАК ОстатокДолга,
					|	Обороты.Сумма КАК Сумма,
					|	Обороты.ДатаПлатежа КАК ДатаОтсрочки
					|	
					|ПОМЕСТИТЬ ДвиженияПоВыбраннымМесяцам
					|ИЗ
					|	ОборотыПоКлиенту КАК Обороты
					|						
					|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДолгиПоВыбраннымМесяцам КАК ДолгиПоВыбМесяцам
					|ПО Обороты.Партнер 		= ДолгиПоВыбМесяцам.Партнер
					|И  Обороты.ДатаПлатежа >= ДолгиПоВыбМесяцам.НачПериода
					|И  Обороты.ДатаПлатежа <= ДолгиПоВыбМесяцам.КонПериода
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 17.
					|//
					|ВЫБРАТЬ
					|	ДвиженияПоВыбМесяцам.Партнер КАК Партнер,
					|	ДвиженияПоВыбМесяцам.Регистратор КАК Регистратор,
					|	ДвиженияПоВыбМесяцам.Период КАК Период,
					|	ДвиженияПоВыбМесяцам.МоментВремени КАК МоментВремени,
					|	ДвиженияПоВыбМесяцам.Сумма КАК Сумма,
					|	СУММА(ДвиженияПоВыбМесяцамКопия.Сумма) КАК СуммаПосле,
					|	СУММА(ДвиженияПоВыбМесяцамКопия.Сумма) - ДвиженияПоВыбМесяцам.Сумма КАК СуммаДо,
					|	ДвиженияПоВыбМесяцам.ОстатокДолга КАК ОстатокДолга,
					|	ДвиженияПоВыбМесяцам.ДатаОтсрочки КАК ДатаОтсрочки
					|ПОМЕСТИТЬ ДвиженияПредварительные
					|ИЗ
					|	ДвиженияПоВыбраннымМесяцам КАК ДвиженияПоВыбМесяцам
					|	   
					|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДвиженияПоВыбраннымМесяцам КАК ДвиженияПоВыбМесяцамКопия
					|ПО 	ДвиженияПоВыбМесяцам.Партнер 		= ДвиженияПоВыбМесяцамКопия.Партнер
					|И  	ДвиженияПоВыбМесяцам.ДатаОтсрочки  <= ДвиженияПоВыбМесяцамКопия.ДатаОтсрочки
					|И	ВЫБОР
					|		КОГДА ДвиженияПоВыбМесяцам.ДатаОтсрочки   = ДвиженияПоВыбМесяцамКопия.ДатаОтсрочки
					|		ТОГДА ДвиженияПоВыбМесяцам.МоментВремени <= ДвиженияПоВыбМесяцамКопия.МоментВремени
					|		ИНАЧЕ ИСТИНА
					|	КОНЕЦ
					|	   
					|СГРУППИРОВАТЬ ПО
					|	   ДвиженияПоВыбМесяцам.Партнер,
					|	   ДвиженияПоВыбМесяцам.Регистратор,
					|	   ДвиженияПоВыбМесяцам.Период,
					|	   ДвиженияПоВыбМесяцам.МоментВремени,
					|	   ДвиженияПоВыбМесяцам.Сумма,
					|	   ДвиженияПоВыбМесяцам.ОстатокДолга,
					|	   ДвиженияПоВыбМесяцам.ДатаОтсрочки
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 18.
					|//
					|ВЫБРАТЬ
					|	   ДвиженияПредв.Партнер КАК Партнер,
					|	   ДвиженияПредв.Регистратор КАК Регистратор,
					|	   ДвиженияПредв.Период КАК Период,
					|	   ДвиженияПредв.МоментВремени КАК МоментВремени,
					|	   ДвиженияПредв.ОстатокДолга - ДвиженияПредв.СуммаДо КАК СуммаДолга,
					|	   ДвиженияПредв.Сумма КАК Сумма,
					|	   ДвиженияПредв.ДатаОтсрочки КАК ДатаОтсрочки
					|ПОМЕСТИТЬ ДвиженияОкончательные
					|ИЗ
					|	   ДвиженияПредварительные КАК ДвиженияПредв
					|ГДЕ
					|	ДвиженияПредв.ОстатокДолга > ДвиженияПредв.СуммаДо
					|И 	ДвиженияПредв.ОстатокДолга <= ДвиженияПредв.СуммаПосле
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 19.
					|//
					|ВЫБРАТЬ
					|   Обороты.Партнер КАК Партнер,
					|   Обороты.Регистратор КАК Документ,
					|   ВЫБОР
					|  		КОГДА Обороты.Регистратор = ДвиженияОконч.Регистратор
					|		ТОГДА ДвиженияОконч.СуммаДолга
					|		ИНАЧЕ Обороты.Сумма
					|   КОНЕЦ КАК СуммаОстаток,
					|   ВЫБОР
					|		КОГДА Обороты.ДатаПлатежа < &КонецСегодня
					|		ТОГДА 1
					|		ИНАЧЕ 0
					|	КОНЕЦ КАК Прострочено
					|ПОМЕСТИТЬ ОбщаяТаблицаЗадолженностейПоДокументам
					|ИЗ
					|	   ОборотыПоКлиенту  КАК Обороты

					|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДвиженияОкончательные КАК ДвиженияОконч
					|ПО ДвиженияОконч.Партнер 		= Обороты.Партнер
					|И  ДвиженияОконч.ДатаОтсрочки  <= Обороты.ДатаПлатежа 
					|И	ВЫБОР
					|		КОГДА ДвиженияОконч.ДатаОтсрочки = Обороты.ДатаПлатежа 
					|		ТОГДА ДвиженияОконч.МоментВремени <= Обороты.МоментВремени
					|		ИНАЧЕ ИСТИНА
					|	КОНЕЦ
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 20.
					|//
					|ВЫБРАТЬ
					|	Партнер КАК Партнер,
					|	СУММА(СуммаОстаток) КАК СуммаПрострочки
					|ПОМЕСТИТЬ ТаблицаПрострочек
					|ИЗ
					|	ОбщаяТаблицаЗадолженностейПоДокументам
					|ГДЕ
					|	Прострочено = 1

					|СГРУППИРОВАТЬ ПО
					|	Партнер
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 21.
					|//
					|ВЫБРАТЬ
					|	ВЫБОР
					|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.РасходныйОрдерНаТовары
					|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары).Распоряжение
					|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.КТС_ОтгрузкаТоваров
					|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.КТС_ОтгрузкаТоваров).Распоряжение
					|	КОНЕЦ КАК Документ,
					|	ТаблицаПартнеров.Партнер КАК Партнер
					|ПОМЕСТИТЬ ТаблицаДокументовПоМестам
					|ИЗ
					|	РегистрСведений.МестаПоДокументам КАК МестаПоДокументам
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДопустимыхПартнеровИМест КАК ТаблицаПартнеров
					|		ПО МестаПоДокументам.Место = ТаблицаПартнеров.Место
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 22.
					|//
					|ВЫБРАТЬ
					|	ОбщаяТаблица.Партнер КАК Партнер,
					|	СУММА(ОбщаяТаблица.СуммаОстаток) КАК СуммаОстаток
					|ПОМЕСТИТЬ ДолгиПоДокументам
					|ИЗ
					|	ОбщаяТаблицаЗадолженностейПоДокументам КАК ОбщаяТаблица
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДокументовПоМестам КАК ДокументыПоМестам
					|		ПО ОбщаяТаблица.Партнер = ДокументыПоМестам.Партнер
					|			И ОбщаяТаблица.Документ = ДокументыПоМестам.Документ

					|СГРУППИРОВАТЬ ПО
					|	ОбщаяТаблица.Партнер
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 23.
					|//
					|ВЫБРАТЬ
					|	УсловиеОтгрузки КАК УсловиеОтгрузки,
					|	КредитныйЛимит КАК КредитныйЛимит,
					|	ДополнительныйПроцент КАК ДополнительныйПроцент
					|ПОМЕСТИТЬ УсловияОтгрузкиПоУмолчанию
					|ИЗ
					|	РегистрСведений.КТС_НастройкиУсловийОтгрузки.СрезПоследних(, Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 24.
					|//
					|ВЫБРАТЬ
					|	Партнер КАК Партнер,
					|	УсловиеОтгрузки КАК УсловиеОтгрузки,
					|	КредитныйЛимит КАК КредитныйЛимит,
					|	ДополнительныйПроцент КАК ДополнительныйПроцент
					|ПОМЕСТИТЬ УсловияОтгрузкиПоПартнерамПредварительные
					|ИЗ
					|	РегистрСведений.КТС_НастройкиУсловийОтгрузки.СрезПоследних(, Партнер В (ВЫБРАТЬ Партнер ИЗ ТаблицаДопустимыхПартнеровИМест))
					|;

					|///////////////////////////////////////////////////////////////////////////////////////////
					|// 25.
					|//
					|ВЫБРАТЬ
					|	ТаблицаПартнеров.Партнер КАК Партнер,
					|	ВЫБОР
					|		КОГДА ЕСТЬNULL(УсловияОтгрузкиПоПартнерамПредварительные.УсловиеОтгрузки, 0) = 0
					|			ТОГДА УсловияОтгрузкиПоУмолчанию.УсловиеОтгрузки
					|		ИНАЧЕ УсловияОтгрузкиПоПартнерамПредварительные.УсловиеОтгрузки
					|	КОНЕЦ КАК УсловиеОтгрузки,
					|	ВЫБОР
					|		КОГДА ЕСТЬNULL(УсловияОтгрузкиПоПартнерамПредварительные.КредитныйЛимит, 0) = 0
					|			ТОГДА УсловияОтгрузкиПоУмолчанию.КредитныйЛимит
					|		ИНАЧЕ УсловияОтгрузкиПоПартнерамПредварительные.КредитныйЛимит
					|	КОНЕЦ КАК КредитныйЛимит,
					|	ВЫБОР
					|		КОГДА ЕСТЬNULL(УсловияОтгрузкиПоПартнерамПредварительные.ДополнительныйПроцент, 0) = 0
					|			ТОГДА УсловияОтгрузкиПоУмолчанию.ДополнительныйПроцент
					|		ИНАЧЕ УсловияОтгрузкиПоПартнерамПредварительные.ДополнительныйПроцент
					|	КОНЕЦ КАК ДополнительныйПроцент
					|ПОМЕСТИТЬ УсловияОтгрузкиПоПартнерам
					|ИЗ
					|	ТаблицаДопустимыхПартнеров КАК ТаблицаПартнеров
					|		ЛЕВОЕ СОЕДИНЕНИЕ УсловияОтгрузкиПоУмолчанию КАК УсловияОтгрузкиПоУмолчанию
					|		ПО ИСТИНА
					|		ЛЕВОЕ СОЕДИНЕНИЕ УсловияОтгрузкиПоПартнерамПредварительные КАК УсловияОтгрузкиПоПартнерамПредварительные
					|		ПО ТаблицаПартнеров.Партнер = УсловияОтгрузкиПоПартнерамПредварительные.Партнер
					|;

					|ВЫБРАТЬ
					|	УсловияОтгрузки.Партнер КАК Партнер,
					|	ВЫБОР
					|		КОГДА УсловияОтгрузки.УсловиеОтгрузки = ЗНАЧЕНИЕ(Перечисление.КТС_УсловияОтгрузки.ТоварныйКредит)
					|			ТОГДА 
					|				ВЫБОР
					|					КОГДА ЕСТЬNULL(ТаблицаПрострочек.СуммаПрострочки, 0) < (ЕСТЬNULL(Долги.Долг, 0) - УсловияОтгрузки.КредитныйЛимит)
					|						ТОГДА ЕСТЬNULL(Долги.Долг, 0) - УсловияОтгрузки.КредитныйЛимит
					|					ИНАЧЕ ЕСТЬNULL(ТаблицаПрострочек.СуммаПрострочки, 0)
					|				КОНЕЦ
					|		КОГДА УсловияОтгрузки.УсловиеОтгрузки = ЗНАЧЕНИЕ(Перечисление.КТС_УсловияОтгрузки.РеструктуризацияДолга)
					|			ТОГДА 
					|				ВЫБОР
					|					КОГДА (ЕСТЬNULL(ДолгиПоДокументам.СуммаОстаток,0) * (1+(УсловияОтгрузки.ДополнительныйПроцент*0.01))) < (ЕСТЬNULL(Долги.Долг, 0) - УсловияОтгрузки.КредитныйЛимит)
					|						ТОГДА ЕСТЬNULL(Долги.Долг, 0) - УсловияОтгрузки.КредитныйЛимит
					|					ИНАЧЕ ЕСТЬNULL(ДолгиПоДокументам.СуммаОстаток,0) * (1+(УсловияОтгрузки.ДополнительныйПроцент*0.01))
					|				КОНЕЦ
					|		ИНАЧЕ 0
					|	КОНЕЦ КАК СуммаУчета,
					|	ЕСТЬNULL(ТаблицаДопустимыхПартнеров.ДокументПоездки, НЕОПРЕДЕЛЕНО) КАК ДокументПоездки
					|ИЗ
					|	УсловияОтгрузкиПоПартнерам КАК УсловияОтгрузки
					|	
					|	ЛЕВОЕ СОЕДИНЕНИЕ Долги КАК Долги
					|	ПО УсловияОтгрузки.Партнер = Долги.Партнер

					|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПрострочек КАК ТаблицаПрострочек
					|	ПО УсловияОтгрузки.Партнер = ТаблицаПрострочек.Партнер 

					|	ЛЕВОЕ СОЕДИНЕНИЕ ДолгиПоДокументам КАК ДолгиПоДокументам
					|	ПО УсловияОтгрузки.Партнер = ДолгиПоДокументам.Партнер
					
					|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДопустимыхПартнеров КАК ТаблицаДопустимыхПартнеров
					|	ПО УсловияОтгрузки.Партнер = ТаблицаДопустимыхПартнеров.Партнер
					
					|УПОРЯДОЧИТЬ ПО
					|	УсловияОтгрузки.Партнер.Наименование";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаСуммаОплат()



Функция ПолучитьИндексРезультатаПакетаПоездки(ДокументСсылка)
	
	Если ДокументСсылка.ВидПоездки = Перечисления.КТС_ВидыПоездки.ОсновнаяПоездка Тогда
		Возврат 17;	
	Иначе
		Возврат 5;	
	КонецЕсли;	
	
КонецФункции

#КонецОбласти 


#Область СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	//Версия обработки
	Версия = "0.0.003";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "РасчетСуммОплатПартнеров");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "РасчетСуммОплатПартнеров [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "РасчетСуммОплатПартнеров [" + Версия + "]", "Форма", "ОткрытиеФормы", Ложь, "РасчетСуммОплатПартнеров");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

#КонецОбласти