
////////////////////////////////////////////////////////////////////////////////
// ИНТЕРФЕЙС АВТОМАТИЧЕСКИХ ТЕСТОВ

Перем ЮнитТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СпиокТестов = Новый Массив;	
	Возврат СпиокТестов;
	
КонецФункции



////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Подготавливает управляемую форму документа к работе с серийными номерами 
//
// Параметры:
//  ЭтаФорма 		- УправляемаяФорма 				- Форма документа
//  ВнешнийОбъект 	- Неопределено, ОбработкаОбъект - Внешний объект для переопределения событий формы
//  ИмяОбработки 	- Строка           				- Имя внешней обработки серийных номеров для подключения методов на клиенте
//
Процедура ПодготовитьСерийныеНомераКРаботе(ЭтаФорма, ВнешнийОбъект, ИмяОбработки = "") Экспорт
	СсылкаНаОбъект = ЭтаФорма.Объект.Ссылка;
	
	Если ЭтаФорма.Элементы.Найти("Товары") <> Неопределено Тогда
		УстановитьКартинкуSN(ЭтаФорма.Элементы.Товары);
	ИначеЕсли ЭтаФорма.Элементы.Найти("СобственныеТовары") <> Неопределено Тогда
		УстановитьКартинкуSN(ЭтаФорма.Элементы.СобственныеТовары);
	КонецЕсли;
	
	Если 		ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ПодготовитьРеализацияТоваровУслуг(ЭтаФорма, ВнешнийОбъект, ИмяОбработки);
	ИначеЕсли 	ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ПодготовитьПеремещениеТоваров(ЭтаФорма, ВнешнийОбъект, ИмяОбработки);
	ИначеЕсли 	ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда
		ПодготовитьПриходныйОрдерНаТовары(ЭтаФорма, ВнешнийОбъект, ИмяОбработки);
	ИначеЕсли 	ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ПодготовитьПоступлениеТоваровУслуг(ЭтаФорма, ВнешнийОбъект, ИмяОбработки);
	ИначеЕсли 	ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
		ПодготовитьРасходныйОрдерНаТовары(ЭтаФорма, ВнешнийОбъект, ИмяОбработки);
	ИначеЕсли 	ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ПодготовитьВозвратТоваровПоставщику(ЭтаФорма, ВнешнийОбъект, ИмяОбработки);
	ИначеЕсли 	ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров") Тогда
		ПодготовитьВнутреннееПотреблениеТоваров(ЭтаФорма, ВнешнийОбъект, ИмяОбработки);
	ИначеЕсли 	ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.СписаниеНедостачТоваров") Тогда
		ПодготовитьСписаниеНедостачТоваров(ЭтаФорма, ВнешнийОбъект, ИмяОбработки);
	ИначеЕсли 	ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		ПодготовитьПересортицаТоваров(ЭтаФорма, ВнешнийОбъект, ИмяОбработки);
	КонецЕсли;
		
	//Если ИмяОбъекта = "ВозвратТоваровОтКлиента" Тогда 
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриАктивизацииСтроки", "Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриИзменении", 		 "ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриИзменении", 		 "Склад", 				"ПриИзмененииОсновногоСклада");
	//	ПодготовитьВозвратТоваровОтКлиента(Object, CommonLibrary, SerialLibraryName);
	//КонецЕсли;
	
	//Если ИмяОбъекта = "ОприходованиеИзлишковТоваров" Тогда 
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриАктивизацииСтроки", "Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриИзменении", 		 "ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриИзменении", 		 "Склад", 				"ПриИзмененииОсновногоСклада");
	//	ПодготовитьОприходованиеИзлишковТоваров(Object, CommonLibrary, SerialLibraryName);
	//КонецЕсли;
	
	
	//Если ИмяОбъекта = "ВводОстатков" Тогда
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриАктивизацииСтроки", "СобственныеТовары", 				"ПриАктивизацииСтрокиТЗТоваров");
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриИзменении", 		 "СобственныеТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриИзменении", 		 "СобственныеТоварыСклад", 			"ПриИзмененииОсновногоСклада");
	//	ПодготовитьВводОстатков(Object, CommonLibrary, SerialLibraryName);
	//КонецЕсли;
	
	//Если ИмяОбъекта = "СборкаТоваров" Тогда
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриАктивизацииСтроки", "Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриИзменении", 		 "ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриИзменении", 		 "Номенклатура", 		"ПриИзмененииОсновнойНоменклатуры");
	//	CommonLibrary.ПодменитьДействиеУправляемоеПриложение(Object, "ПриИзменении", 		 "Склад", 				"ПриИзмененииОсновногоСклада");
	//	ПодготовитьСборкаТоваров(Object, CommonLibrary, SerialLibraryName);
	//КонецЕсли;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Подготавливает форму документа реализации товаров услуг к работе с серийными номерами 
//
// Параметры:
//  ЭтаФорма 		- УправляемаяФорма 				- Форма документа реализации товаров и услуг
//  ВнешнийОбъект 	- Неопределено, ОбработкаОбъект - Внешний объект для переопределения событий формы
//  ИмяОбработки 	- Строка           				- Имя внешней обработки серийных номеров для подключения методов на клиенте
//
Процедура ПодготовитьРеализацияТоваровУслуг(ЭтаФорма, ВнешнийОбъект, ИмяОбработки)
	
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриАктивизацииСтроки", "Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 "ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "НачалоВыбора", 		 "ТоварыСклад", 		"ТоварыСкладНачалоВыбораВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 "Склад", 				"ПриИзмененииОсновногоСклада");
	
	
	Элементы = ЭтаФорма.Элементы;
	Команды  = ЭтаФорма.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
	
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ТаблицаРасходSN",    Новый ОписаниеТипов("ТаблицаЗначений")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СерийныйНомерSN",    Новый ОписаниеТипов("СправочникСсылка.СерийныеНомераНоменклатуры"), "ТаблицаРасходSN", "СерийныйНомер"));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ДоступноSN",         Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ОтгрузкаПроисходит", Новый ОписаниеТипов("СправочникСсылка.Склады")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	ЭтаФорма.ИзменитьРеквизиты(РеквизитыSN);
	
	ЭтаФорма.SerialLibraryName = ИмяОбработки;
	
	
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 30);
	Pages = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);

	        	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеСклад");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("Заголовок", "Отгрузка со склада");
				Параметры.Вставить("ПутьКДанным", "ОтгрузкаПроисходит");
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветТекста", 		  Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеСклад = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаНиз);

		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетНеИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетНеИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Для этого склада, этим документом не вводяться серийные номера. Серийные номера будут введены документом ""Расходный ордер на товары"".");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 4);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаЦентр);	
		
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);

	        	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяСклад");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("Заголовок", "Отгрузка со склада");
				Параметры.Вставить("ПутьКДанным", "ОтгрузкаПроисходит");
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветТекста", 		  Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаУчетНеИспользуетсяСклад = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаНиз);
	
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Доступные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
		
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаРасходSN");	
				Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаРасходSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаРасходSN.УстановитьДействие("Выбор", "ВыборДоступногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомерSN");	
					Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN.СерийныйНомерSN");
					Параметры.Вставить("ПутьКДаннымПодвала", "ДоступноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Доступно серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаРасходSN);
					
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяСклад");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("Заголовок", "Отгрузка со склада");
				Параметры.Вставить("ПутьКДанным", "ОтгрузкаПроисходит");
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветТекста", 		  Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаУчетИспользуетсяСклад = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");

	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Выбранные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);

            	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаНиз);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Выбрано серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
				КонецПроцедуры // ПодготовитьРеализацияТоваровУслуг()
				
// Подготавливает форму документа реализации товаров услуг к работе с серийными номерами 
//
// Параметры:
//  ЭтаФорма 		- УправляемаяФорма 				- Форма документа перемещение товаров
//  ВнешнийОбъект 	- Неопределено, ОбработкаОбъект - Внешний объект для переопределения событий формы
//  ИмяОбработки 	- Строка           				- Имя внешней обработки серийных номеров для подключения методов на клиенте
//				
Процедура ПодготовитьПеремещениеТоваров(ЭтаФорма, ВнешнийОбъект, ИмяОбработки)
		
	
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриАктивизацииСтроки", 	"Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 	"ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 	"СкладОтправитель", 	"ПриИзмененииСкладаСкладОтправитель");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 	"СкладПолучатель", 		"ПриИзмененииСкладаСкладПолучатель");
	
	
	Элементы = ЭтаФорма.Элементы;
	Команды  = ЭтаФорма.Команды;	
	ГруппаТовары = Элементы.Найти("СтраницаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
	
	
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ТаблицаРасходSN",    Новый ОписаниеТипов("ТаблицаЗначений")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СерийныйНомерSN",    Новый ОписаниеТипов("СправочникСсылка.СерийныеНомераНоменклатуры"), "ТаблицаРасходSN", "СерийныйНомер"));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ДоступноSN",         Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	ЭтаФорма.ИзменитьРеквизиты(РеквизитыSN);
	
	ЭтаФорма.SerialLibraryName = ИмяОбработки;
	
	
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 30);
	Pages = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетНеИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетНеИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Для этого склада, этим документом не вводяться серийные номера. Серийные номера будут введены документом ""Расходный ордер на товары"".");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 4);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаЦентр);	
	
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Доступные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
		
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаРасходSN");	
				Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаРасходSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаРасходSN.УстановитьДействие("Выбор", "ВыборДоступногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомерSN");	
					Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN.СерийныйНомерSN");
					Параметры.Вставить("ПутьКДаннымПодвала", "ДоступноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Доступно серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаРасходSN);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");

	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Выбранные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);

            	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаНиз);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Выбрано серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
КонецПроцедуры

// Подготавливает форму документа приходного ордера на товары к работе с серийными номерами 
//
// Параметры:
//  ЭтаФорма 		- УправляемаяФорма 				- Форма документа реализации товаров и услуг
//  ВнешнийОбъект 	- Неопределено, ОбработкаОбъект - Внешний объект для переопределения событий формы
//  ИмяОбработки 	- Строка           				- Имя внешней обработки серийных номеров для подключения методов на клиенте
//
Процедура ПодготовитьПриходныйОрдерНаТовары(ЭтаФорма, ВнешнийОбъект, ИмяОбработки)
	
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриАктивизацииСтроки", "Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 "ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 "Склад", 				"ПриИзмененииОсновногоСклада");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПослеЗаписи", 		        	, 				"ВыполнитьПослеЗаписиОбъекта");
	
	
	Элементы = ЭтаФорма.Элементы;
	Команды  = ЭтаФорма.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
		
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаДобавитьSN",   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаЗаполнитьSN",  Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("КоличествоSN", 	   Новый ОписаниеТипов("Число")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	ЭтаФорма.ИзменитьРеквизиты(РеквизитыSN);
	
	ЭтаФорма.SerialLibraryName = ИмяОбработки;
		
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 35);
	Pages = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");

		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетНеИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетНеИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Для этого склада, этим документом не вводяться серийные номера. Серийные номера будут введены документом ""Приходный ордер на товары"".");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 4);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаЦентр);	
			
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Внесенные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Внесено серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);	

			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа1");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа1 = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаДобавитьSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаДобавитьSN");
				Параметры.Вставить("Подсказка", "Добавить единичный серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа1);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДобавитьSN");
				Параметры.Вставить("Действие", "ДобавитьSN");
				Параметры.Вставить("Заголовок", "Добавить серийный номер");
		        ДобавитьКомандуВКоллекциюКомандФормы(ВнешнийОбъект, Команды, Параметры);
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДобавитьSN");
				Параметры.Вставить("ИмяКоманды", "ДобавитьSN");
				Параметры.Вставить("Заголовок", "Добавить");
				Параметры.Вставить("Вид", ВидКнопкиФормы.ОбычнаяКнопка);
				Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа1);
				
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа2");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа2 = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаЗаполнитьSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаЗаполнитьSN");
				Параметры.Вставить("Подсказка", "Заполнить несколько серийный номеров, по порядку");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "КоличествоSN");	
				Параметры.Вставить("ПутьКДанным", "КоличествоSN");
				Параметры.Вставить("Заголовок", "Количество");
				Параметры.Вставить("Подсказка", "Количество серийных номеров");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ЗаполнитьSN");
				Параметры.Вставить("Действие", "ЗаполнитьSN");
				Параметры.Вставить("Заголовок", "Заполнить серийные номера");
		        ДобавитьКомандуВКоллекциюКомандФормы(ВнешнийОбъект, Команды, Параметры);
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ЗаполнитьSN");
				Параметры.Вставить("ИмяКоманды", "ЗаполнитьSN");
				Параметры.Вставить("Заголовок", "Заполнить");
				Параметры.Вставить("Вид", ВидКнопкиФормы.ОбычнаяКнопка);
				Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);

			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа3");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа3 = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа3);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");
				
	РодительКоманды = Элементы.Найти("ЗаполнитьПоРаспоряжению");
	Если НЕ РодительКоманды = Неопределено Тогда
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "ЗаполнитьНоменклатуруКоличествоSN");
		Параметры.Вставить("Действие", "ЗаполнитьНоменклатуруКоличествоSN");
		Параметры.Вставить("Заголовок", "Номенклатуру, количество и серийные номера");
		ДобавитьКомандуВКоллекциюКомандФормы(ВнешнийОбъект, Команды, Параметры);
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "ЗаполнитьНоменклатуруКоличествоSN");
		Параметры.Вставить("ИмяКоманды", "ЗаполнитьНоменклатуруКоличествоSN");
		Параметры.Вставить("Заголовок", "Номенклатуру, количество и серийные номера");
		Параметры.Вставить("Вид", ВидКнопкиФормы.КнопкаКоманднойПанели);
		Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
		ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, РодительКоманды);
	КонецЕсли;
	
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "ПечатьШтрихкодаНаПринтерЭтикеток");
	Параметры.Вставить("Картинка", БиблиотекаКартинок.ПечатьСразу);
	Параметры.Вставить("Действие", "ПечатьШтрихкодаНаПринтерЭтикеток");
	Параметры.Вставить("Заголовок", "Печать штрихкода на принтер этикеток");
	ДобавитьКомандуВКоллекциюКомандФормы(ВнешнийОбъект, Команды, Параметры);
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "ПечатьШтрихкодаНаПринтерЭтикеток");
	Параметры.Вставить("ИмяКоманды", "ПечатьШтрихкодаНаПринтерЭтикеток");
	Параметры.Вставить("Заголовок", "Печать штрихкода на принтер этикеток");
	Параметры.Вставить("Вид", ВидКнопкиФормы.КнопкаКоманднойПанели);
	Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
	ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Элементы.Найти("СписокШтрихКодовГруппаСтандартныеКоманды"));
	
	Если ЭтаФорма.Объект.Проведен И ЭтаФорма.Объект.Статус = Перечисления.СтатусыПриходныхОрдеров.Принят Тогда
		Если НЕ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда		
			ЭтаФорма.ТолькоПросмотр = Истина;
			Элементы.Pages.Доступность = Ложь;
			Элементы.ЗаполнитьНоменклатуруКоличествоSN.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Подготавливает форму документа возврат товаров поставщику к работе с серийными номерами 
//
// Параметры:
//  ЭтаФорма 		- УправляемаяФорма 				- Форма документа реализации товаров и услуг
//  ВнешнийОбъект 	- Неопределено, ОбработкаОбъект - Внешний объект для переопределения событий формы
//  ИмяОбработки 	- Строка           				- Имя внешней обработки серийных номеров для подключения методов на клиенте
//
Процедура ПодготовитьВозвратТоваровПоставщику(ЭтаФорма, ВнешнийОбъект, ИмяОбработки)
	
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриАктивизацииСтроки", "Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 "ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 "Склад", 				"ПриИзмененииОсновногоСклада");

	
	Элементы = ЭтаФорма.Элементы;
	Команды  = ЭтаФорма.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
	
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ТаблицаРасходSN",    Новый ОписаниеТипов("ТаблицаЗначений")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СерийныйНомерSN",    Новый ОписаниеТипов("СправочникСсылка.СерийныеНомераНоменклатуры"), "ТаблицаРасходSN", "СерийныйНомер"));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ДоступноSN",         Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	ЭтаФорма.ИзменитьРеквизиты(РеквизитыSN);
	
	ЭтаФорма.SerialLibraryName = ИмяОбработки;
	
	
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 30);
	Pages = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетНеИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетНеИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Для этого склада, этим документом не вводяться серийные номера. Серийные номера будут введены документом ""Расходный ордер на товары"".");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 4);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаЦентр);	
	
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Доступные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
		
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаРасходSN");	
				Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаРасходSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаРасходSN.УстановитьДействие("Выбор", "ВыборДоступногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомерSN");	
					Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN.СерийныйНомерSN");
					Параметры.Вставить("ПутьКДаннымПодвала", "ДоступноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Доступно серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаРасходSN);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");

	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Выбранные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);

            	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаНиз);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Выбрано серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
КонецПроцедуры // ПодготовитьВозвратТоваровПоставщику()

// Подготавливает форму документа расходный ордер на товары к работе с серийными номерами 
//
// Параметры:
//  ЭтаФорма 		- УправляемаяФорма 				- Форма документа расходного ордера на товары
//  ВнешнийОбъект 	- Неопределено, ОбработкаОбъект - Внешний объект для переопределения событий формы
//  ИмяОбработки 	- Строка           				- Имя внешней обработки серийных номеров для подключения методов на клиенте
//
Процедура ПодготовитьРасходныйОрдерНаТовары(ЭтаФорма, ВнешнийОбъект, ИмяОбработки)
	
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриАктивизацииСтроки",	"Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 	"ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 	"Склад", 				"ПриИзмененииОсновногоСклада");	
	
	Элементы = ЭтаФорма.Элементы;
	Команды  = ЭтаФорма.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
	
	
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ТаблицаРасходSN",    Новый ОписаниеТипов("ТаблицаЗначений")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СерийныйНомерSN",    Новый ОписаниеТипов("СправочникСсылка.СерийныеНомераНоменклатуры"), "ТаблицаРасходSN", "СерийныйНомер"));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ДоступноSN",         Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	ЭтаФорма.ИзменитьРеквизиты(РеквизитыSN);
	
	ЭтаФорма.SerialLibraryName = ИмяОбработки;
	
	
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 30);
	Pages = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");
		
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Доступные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
		
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаРасходSN");	
				Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаРасходSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаРасходSN.УстановитьДействие("Выбор", "ВыборДоступногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомерSN");	
					Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN.СерийныйНомерSN");
					Параметры.Вставить("ПутьКДаннымПодвала", "ДоступноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Доступно серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаРасходSN);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");

	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Выбранные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);

            	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаНиз);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Выбрано серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
КонецПроцедуры

// Подготавливает форму документа внутреннее потребление товаров к работе с серийными номерами 
//
// Параметры:
//  ЭтаФорма 		- УправляемаяФорма 				- Форма документа реализации товаров и услуг
//  ВнешнийОбъект 	- Неопределено, ОбработкаОбъект - Внешний объект для переопределения событий формы
//  ИмяОбработки 	- Строка           				- Имя внешней обработки серийных номеров для подключения методов на клиенте
//
Процедура ПодготовитьВнутреннееПотреблениеТоваров(ЭтаФорма, ВнешнийОбъект, ИмяОбработки)
	
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриАктивизацииСтроки", "Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 "ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 "Склад", 				"ПриИзмененииОсновногоСклада");

	Элементы = ЭтаФорма.Элементы;
	Команды  = ЭтаФорма.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
		
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ТаблицаРасходSN",    Новый ОписаниеТипов("ТаблицаЗначений")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СерийныйНомерSN",    Новый ОписаниеТипов("СправочникСсылка.СерийныеНомераНоменклатуры"), "ТаблицаРасходSN", "СерийныйНомер"));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ДоступноSN",         Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	ЭтаФорма.ИзменитьРеквизиты(РеквизитыSN);
	
	ЭтаФорма.SerialLibraryName = ИмяОбработки;
	
	
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 30);
	Pages = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетНеИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетНеИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Для этого склада, этим документом не вводяться серийные номера. Серийные номера будут введены документом ""Расходный ордер на товары"".");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 4);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаЦентр);	
	
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Доступные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
		
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаРасходSN");	
				Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаРасходSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаРасходSN.УстановитьДействие("Выбор", "ВыборДоступногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомерSN");	
					Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN.СерийныйНомерSN");
					Параметры.Вставить("ПутьКДаннымПодвала", "ДоступноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Доступно серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаРасходSN);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");

	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Выбранные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);

            	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаНиз);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Выбрано серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
КонецПроцедуры // ПодготовитьВнутреннееПотреблениеТоваров()

// Подготавливает форму документа поступление товаров услуг к работе с серийными номерами 
//
// Параметры:
//  ЭтаФорма 		- УправляемаяФорма 				- Форма документа реализации товаров и услуг
//  ВнешнийОбъект 	- Неопределено, ОбработкаОбъект - Внешний объект для переопределения событий формы
//  ИмяОбработки 	- Строка           				- Имя внешней обработки серийных номеров для подключения методов на клиенте
//
Процедура ПодготовитьПоступлениеТоваровУслуг(ЭтаФорма, ВнешнийОбъект, ИмяОбработки)
	
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриАктивизацииСтроки",  "Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 "ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "НачалоВыбора", 		 "ТоварыСклад", 		"ТоварыСкладНачалоВыбораВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 "Склад", 				"ПриИзмененииОсновногоСклада");

	Элементы = ЭтаФорма.Элементы;
	Команды  = ЭтаФорма.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
		
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаДобавитьSN",   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаЗаполнитьSN",  Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("КоличествоSN", 	   Новый ОписаниеТипов("Число")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ПриемкаПроисходит",  Новый ОписаниеТипов("СправочникСсылка.Склады")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	ЭтаФорма.ИзменитьРеквизиты(РеквизитыSN);
	ЭтаФорма.SerialLibraryName = ИмяОбработки;
		
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 35);
	Pages = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);

	        	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеСклад");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("Заголовок", "Приемка на склад");
				Параметры.Вставить("ПутьКДанным", "ПриемкаПроисходит");
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветТекста", 		  Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеСклад = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаНиз);

		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетНеИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетНеИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Для этого склада, этим документом не вводяться серийные номера. Серийные номера будут введены документом ""Приходный ордер на товары"".");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 4);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаЦентр);	
		
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуется);

	        	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяСклад");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("Заголовок", "Приемка на склад");
				Параметры.Вставить("ПутьКДанным", "ПриемкаПроисходит");
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветТекста", 		  Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаУчетНеИспользуетсяСклад = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаНиз);
	
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Внесенные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Внесено серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);	

			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяСклад");
			Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			Параметры.Вставить("Заголовок", "Приемка на склад");
			Параметры.Вставить("ПутьКДанным", "ПриемкаПроисходит");
			Параметры.Вставить("ТолькоПросмотр", Истина);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ЦветТекста", 		  Новый Цвет(0, 0, 0));
			Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			СтраницаУчетИспользуетсяСклад = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
			
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа1");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа1 = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаДобавитьSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаДобавитьSN");
				Параметры.Вставить("Подсказка", "Добавить единичный серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа1);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДобавитьSN");
				Параметры.Вставить("Действие", "ДобавитьSN");
				Параметры.Вставить("Заголовок", "Добавить серийный номер");
		        ДобавитьКомандуВКоллекциюКомандФормы(ВнешнийОбъект, Команды, Параметры);
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДобавитьSN");
				Параметры.Вставить("ИмяКоманды", "ДобавитьSN");
				Параметры.Вставить("Заголовок", "Добавить");
				Параметры.Вставить("Вид", ВидКнопкиФормы.ОбычнаяКнопка);
				Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа1);
				
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа2");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа2 = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаЗаполнитьSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаЗаполнитьSN");
				Параметры.Вставить("Подсказка", "Заполнить несколько серийный номеров, по порядку");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "КоличествоSN");	
				Параметры.Вставить("ПутьКДанным", "КоличествоSN");
				Параметры.Вставить("Заголовок", "Количество");
				Параметры.Вставить("Подсказка", "Количество серийных номеров");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ЗаполнитьSN");
				Параметры.Вставить("Действие", "ЗаполнитьSN");
				Параметры.Вставить("Заголовок", "Заполнить серийные номера");
		        ДобавитьКомандуВКоллекциюКомандФормы(ВнешнийОбъект, Команды, Параметры);
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ЗаполнитьSN");
				Параметры.Вставить("ИмяКоманды", "ЗаполнитьSN");
				Параметры.Вставить("Заголовок", "Заполнить");
				Параметры.Вставить("Вид", ВидКнопкиФормы.ОбычнаяКнопка);
				Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);

			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа3");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа3 = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппа3);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");         	
	
			КонецПроцедуры // ПодготовитьПоступлениеТоваровУслуг()
			
// Подготавливает форму документа поступление товаров услуг к работе с серийными номерами 
//
// Параметры:
//  ЭтаФорма 		- УправляемаяФорма 				- Форма документа списание недостач товаров
//  ВнешнийОбъект 	- Неопределено, ОбработкаОбъект - Внешний объект для переопределения событий формы
//  ИмяОбработки 	- Строка           				- Имя внешней обработки серийных номеров для подключения методов на клиенте
//
Процедура ПодготовитьСписаниеНедостачТоваров(ЭтаФорма, ВнешнийОбъект, ИмяОбработки)
	
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриАктивизацииСтроки", 	"Товары", 				"ПриАктивизацииСтрокиТЗТоваров");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 	"ТоварыНоменклатура", 	"ПриИзмененииНоменклатурыВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 	"Склад", 				"ПриИзмененииОсновногоСклада");
	
	Элементы = ЭтаФорма.Элементы;
	Команды  = ЭтаФорма.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
	
	
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ТаблицаРасходSN",    Новый ОписаниеТипов("ТаблицаЗначений")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СерийныйНомерSN",    Новый ОписаниеТипов("СправочникСсылка.СерийныеНомераНоменклатуры"), "ТаблицаРасходSN", "СерийныйНомер"));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ДоступноSN",         Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	ЭтаФорма.ИзменитьРеквизиты(РеквизитыSN);
	
	ЭтаФорма.SerialLibraryName = ИмяОбработки;
	
	
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 30);
	Pages = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");
		
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Доступные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
		
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаРасходSN");	
				Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаРасходSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаРасходSN.УстановитьДействие("Выбор", "ВыборДоступногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомерSN");	
					Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN.СерийныйНомерSN");
					Параметры.Вставить("ПутьКДаннымПодвала", "ДоступноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Доступно серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаРасходSN);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");

	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Выбранные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);

            	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаНиз);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Выбрано серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
				КонецПроцедуры
				
// Подготавливает форму документа поступление товаров услуг к работе с серийными номерами 
//
// Параметры:
//  ЭтаФорма 		- УправляемаяФорма 				- Форма документа пересортицы товаров
//  ВнешнийОбъект 	- Неопределено, ОбработкаОбъект - Внешний объект для переопределения событий формы
//  ИмяОбработки 	- Строка           				- Имя внешней обработки серийных номеров для подключения методов на клиенте
//
Процедура ПодготовитьПересортицаТоваров(ЭтаФорма, ВнешнийОбъект, ИмяОбработки)
	
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриАктивизацииСтроки", 	"Товары", 						"ПриАктивизацииСтрокиТЗТоваров");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 	"ТоварыНоменклатураСписание", 	"ПриИзмененииНоменклатурыВСтроке");
	ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, ЭтаФорма, "ПриИзменении", 		 	"Склад", 						"ПриИзмененииОсновногоСклада");	
	
	Элементы = ЭтаФорма.Элементы;
	Команды  = ЭтаФорма.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
	
	
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ТаблицаРасходSN",    Новый ОписаниеТипов("ТаблицаЗначений")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СерийныйНомерSN",    Новый ОписаниеТипов("СправочникСсылка.СерийныеНомераНоменклатуры"), "ТаблицаРасходSN", "СерийныйНомер"));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ДоступноSN",         Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	ЭтаФорма.ИзменитьРеквизиты(РеквизитыSN);
	
	ЭтаФорма.SerialLibraryName = ИмяОбработки;
	
	
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 30);
	Pages = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");
		
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Доступные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);
		
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаРасходSN");	
				Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаРасходSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаРасходSN.УстановитьДействие("Выбор", "ВыборДоступногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомерSN");	
					Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN.СерийныйНомерSN");
					Параметры.Вставить("ПутьКДаннымПодвала", "ДоступноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Доступно серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаРасходSN);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");

	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаНиз");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Выбранные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаНиз = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуется);

            	Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, СтраницаУчетИспользуетсяГруппаНиз);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Выбрано серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, ТаблицаВыбранныеSN);
					
					
	Если НЕ РольДоступна("ПолныеПрава") Тогда
		ВызватьИсключение "Документ отключен до июня 2014г.";		
	КонецЕсли;
	
КонецПроцедуры

// Подготавливает форму документа поступление товаров услуг к работе с серийными номерами 
//
// Параметры:
//  УправляемаяФорма 	- УправляемаяФорма 						- Форма документа приходного ордера на товары
//  Объект 				- ДокументОбъект.ПриходныйОрдерНаТовары - Документ объект приходного ордера на товары
//
Процедура ЗаполнитьПоРаспоряжению(УправляемаяФорма, Объект) Экспорт
		
	Распоряжение = Объект.Распоряжение; 
	Реквизиты = Новый Структура("Склад, ИспользоватьОрдернуюСхему");

	Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказНаПеремещение")
	 Или ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда

		Реквизиты.Склад                     = "СкладПолучатель";
		Реквизиты.ИспользоватьОрдернуюСхему = "ЕстьNULL(СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении, Ложь)";
	Иначе

		Реквизиты.Склад                     = "Склад";
		Реквизиты.ИспользоватьОрдернуюСхему = "ЕстьNULL(Склад.ИспользоватьОрдернуюСхемуПриПоступлении, Ложь)";
	КонецЕсли;

	ЗначенияРеквизитов = ПолучитьЗначенияРеквизитовОбъекта(Распоряжение, Реквизиты);
	Если ЗначенияРеквизитов.ИспользоватьОрдернуюСхему Тогда

		Склад = ЗначенияРеквизитов.Склад;
		ЗаполнитьТоварыПоТоварамКПоступлению(УправляемаяФорма, Объект, Склад, Распоряжение);

	Иначе

		ТекстСообщение = НСтр("ru = 'Для склада ""%Склад%"" оформление приходных ордеров не требуется.
									|Заполнение документа не выполнено.'");
		ТекстСообщение = СтрЗаменить(ТекстСообщение, "%Склад%", Строка(ЗначенияРеквизитов.Склад));

		ВызватьИсключение ТекстСообщение;

	КонецЕсли;	
	
КонецПроцедуры // ЗаполнитьПоРаспоряжению()

Процедура УстановитьКартинкуSN(Goods)
	Goods.ПутьКДаннымКартинкиСтроки = "Объект.Товары.Номенклатура.ИспользоватьСерийныеНомера";
	Goods.КартинкаСтрок = БиблиотекаКартинок.СерииНоменклатурыУказаны;     
КонецПроцедуры

// Возвращает таблицу серийных номеров для выделенной номенклатуры в таблица «Товары»
//
// Параметры:
//  Ссылка 						- ДокументСсылка.РасходныйОрдерНаТовары 	  - Ссылка на документ основание
//  Таблица 					- ТаблицаЗначений							  - Таблица «Серийные номера номенклатуры» документа выгруженная в таблицу значений, содержит следующие колонки:
//	 * СерийныйНомер    		- СправочникСсылка.СерийныеНомераНоменклатуры - Ключ связи серийных номеров
//	 * КлючСвязиСерийныхНомеров - Число 									  - содержит серийный номер номенклатуры
//  Склад						- СправочникСсылка.Склады					  - Склад из документа основания
//  Номенклатура    			- СправочникСсылка.Номенклатура				  - Номенклатура которую выделили в документе
//  Характеристика				- СправочникСсылка.Характеристика			  - Характеристика которую выделили в документе
//  КлючСвязи					- Число										  - Ключ связи серийных номеров
// 
// Возвращаемое значение:
//  ТаблицаЗначений 	- Таблица значений со список серийных номеров, содержит следующие колонки:
//	 * СерийныйНомерSN 	- СправочникСсылка.СерийныеНомераНоменклатуры - содержит серийный номер номенклатуры
//
Функция ПолучитьТаблицуСерийныхНомеров(Ссылка, Таблица, Склад, Номенклатура, Характеристика, КлючСвязи) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СерийныйНомер,
		|   КлючСвязиСерийныхНомеров
		|
		|ПОМЕСТИТЬ Cache
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Вл.СерийныйНомер КАК СерийныйНомерSN	
		|
		|ИЗ	
		|	(ВЫБРАТЬ
		|		СерийныеНомера КАК СерийныйНомер
		|	ИЗ
		|		РегистрНакопления.СерийныеНомераНоменклатуры.Остатки(, Номенклатура = &Номенклатура И Характеристика = &Характеристика И Склад = &Склад)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		СерийныйНомер	
		|	ИЗ
		|		Документ." + Ссылка.Метаданные().Имя + ".СерийныеНомера	
		|	ГДЕ
		|		Ссылка 			= &Ссылка
		|	И	Ссылка.Проведен	= Истина
		|	И	КлючСвязиСерийныхНомеров = &КлючСвязи
		|	И	СерийныйНомер.Владелец	 = &Номенклатура) КАК Вл 
		|
		|ГДЕ
		|	Вл.СерийныйНомер НЕ В (ВЫБРАТЬ СерийныйНомер ИЗ Cache)	
		|;";
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("КлючСвязи", КлючСвязи);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	РезультатПакета = Запрос.ВыполнитьПакет();
	Выгрузка = РезультатПакета[РезультатПакета.ВГраница()].Выгрузить();
		
	Возврат Выгрузка;	
		
КонецФункции






Процедура ПодготовитьВозвратТоваровОтКлиента(Object, CommonLibrary, SerialLibraryName)
		
	Элементы = Object.Элементы;
	Команды  = Object.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
	
	
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаДобавитьSN",   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаЗаполнитьSN",  Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("КоличествоSN", 	   Новый ОписаниеТипов("Число")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	Object.ИзменитьРеквизиты(РеквизитыSN);
	
	Object.SerialLibraryName = SerialLibraryName;
		
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 35);
	Pages = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");

		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетНеИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетНеИспользуется = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуется);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Для этого склада, этим документом не вводяться серийные номера. Серийные номера будут введены документом ""Приходный ордер на товары"".");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 4);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаЦентр);	
			
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Внесенные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Внесено серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаВыбранныеSN);	

			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа1");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа1 = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаДобавитьSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаДобавитьSN");
				Параметры.Вставить("Подсказка", "Добавить единичный серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа1);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДобавитьSN");
				Параметры.Вставить("Действие", "ДобавитьSN");
				Параметры.Вставить("Заголовок", "Добавить серийный номер");
		        CommonLibrary.ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры);
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДобавитьSN");
				Параметры.Вставить("ИмяКоманды", "ДобавитьSN");
				Параметры.Вставить("Заголовок", "Добавить");
				Параметры.Вставить("Вид", ВидКнопкиФормы.ОбычнаяКнопка);
				Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа1);
				
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа2");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа2 = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаЗаполнитьSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаЗаполнитьSN");
				Параметры.Вставить("Подсказка", "Заполнить несколько серийный номеров, по порядку");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "КоличествоSN");	
				Параметры.Вставить("ПутьКДанным", "КоличествоSN");
				Параметры.Вставить("Заголовок", "Количество");
				Параметры.Вставить("Подсказка", "Количество серийных номеров");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ЗаполнитьSN");
				Параметры.Вставить("Действие", "ЗаполнитьSN");
				Параметры.Вставить("Заголовок", "Заполнить серийные номера");
		        CommonLibrary.ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры);
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ЗаполнитьSN");
				Параметры.Вставить("ИмяКоманды", "ЗаполнитьSN");
				Параметры.Вставить("Заголовок", "Заполнить");
				Параметры.Вставить("Вид", ВидКнопкиФормы.ОбычнаяКнопка);
				Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);

			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа3");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа3 = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа3);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");
								         		
КонецПроцедуры

Процедура ПодготовитьОприходованиеИзлишковТоваров(Object, CommonLibrary, SerialLibraryName)
		
	Элементы = Object.Элементы;
	Команды  = Object.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
	
	
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаДобавитьSN",   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаЗаполнитьSN",  Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("КоличествоSN", 	   Новый ОписаниеТипов("Число")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	Object.ИзменитьРеквизиты(РеквизитыSN);
	
	Object.SerialLibraryName = SerialLibraryName;
		
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 35);
	Pages = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");

		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетНеИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетНеИспользуется = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуется);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Для этого склада, этим документом не вводяться серийные номера. Серийные номера будут введены документом ""Приходный ордер на товары"".");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 4);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаЦентр);	
			
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Внесенные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Внесено серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаВыбранныеSN);	

			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа1");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа1 = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаДобавитьSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаДобавитьSN");
				Параметры.Вставить("Подсказка", "Добавить единичный серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа1);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДобавитьSN");
				Параметры.Вставить("Действие", "ДобавитьSN");
				Параметры.Вставить("Заголовок", "Добавить серийный номер");
		        CommonLibrary.ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры);
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДобавитьSN");
				Параметры.Вставить("ИмяКоманды", "ДобавитьSN");
				Параметры.Вставить("Заголовок", "Добавить");
				Параметры.Вставить("Вид", ВидКнопкиФормы.ОбычнаяКнопка);
				Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа1);
				
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа2");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа2 = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаЗаполнитьSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаЗаполнитьSN");
				Параметры.Вставить("Подсказка", "Заполнить несколько серийный номеров, по порядку");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "КоличествоSN");	
				Параметры.Вставить("ПутьКДанным", "КоличествоSN");
				Параметры.Вставить("Заголовок", "Количество");
				Параметры.Вставить("Подсказка", "Количество серийных номеров");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ЗаполнитьSN");
				Параметры.Вставить("Действие", "ЗаполнитьSN");
				Параметры.Вставить("Заголовок", "Заполнить серийные номера");
		        CommonLibrary.ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры);
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ЗаполнитьSN");
				Параметры.Вставить("ИмяКоманды", "ЗаполнитьSN");
				Параметры.Вставить("Заголовок", "Заполнить");
				Параметры.Вставить("Вид", ВидКнопкиФормы.ОбычнаяКнопка);
				Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);

			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа3");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа3 = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа3);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");
								         		
КонецПроцедуры

Процедура ПодготовитьВводОстатков(Object, CommonLibrary, SerialLibraryName)
		
	Элементы = Object.Элементы;
	Команды  = Object.Команды;	
	РазделОстаткиТоваров = Элементы.Найти("ГруппаСобственныеТовары");
	
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "ГруппаТовары");
	Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
	Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
	Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
	Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	ГруппаТовары = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, РазделОстаткиТоваров);	
	CommonLibrary.ПереместитьЭлементВКоллекциюЭлементовФормы(Элементы, "СобственныеТовары", "ГруппаТовары", "");
	
	
	
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаДобавитьSN",   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаЗаполнитьSN",  Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("КоличествоSN", 	   Новый ОписаниеТипов("Число")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	Object.ИзменитьРеквизиты(РеквизитыSN);
	
	Object.SerialLibraryName = SerialLibraryName;
		
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 35);
	Pages = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");

		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетНеИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетНеИспользуется = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуется);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Для этого склада, этим документом не вводяться серийные номера. Серийные номера будут введены документом ""Приходный ордер на товары"".");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 4);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаЦентр);	
			
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("Заголовок", "Внесенные серийные номера");
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
				Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
				Параметры.Вставить("Шапка", Ложь);
				Параметры.Вставить("Подвал", Истина);
				Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
				//Параметры.Вставить("ЧередованиеЦветовСтрок", Истина);
				Параметры.Вставить("ТолькоПросмотр", Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
				Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
				ТаблицаВыбранныеSN = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "СерийныйНомер");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
					Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("ТекстПодвала", "Внесено серийных номеров - ");
					Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаВыбранныеSN);
	
                	Параметры = Новый Структура;
					Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
					Параметры.Вставить("Заголовок", "КлючСвязи");
					Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
					Параметры.Вставить("Видимость",	Ложь);
					Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				    CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаВыбранныеSN);	

			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа1");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа1 = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаДобавитьSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаДобавитьSN");
				Параметры.Вставить("Подсказка", "Добавить единичный серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа1);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДобавитьSN");
				Параметры.Вставить("Действие", "ДобавитьSN");
				Параметры.Вставить("Заголовок", "Добавить серийный номер");
		        CommonLibrary.ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры);
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДобавитьSN");
				Параметры.Вставить("ИмяКоманды", "ДобавитьSN");
				Параметры.Вставить("Заголовок", "Добавить");
				Параметры.Вставить("Вид", ВидКнопкиФормы.ОбычнаяКнопка);
				Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа1);
				
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа2");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа2 = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаЗаполнитьSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаЗаполнитьSN");
				Параметры.Вставить("Подсказка", "Заполнить несколько серийный номеров, по порядку");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "КоличествоSN");	
				Параметры.Вставить("ПутьКДанным", "КоличествоSN");
				Параметры.Вставить("Заголовок", "Количество");
				Параметры.Вставить("Подсказка", "Количество серийных номеров");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);
				
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ЗаполнитьSN");
				Параметры.Вставить("Действие", "ЗаполнитьSN");
				Параметры.Вставить("Заголовок", "Заполнить серийные номера");
		        CommonLibrary.ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры);
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ЗаполнитьSN");
				Параметры.Вставить("ИмяКоманды", "ЗаполнитьSN");
				Параметры.Вставить("Заголовок", "Заполнить");
				Параметры.Вставить("Вид", ВидКнопкиФормы.ОбычнаяКнопка);
				Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа2);

			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппа3");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппа3 = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтрокаСканерSN");	
				Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
				Параметры.Вставить("Подсказка", "Строка серийный номер");
				Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
				Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("КнопкаОчистки",	Истина);
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтрокаСканерSN = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппа3);
				СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");
				
	РодительКоманды = Элементы.Найти("ЗаполнитьПоРаспоряжению");
	Если НЕ РодительКоманды = Неопределено Тогда
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "ЗаполнитьНоменклатуруКоличествоSN");
		Параметры.Вставить("Действие", "ЗаполнитьНоменклатуруКоличествоSN");
		Параметры.Вставить("Заголовок", "Номенклатуру, количество и серийные номера");
		CommonLibrary.ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры);
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "ЗаполнитьНоменклатуруКоличествоSN");
		Параметры.Вставить("ИмяКоманды", "ЗаполнитьНоменклатуруКоличествоSN");
		Параметры.Вставить("Заголовок", "Номенклатуру, количество и серийные номера");
		Параметры.Вставить("Вид", ВидКнопкиФормы.КнопкаКоманднойПанели);
		Параметры.Вставить("ТипЭлемента", Тип("КнопкаФормы"));
		CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, РодительКоманды);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьСборкаТоваров(Object, CommonLibrary, SerialLibraryName)
		
	Элементы = Object.Элементы;
	Команды  = Object.Команды;	
	ГруппаТовары = Элементы.Найти("ГруппаТовары");
	ГруппаТовары.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;	
	
	
	
	РеквизитыSN = Новый Массив; 
	РеквизитыSN.Добавить(Новый РеквизитФормы("ТаблицаРасходSN",    Новый ОписаниеТипов("ТаблицаЗначений")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СерийныйНомерSN",    Новый ОписаниеТипов("СправочникСсылка.СерийныеНомераНоменклатуры"), "ТаблицаРасходSN", "СерийныйНомер"));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ДоступноSN",         Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ДоступноSNКомплект", Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВыбраноSN",          Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("СтрокаСканерSN", 	   Новый ОписаниеТипов("Строка")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("ВклИспользованиеSN", Новый ОписаниеТипов("Булево")));
	РеквизитыSN.Добавить(Новый РеквизитФормы("SerialLibraryName",  Новый ОписаниеТипов("Строка")));
	Object.ИзменитьРеквизиты(РеквизитыSN);
	
	Object.SerialLibraryName = SerialLibraryName;
	
	
	//Создание элемента страницы 
	Параметры = Новый Структура;
	Параметры.Вставить("Имя", "Pages");
	Параметры.Вставить("Вид", ВидГруппыФормы.Страницы);
	Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	Параметры.Вставить("РазрешитьИзменениеСостава", Ложь);
	Параметры.Вставить("ОтображениеСтраниц", ОтображениеСтраницФормы.Нет);
	Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
	Параметры.Вставить("Ширина", 60);
	Pages = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ГруппаТовары);		
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаОбщие");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаОбщие = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщие);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаОбщиеГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаОбщиеГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщие);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Данный элемент номенклатуры не использует серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 2);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщиеГруппаЦентр);	
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаОбщиеВклСерийныеНомера");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
				Параметры.Вставить("Заголовок", "Вкл. использование серийных номеров");
				Параметры.Вставить("ПутьКДанным", "ВклИспользованиеSN");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				СтраницаОбщиеВклСерийныеНомера = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаОбщиеГруппаЦентр);
				СтраницаОбщиеВклСерийныеНомера.УстановитьДействие("ПриИзменении", "ПриИзмененииВклСерийныеНомера");
	
		//Страница учета по серийным номерам не используется
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетНеИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетНеИспользуется = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
			Параметры.Вставить("ОтображатьЗаголовок",  Ложь);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетНеИспользуетсяГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуется);
	
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "СтраницаУчетНеИспользуетсяДекорация");
				Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
				Параметры.Вставить("Заголовок", "Для этого склада, этим документом не вводяться серийные номера.");
				Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
				Параметры.Вставить("Высота", 4);
				Параметры.Вставить("Шрифт", Новый Шрифт(, , Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетНеИспользуетсяГруппаЦентр);	
			
		//Страница учета по серийным номерам
		Параметры = Новый Структура;
		Параметры.Вставить("Имя", "СтраницаУчетИспользуется");
		Параметры.Вставить("Вид", ВидГруппыФормы.Страница);
		Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		СтраницаУчетИспользуется = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Pages);
	
	    	Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяОтступ");
			Параметры.Вставить("Вид", ВидДекорацииФормы.Надпись);
			Параметры.Вставить("Заголовок", "");
			Параметры.Вставить("Высота", 2);
			Параметры.Вставить("ТипЭлемента", Тип("ДекорацияФормы"));
			CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
	
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтраницаУчетИспользуетсяГруппаЦентр");
			Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
			Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.Нет);
			Параметры.Вставить("ОтображатьЗаголовок", Ложь);
			Параметры.Вставить("Группировка", ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная);
			Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
			СтраницаУчетИспользуетсяГруппаЦентр = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			
			    Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ДоступныеСерийныеНомера");
				Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
				Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
				Параметры.Вставить("Заголовок", "Доступные серийные номера");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
				Параметры.Вставить("Ширина", 25);
				Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
				Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
				ДоступныеСерийныеНомера = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "ТаблицаРасходSN");	
					Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN");
					Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
					Параметры.Вставить("Подвал", Истина);
					Параметры.Вставить("Шапка", Ложь);
					Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
					Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ТолькоПросмотр", Истина);
					Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
					Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
					ТаблицаРасходSN = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ДоступныеСерийныеНомера);
					ТаблицаРасходSN.УстановитьДействие("Выбор", "ВыборДоступногоСерийногоНомера");
				
						Параметры = Новый Структура;
						Параметры.Вставить("Имя", "СерийныйНомерSN");	
						Параметры.Вставить("ПутьКДанным", "ТаблицаРасходSN.СерийныйНомерSN");
						Параметры.Вставить("ПутьКДаннымПодвала", "ДоступноSN");
						Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
						Параметры.Вставить("ТекстПодвала", "Доступно серийных номеров - ");
						Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
						Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
						Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
						CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаРасходSN);
					
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "ВыбранныеСерийныеНомера");
				Параметры.Вставить("Вид", ВидГруппыФормы.ОбычнаяГруппа);
				Параметры.Вставить("Отображение", ОтображениеОбычнойГруппы.ОбычноеВыделение);
				Параметры.Вставить("Заголовок", "Выбранные серийные номера");
				Параметры.Вставить("ЦветТекстаЗаголовка", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ШрифтЗаголовка", Новый Шрифт(, ,Истина));
				Параметры.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
				ВыбранныеСерийныеНомера = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуетсяГруппаЦентр);
				
					Параметры = Новый Структура;
					Параметры.Вставить("Имя", "ТаблицаВыбранныеSN");	
					Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера");
					Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
					Параметры.Вставить("Шапка", Ложь);
					Параметры.Вставить("Подвал", Истина);
					Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
					Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
					Параметры.Вставить("ТолькоПросмотр", Истина);
					Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
					Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
					ТаблицаВыбранныеSN = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ВыбранныеСерийныеНомера);
					ТаблицаВыбранныеSN.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомера");
					
						Параметры = Новый Структура;
						Параметры.Вставить("Имя", "СерийныйНомер");	
						Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомер");
						Параметры.Вставить("ПутьКДаннымПодвала", "ВыбраноSN");
						Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
						Параметры.Вставить("ТекстПодвала", "Выбрано серийных номеров - ");
						Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
						Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
						Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
						CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаВыбранныеSN);
						
						Параметры = Новый Структура;
						Параметры.Вставить("Имя", "ВыбSNКомплекта");
						Параметры.Вставить("Заголовок", "SN комплекта");
						Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.СерийныйНомерКомплекта");
						Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
						Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
						Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
						Параметры.Вставить("Ширина", 10);
						Параметры.Вставить("РастягиватьПоГоризонтали", Ложь);
						Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
						CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаВыбранныеSN);
		
	                	Параметры = Новый Структура;
						Параметры.Вставить("Имя", "КлючСвязиСерийныхНомеров");	
						Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомера.КлючСвязиСерийныхНомеров");
						Параметры.Вставить("Заголовок", "КлючСвязи");
						Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
						Параметры.Вставить("Видимость",	Ложь);
						Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
					    CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаВыбранныеSN);
						
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "ТаблицаВыбранныеSNкомплекта");	
			Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомераКомплектов");
			Параметры.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
			Параметры.Вставить("Шапка", Ложь);
			Параметры.Вставить("Подвал", Истина);
			Параметры.Вставить("ЦветФона", Новый Цвет(255, 250, 205));
			Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
			Параметры.Вставить("ТолькоПросмотр", Истина);
			Параметры.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
			Параметры.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
			ТаблицаВыбранныеSNкомплекта = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			ТаблицаВыбранныеSNкомплекта.УстановитьДействие("Выбор", "ВыборВыбранногоСерийногоНомераКомплекта");	
			
				Параметры = Новый Структура;
				Параметры.Вставить("Имя", "SNКомплекта");
				Параметры.Вставить("Заголовок", "SN комплектов");
				Параметры.Вставить("ПутьКДанным", "Объект.СерийныеНомераКомплектов.СерийныйНомер");
				Параметры.Вставить("ПутьКДаннымПодвала", "ДоступноSNКомплект");
				Параметры.Вставить("Вид", ВидПоляФормы.ПолеВвода);
				Параметры.Вставить("ТекстПодвала", "Серийных номеров комплектов - ");
				Параметры.Вставить("ЦветТекстаПодвала", Новый Цвет(0, 0, 0));
				Параметры.Вставить("ЦветФонаПодвала",	Новый Цвет(255, 255, 255));
				Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
				CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, ТаблицаВыбранныеSNкомплекта);
										
			Параметры = Новый Структура;
			Параметры.Вставить("Имя", "СтрокаСканерSN");	
			Параметры.Вставить("ПутьКДанным", "СтрокаСканерSN");
			Параметры.Вставить("Подсказка", "Строка серийный номер");
			Параметры.Вставить("ПоложениеЗаголовка", ПоложениеЗаголовкаЭлементаФормы.Нет);
			Параметры.Вставить("Вид",ВидПоляФормы.ПолеВвода);
			Параметры.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
			Параметры.Вставить("КнопкаОчистки",	Истина);
			Параметры.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			СтрокаСканерSN = CommonLibrary.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, СтраницаУчетИспользуется);
			СтрокаСканерSN.УстановитьДействие("ОкончаниеВводаТекста", "ОкончаниеВводаТекстаСтрокаСканерSN");
 	
КонецПроцедуры






Функция ПолучитьСерийныйНомер(Номенклатура, Строка) Экспорт
	Ссылка = Справочники.СерийныеНомераНоменклатуры.НайтиПоКоду(Строка, , , Номенклатура);
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		НовыйОбъект = Справочники.СерийныеНомераНоменклатуры.СоздатьЭлемент();
		НовыйОбъект.Владелец = Номенклатура;
		НовыйОбъект.Код = Строка;
		НовыйОбъект.Записать();
		Ссылка = НовыйОбъект.Ссылка;
	КонецЕсли;
	Возврат Ссылка;	
КонецФункции




Процедура ЗаполнитьТоварыПоТоварамКПоступлению(УправляемаяФорма, Объект, Склад, Распоряжение)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", 		Объект.Ссылка);
	Запрос.УстановитьПараметр("Склад", 			Склад);
	Запрос.УстановитьПараметр("Распоряжение", 	Распоряжение);
	
	Товары 			= Объект.Товары;
	СерийныеНомера  = Объект.СерийныеНомера;
	Товары.Очистить();

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыКПоступлению.Номенклатура      КАК Номенклатура,
	|	ТоварыКПоступлению.Характеристика    КАК Характеристика,
	|	СУММА(ТоварыКПоступлению.Количество) КАК Количество,
	|	СУММА(ТоварыКПоступлению.Количество) КАК КоличествоУпаковок 
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыКПоступлению.Номенклатура      КАК Номенклатура,
	|		ТоварыКПоступлению.Характеристика    КАК Характеристика,
	|		ТоварыКПоступлению.КПоступлениюОстаток
	|		 - ТоварыКПоступлению.ПринимаетсяОстаток КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыКПоступлению.Остатки(,
	|				ДокументПоступления = &Распоряжение
	|				И Склад = &Склад) КАК ТоварыКПоступлению
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыКПоступлению.Номенклатура,
	|		ТоварыКПоступлению.Характеристика,
	|		ВЫБОР КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				-ТоварыКПоступлению.КПоступлению
	|			ИНАЧЕ ТоварыКПоступлению.КПоступлению
	|			КОНЕЦ
	|			- ВЫБОР КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				- ТоварыКПоступлению.Принимается
	|			ИНАЧЕ ТоварыКПоступлению.Принимается
	|		КОНЕЦ 
	|	ИЗ
	|		РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
	|	ГДЕ
	|		ТоварыКПоступлению.Регистратор = &Ссылка
	|		И ТоварыКПоступлению.Активность
	|		И ТоварыКПоступлению.Склад = &Склад
	|		И ТоварыКПоступлению.ДокументПоступления = &Распоряжение
	|
	|) КАК ТоварыКПоступлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКПоступлению.Номенклатура,
	|	ТоварыКПоступлению.Характеристика
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКПоступлению.Количество) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура.Наименование,
	|	Характеристика.Наименование
	|";
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда

		Товары.Загрузить(Результат.Выгрузить());
		
		Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
			Таблица = Новый ТаблицаЗначений;
			Таблица.Колонки.Добавить("Ссылка");
			
			ПредварительнаяТаблица = ПолучитьСписокДокументовПоКритериюОтбора(Распоряжение);
			Для Каждого Элемент ИЗ ПредварительнаяТаблица Цикл
				Если НЕ Элемент.Ссылка = Тип("ДокументСсылка.ПриходныйОрдерНаТовары")	Тогда
					ЧастьТаблицы = ПолучитьСписокДокументовПоКритериюОтбора(Элемент.Ссылка);
					Если НЕ ЧастьТаблицы = Неопределено Тогда
						Для Каждого ЭлементЧасти Из ЧастьТаблицы Цикл
							ЗаполнитьЗначенияСвойств(Таблица.Добавить(), ЭлементЧасти);	
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(Таблица.Добавить(), Элемент);
			КонецЦикла;
			
		Иначе
			Таблица = ПолучитьСписокДокументовПоКритериюОтбора(Распоряжение);
			Если Таблица = Неопределено Тогда
				Таблица = Новый ТаблицаЗначений;
				Таблица.Колонки.Добавить("Ссылка");
			КонецЕсли;
		КонецЕсли;
		НоваяСтрока 			= Таблица.Добавить();
		НоваяСтрока.Ссылка 		= Распоряжение;

		
		
		ВыборкаСерийныхНомеров 	= ПолучитьСписокСерийныхНомеровПоДокументам(Таблица.ВыгрузитьКолонку("Ссылка"), Объект.Ссылка.Метаданные().Имя);
		
		ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика", Неопределено, Неопределено);
		Пока ВыборкаСерийныхНомеров.Следующий() Цикл
			
			Если ПараметрыОтбора.Номенклатура 	<> ВыборкаСерийныхНомеров.Номенклатура
			 ИЛИ ПараметрыОтбора.Характеристика <> ВыборкаСерийныхНомеров.Характеристика Тогда
			 
			 	ПараметрыОтбора.Номенклатура 	= ВыборкаСерийныхНомеров.Номенклатура; 
				ПараметрыОтбора.Характеристика 	= ВыборкаСерийныхНомеров.Характеристика;
				
				СтрокиИзТоваров = Товары.НайтиСтроки(ПараметрыОтбора);
				
			КонецЕсли;
			
			Если СтрокиИзТоваров.ВГраница() < 0 Тогда 
				Продолжить;
			Иначе
				
				Строка = СтрокиИзТоваров[0];
				
				тмпКлючСвязиСН = ПроверитьКлючСвязиНаСервере(Товары, СерийныеНомера, Строка.КлючСвязиСерийныхНомеров);
				Если Строка.КлючСвязиСерийныхНомеров <> тмпКлючСвязиСН Тогда
					Строка.КлючСвязиСерийныхНомеров = тмпКлючСвязиСН;	
				КонецЕсли;
								
				СтрокаСН = СерийныеНомера.Добавить();
				СтрокаСН.СерийныйНомер 				= ВыборкаСерийныхНомеров.СерийныйНомер;
				СтрокаСН.КлючСвязиСерийныхНомеров 	= Строка.КлючСвязиСерийныхНомеров;
				
			КонецЕсли;	
			
		КонецЦикла;
		
	Иначе

		ТекстСообщения = НСтр("ru = 'Нет данных для заполнения по распоряжению ""%Распоряжение%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Распоряжение%", Распоряжение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, "Распоряжение");

	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокСерийныхНомеровПоДокументам(МассивДокументов, ИмяДокумента)
	
	СписокДокументов = Новый СписокЗначений;
	СписокДокументов.ЗагрузитьЗначения(МассивДокументов);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументов", 	СписокДокументов);
	Запрос.УстановитьПараметр("ИмяДокумента", 		ИмяДокумента);
	Запрос.Текст = "ВЫБРАТЬ
					|	Номенклатура,
					|	Характеристика,
					|	СерийныеНомера КАК СерийныйНомер	
					|		
					|Из 
					|	РегистрНакопления.СерийныеНомераНоменклатуры
					|
					|ГДЕ 
					|	Регистратор В (&СписокДокументов)
					|И	ВидДвижения =
					|	ВЫБОР
					|		КОГДА &ИмяДокумента = ""ПриходныйОрдерНаТовары"" 
					|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
					|		ИНАЧЕ NULL
					|	КОНЕЦ 
					|И	(Номенклатура, Характеристика, СерийныеНомера) НЕ В (ВЫБРАТЬ
					|											Номенклатура,
					|											Характеристика,
					|									  		СерийныеНомера	
					|										 Из 
					|											РегистрНакопления.СерийныеНомераНоменклатуры
					|										 ГДЕ 
					|
					|											Регистратор В (&СписокДокументов)
					|										 И	ВидДвижения =
					|											ВЫБОР
					|												КОГДА &ИмяДокумента = ""ПриходныйОрдерНаТовары"" 
					|												ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
					//|												КОГДА &ИмяДокумента = ""ПриходныйОрдерНаТовары""
					//|												ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
					|												ИНАЧЕ NULL
					|											КОНЕЦ
					|										 )";
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьСписокДокументовПоКритериюОтбора(ЗначениеКритерияОтбора)
	
	Если Метаданные.КритерииОтбора.СвязанныеДокументы.Тип.СодержитТип(ТипЗнч(ЗначениеКритерияОтбора))  Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СвязанныеДокументы.Ссылка
		|ИЗ
		|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы";
		
		Запрос.УстановитьПараметр("ЗначениеКритерияОтбора",ЗначениеКритерияОтбора);
		Возврат Запрос.Выполнить().Выгрузить();
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Функция ПроверитьКлючСвязиНаСервере(Товары, СерийныеНомера, КлючСвязиНоменклатуры)
	
	ПараметрОтбора = Новый Структура("КлючСвязиСерийныхНомеров", КлючСвязиНоменклатуры);
	
	РезультатОтбора = Товары.НайтиСтроки(ПараметрОтбора);
	
	Если КлючСвязиНоменклатуры = 0 Тогда
		
		НовыйКлючСвязи = СоздатьКлючСвязиНаСервере(Товары, СерийныеНомера);
		
	ИначеЕсли РезультатОтбора.Количество() <> 1 Тогда
		
		НовыйКлючСвязи = СоздатьКлючСвязиНаСервере(Товары, СерийныеНомера);
		
	Иначе
		
		НовыйКлючСвязи = КлючСвязиНоменклатуры;
		
	КонецЕсли;
	
	Возврат НовыйКлючСвязи; 
	
КонецФункции

Функция СоздатьКлючСвязиНаСервере(Товары, СерийныеНомера)
	
	НовыйКлючСвязи = 0;
	ПроходПоЗначениям = 1;
	ПараметрОтбора = Новый Структура("КлючСвязиСерийныхНомеров", ПроходПоЗначениям);
	
	Пока НовыйКлючСвязи = 0 Цикл
		
		РезультатыОтбораТовары 	= Товары.НайтиСтроки(ПараметрОтбора);
		РезультатыСН 			= СерийныеНомера.НайтиСтроки(ПараметрОтбора);
	
		Если РезультатыОтбораТовары.Количество() = 0
		 И 	 РезультатыСН.Количество() = 0 Тогда
			НовыйКлючСвязи = ПроходПоЗначениям;
		Иначе
			ПроходПоЗначениям = ПроходПоЗначениям + 1;
			ПараметрОтбора.КлючСвязиСерийныхНомеров = ПроходПоЗначениям;
		КонецЕсли;
		
	КонецЦикла;	
	
	Возврат НовыйКлючСвязи;
	
КонецФункции

Функция ПолучитьЗначенияРеквизитовОбъекта(Ссылка, СтруктураПолей) Экспорт

	Результат = Новый Структура;
	Для Каждого КлючИЗначение ИЗ СтруктураПолей Цикл
		Результат.Вставить(КлючИЗначение.Ключ);
	КонецЦикла;

	ТекстЗапроса = "";
	
	ОбъектМетаданных = Ссылка.Метаданные();

	Для Каждого Элемент Из СтруктураПолей Цикл
		
		ИмяПоля = Элемент.Значение;
		
		Если НЕ ЗначениеЗаполнено(ИмяПоля) Тогда
			ИмяПоля = СокрЛП(Элемент.Ключ);
		КонецЕсли;
		
		ТекстЗапроса  = ТекстЗапроса + ?(ПустаяСтрока(ТекстЗапроса), "", ",") + "
		|	" + ИмяПоля + " КАК " + СокрЛП(Элемент.Ключ);
	КонецЦикла;

	Запрос = Новый Запрос();

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ" + ТекстЗапроса + "
	|ИЗ
	|	" + ОбъектМетаданных.ПолноеИмя() + " КАК ТаблицаОбъекта
	|ГДЕ
	|	Ссылка = &Ссылка";

	Запрос.УстановитьПараметр("Ссылка" , Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Для Каждого КлючИЗначение ИЗ СтруктураПолей Цикл
			Результат[КлючИЗначение.Ключ] = Выборка[КлючИЗначение.Ключ];
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции









Процедура ВыполнитьПроведение(Источник, Отказ, РежимПроведения) Экспорт
	
	МетаданныеДокумента = Источник.Ссылка.Метаданные();
	
	ДополнительныеСвойства = Новый Структура;
	ДополнительныеСвойства.Вставить("РежимЗаписи", 	Источник.ДополнительныеСвойства.РежимЗаписи);
	ДополнительныеСвойства.Вставить("ЭтоНовый", 	Источник.ДополнительныеСвойства.ЭтоНовый);
	ДополнительныеСвойства.Вставить("ИмяДокумента", МетаданныеДокумента.Имя);
	ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
	ДополнительныеСвойства.ДляПроведения.Вставить("СтруктураВременныеТаблицы", Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц));
	ДополнительныеСвойства.ДляПроведения.Вставить("РежимПроведения",           РежимПроведения);
	ДополнительныеСвойства.ДляПроведения.Вставить("МетаданныеДокумента",       МетаданныеДокумента);
	ДополнительныеСвойства.ДляПроведения.Вставить("Ссылка",                    Источник.Ссылка);
	
	Если 		ТипЗнч(Источник) = Тип("ДокументОбъект.РеализацияТоваровУслуг") 		Тогда
		Таблица = ИнициализироватьДанныеРеализацииТоваровУслуг(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);	
	ИначеЕсли 	ТипЗнч(Источник) = Тип("ДокументОбъект.РасходныйОрдерНаТовары") 		Тогда
		Таблица = ИнициализироватьДанныеРасходныйОрдерНаТовары(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
	ИначеЕсли   ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") 			Тогда
		Таблица = ИнициализироватьДанныеПеремещениеТоваров(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
	ИначеЕсли  	ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратТоваровОтКлиента")		Тогда
		Таблица = ИнициализироватьДанныеВозвратТоваровОтКлиента(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
	ИначеЕсли  	ТипЗнч(Источник) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг")		Тогда
		Таблица = ИнициализироватьДанныеПоступлениеТоваровУслуг(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
	ИначеЕсли  	ТипЗнч(Источник) = Тип("ДокументОбъект.ПриходныйОрдерНаТовары")			Тогда
		Таблица = ИнициализироватьДанныеПриходныйОрдерНаТовары(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
	ИначеЕсли   ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеНедостачТоваров") 		Тогда 
		Таблица = ИнициализироватьДанныеСписаниеНедостачТоваров(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
	ИначеЕсли   ТипЗнч(Источник) = Тип("ДокументОбъект.ОприходованиеИзлишковТоваров")	Тогда
		Таблица = ИнициализироватьДанныеОприходованиеИзлишковТоваров(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
	ИначеЕсли   ТипЗнч(Источник) = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров") 	Тогда
		Таблица = ИнициализироватьДанныеВнутреннееПотреблениеТоваров(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
	ИначеЕсли  	ТипЗнч(Источник) = Тип("ДокументОбъект.ВозвратТоваровПоставщику")		Тогда
		Таблица = ИнициализироватьДанныеВозвратТоваровПоставщику(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);	
	ИначеЕсли   ТипЗнч(Источник) = Тип("ДокументОбъект.ПересортицаТоваров") 			Тогда
		Таблица = ИнициализироватьДанныеПересортицаТоваров(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
	ИначеЕсли   ТипЗнч(Источник) = Тип("ДокументОбъект.ВводОстатков") 					Тогда
		Таблица = ИнициализироватьДанныеВводОстатков(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
	ИначеЕсли   ТипЗнч(Источник) = Тип("ДокументОбъект.СборкаТоваров") 					Тогда
		Если 	  Источник.Ссылка.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих   Тогда
			Таблица = ИнициализироватьДанныеСборкаИзКомплектующих(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
		ИначеЕсли Источник.Ссылка.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие Тогда
			Таблица = ИнициализироватьДанныеРазборкаНаКомплектующие(Источник.Ссылка, Источник.ДополнительныеСвойства, Отказ);
		Иначе
			
		КонецЕсли;
	КонецЕсли;
		
	ПодготовитьНаборыЗаписей(Источник); 
	ОтразитьДвижения(Источник.ДополнительныеСвойства, Источник.Движения, Таблица, Отказ);
	
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

	Если ТипЗнч(Источник) = Тип("ДокументОбъект.РасходныйОрдерНаТовары") Тогда
		Если НЕ РольДоступна("ПолныеПрава") Тогда
	    	Запрос = Новый Запрос;
			Запрос.Текст = "
				|ВЫБРАТЬ
				|	Место
				|ИЗ
				|	РегистрСведений.ОтгрузкаМест.СрезПоследних(, Место В (	ВЫБРАТЬ 
				|																Место 
				|															ИЗ 
				|																РегистрСведений.МестаПоДокументам
				|															ГДЕ
				|																Документ = &Ссылка))
				|ГДЕ
				|	СтатусОтгрузки В (	Значение(Перечисление.СтатусыОтгрузкиМест.КомплектацияЗавершена),
				|						Значение(Перечисление.СтатусыОтгрузкиМест.ПогруженоВМашину),
				|						Значение(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру))
				|";
			Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
			Если НЕ Запрос.Выполнить().Пустой() Тогда
				ШаблонСообщения = НСтр("ru='Редактирование ордера запрещено! (http://r.ktc-ua.com/issues/3055)'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ШаблонСообщения, Источник, , , Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		//Выполним чтение движений документа
		Источник.Движения.ОбеспечениеЗаказов.Прочитать();
		Источник.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Прочитать();
		ОтразитьДвиженияОбеспечение(Источник, ДополнительныеСвойства, Источник.Движения, Отказ);
	КонецЕсли;
		
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
		//Выполним чтение движений документа
		ОтразитьДвиженияОбеспечение(Источник, ДополнительныеСвойства, Источник.Движения, Отказ);
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.РасходныйОрдерНаТовары") Тогда
		Если ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			
			//Выполним чтение движений документа
			ДокументОбъект = Источник.Распоряжение.ПолучитьОбъект();
			ДокументОбъект.Движения.ОбеспечениеЗаказов.Прочитать();
			ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Прочитать();
			ОтразитьДвиженияОбеспечениеРасходныйОрдерНаТовары(Источник.Распоряжение, ДокументОбъект, , Отказ);
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПриходныйОрдерНаТовары") Тогда
		Если ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			
			//Выполним чтение движений документа
			ДокументОбъект = Источник.Распоряжение.ПолучитьОбъект();
			ДокументОбъект.Движения.ОбеспечениеЗаказов.Прочитать();
			ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Прочитать();
			ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Источник.Распоряжение, Источник.Распоряжение, ДокументОбъект, , Отказ);
			
		ИначеЕсли 	ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			
			//Выполним чтение движений документа
			ДокументОбъект = Источник.Распоряжение.ПолучитьОбъект();
			ДокументОбъект.Движения.ОбеспечениеЗаказов.Прочитать();
			ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Источник.Распоряжение, Источник.Распоряжение, ДокументОбъект, , Отказ);
			
		ИначеЕсли 	ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
			
			ПодчиненныеПеремещения = ПолучитьСписокПодчиненныхПеремещений(Источник.Распоряжение, Документы.ПеремещениеТоваров.ПустаяСсылка());
			Для каждого Перемещение Из ПодчиненныеПеремещения Цикл
				//Выполним чтение движений документа
				ДокументОбъект = Перемещение.Значение.ПолучитьОбъект();
				ДокументОбъект.Движения.ОбеспечениеЗаказов.Прочитать();
				ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Прочитать();
				ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Перемещение.Значение,	Источник.Распоряжение, ДокументОбъект, , Отказ);
			КонецЦикла;
			
		ИначеЕсли 	ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			
			ПодчиненныеПоступления = ПолучитьСписокПодчиненныхПоступлений(Источник.Распоряжение, Документы.ПоступлениеТоваровУслуг.ПустаяСсылка());
			Для каждого Поступление Из ПодчиненныеПоступления Цикл
				//Выполним чтение движений документа
				ДокументОбъект = Поступление.Значение.ПолучитьОбъект();
				ДокументОбъект.Движения.ОбеспечениеЗаказов.Прочитать();
				ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Поступление.Значение, Источник.Распоряжение, ДокументОбъект, , Отказ);
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
	ЗаписатьНаборыЗаписей(Источник, Источник.Движения, ДополнительныеСвойства);
	ВыполнитьКонтрольРезультатов(Источник, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();	
	
КонецПроцедуры

Процедура ВыполнитьУдалениеПроведения(Источник, Отказ) Экспорт
	
	МетаданныеДокумента = Источник.Ссылка.Метаданные();
	
	ДополнительныеСвойства = Новый Структура;
	ДополнительныеСвойства.Вставить("РежимЗаписи", 	Источник.ДополнительныеСвойства.РежимЗаписи);
	ДополнительныеСвойства.Вставить("ЭтоНовый", 	Источник.ДополнительныеСвойства.ЭтоНовый);
	ДополнительныеСвойства.Вставить("ИмяДокумента", МетаданныеДокумента.Имя);
	ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
	ДополнительныеСвойства.ДляПроведения.Вставить("СтруктураВременныеТаблицы", Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц));
	ДополнительныеСвойства.ДляПроведения.Вставить("РежимПроведения",           Неопределено);
	ДополнительныеСвойства.ДляПроведения.Вставить("МетаданныеДокумента",       МетаданныеДокумента);
	ДополнительныеСвойства.ДляПроведения.Вставить("Ссылка",                    Источник.Ссылка);
		
	ПодготовитьНаборыЗаписей(Источник);
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.РасходныйОрдерНаТовары") Тогда
		Если ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			
			//Выполним чтение движений документа
			ДокументОбъект = Источник.Распоряжение.ПолучитьОбъект();
			ДокументОбъект.Движения.ОбеспечениеЗаказов.Прочитать();
			ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Прочитать();
			ОтразитьДвиженияОбеспечениеРасходныйОрдерНаТовары(Источник.Распоряжение, ДокументОбъект, , Отказ);
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПриходныйОрдерНаТовары") Тогда
		Если ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			
			//Выполним чтение движений документа
			ДокументОбъект = Источник.Распоряжение.ПолучитьОбъект();
			ДокументОбъект.Движения.ОбеспечениеЗаказов.Прочитать();
			ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Прочитать();
			ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Источник.Распоряжение, Источник.Распоряжение, ДокументОбъект, , Отказ);
			
		ИначеЕсли  ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			
			//Выполним чтение движений документа
			ДокументОбъект = Источник.Распоряжение.ПолучитьОбъект();
			ДокументОбъект.Движения.ОбеспечениеЗаказов.Прочитать();
			ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Источник.Распоряжение, Источник.Распоряжение, ДокументОбъект, , Отказ);
			
		ИначеЕсли 	ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
			
			ПодчиненныеПеремещения = ПолучитьСписокПодчиненныхПеремещений(Источник.Распоряжение, Документы.ПеремещениеТоваров.ПустаяСсылка());
			Для каждого Перемещение Из ПодчиненныеПеремещения Цикл
				//Выполним чтение движений документа
				ДокументОбъект = Перемещение.Значение.ПолучитьОбъект();
				ДокументОбъект.Движения.ОбеспечениеЗаказов.Прочитать();
				ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Прочитать();
				ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Перемещение.Значение, Источник.Распоряжение, ДокументОбъект, , Отказ);
			КонецЦикла;
			
		ИначеЕсли 	ТипЗнч(Источник.Распоряжение) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			
			ПодчиненныеПоступления = ПолучитьСписокПодчиненныхПоступлений(Источник.Распоряжение, Документы.ПоступлениеТоваровУслуг.ПустаяСсылка());
			Для каждого Поступление Из ПодчиненныеПоступления Цикл
				//Выполним чтение движений документа
				ДокументОбъект = Поступление.Значение.ПолучитьОбъект();
				ДокументОбъект.Движения.ОбеспечениеЗаказов.Прочитать();
				ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Поступление.Значение, Источник.Распоряжение, ДокументОбъект, , Отказ);
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	ЗаписатьНаборыЗаписей(Источник, Источник.Движения, ДополнительныеСвойства);
	ВыполнитьКонтрольРезультатов(Источник, ДополнительныеСвойства, Отказ);
	
	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();	
	
КонецПроцедуры




Процедура ПодготовитьНаборыЗаписей(Источник)
	
	Если Источник.Движения.СерийныеНомераНоменклатуры.Количество() > 0 Тогда
		Источник.Движения.СерийныеНомераНоменклатуры.Очистить();
	КонецЕсли;
	
	Если Не Источник.ДополнительныеСвойства.ЭтоНовый Тогда
		Источник.Движения.СерийныеНомераНоменклатуры.Записывать = Истина;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОтразитьДвижения(ДополнительныеСвойства, Движения, Таблица, Отказ) 
	
	Если Отказ Тогда 
		Возврат; 
	КонецЕсли;
	
	Движения.СерийныеНомераНоменклатуры.Записывать = Истина;
	Движения.СерийныеНомераНоменклатуры.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ЗаписатьНаборыЗаписей(Источник, Движения, ДополнительныеСвойства) 
	
	Перем РегистрыДляКонтроля;

	// Регистры, для которых будут рассчитаны таблицы изменений движений.
	Если Источник.ДополнительныеСвойства.ДляПроведения.Свойство("РегистрыДляКонтроля", РегистрыДляКонтроля) Тогда
		Для Каждого НаборЗаписей Из РегистрыДляКонтроля Цикл
			Если НаборЗаписей.Записывать Тогда
				// Установка флага регистрации изменений в наборе записей.
				НаборЗаписей.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Истина);
				НаборЗаписей.ДополнительныеСвойства.Вставить("ЭтоНовый", Источник.ДополнительныеСвойства.ЭтоНовый);
				// Структура для передачи данных в модули наборов записей.
				НаборЗаписей.ДополнительныеСвойства.Вставить("ДляПроведения", 
						Новый Структура("СтруктураВременныеТаблицы", Источник.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
    НаборЗаписей = Движения.СерийныеНомераНоменклатуры;	
	Если НаборЗаписей.Записывать Тогда
		// Установка флага регистрации изменений в наборе записей.
		НаборЗаписей.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Истина);
		НаборЗаписей.ДополнительныеСвойства.Вставить("ЭтоНовый", ДополнительныеСвойства.ЭтоНовый);
		// Структура для передачи данных в модули наборов записей.
		НаборЗаписей.ДополнительныеСвойства.Вставить("ДляПроведения", 
				Новый Структура("СтруктураВременныеТаблицы", ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы));
	КонецЕсли;
	
	
	Если Источник.Движения.Найти("ОбеспечениеЗаказов") <> Неопределено Тогда
		НаборЗаписей = Движения.ОбеспечениеЗаказов;
		Если НаборЗаписей.Записывать Тогда
			// Установка флага регистрации изменений в наборе записей.
			НаборЗаписей.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Истина);
			НаборЗаписей.ДополнительныеСвойства.Вставить("ЭтоНовый", ДополнительныеСвойства.ЭтоНовый);
			// Структура для передачи данных в модули наборов записей.
			НаборЗаписей.ДополнительныеСвойства.Вставить("ДляПроведения", 
					Новый Структура("СтруктураВременныеТаблицы", ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы));
		КонецЕсли;
	КонецЕсли;
	
	Источник.Движения.Записать();
	
КонецПроцедуры

Процедура ВыполнитьКонтрольРезультатов(Источник, ДополнительныеСвойства, Отказ)
	
	Если Отказ Тогда 
		Возврат; 
	КонецЕсли;
	
	МассивКонтролей = Новый Массив;
	МассивКонтролей.Добавить(Врег("КонтрольКоличестваСерийныхНомеров"));
	ТекстЗапроса =  
		"ВЫБРАТЬ
		|	Таблица.Номенклатура 				КАК Номенклатура,
		|	Таблица.Характеристика 				КАК Характеристика,
		|	Таблица.Организация 				КАК Организация,
		|   Таблица.Подразделение 				КАК Подразделение,
		|	Таблица.Склад 						КАК Склад,
		|   Таблица.КоличествоВДокументе      	КАК Количество
		|
		|ИЗ
		|	РегистрНакопления.СерийныеНомераНоменклатуры КАК Таблица
		|ГДЕ
		|	Таблица.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Организация,
		|   Таблица.Подразделение,
		|	Таблица.Склад,
		|   Таблица.КоличествоВДокументе
		|
		|ИМЕЮЩИЕ Таблица.КоличествоВДокументе <> КОЛИЧЕСТВО(Таблица.СерийныеНомера)
		|;
		|///////////////////////////////////////////////////////////////////
		|";
				
	МассивКонтролей.Добавить(Врег("КонтрольОстатковСерийныхНомеров"));	
	ТекстЗапроса = ТекстЗапроса +
		"
		|ВЫБРАТЬ
		//|	ТаблицаОстатков.Организация      	КАК Организация,
		|	ТаблицаОстатков.Номенклатура       	КАК Номенклатура,
		|	ТаблицаОстатков.Характеристика 		КАК Характеристика,
		|	ТаблицаОстатков.Склад     			КАК Склад,
		|	ТаблицаОстатков.СерийныеНомера      КАК СерийныйНомер,
		|	ТаблицаОстатков.КоличествоОстаток   КАК Количество
		|ИЗ
		|	РегистрНакопления.СерийныеНомераНоменклатуры.Остатки(,//&Дата,
		//|			(Организация, Номенклатура, Характеристика, Склад, СерийныеНомера) В
		|			(Номенклатура, Характеристика, Склад, СерийныеНомера) В
		|				(ВЫБРАТЬ
		//|					Таблица.Организация,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Склад,
		|					Таблица.СерийныеНомера
		|				ИЗ
		|					РегистрНакопления.СерийныеНомераНоменклатуры КАК Таблица
		|				
		|               ГДЕ
		|                	Таблица.Регистратор = &Регистратор
		|
		|				ОБЪЕДИНИТЬ ВСЕ
		|
		|               ВЫБРАТЬ
		//|					Таблица.Организация,
		|					Таблица.Номенклатура,
		|					Таблица.Характеристика,
		|					Таблица.Склад,
		|					Таблица.СерийныеНомера
		|				ИЗ
		|					ДвиженияСерийныеНомераПослеЗаписи КАК Таблица
		|				)
		|	) КАК ТаблицаОстатков
		|
		|ГДЕ
		|	ТаблицаОстатков.КоличествоОстаток < 0;
		|///////////////////////////////////////////////////////////////////
		|";	
	ПакетЗапросов = Новый Запрос;		
	ПакетЗапросов.Текст = ТекстЗапроса;
	ПакетЗапросов.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	ПакетЗапросов.УстановитьПараметр("Регистратор", Источник.Ссылка);
	ПакетЗапросов.УстановитьПараметр("Дата", Источник.Дата);

	
	МассивРезультатов = ПакетЗапросов.ВыполнитьПакет();
	
	Итератор = -1;
	Для Каждого Результат Из МассивРезультатов Цикл

		Итератор = Итератор + 1;
		Если Результат.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяКонтроля = МассивКонтролей[Итератор];
		Если ИмяКонтроля = Врег("КонтрольКоличестваСерийныхНомеров") Тогда
			СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Источник, Отказ, Результат);
		ИначеЕсли ИмяКонтроля = Врег("КонтрольОстатковСерийныхНомеров") Тогда
			СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатурыОстаток(Источник, Отказ, Результат);	
		Иначе
			ВызватьИсключение НСтр("ru = 'Ошибка контроля проведения!'");
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры



Процедура СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристика% 
		|Имеет не верное количество серийных номеров '");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
								ПолучитьПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект, , , Отказ);

	КонецЦикла;

КонецПроцедуры

Процедура СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатурыОстаток(Объект, Отказ, РезультатЗапроса)

	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристика% с серийным номером: %СерийныйНомер%
	|Превышен свободный остаток на складе: %Склад% '");
	//	|Превышен свободный остаток на складе: %Склад% , Организация: %Организация% '");

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
									 ПолучитьПредставлениеНоменклатуры(Выборка.Номенклатура, Выборка.Характеристика));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",      	Строка(Выборка.Склад));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СерийныйНомер%", Строка(Выборка.СерийныйНомер));
		//ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%",   Строка(Выборка.Организация));

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);

	КонецЦикла;

КонецПроцедуры

Функция ПолучитьПредставлениеНоменклатуры(НоменклатураПредставление, ХарактеристикаПредставление) 

	СтрПредставление = СокрЛП(НоменклатураПредставление);

	Если ЗначениеЗаполнено(ХарактеристикаПредставление)Тогда
		СтрПредставление = СтрПредставление + " / " + СокрЛП(ХарактеристикаПредставление);
	КонецЕсли;

	Возврат СтрПредставление;

КонецФункции





Процедура ОтразитьДвиженияОбеспечение(Источник, ДополнительныеСвойства, Движения, Отказ) 
	
	Если Отказ Тогда 
		Возврат; 
	КонецЕсли;
				  
	ЕстьРегистр = НЕ Источник.Движения.Найти("ОбеспечениеЗаказов") = Неопределено;
	Если ЕстьРегистр Тогда 
		
		Если ТипЗнч(Источник) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
			
			СвойствоОбеспечения = Новый Структура("ТаблицыДляДвижений", Новый Структура);
			Документы.ПеремещениеТоваров.ИнициализироватьДанныеДокумента(Источник.Ссылка, СвойствоОбеспечения);
			Если Источник.СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке 
			 И   Источник.СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении Тогда
				//Сообщить("Я ордер на приход и расход");
				ОтразитьДвиженияОбеспечениеРасходныйОрдерНаТовары(Источник.Ссылка, Источник, Ложь, Отказ); 
				ДокументОснование = ?(Источник.ЗаказНаПеремещение.Пустая(), Источник.Ссылка, Источник.ЗаказНаПеремещение);
				ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Источник.Ссылка, ДокументОснование, Источник, Ложь, Отказ);
			ИначеЕсли Источник.СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке Тогда
				ОтразитьДвиженияОбеспечениеРасходныйОрдерНаТовары(Источник.Ссылка, Источник, Ложь, Отказ);		 
			ИначеЕсли Источник.СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении Тогда
				ДокументОснование = ?(Источник.ЗаказНаПеремещение.Пустая(), Источник.Ссылка, Источник.ЗаказНаПеремещение);
				ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Источник.Ссылка, ДокументОснование, Источник, Ложь, Отказ);					
		 	Иначе
				Движения.ОбеспечениеЗаказов.Загрузить(СвойствоОбеспечения.ТаблицыДляДвижений.ТаблицаОбеспечениеЗаказов); 
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
			
			СвойствоОбеспечения = Новый Структура("ТаблицыДляДвижений", Новый Структура);
			Документы.ПоступлениеТоваровУслуг.ИнициализироватьДанныеДокумента(Источник.Ссылка, СвойствоОбеспечения);
			Если Источник.Склад.ИспользоватьОрдернуюСхемуПриПоступлении Тогда
				ДокументОснование = ?(Источник.ЗаказПоставщику.Пустая(), Источник.Ссылка, Источник.ЗаказПоставщику);
				ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Источник.Ссылка, ДокументОснование, Источник, Ложь, Отказ);
		 	Иначе
				Движения.ОбеспечениеЗаказов.Загрузить(СвойствоОбеспечения.ТаблицыДляДвижений.ТаблицаОбеспечениеЗаказов); 
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтразитьДвиженияОбеспечениеРасходныйОрдерНаТовары(Распоряжение, ДокументОбъект, ЗаписьНаборЗаписей = Истина, Отказ)
	
	Если Отказ Тогда 
		Возврат; 
	КонецЕсли;
	
	Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда		
		//Был ли товар отгружен под заказ в этом перемещении?
		Запрос = Новый Запрос;
		Запрос.Текст = "
			|ВЫБРАТЬ
			|	Номенклатура,
			|   Характеристика,
			|	- ПланируемаяОтгрузкаПодЗаказ КАК ОтгруженоПодЗаказ
			|ИЗ
			|	РегистрНакопления.ДвижениеТоваров
			|ГДЕ
			|	Регистратор = &Регистратор
			|И	Склад 		= &Склад
			|И	Назначение <> Значение(Справочник.Назначения.ПустаяСсылка)";
		Запрос.УстановитьПараметр("Склад", ПолучитьСкладИзРаспоряжения(Распоряжение, "СкладОтправитель"));
		Запрос.УстановитьПараметр("Регистратор", Распоряжение);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			//Было ли что-то отгружено со склада расходными ордерами из этого перемещения
			Запрос = Новый Запрос;
			Запрос.Текст = "
				|ВЫБРАТЬ
				|	Номенклатура,
				|   Характеристика,
				|	СУММА(КОтгрузкеРасход) КАК КОтгрузкеРасход,
				|	0 КАК РасходОбеспечения,
				|	0 КАК ПриходОбеспечения
				|ИЗ
				|	РегистрНакопления.ТоварыКОтгрузке.Обороты(, , Регистратор, Склад = &Склад
				|															 И ДокументОтгрузки = &ДокументОтгрузки )
				|СГРУППИРОВАТЬ ПО
				|	Номенклатура,
				|   Характеристика
				|";
			Запрос.УстановитьПараметр("Склад", ПолучитьСкладИзРаспоряжения(Распоряжение, "СкладОтправитель"));
			Запрос.УстановитьПараметр("ДокументОтгрузки", Распоряжение);
			ВыгрузкаОтгруженогоТовара = Запрос.Выполнить().Выгрузить();
			
			//Сообщить("Отгружено товара: " + ВыгрузкаОтгруженогоТовара.Количество());
			
			//Получаем таблицу обеспечения для формирования части движений или всех движений документа
			ТаблицаОбеспечениеЗаказов = ИнициализироватьДанныеОбеспечения(Распоряжение);
			
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
				Если ДокументОбъект.ЗаказНаПеремещение.Пустая() Тогда 
					
					ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Записывать = Истина;
					
					КоличествоДвижений = ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Количество()-1;
					Для Инд = 0 По КоличествоДвижений Цикл
						Движение = ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение[КоличествоДвижений - Инд];
						Если Движение.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
							ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Удалить(Движение);
						КонецЕсли;
					КонецЦикла;
					
					Для каждого Движение Из ТаблицаОбеспечениеЗаказов Цикл
						Если Движение.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
							ЗаказНазначение = Движение.Назначение.Заказ;
							Если ТипЗнч(ЗаказНазначение) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
								Если ДокументОбъект.СкладОтправитель = ЗаказНазначение.СкладОтправитель
								 И	 ДокументОбъект.СкладПолучатель  = ЗаказНазначение.СкладПолучатель Тогда
									Продолжить; 
								КонецЕсли;
							КонецЕсли;
							НовоеДвижение = ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Добавить();	
							ЗаполнитьЗначенияСвойств(НовоеДвижение, Движение);
							НовоеДвижение.Склад = ДокументОбъект.СкладПолучатель;
						   	НовоеДвижение.ВидДвижения = ВидДвиженияНакопления.Приход;
							НовоеДвижение.КПоступлению = ?(Движение.НаличиеПодЗаказ <> 0, Движение.НаличиеПодЗаказ, Движение.НаличиеСоСклада);
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			
			
			НужныДвиженияПрихода = НЕ ПолучитьСкладИзРаспоряжения(Распоряжение, "СкладПолучатель").ИспользоватьОрдернуюСхемуПриПоступлении;
			
			//Сообщить("Хочу сделать движений по обеспечению: " + ТаблицаОбеспечениеЗаказов.Количество());
			
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика");
			КоличествоОбеспечения = ТаблицаОбеспечениеЗаказов.Количество()-1;
			Для Инд = 0 По КоличествоОбеспечения Цикл

				СтрокаЗаказ = ТаблицаОбеспечениеЗаказов[КоличествоОбеспечения - Инд];
				Если СтрокаЗаказ.ВидДвижения = ВидДвиженияНакопления.Приход И НЕ НужныДвиженияПрихода Тогда
					ТаблицаОбеспечениеЗаказов.Удалить(СтрокаЗаказ);
					Продолжить;	
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(ПараметрыОтбора, СтрокаЗаказ);
				РезультатПоиска = ВыгрузкаОтгруженогоТовара.НайтиСтроки(ПараметрыОтбора);
				Если РезультатПоиска.Количество() > 0 Тогда
					
					Если СтрокаЗаказ.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
						РеквизитНаличия = ?(СтрокаЗаказ.НаличиеСоСклада = 0, "НаличиеПодЗаказ", "НаличиеСоСклада");
						Если РезультатПоиска[0].КОтгрузкеРасход - РезультатПоиска[0].РасходОбеспечения >= СтрокаЗаказ[РеквизитНаличия] Тогда
							РезультатПоиска[0].РасходОбеспечения = РезультатПоиска[0].РасходОбеспечения + СтрокаЗаказ[РеквизитНаличия];		
						ИначеЕсли РезультатПоиска[0].КОтгрузкеРасход - РезультатПоиска[0].РасходОбеспечения = 0 Тогда
							ТаблицаОбеспечениеЗаказов.Удалить(СтрокаЗаказ);		
						Иначе
							СтрокаЗаказ[РеквизитНаличия] 			= РезультатПоиска[0].КОтгрузкеРасход - РезультатПоиска[0].РасходОбеспечения;
							Если СтрокаЗаказ.НаличиеСоСклада = 0 Тогда
								СтрокаЗаказ.Потребность 			= РезультатПоиска[0].КОтгрузкеРасход - РезультатПоиска[0].РасходОбеспечения;
							КонецЕсли;
							РезультатПоиска[0].РасходОбеспечения 	= РезультатПоиска[0].КОтгрузкеРасход;
						КонецЕсли;
						
					Иначе
						
						Если РезультатПоиска[0].КОтгрузкеРасход - РезультатПоиска[0].ПриходОбеспечения >= СтрокаЗаказ.НаличиеПодЗаказ Тогда
							РезультатПоиска[0].ПриходОбеспечения = РезультатПоиска[0].ПриходОбеспечения + СтрокаЗаказ.НаличиеПодЗаказ;		
						ИначеЕсли РезультатПоиска[0].КОтгрузкеРасход - РезультатПоиска[0].ПриходОбеспечения = 0 Тогда
							ТаблицаОбеспечениеЗаказов.Удалить(СтрокаЗаказ);		
						Иначе
							СтрокаЗаказ.НаличиеПодЗаказ 			=    РезультатПоиска[0].КОтгрузкеРасход - РезультатПоиска[0].ПриходОбеспечения;
							СтрокаЗаказ.Заказано   			   		= - (РезультатПоиска[0].КОтгрузкеРасход - РезультатПоиска[0].ПриходОбеспечения);
							РезультатПоиска[0].ПриходОбеспечения 	=    РезультатПоиска[0].КОтгрузкеРасход;			
						КонецЕсли;	
						
					КонецЕсли;
				Иначе
					ТаблицаОбеспечениеЗаказов.Удалить(СтрокаЗаказ);
				КонецЕсли;
				
			КонецЦикла; 
			
			
			
			//Сообщить("Остаточные движения (со стороны расхода): " + ТаблицаОбеспечениеЗаказов.Количество());
			
			
			
			Если ПолучитьСкладИзРаспоряжения(Распоряжение, "СкладПолучатель").ИспользоватьОрдернуюСхемуПриПоступлении Тогда
				
				КоличествоДвижений = ДокументОбъект.Движения.ОбеспечениеЗаказов.Количество()-1;
				Для Инд = 0 По КоличествоДвижений Цикл
					Движение = ДокументОбъект.Движения.ОбеспечениеЗаказов[КоличествоДвижений - Инд];
					Если Движение.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
						ДокументОбъект.Движения.ОбеспечениеЗаказов.Удалить(Движение);
					КонецЕсли;
				КонецЦикла;
				
				//Сообщить("[После очистки]Движений в документе осталось (со стороны расхода): " + ДокументОбъект.Движения.ОбеспечениеЗаказов.Количество());
				
				ТаблицаОбеспечениеЗаказов = ТаблицаОбеспечениеЗаказов.Скопировать(Новый Структура("ВидДвижения", ВидДвиженияНакопления.Расход));
				
				Для каждого СтрокаОбеспечения Из ТаблицаОбеспечениеЗаказов Цикл
					ЗаполнитьЗначенияСвойств(ДокументОбъект.Движения.ОбеспечениеЗаказов.Добавить(), СтрокаОбеспечения);
				КонецЦикла;
				
			Иначе
				ДокументОбъект.Движения.ОбеспечениеЗаказов.Загрузить(ТаблицаОбеспечениеЗаказов);
			КонецЕсли;
			
			//Сообщить("[Контроль движений] в документе осталось (со стороны расхода): " + ДокументОбъект.Движения.ОбеспечениеЗаказов.Количество());
						
			ДокументОбъект.Движения.ОбеспечениеЗаказов.Записывать = Истина;
			Если ЗаписьНаборЗаписей Тогда
				ВыполнитьЗаписьИКонтрольПроведенияПоОбеспечению(ДокументОбъект, Отказ);
			КонецЕсли;
			
		КонецЕсли;	
			
	КонецЕсли;		
	
КонецПроцедуры

Процедура ОтразитьДвиженияОбеспечениеПриходныйОрдерНаТовары(Распоряжение, ДокументПоступления, ДокументОбъект, ЗаписьНаборЗаписей = Истина, Отказ)
	
	Если Отказ Тогда 
		Возврат; 
	КонецЕсли;
	
	Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПеремещениеТоваров")
	 ИЛИ ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда		
		//Был ли товар принят под заказ в этом перемещении?
		Запрос = Новый Запрос;
		Запрос.Текст = "
			|ВЫБРАТЬ
			|	Номенклатура,
			|   Характеристика,
			|	- ПланируемоеПоступлениеПодЗаказ КАК ОтгруженоПодЗаказ
			|ИЗ
			|	РегистрНакопления.ДвижениеТоваров
			|ГДЕ
			|	Регистратор = &Регистратор
			|И	Склад 		= &Склад
			|И	Назначение <> Значение(Справочник.Назначения.ПустаяСсылка)";
		Запрос.УстановитьПараметр("Склад", ПолучитьСкладИзРаспоряжения(Распоряжение, "СкладПолучатель"));
		Запрос.УстановитьПараметр("Регистратор", Распоряжение);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() 
		 ИЛИ ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ПеремещениеТоваров")
		 ИЛИ ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			//Было ли что-то принято со склада приходными ордерами из этого перемещения
			Запрос = Новый Запрос;
			Если ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ПеремещениеТоваров")
			 ИЛИ ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
				Запрос.Текст = "
					|ВЫБРАТЬ
					|	Номенклатура,
					|   Характеристика,
					|	СУММА(КПоступлениюРасход) КАК КПоступлениюРасход,
					|	0 КАК РасходОбеспечения,
					|	0 КАК ПриходОбеспечения
					|ИЗ
					|	РегистрНакопления.ТоварыКПоступлению.Обороты(, , Регистратор, Склад = &Склад
					|															 И ДокументПоступления = &ДокументПоступления )
					|СГРУППИРОВАТЬ ПО 
					|	Номенклатура,
					|   Характеристика	
					|";
			ИначеЕсли ТипЗнч(ДокументПоступления) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
				Запрос.Текст = "
					|ВЫБРАТЬ
					|	ТоварыКПоступлению.Номенклатура,
					|   ТоварыКПоступлению.Характеристика,
					|	IsNull(ТоварыКПоступлению.КПоступлениюРасход, 0) - IsNull(НаличиеПодЗаказПриход, 0) КАК КПоступлениюРасход,
					|	0 КАК РасходОбеспечения,
					|	0 КАК ПриходОбеспечения
					|ИЗ
					|	РегистрНакопления.ТоварыКПоступлению.Обороты(, , , Склад = &Склад
					|	                                             			 И ДокументПоступления = &ДокументПоступления ) КАК ТоварыКПоступлению
					|
					|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов.Обороты(, , Регистратор, Склад = &Склад) КАК ОбеспечениеЗаказов
					|ПО ТоварыКПоступлению.Номенклатура 	= ОбеспечениеЗаказов.Номенклатура
					|И	ТоварыКПоступлению.Характеристика 	= ОбеспечениеЗаказов.Характеристика
					|И	ОбеспечениеЗаказов.Регистратор		В (&СписокРегистраторов)";
				Запрос.УстановитьПараметр("СписокРегистраторов", ПолучитьСписокПодчиненныхПеремещений(ДокументПоступления, Распоряжение));
			Иначе
				Запрос.Текст = "
					|ВЫБРАТЬ
					|	ТоварыКПоступлению.Номенклатура,
					|   ТоварыКПоступлению.Характеристика,
					|	IsNull(ТоварыКПоступлению.КПоступлениюРасход, 0) - IsNull(НаличиеПодЗаказПриход, 0) КАК КПоступлениюРасход,
					|	0 КАК РасходОбеспечения,
					|	0 КАК ПриходОбеспечения
					|ИЗ
					|	РегистрНакопления.ТоварыКПоступлению.Обороты(, , , Склад = &Склад
					|	                                             			 И ДокументПоступления = &ДокументПоступления ) КАК ТоварыКПоступлению
					|
					|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов.Обороты(, , Регистратор, Склад = &Склад) КАК ОбеспечениеЗаказов
					|ПО ТоварыКПоступлению.Номенклатура 	= ОбеспечениеЗаказов.Номенклатура
					|И	ТоварыКПоступлению.Характеристика 	= ОбеспечениеЗаказов.Характеристика
					|И	ОбеспечениеЗаказов.Регистратор		В (&СписокРегистраторов)";
				Запрос.УстановитьПараметр("СписокРегистраторов", ПолучитьСписокПодчиненныхПоступлений(ДокументПоступления, Распоряжение));	
			КонецЕсли;
			Запрос.УстановитьПараметр("Склад", ПолучитьСкладИзРаспоряжения(Распоряжение, "СкладПолучатель"));
			Запрос.УстановитьПараметр("ДокументПоступления", ДокументПоступления);
			ВыгрузкаОтгруженогоТовара = Запрос.Выполнить().Выгрузить();
			
			
			//Сообщить("Есть чо к поступлению:" + ВыгрузкаОтгруженогоТовара.Количество());
			
			
			//Получаем таблицу обеспечения для формирования части движений или всех движений документа
			ТаблицаОбеспечениеЗаказов = ИнициализироватьДанныеОбеспечения(Распоряжение);
			НужныДвиженияРасход = НЕ ПолучитьСкладИзРаспоряжения(Распоряжение, "СкладОтправитель").ИспользоватьОрдернуюСхемуПриОтгрузке;

			
			ПараметрыОтбора = Новый Структура("Номенклатура, Характеристика");
			КоличествоОбеспечения = ТаблицаОбеспечениеЗаказов.Количество()-1;
			Для Инд = 0 По КоличествоОбеспечения Цикл
				СтрокаЗаказ = ТаблицаОбеспечениеЗаказов[КоличествоОбеспечения - Инд];
				Если СтрокаЗаказ.ВидДвижения = ВидДвиженияНакопления.Расход И НЕ НужныДвиженияРасход Тогда
					ТаблицаОбеспечениеЗаказов.Удалить(СтрокаЗаказ);
					Продолжить;	
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(ПараметрыОтбора, СтрокаЗаказ);
				РезультатПоиска = ВыгрузкаОтгруженогоТовара.НайтиСтроки(ПараметрыОтбора);
				Если РезультатПоиска.Количество() > 0 Тогда
		
					Если СтрокаЗаказ.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
						РеквизитНаличия = ?(СтрокаЗаказ.НаличиеСоСклада = 0, "НаличиеПодЗаказ", "НаличиеСоСклада");
						Если РезультатПоиска[0].КПоступлениюРасход - РезультатПоиска[0].РасходОбеспечения >= СтрокаЗаказ[РеквизитНаличия] Тогда
							РезультатПоиска[0].РасходОбеспечения = РезультатПоиска[0].РасходОбеспечения + СтрокаЗаказ[РеквизитНаличия];		
						ИначеЕсли РезультатПоиска[0].КПоступлениюРасход - РезультатПоиска[0].РасходОбеспечения = 0 Тогда
							ТаблицаОбеспечениеЗаказов.Удалить(СтрокаЗаказ);		
						Иначе
							СтрокаЗаказ[РеквизитНаличия] 			= РезультатПоиска[0].КПоступлениюРасход - РезультатПоиска[0].РасходОбеспечения;
							Если СтрокаЗаказ.НаличиеСоСклада = 0 Тогда
								СтрокаЗаказ.Потребность 			= РезультатПоиска[0].КПоступлениюРасход - РезультатПоиска[0].РасходОбеспечения;
							КонецЕсли;
							РезультатПоиска[0].РасходОбеспечения 	= РезультатПоиска[0].КПоступлениюРасход;
						КонецЕсли;
						
					Иначе
						
						Если РезультатПоиска[0].КПоступлениюРасход - РезультатПоиска[0].ПриходОбеспечения >= СтрокаЗаказ.НаличиеПодЗаказ Тогда
							РезультатПоиска[0].ПриходОбеспечения = РезультатПоиска[0].ПриходОбеспечения + СтрокаЗаказ.НаличиеПодЗаказ;		
						ИначеЕсли РезультатПоиска[0].КПоступлениюРасход - РезультатПоиска[0].ПриходОбеспечения = 0 Тогда
							ТаблицаОбеспечениеЗаказов.Удалить(СтрокаЗаказ);		
						Иначе
							
							////////////Тестовое изменение
							Если СтрокаЗаказ.КЗаказу <> 0 Тогда
								СтрокаЗаказ.КЗаказу					= - (РезультатПоиска[0].КПоступлениюРасход - РезультатПоиска[0].ПриходОбеспечения);
							КонецЕсли;
							////////////Тестовое изменение
							
							СтрокаЗаказ.НаличиеПодЗаказ 			=    РезультатПоиска[0].КПоступлениюРасход - РезультатПоиска[0].ПриходОбеспечения;
							
							////////////Тестовое изменение
							Если СтрокаЗаказ.Заказано <> 0 Тогда
								СтрокаЗаказ.Заказано   			   	= - (РезультатПоиска[0].КПоступлениюРасход - РезультатПоиска[0].ПриходОбеспечения);
							КонецЕсли;
							////////////Тестовое изменение
							
							//СтрокаЗаказ.Заказано   			   		= - (РезультатПоиска[0].КПоступлениюРасход - РезультатПоиска[0].ПриходОбеспечения);
							РезультатПоиска[0].ПриходОбеспечения 	=    РезультатПоиска[0].КПоступлениюРасход;			
						КонецЕсли;
						
					КонецЕсли;
				Иначе
					ТаблицаОбеспечениеЗаказов.Удалить(СтрокаЗаказ);
				КонецЕсли;
				
			КонецЦикла; 
			
			
			
			Если ПолучитьСкладИзРаспоряжения(Распоряжение, "СкладОтправитель").ИспользоватьОрдернуюСхемуПриОтгрузке Тогда
								
				КоличествоДвижений = ДокументОбъект.Движения.ОбеспечениеЗаказов.Количество()-1;
				Для Инд = 0 По КоличествоДвижений Цикл
					Движение = ДокументОбъект.Движения.ОбеспечениеЗаказов[КоличествоДвижений - Инд];
					Если Движение.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
						ДокументОбъект.Движения.ОбеспечениеЗаказов.Удалить(Движение);
					КонецЕсли;
				КонецЦикла;
				
				ТаблицаОбеспечениеЗаказов = ТаблицаОбеспечениеЗаказов.Скопировать(Новый Структура("ВидДвижения", ВидДвиженияНакопления.Приход));
				
				Для каждого СтрокаОбеспечения Из ТаблицаОбеспечениеЗаказов Цикл
					ЗаполнитьЗначенияСвойств(ДокументОбъект.Движения.ОбеспечениеЗаказов.Добавить(), СтрокаОбеспечения);
				КонецЦикла;
				
			Иначе
				ДокументОбъект.Движения.ОбеспечениеЗаказов.Загрузить(ТаблицаОбеспечениеЗаказов);			
			КонецЕсли;
			
			
			
			Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
				Если ДокументОбъект.ЗаказНаПеремещение.Пустая() Тогда
					ИспользоватьОрдернуюСхемуПриОтгрузке = ДокументОбъект.СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке;
					ИспользоватьОрдернуюСхемуПриПоступлении = ДокументОбъект.СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении;
					
					ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Записывать = Истина;
					КоличествоДвижений = ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Количество()-1;
					Для Инд = 0 По КоличествоДвижений Цикл
						Движение = ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение[КоличествоДвижений - Инд];
						Если Движение.ВидДвижения = ВидДвиженияНакопления.Расход Тогда
							ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Удалить(Движение);
						КонецЕсли;
						
						Если ИспользоватьОрдернуюСхемуПриОтгрузке = Ложь
				   	 	 И   ИспользоватьОрдернуюСхемуПриПоступлении = Истина
						 И	 Движение.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
							ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Удалить(Движение);	 
						КонецЕсли;
					КонецЦикла;
					
					
					Если ИспользоватьОрдернуюСхемуПриОтгрузке = Ложь
				   	 И  ИспользоватьОрдернуюСхемуПриПоступлении = Истина Тогда
				     	Для каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
				    	 	Если НЕ СтрокаТовары.Назначение.Пустая() Тогда
				    			НовоеДвижение = ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Добавить();	
				    			ЗаполнитьЗначенияСвойств(НовоеДвижение, СтрокаТовары);
				    			НовоеДвижение.Период 		= ДокументОбъект.Дата;
				    			НовоеДвижение.Склад 		= ДокументОбъект.СкладПолучатель;
				    		   	НовоеДвижение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
				    			НовоеДвижение.КПоступлению 	= СтрокаТовары.Количество;
				    		КонецЕсли;
				    	КонецЦикла;
					КонецЕсли;
					
					//Если ИспользоватьОрдернуюСхемуПриОтгрузке = Истина
					//   И  ИспользоватьОрдернуюСхемуПриПоступлении = Истина Тогда
					// 	Для каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
					//	 	Если СтрокаТовары.Назначение.Пустая() Тогда
					//			НовоеДвижение = ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Добавить();	
					//			ЗаполнитьЗначенияСвойств(НовоеДвижение, СтрокаТовары);
					//			НовоеДвижение.Период 		= ДокументОбъект.Дата;
					//			НовоеДвижение.Склад 		= ДокументОбъект.СкладПолучатель;
					//		   	НовоеДвижение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
					//			НовоеДвижение.КПоступлению 	= СтрокаТовары.Количество;
					//		КонецЕсли;
					//	КонецЦикла;
					//КонецЕсли;
					
					Для каждого Движение Из ДокументОбъект.Движения.ОбеспечениеЗаказов Цикл
						Если Движение.ВидДвижения = ВидДвиженияНакопления.Приход Тогда	
							НовоеДвижение = ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Добавить();	
							ЗаполнитьЗначенияСвойств(НовоеДвижение, Движение);
							НовоеДвижение.Склад = ДокументОбъект.СкладПолучатель;
						   	НовоеДвижение.ВидДвижения = ?(Движение.ВидДвижения = ВидДвиженияНакопления.Приход, ВидДвиженияНакопления.Расход, ВидДвиженияНакопления.Приход);
							НовоеДвижение.КПоступлению = ?(Движение.НаличиеПодЗаказ <> 0, Движение.НаличиеПодЗаказ, Движение.НаличиеСоСклада);
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
			КонецЕсли;
			
			ДокументОбъект.Движения.ОбеспечениеЗаказов.Записывать = Истина;
			Если ЗаписьНаборЗаписей Тогда
				ВыполнитьЗаписьИКонтрольПроведенияПоОбеспечению(ДокументОбъект, Отказ);									
			КонецЕсли;
			
		КонецЕсли;	
			
	КонецЕсли;		
	
КонецПроцедуры

Процедура ВыполнитьЗаписьИКонтрольПроведенияПоОбеспечению(ДокументОбъект, Отказ)
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	ДокументОбъект.ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
	ДокументОбъект.ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	ДокументОбъект.ДополнительныеСвойства.ДляПроведения.Вставить("СтруктураВременныеТаблицы", Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц));
	
	НаборЗаписей = ДокументОбъект.Движения.ОбеспечениеЗаказов;
	НаборЗаписей.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Истина);
	НаборЗаписей.ДополнительныеСвойства.Вставить("ЭтоНовый", Ложь);
	НаборЗаписей.ДополнительныеСвойства.Вставить("ДляПроведения", 
				Новый Структура("СтруктураВременныеТаблицы", ДокументОбъект.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы));

	ДокументОбъект.Движения.ОбеспечениеЗаказов.Записать();
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда 
		ДокументОбъект.Движения.КТС_ТоварыКПоступлениюПодОбеспечение.Записать();		
	КонецЕсли;
	
	Массив = Новый Массив;
	Массив.Добавить(ДокументОбъект.Движения.ОбеспечениеЗаказов);
	ДокументОбъект.ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ДокументОбъект, Отказ);
	
	ДокументОбъект.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры

Функция ИнициализироватьДанныеОбеспечения(ДокументСсылка)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		Запрос.УстановитьПараметр("ПоступлениеПоЗаказу", ДокументСсылка.ПоступлениеПоЗаказам);
		Запрос.Текст = "	
			|ВЫБРАТЬ
			|	&Период                      			КАК Период,
			|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
			|	ТаблицаТовары.Номенклатура   			КАК Номенклатура,
			|	ТаблицаТовары.Характеристика 			КАК Характеристика,
			|	ВЫБОР КОГДА &ПоступлениеПоЗаказу И ТаблицаТовары.КодСтроки <> 0 ТОГДА
			|			-ТаблицаТовары.Количество
			|		ИНАЧЕ
			|			0
			|	КОНЕЦ                        			КАК Заказано,
			|	ВЫБОР КОГДА &ПоступлениеПоЗаказу И ТаблицаТовары.КодСтроки <> 0 ТОГДА
			|			0
			|		ИНАЧЕ
			|			-ТаблицаТовары.Количество 
			|	КОНЕЦ                        			КАК КЗаказу,
			|	ТаблицаТовары.Количество     			КАК НаличиеПодЗаказ,
			|	ТаблицаТовары.Склад          			КАК Склад,
			|	ТаблицаТовары.Назначение     			КАК Назначение
			|
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка = &Ссылка
			|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
			|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			|";
			
	ИначеЕсли ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		Запрос.УстановитьПараметр("Статус", ДокументСсылка.Статус);
		Запрос.УстановитьПараметр("СкладПолучатель",  ПолучитьСкладИзРаспоряжения(ДокументСсылка, "СкладПолучатель"));
		Запрос.УстановитьПараметр("СкладОтправитель", ПолучитьСкладИзРаспоряжения(ДокументСсылка, "СкладОтправитель"));
		Запрос.УстановитьПараметр("ПоЗаказуНаПеремещение", ДокументСсылка.ПеремещениеПоЗаказам);
		Запрос.Текст = "
			// 1 ВтТовары
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
			|	ТаблицаТовары.Характеристика           КАК Характеристика,
			|	ТаблицаТовары.ЗаказНаПеремещение       КАК ЗаказНаПеремещение,
			|	ТаблицаТовары.КодСтроки                КАК КодСтроки,
			|
			|	ТаблицаТовары.Назначение               КАК Назначение,
			|
			|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение ТОГДА
			|			ТоварыЗаказа.ВариантОбеспечения
			|		ИНАЧЕ
			|			НЕОПРЕДЕЛЕНО
			|	КОНЕЦ                                  КАК ВариантОбеспечения,
			|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение
			|			И ТоварыЗаказа.ВариантОбеспечения
			|							В 	(ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ),
			|									ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада)) ТОГДА
			|			ИСТИНА
			|		ИНАЧЕ
			|			ЛОЖЬ
			|	КОНЕЦ                                  КАК ОбособленнаяСтрока,
			|
			|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение И ТаблицаТовары.СтатусУказанияСерий = 10
			|			И ТаблицаТовары.ДокументРезерваСерий <> Неопределено ТОГДА
			|			ИСТИНА
			|		ИНАЧЕ
			|			ЛОЖЬ
			|	КОНЕЦ                                  КАК СтрокаОбеспеченаЗаказом, //Такие строчки из свободных остатков списывает заказ
			|	ТаблицаТовары.Количество               КАК Количество,
			|	ТаблицаТовары.СтатусУказанияСерий      КАК СтатусУказанияСерий,
			|	ТаблицаТовары.ДокументРезерваСерий     КАК ДокументРезерваСерий
			|
			|ПОМЕСТИТЬ ВтТовары
			|
			|ИЗ
			|	Документ.ПеремещениеТОваров.Товары КАК ТаблицаТовары
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ТоварыЗаказа
			|		ПО ТаблицаТовары.ЗаказНаПеремещение= ТоварыЗаказа.Ссылка
			|			И ТаблицаТовары.Номенклатура   = ТоварыЗаказа.Номенклатура
			|			И ТаблицаТовары.Характеристика = ТоварыЗаказа.Характеристика
			|			И ТаблицаТовары.КодСтроки      = ТоварыЗаказа.КодСтроки
			|			И &ПоЗаказуНаПеремещение
			|
			|ГДЕ
			|	ТаблицаТовары.Ссылка = &Ссылка
			|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В
			|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			|;
            // 
			|ВЫБРАТЬ
			|	1                                         КАК Порядок,
			|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)    КАК ВидДвижения,
			|	&Период                                   КАК Период,
			|	&СкладОтправитель                         КАК Склад,
			|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
			|	ТаблицаТовары.Характеристика              КАК Характеристика,
			|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
			|			ТаблицаТовары.Назначение
			|		ИНАЧЕ
			|			ТаблицаТовары.ЗаказНаПеремещение.Назначение
			|	КОНЕЦ                                     КАК Назначение, 
			|	0                                         КАК Заказано,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ) ТОГДА
			|			ТаблицаТовары.Количество
			|		ИНАЧЕ 0
			|	КОНЕЦ                                    КАК Потребность,
			|	0                                        КАК КЗаказу,
			|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) ТОГДА
			|		ТаблицаТовары.Количество
			|	ИНАЧЕ
			|		0
			|	КОНЕЦ                                    КАК НаличиеСоСклада,
			|	ВЫБОР КОГДА ТаблицаТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПодЗаказ) ТОГДА
			|		ТаблицаТовары.Количество
			|	ИНАЧЕ
			|		0
			|	КОНЕЦ                                     КАК НаличиеПодЗаказ
			|ИЗ
			|	ВтТовары КАК ТаблицаТовары
			|
			|ГДЕ
			|	ТаблицаТовары.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ПустаяСсылка)
			|	И &ПоЗаказуНаПеремещение
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			// Для получателя нужно оприходовать свободные остатки.
			|ВЫБРАТЬ
			|	2                                         КАК Порядок,
			|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
			|	&Период                                   КАК Период,
			|	&СкладПолучатель                          КАК Склад,
			|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
			|	ТаблицаТовары.Характеристика              КАК Характеристика,
			|	ТаблицаТовары.Назначение                  КАК Назначение,
			|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение ТОГДА
			|			-ТаблицаТовары.Количество
			|		ИНАЧЕ
			|			0
			|	КОНЕЦ                                     КАК Заказано,
			|	0                                         КАК Потребность,
			|	ВЫБОР КОГДА &ПоЗаказуНаПеремещение ТОГДА
			|			0
			|		ИНАЧЕ
			|			-ТаблицаТовары.Количество
			|	КОНЕЦ                                     КАК КЗаказу,
			|	0                                         КАК НаличиеСоСклада,
			|	ТаблицаТовары.Количество                  КАК НаличиеПодЗаказ
			|ИЗ
			|	ВтТовары КАК ТаблицаТовары
			|
			|
			|ГДЕ
			|	ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
			|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято))
			|
			|УПОРЯДОЧИТЬ ПО
			|	Порядок
			|";		
		
	КонецЕсли;
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	Возврат Выгрузка;

КонецФункции
 
Функция ПолучитьСписокПодчиненныхПеремещений(ЗначениеКритерияОтбора, Распоряжение)
	
	СписокПеремещений = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ 
		|	СвязанныеДокументы.Ссылка
		|ИЗ
		|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы
		|ГДЕ
		|	СвязанныеДокументы.Ссылка Ссылка Документ.ПеремещениеТоваров
		|И	ВЫРАЗИТЬ(СвязанныеДокументы.Ссылка КАК Документ.ПеремещениеТоваров) <> &Распоряжение
		|
		|УПОРЯДОЧИТЬ ПО СвязанныеДокументы.Ссылка.Дата Возр
		|";
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", ЗначениеКритерияОтбора);
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		СписокПеремещений.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;

	Возврат СписокПеремещений;
	
КонецФункции

Функция ПолучитьСписокПодчиненныхПоступлений(ЗначениеКритерияОтбора, Распоряжение)
	
	СписокПеремещений = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ 
		|	СвязанныеДокументы.Ссылка
		|ИЗ
		|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы
		|ГДЕ
		|	СвязанныеДокументы.Ссылка Ссылка Документ.ПоступлениеТоваровУслуг
		|И	ВЫРАЗИТЬ(СвязанныеДокументы.Ссылка КАК Документ.ПоступлениеТоваровУслуг) <> &Распоряжение
		|
		|УПОРЯДОЧИТЬ ПО СвязанныеДокументы.Ссылка.Дата Возр
		|";
	Запрос.УстановитьПараметр("ЗначениеКритерияОтбора", ЗначениеКритерияОтбора);
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		СписокПеремещений.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;

	Возврат СписокПеремещений;
	
КонецФункции

Функция ПолучитьСкладИзРаспоряжения(Распоряжение, ИмяРеквизита)
	
	Если Распоряжение.Метаданные().Реквизиты.Найти(ИмяРеквизита) = Неопределено Тогда
		Возврат Распоряжение.Склад;
	Иначе
		Возврат Распоряжение[ИмяРеквизита];		
	КонецЕсли;
	
КонецФункции





Функция ИнициализироватьДанныеРеализацииТоваровУслуг(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			ВЫБОР
	|				КОГДА Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА Склад
	|				ИНАЧЕ Ссылка.Склад
	|			КОНЕЦ КАК Склад,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.РеализацияТоваровУслуг.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.РеализацияТоваровУслуг.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|ГДЕ
	|	НЕ ТабТовары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика, 
	|	ТабТовары.Склад, 
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ТОГДА ТаблицаТовары.Склад
	|		ИНАЧЕ ТаблицаТовары.Ссылка.Склад
	|	КОНЕЦ										КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|						Таблица.Склад,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.РеализацияТоваровУслуг.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика,
	|						Таблица.Склад
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|И	ТаблицаТовары.Склад			 = ЗапросКоличества.Склад
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|
	|ГДЕ 
	|	НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке  
	|И	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Подразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеРасходныйОрдерНаТовары(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			Ссылка.Статус КАК Статус,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.РасходныйОрдерНаТовары.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		И	НеОтгружать = 0
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.РасходныйОрдерНаТовары.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|ГДЕ
	|	НЕ ТабТовары.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтбору)
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	| 	ТаблицаТовары.Ссылка.Склад 					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.РасходныйОрдерНаТовары.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|И	ТаблицаТовары.НеОтгружать = 0
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|ГДЕ   
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Распоряжение.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Ответственный.ТекущееПодразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеВозвратТоваровПоставщику(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			Ссылка.Склад КАК Склад,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.ВозвратТоваровПоставщику.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.ВозвратТоваровПоставщику.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|ГДЕ
	|	НЕ ТабТовары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.ВозвратТоваровПоставщику.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|
	|ГДЕ 
	|	НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке  
	|И	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Подразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеСписаниеНедостачТоваров(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.СписаниеНедостачТоваров.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.СписаниеНедостачТоваров.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	| 	ТаблицаТовары.Ссылка.Склад 					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.СписаниеНедостачТоваров.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.СписаниеНедостачТоваров.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|ГДЕ   
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Ответственный.ТекущееПодразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеВнутреннееПотреблениеТоваров(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			Ссылка.Склад КАК Склад,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.ВнутреннееПотреблениеТоваров.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.ВнутреннееПотреблениеТоваров.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|ГДЕ
	|	НЕ ТабТовары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.ВнутреннееПотреблениеТоваров.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|
	|ГДЕ 
	|	НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке  
	|И	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Подразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеПеремещениеТоваров(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			Ссылка.СкладОтправитель КАК СкладОтправитель,
	|			Ссылка.СкладПолучатель 	КАК СкладПолучатель,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.ПеремещениеТоваров.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.ПеремещениеТоваров.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|ГДЕ
	|	 НЕ ТабТовары.СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке
	|ИЛИ НЕ ТабТовары.СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	|	ТаблицаТовары.Ссылка.СкладОтправитель		КАК СкладОтправитель,
	|	ТаблицаТовары.Ссылка.СкладПолучатель		КАК СкладПолучатель,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.ПеремещениеТоваров.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.СкладОтправитель         	КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|
	|ГДЕ 
	|	НЕ ТаблицаТовары.СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке  
	|И	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.СкладПолучатель         	КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|
	|ГДЕ 
	|	НЕ ТаблицаТовары.СкладПолучатель.ИспользоватьОрдернуюСхемуПриПоступлении  
	|И	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Подразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеПересортицаТоваров(Ссылка, ДополнительныеСвойства, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВЛ.НоменклатураОприходование 	КАК Номенклатура,
		|	СерийныеНомера.СерийныйНомер	КАК СерийныйНомер
		|
		|ИЗ
		|	Документ.ПересортицаТоваров.СерийныеНомера КАК СерийныеНомера	
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ 
		|							НоменклатураОприходование,
		|							КлючСвязиСерийныхНомеров
		|						ИЗ
		|							Документ.ПересортицаТоваров.Товары
		|						ГДЕ
		|							Ссылка = &Ссылка) КАК ВЛ
		|ПО	
		|	СерийныеНомера.КлючСвязиСерийныхНомеров = ВЛ.КлючСвязиСерийныхНомеров 
		|
		|ГДЕ
		|	СерийныеНомера.Ссылка = &Ссылка
		|";	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПолучитьСерийныйНомер(Выборка.Номенклатура, Строка(Выборка.СерийныйНомер));
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.ПересортицаТоваров.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.ПересортицаТоваров.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	| 	ТаблицаТовары.Ссылка.Склад 					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.ПересортицаТоваров.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.ПересортицаТоваров.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|ГДЕ   
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.НоменклатураОприходование КАК Номенклатура,
	|	ТаблицаТовары.ХарактеристикаОприходование КАК Характеристика,
	|   СНН.Ссылка						   		КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерийныеНомераНоменклатуры КАК СНН
	|	ПО СНН.Код 	    = ТаблицаСН.СерийныйНомер.Код
	|	И  СНН.Владелец = ТаблицаТовары.НоменклатураОприходование	
	|
	|ГДЕ   
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Ответственный.ТекущееПодразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеПоступлениеТоваровУслуг(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			ВЫБОР
	|				КОГДА Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА Склад
	|				ИНАЧЕ Ссылка.Склад
	|			КОНЕЦ КАК Склад,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.ПоступлениеТоваровУслуг.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.ПоступлениеТоваровУслуг.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|ГДЕ
	|	НЕ ТабТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика, 
	|	ТабТовары.Склад, 
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ТОГДА ТаблицаТовары.Склад
	|		ИНАЧЕ ТаблицаТовары.Ссылка.Склад
	|	КОНЕЦ										КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|						Таблица.Склад,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.ПоступлениеТоваровУслуг.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика,
	|						Таблица.Склад
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|И	ТаблицаТовары.Склад			 = ЗапросКоличества.Склад
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|
	|ГДЕ 
	|	НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении  
	|И	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Подразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеВозвратТоваровОтКлиента(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			Ссылка.Склад КАК Склад,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.ВозвратТоваровОтКлиента.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.ВозвратТоваровОтКлиента.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|ГДЕ
	|	НЕ ТабТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	| 	ТаблицаТовары.Ссылка.Склад 					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.ВозвратТоваровОтКлиента.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|ГДЕ   
	|	НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|И	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Подразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеОприходованиеИзлишковТоваров(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.ОприходованиеИзлишковТоваров.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.ОприходованиеИзлишковТоваров.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	| 	ТаблицаТовары.Ссылка.Склад 					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.ОприходованиеИзлишковТоваров.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.ОприходованиеИзлишковТоваров.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|ГДЕ   
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Ответственный.ТекущееПодразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеПриходныйОрдерНаТовары(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			Ссылка.Статус КАК Статус,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.ПриходныйОрдерНаТовары.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.ПриходныйОрдерНаТовары.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|ГДЕ
	|	НЕ ТабТовары.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПриходныхОрдеров.КПоступлению)
	|                                  
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	| 	ТаблицаТовары.Ссылка.Склад 					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.ПриходныйОрдерНаТовары.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|ГДЕ   
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Распоряжение.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Ответственный.ТекущееПодразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеВводОстатков(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.ВводОстатков.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.ВводОстатков.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров									
	|                                  
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	| 	ТаблицаТовары.Ссылка.Склад 					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.ВводОстатков.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.ВводОстатков.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|ГДЕ   
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Ответственный.ТекущееПодразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеСборкаИзКомплектующих(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	ТабТовары.Номенклатура,	
	|   ТабТовары.Характеристика  
	|
	|Из (	ВЫБРАТЬ
	|			Номенклатура,
	|			Характеристика,
	|			Ссылка.Склад КАК Склад,
	|			КлючСвязиСерийныхНомеров,
	|			Количество
	|
	|		ИЗ
	|			Документ.СборкаТоваров.Товары
	|
	|       ГДЕ 
	|			Ссылка = &Ссылка
	|		И   Номенклатура.ИспользоватьСерийныеНомера
    |       И	Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|		) КАК ТабТовары 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер,
	|                       	КлючСвязиСерийныхНомеров	
	|
	|						ИЗ
	|							Документ.СборкаТоваров.СерийныеНомера 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ТабСерийныеНомера.КлючСвязиСерийныхНомеров = ТабТовары.КлючСвязиСерийныхНомеров										
	|
	|ГДЕ
	|	 НЕ ТабТовары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|ИЛИ НЕ ТабТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|
	|СГРУППИРОВАТЬ ПО 
	|	ТабТовары.Номенклатура, 
	|	ТабТовары.Характеристика,  
	|	ТабТовары.Количество, 
	|	ТабТовары.КлючСвязиСерийныхНомеров  
	|
	|ИМЕЮЩИЕ ТабТовары.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	//|	ТаблицаТовары.Количество                    КАК Количество,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.СборкаТоваров.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|   ТаблицаСН.КлючСвязиСерийныхНомеров  КАК КлючСвязи,
	|	ТаблицаСН.СерийныйНомер             КАК СерийныйНомер,
	|	ТаблицаСН.СерийныйНомерКомплекта    КАК Сборка,
	|	ТаблицаСН.СерийныйНомер.Владелец	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|
	|ИЗ
	|	Документ.СборкаТоваров.СерийныеНомера КАК ТаблицаСН
	|
	|ГДЕ
	|	ТаблицаСН.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераРасход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	ТаблицаСН.Сборка						КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|			ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура
	|			И  ТаблицаСН.КлючСвязи	   = ТаблицаТовары.КлючСвязи 	
	|
	|
	|ГДЕ 
	|НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке  
	|И	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.НомерСтроки              		КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	Таблица.Ссылка.Склад         			КАК Склад,
	|	Таблица.Ссылка.Номенклатура      		КАК Номенклатура,
	|	Таблица.Ссылка.Характеристика     		КАК Характеристика,
	|   Таблица.СерийныйНомер					КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	Таблица.Ссылка.КоличествоУпаковок		КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	Документ.СборкаТоваров.СерийныеНомераКомплектов КАК Таблица	
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|И	НЕ Таблица.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении  
	|И	Таблица.Ссылка.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Подразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции

Функция ИнициализироватьДанныеРазборкаНаКомплектующие(Ссылка, ДополнительныеСвойства, Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	//-1. Проверка количества серийных номеров
	|ВЫБРАТЬ
	|	Документ.Номенклатура,	
	|   Документ.Характеристика  
	|Из 
	|	Документ.СборкаТоваров КАК Документ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|							СерийныйНомер
	|						ИЗ
	|							Документ.СборкаТоваров.СерийныеНомераКомплектов 
	|						ГДЕ
	|							Ссылка = &Ссылка
	|					 ) 	КАК ТабСерийныеНомера
	|   ПО ИСТИНА										
	|
	|ГДЕ
	|	Ссылка = &Ссылка		
	|И  НЕ Документ.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|И	Документ.Номенклатура.ИспользоватьСерийныеНомера
    |
	|
	|СГРУППИРОВАТЬ ПО 
	|	Документ.Номенклатура, 
	|	Документ.Характеристика,  
	|	Документ.Количество 
	|
	|ИМЕЮЩИЕ Документ.Количество <> КОЛИЧЕСТВО(ТабСерийныеНомера.СерийныйНомер)
	|;
	//0. Временная таблица товаров и серийных номеров + контроль использования серийных номеров
	|ВЫБРАТЬ                                         
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка                        КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад					КАК Склад,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры 	КАК ТипНоменклатуры,
	|   ТаблицаТовары.КлючСвязиСерийныхНомеров     	КАК КлючСвязи,
	|	ЗапросКоличества.Количество					КАК Количество	
	|
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ
	|                    	Таблица.Номенклатура, 	
	|                       Таблица.Характеристика,
	|                       СУММА(Таблица.Количество) КАК Количество
	|                   ИЗ
	|                     	Документ.СборкаТоваров.Товары КАК Таблица
	|
	|					ГДЕ 
	|						Таблица.Ссылка = &Ссылка	
	|
	|                   СГРУППИРОВАТЬ ПО
	|                     	Таблица.Номенклатура,
	|                       Таблица.Характеристика
	|                     )	КАК ЗапросКоличества
	|ПО ТаблицаТовары.Номенклатура	 = ЗапросКоличества.Номенклатура
	|И  ТаблицаТовары.Характеристика = ЗапросКоличества.Характеристика
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
	//1. Временная таблица серийных номеров
	|ВЫБРАТЬ
	|	РгСН.СерийныеНомера КАК СерийныйНомер,
	|	РгСН.Номенклатура	КАК Номенклатура 
	|
	|ПОМЕСТИТЬ ВтТаблицаСН
	|ИЗ
	|	РегистрНакопления.СерийныеНомераНоменклатуры КАК РгСН
	|
	|ГДЕ
	|	РгСН.Сборка В (ВЫБРАТЬ СерийныйНомер ИЗ Документ.СборкаТоваров.СерийныеНомераКомплектов ГДЕ Ссылка = &Ссылка)							
	|;
	|////////////////////////////////////////////////////////////////////////////////////////////
    //2. ВтТаблицаСерийныеНомераПриход 
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              	КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	ТаблицаТовары.Склад         			КАК Склад,
	|	ТаблицаТовары.Номенклатура             	КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           	КАК Характеристика,
	|   ТаблицаСН.СерийныйНомер				   	КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	ТаблицаТовары.Количество			   	КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТаблицаСН КАК ТаблицаСН 
	|		ПО ТаблицаСН.Номенклатура  = ТаблицаТовары.Номенклатура 	
	|
	|
	|ГДЕ 
	|НЕ ТаблицаТовары.Склад.ИспользоватьОрдернуюСхемуПриПоступлении  
	|И	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Таблица.НомерСтроки              		КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	&Период                                	КАК Период,
	|
	|   &Организация                           	КАК Организация,
	|   &Подразделение                         	КАК Подразделение,
	|	Таблица.Ссылка.Склад         			КАК Склад,
	|	Таблица.Ссылка.Номенклатура      		КАК Номенклатура,
	|	Таблица.Ссылка.Характеристика     		КАК Характеристика,
	|   Таблица.СерийныйНомер					КАК СерийныеНомера,
	|   1									   	КАК Количество,
	|	Таблица.Ссылка.КоличествоУпаковок		КАК КоличествоВДокументе,
	|	NULL									КАК Сборка
	|
	|ИЗ
	|	Документ.СборкаТоваров.СерийныеНомераКомплектов КАК Таблица	
	|
	|ГДЕ
	|	Ссылка = &Ссылка
	|И	НЕ Таблица.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке  
	|И	Таблица.Ссылка.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	|
	|;";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Ссылка.Дата);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("Подразделение", Ссылка.Подразделение);
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатПакета[0].Пустой() Тогда
		СообщитьОбОшибкахПроведенияПоРегиструСерийныеНомераНоменклатуры(Ссылка.ПолучитьОбъект(), Отказ, РезультатПакета[0]);
	КонецЕсли;	
	
    Возврат РезультатПакета[РезультатПакета.ВГраница()].Выгрузить(); 
	
КонецФункции



// Сведения о внешней обработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	//Версия обработки
	Версия = "6.5.6";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "SerialLibrary");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "SerialLibrary [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "SerialLibrary [" + Версия + "]", "Форма", "ОткрытиеФормы", Ложь, "SerialNumberLibrary");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ПЕРЕОПРЕДЕЛЕНИЯ ОБРАБОТЧИКОВ

// Только для внутреннего использования
Процедура ПодменитьДействиеУправляемоеПриложение(ВнешнийОбъект, Форма, ИмяСобытияФормы = "", ПолноеИмяЭлементаФормы = "", НовоеДействие, ОбработкаИсключений = Ложь)

	Если ВнешнийОбъект = Неопределено Тогда
		git_ПереопределениеОбработчиковСервер.ПодменитьДействиеУправляемоеПриложение(Форма, ИмяСобытияФормы, ПолноеИмяЭлементаФормы, НовоеДействие, ОбработкаИсключений);
	Иначе
		ВнешнийОбъект.ПодменитьДействиеУправляемоеПриложение(Форма, ИмяСобытияФормы, ПолноеИмяЭлементаФормы, НовоеДействие, ОбработкаИсключений);
	КонецЕсли;
		
КонецПроцедуры

// Только для внутреннего использования
Процедура ПереместитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, ИмяЭлемента, ИмяРодителя, МестоРасположения)
	
	Если ВнешнийОбъект = Неопределено Тогда
		git_ПереопределениеОбработчиковСервер.ПереместитьЭлементВКоллекциюЭлементовФормы(Элементы, ИмяЭлемента, ИмяРодителя, МестоРасположения);
	Иначе
		ВнешнийОбъект.ПереместитьЭлементВКоллекциюЭлементовФормы(Элементы, ИмяЭлемента, ИмяРодителя, МестоРасположения);
	КонецЕсли;
	
КонецПроцедуры // ПереместитьЭлементВКоллекциюЭлементовФормы()

// Только для внутреннего использования
Процедура ПереместитьЭлементВКоллекциюЭлементовФормыБезПоиска(ВнешнийОбъект, Элементы, Элемент, Родитель, МестоРасположения = Неопределено)
	
	Если ВнешнийОбъект = Неопределено Тогда
		git_ПереопределениеОбработчиковСервер.ПереместитьЭлементВКоллекциюЭлементовФормыБезПоиска(Элементы, Элемент, Родитель, МестоРасположения);
	Иначе
		ВнешнийОбъект.ПереместитьЭлементВКоллекциюЭлементовФормыБезПоиска(Элементы, Элемент, Родитель, МестоРасположения);
	КонецЕсли;
	
КонецПроцедуры // ПереместитьЭлементВКоллекциюЭлементовФормыБезПоиска()



// Только для внутреннего использования
Функция ДобавитьЭлементВКоллекциюЭлементовФормы(ВнешнийОбъект, Элементы, Параметры, Родитель = Неопределено) Экспорт
	
	Если ВнешнийОбъект = Неопределено Тогда
		Возврат git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Родитель);
	Иначе
		Возврат ВнешнийОбъект.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, Параметры, Родитель);
	КонецЕсли;
	
КонецФункции // ДобавитьЭлементВКоллекциюЭлементовФормы()

// Только для внутреннего использования
Функция ДобавитьКомандуВКоллекциюКомандФормы(ВнешнийОбъект, Команды, Параметры) 
		
	Если ВнешнийОбъект = Неопределено Тогда
		Возврат git_ПереопределениеОбработчиковСервер.ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры);
	Иначе
		Возврат ВнешнийОбъект.ДобавитьКомандуВКоллекциюКомандФормы(Команды, Параметры);
	КонецЕсли;
		
КонецФункции // ДобавитьКомандуВКоллекциюКомандФормы()





