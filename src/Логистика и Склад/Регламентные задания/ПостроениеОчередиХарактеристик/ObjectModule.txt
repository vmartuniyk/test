// ИНФОРМАЦИЯ ОБ ОБРАБОТКЕ

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "1.0.001";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Регл. построение очереди характеристик [" + Версия + "]");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Регл. построение очереди характеристик [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Регл. построение очереди характеристик [" + Версия + "]", "ПОХ", "ОткрытиеФормы", Ложь, "ПОХ");
	ДобавитьКоманду(ТаблицаКоманд, "Регл. построение очереди характеристик [" + Версия + "]", "ПерейтиПоСсылкеНаСайте();", "ВызовСерверногоМетода");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(Индентификатор) Экспорт
	Выполнить(Индентификатор);	
КонецПроцедуры



Процедура ПерейтиПоСсылкеНаСайте() Экспорт
	
	ИмяВходящегоФайла = ПолучитьИмяВременногоФайла("txt");
	Попытка
		Соединение = Новый HTTPСоединение("www.ktc-ua.com");
		Соединение.Получить("exp", ИмяВходящегоФайла);
	Исключение
		ОповеститьОбОшибкеПоПочте("ВНИМАНИЕ! Невозможно перейти по ссылке http://www.ktc-ua.com/exp", ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура ОповеститьОбОшибкеПоПочте(Тема, Тело, ИмяВременногоФайла=Неопределено)
	
	СообщениеОбОшибке = "Настройки библиотеки внешних обработок не найдены!" + Символы.ПС + "Задать настройки можно по адресу: ""Нормативно справочная информация""->""Дополнительные обработки""->""Настройки внешних обработок""";
	
	ОбъектБиблиотека	= GetLibrary("Библиотека внешних обработок");
	ГлобальныеНастройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиОбработокМодификацииКонфигурации", , , "ДополнительныеНастройкиОбработокМодификацииКонфигурации");
	Если НЕ ТипЗнч(ГлобальныеНастройки) = Тип("Структура") Тогда
		ВызватьИсключение СообщениеОбОшибке;	
	КонецЕсли;
	ДанныеПочты = Неопределено;
	Если НЕ ГлобальныеНастройки.СтандартнаяУчетнаяЗаписьЭлектроннойПочты.Пустая() И НЕ ПустаяСтрока(ГлобальныеНастройки.АдресЭлектроннойПочты) Тогда 
		ДанныеПочты = Новый Структура("УчетнаяЗаписьЭлектроннойПочты, АдресЭлектроннойПочты",  ГлобальныеНастройки.СтандартнаяУчетнаяЗаписьЭлектроннойПочты, Новый Массив);
		ДанныеПочты.АдресЭлектроннойПочты.Добавить(Новый Структура("Адрес, Представление", ГлобальныеНастройки.АдресЭлектроннойПочты, "Отдел тех. поддержки"));
	КонецЕсли;
	Если ДанныеПочты = Неопределено Тогда
		ВызватьИсключение СообщениеОбОшибке;
		Возврат;
	КонецЕсли;
	Кому = Новый Массив;
	Кому.Добавить(Новый Структура("Адрес, Представление", "akomar@ktc.rovno.ua", "Комар Андрій"));
	Если ИмяВременногоФайла=Неопределено Тогда
		//ПараметрыПисьма = ОбъектБиблиотека.СформироватьПараметрыПисьма(Тема, Тело, ДанныеПочты.АдресЭлектроннойПочты);
		ПараметрыПисьма = ОбъектБиблиотека.СформироватьПараметрыПисьма(Тема, Тело, Кому);
	Иначе
		//ПараметрыПисьма = ОбъектБиблиотека.СформироватьПараметрыПисьма(Тема, Тело, ДанныеПочты.АдресЭлектроннойПочты,,,,Новый Структура("mapping", ИмяВременногоФайла));
		ПараметрыПисьма = ОбъектБиблиотека.СформироватьПараметрыПисьма(Тема, Тело, Кому,,,,Новый Структура("mapping", ИмяВременногоФайла));
	КонецЕсли;
	ОбъектБиблиотека.ОтправитьСообщениеПоSMTP(ГлобальныеНастройки.СтандартнаяУчетнаяЗаписьЭлектроннойПочты, ПараметрыПисьма);
	
КонецПроцедуры

Функция GetLibrary(LibraryName) Экспорт
	Ссылка 		    = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию(LibraryName);
	Если Ссылка = Неопределено Тогда
		ВызватьИсключение "Библиотека с именем не найдена: " + LibraryName;	
	КонецЕсли;
	ДвоичныеДанные  = Ссылка.ХранилищеОбработки.Получить();
	АдресХранилища  = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	ИмяВнОбработки  = ВнешниеОбработки.Подключить(АдресХранилища, , Ложь);
	ОбработкаОбъект = ВнешниеОбработки.Создать(ИмяВнОбработки);
	Возврат ОбработкаОбъект;	
КонецФункции