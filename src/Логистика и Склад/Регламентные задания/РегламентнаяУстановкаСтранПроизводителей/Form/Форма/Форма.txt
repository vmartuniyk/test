



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗагрузитьНастройкиРегламентногоЗадания();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Модифицированность Тогда
		Ответ = Вопрос(НСтр("ru='Настройки были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СохранитьНастройкиНаКлиенте();
		КонецЕсли;
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Модифицированность = Ложь;
		КонецЕсли;
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СвойствоПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ ТаблицаНастроек

&НаКлиенте
Процедура ТаблицаНастроекПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры






////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьНастройкиНаКлиенте();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	СохранитьНастройкиНаКлиенте();
КонецПроцедуры






////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


// Настройки

&НаСервере
Процедура ЗагрузитьНастройкиРегламентногоЗадания()

	Настройки = РеквизитФормыВЗначение("Объект").ЗагрузитьНастройкиРегламетногоЗадания();
	
	Если Не ТипЗнч(Настройки) = Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Настройки.Свойство("ДополнительныеСвойство") Тогда
		Свойство = Настройки.ДополнительныеСвойство;
	КонецЕсли;
	
	Если Настройки.Свойство("ТаблицаНастроек") Тогда
		Если ТипЗнч(Настройки.ТаблицаНастроек) = Тип("ХранилищеЗначения") Тогда
			ТаблицаНастроек.Загрузить(Настройки.ТаблицаНастроек.Получить());
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ЗагрузитьНастройкиНаСервере()
 
&НаСервере
Процедура СохранитьНастройкиРегламентногоЗадания()
	
	Настройки = Новый Структура;
	
	Настройки.Вставить("ДополнительныеСвойство", Свойство);
	Настройки.Вставить("ТаблицаНастроек", Новый ХранилищеЗначения(ТаблицаНастроек.Выгрузить(), Новый СжатиеДанных(9)));
	
	ХранилищеНастроекДанныхФорм.Сохранить("НастройкиРегламетноеЧтениеШтрихКодов", 
											, 
											Настройки, 
											"Настройки регламентного задания шрих-кодов", 
											"НастройкиРегламетноеЧтениеШтрихКодов");
	
КонецПроцедуры // СохранитьНастройкиНаСервере()
 
&НаКлиенте
Процедура СохранитьНастройкиНаКлиенте()
	Если Модифицированность Тогда
		СохранитьНастройкиРегламентногоЗадания();
		Модифицированность = Ложь;
	КонецЕсли;
КонецПроцедуры // СохранитьНастройкиНаКлиенте()





&НаКлиенте
Процедура Тест(Команда)
	ТестНаСервере();
КонецПроцедуры


&НаСервере
Процедура ТестНаСервере()
	РеквизитФормыВЗначение("Объект").ВыполнитьУстановкуСтранПроизводителей()
КонецПроцедуры // ТестНаСервере()
 



 