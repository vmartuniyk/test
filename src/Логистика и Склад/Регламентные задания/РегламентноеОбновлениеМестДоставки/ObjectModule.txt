
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ВыполнитьОбновление() Экспорт
	
	ТДата = ТекущаяДата();
	
	ИмяСобытияЖурналаРегистрации = НСтр("ru = 'Автоматическое обновление мест в поездках'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
			УровеньЖурналаРегистрации.Информация, 
			,
			,
			НСтр("ru = 'Начало автоматического обновления мест в поездках'"));

	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаНовыеДокументы();
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТДата));
	РезультатПакета = Запрос.ВыполнитьПакет();
	Выборка = РезультатПакета[13].Выбрать(); 
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Документы.ПоездкаЗаМаршрутом.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Выборка);
		ДокументОбъект.Дата = ТДата;
		ДокументОбъект.УстановитьНовыйНомер();
		ДокументОбъект.Склады.Загрузить(ЗаполнитьСкладыЗагрузки(ДокументОбъект));
        Если ВодительУжеВПоездке(ДокументОбъект) Тогда
			ДокументОбъект.Водитель = Неопределено;	
		КонецЕсли;
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Автоматическое формирование документов Поездка'"),
				УровеньЖурналаРегистрации.Ошибка, 
				,
				,
				ОписаниеОшибки()); 	
		КонецПопытки;
		
	КонецЦикла; 
			
			
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДокументов();
	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		Документы.ПоездкаЗаМаршрутом.ИнициализироватьДанныеДокумента(Выборка.Ссылка);		
	КонецЦикла; 
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
			УровеньЖурналаРегистрации.Информация, 
			,
			,
			НСтр("ru = 'Завершено автоматическое обновление мест в поездках'"));
	
КонецПроцедуры



Процедура ВыполнитьОбновлениеОплатПартнеров() Экспорт
		
	ИмяСобытияЖурналаРегистрации = НСтр("ru = 'Автоматическое обновление оплат партнеров в поездках'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
			УровеньЖурналаРегистрации.Информация, 
			,
			,
			НСтр("ru = 'Начало автоматического обновления оплат партнеров в поездках'"));			
			
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДокументов();
	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		Документы.ПоездкаЗаМаршрутом.ИнициализироватьОплатыДокумента(Выборка.Ссылка);		
	КонецЦикла; 
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
			УровеньЖурналаРегистрации.Информация, 
			,
			,
			НСтр("ru = 'Завершено автоматическое обновление оплат партнеров в поездках'"));
	
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ЗаполнитьСкладыЗагрузки(Объект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаСкладыЗагрузки();
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ВидПоездки", Объект.ВидПоездки);
	Запрос.УстановитьПараметр("ВариантМаршрута", Объект.ВариантМаршрута);	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	ТаблицаДанных.Сортировать("ВремяКОтгрузке Возр");
    Возврат ТаблицаДанных;
	
КонецФункции

Функция ВодительУжеВПоездке(Объект)

	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаВодительУжеВПоездке();
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Водитель", Объект.Водитель);
	РезультатЗапроса = Запрос.Выполнить();
	РезультатПроверки = НЕ РезультатЗапроса.Пустой();
	Возврат РезультатПроверки;

КонецФункции // ВодительУжеВПоездке()



Функция ПолучитьТекстЗапросаВодительУжеВПоездке()

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Ссылка
		|ИЗ
		|	Документ.ПоездкаЗаМаршрутом
		|ГДЕ
		|	Проведен
		|И	Ссылка <> &Ссылка
		|И	Водитель = &Водитель
		|И	СтатусПоездки = Значение(Перечисление.КТС_СтатусыПоездки.ВПроцессе)
		|";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаВодительУжеВПоездке()
 
Функция ПолучитьТекстЗапросаНовыеДокументы()
	
	ТекстЗапроса = "
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//1.
		|ВЫБРАТЬ
		|	ВариантМаршрута
		|ПОМЕСТИТЬ ПоездкаВПроцессе
		|ИЗ
		|	Документ.ПоездкаЗаМаршрутом
		|ГДЕ
		|	Проведен   	  = Истина
		|И	ВидПоездки 	  = ЗНАЧЕНИЕ(Перечисление.КТС_ВидыПоездки.ОсновнаяПоездка)
		|И	СтатусПоездки = ЗНАЧЕНИЕ(Перечисление.КТС_СтатусыПоездки.ВПроцессе)
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//2
		|ВЫБРАТЬ 
		|	ВариантМаршрута	КАК ВариантМаршрута,
		|	МАКСИМУМ(Дата) 	КАК ДатаПоследнейПоездки
		|ПОМЕСТИТЬ ДанныеПоПоездкам
		|ИЗ
		|	Документ.ПоездкаЗаМаршрутом
		|ГДЕ
		|	Проведен   	  = Истина
		|И	ВидПоездки 	  = ЗНАЧЕНИЕ(Перечисление.КТС_ВидыПоездки.ОсновнаяПоездка)
        |
		|СГРУППИРОВАТЬ ПО
		|	ВариантМаршрута	
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//3.
		|ВЫБРАТЬ 
		|	ДанныеПоПоездкам.ВариантМаршрута,
		|	ПоездкаЗаМаршрутом.Водитель,
		|	ДанныеПоПоездкам.ДатаПоследнейПоездки
		|ПОМЕСТИТЬ ЕстьДанныеПоПоездкам
		|ИЗ
		|	ДанныеПоПоездкам КАК ДанныеПоПоездкам
        |
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом	
		|ПО	ПоездкаЗаМаршрутом.Дата = ДанныеПоПоездкам.ДатаПоследнейПоездки
		|И	ПоездкаЗаМаршрутом.ВариантМаршрута = ДанныеПоПоездкам.ВариантМаршрута		
		|И	Проведен   	  = Истина
		|И	ВидПоездки 	  = ЗНАЧЕНИЕ(Перечисление.КТС_ВидыПоездки.ОсновнаяПоездка)	
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//4.
		|ВЫБРАТЬ
		|	ДоступныеМаршруты.Ссылка 								КАК ВариантМаршрута,
		|	ЗНАЧЕНИЕ(Перечисление.КТС_ВидыПоездки.ОсновнаяПоездка) 	КАК ВидПоездки,
		|	ЕстьДанныеПоПоездкам.Водитель							КАК Водитель,	
		|	МИНИМУМ(КалендарныеГрафики.ДатаГрафика) 				КАК ДатаВыезда
		|ПОМЕСТИТЬ КешВариантыМаршрутов
		|ИЗ
		|	Справочник.ВариантыМаршрутов КАК ДоступныеМаршруты
		|	
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
		|ПО	КалендарныеГрафики.Календарь = ДоступныеМаршруты.КалендарьМаршрута	
		|И	КалендарныеГрафики.ДеньВключенВГрафик
		|И	КалендарныеГрафики.ДатаГрафика = &НачалоДня
        |
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЕстьДанныеПоПоездкам КАК ЕстьДанныеПоПоездкам
		|ПО 	ЕстьДанныеПоПоездкам.ВариантМаршрута = ДоступныеМаршруты.Ссылка
        |
		|ГДЕ
		|	НеАктивен 		= ЛОЖЬ
		|И	ПометкаУдаления = ЛОЖЬ
		|И	Ссылка НЕ В (ВЫБРАТЬ ВариантМаршрута ИЗ ПоездкаВПроцессе)
        |
		|СГРУППИРОВАТЬ ПО
		|	ДоступныеМаршруты.Ссылка,
		|	ЕстьДанныеПоПоездкам.Водитель		
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПоездкаВПроцессе;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДанныеПоПоездкам;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЕстьДанныеПоПоездкам;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//8.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВариантыМаршрутовСкладыОтгрузки.Ссылка КАК ВариантМаршрута,
		|	Склад								   КАК Склад
		|ПОМЕСТИТЬ КешСклады
		|ИЗ
		|	Справочник.ВариантыМаршрутов.СкладыОтгрузки КАК ВариантыМаршрутовСкладыОтгрузки
        |
		|ГДЕ
		|	ВЫБОР ДЕНЬНЕДЕЛИ(&НачалоДня)
		|		КОГДА 1
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.ПН
		|		КОГДА 2
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.ВТ
		|		КОГДА 3
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.СР
		|		КОГДА 4
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.ЧТ
		|		КОГДА 5
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.ПТ
		|		КОГДА 6
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.СБ
		|		КОГДА 7
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.ВС
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//9.
		|ВЫБРАТЬ
		|	ВариантыМаршрутовСкладыОтгрузки.Ссылка КАК ВариантМаршрута,
		|	КОЛИЧЕСТВО(
		|		ВЫБОР ДЕНЬНЕДЕЛИ(&НачалоДня)
		|			КОГДА 1
		|				ТОГДА ВариантыМаршрутовСкладыОтгрузки.ПН
		|			КОГДА 2
		|				ТОГДА ВариантыМаршрутовСкладыОтгрузки.ВТ
		|			КОГДА 3
		|				ТОГДА ВариантыМаршрутовСкладыОтгрузки.СР
		|			КОГДА 4
		|				ТОГДА ВариантыМаршрутовСкладыОтгрузки.ЧТ
		|			КОГДА 5
		|				ТОГДА ВариантыМаршрутовСкладыОтгрузки.ПТ
		|			КОГДА 6
		|				ТОГДА ВариантыМаршрутовСкладыОтгрузки.СБ
		|			КОГДА 7
		|				ТОГДА ВариантыМаршрутовСкладыОтгрузки.ВС
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК КолТочек
		|ПОМЕСТИТЬ КешТочки
		|ИЗ
		|	Справочник.ВариантыМаршрутов.СкладыОтгрузки КАК ВариантыМаршрутовСкладыОтгрузки
        |
		|ГДЕ
		|	ВЫБОР ДЕНЬНЕДЕЛИ(&НачалоДня)
		|		КОГДА 1
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.ПН
		|		КОГДА 2
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.ВТ
		|		КОГДА 3
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.СР
		|		КОГДА 4
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.ЧТ
		|		КОГДА 5
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.ПТ
		|		КОГДА 6
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.СБ
		|		КОГДА 7
		|			ТОГДА ВариантыМаршрутовСкладыОтгрузки.ВС
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВариантыМаршрутовСкладыОтгрузки.Ссылка
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//10.
		|ВЫБРАТЬ
		| 	КешТочки.ВариантМаршрута,
		| 	ВЫРАЗИТЬ(КешТочки.КолТочек / КОЛИЧЕСТВО(КешСклады.Склад) + 0.499999 КАК ЧИСЛО(3,0)) КАК Выезды
		|ПОМЕСТИТЬ КоличествоВыездов
		|ИЗ
		|	КешТочки КАК КешТочки
        |
		|ЛЕВОЕ СОЕДИНЕНИЕ КешСклады КАК КешСклады
		|ПО	КешСклады.ВариантМаршрута = КешТочки.ВариантМаршрута
        |
		|СГРУППИРОВАТЬ ПО
		|	КешТочки.ВариантМаршрута,
		|	КешТочки.КолТочек	  
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешТочки;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешСклады;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//13. 
		|ВЫБРАТЬ
		|	ПоездкаЗаМаршрутом.ВариантМаршрута		КАК	ВариантМаршрута,
		|	КОЛИЧЕСТВО(ПоездкаЗаМаршрутом.Ссылка) 	КАК КоличествоЗавершенных
		|ПОМЕСТИТЬ ЗавершенныеПоездки		
		|ИЗ
		|	Документ.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом
		|ГДЕ
		|	Проведен = ИСТИНА
		|И	НАЧАЛОПЕРИОДА(Дата, ДЕНЬ) = &НачалоДня
		|И   ВидПоездки = ЗНАЧЕНИЕ(Перечисление.КТС_ВидыПоездки.ОсновнаяПоездка)
		|И	СтатусПоездки = ЗНАЧЕНИЕ(Перечисление.КТС_СтатусыПоездки.Завершена)
        |
		|СГРУППИРОВАТЬ ПО
		|	ПоездкаЗаМаршрутом.ВариантМаршрута	
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//14. 
		|ВЫБРАТЬ
		|	ВариантыМаршрутов.ВариантМаршрута,
		|	ВариантыМаршрутов.ВидПоездки,
		|	ВариантыМаршрутов.Водитель,
		|	ЗНАЧЕНИЕ(Перечисление.КТС_СтатусыПоездки.ВПроцессе) КАК СтатусПоездки
		|ИЗ
		|	КешВариантыМаршрутов КАК ВариантыМаршрутов
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ КоличествоВыездов КАК КоличествоВыездов
		|ПО	КоличествоВыездов.ВариантМаршрута = ВариантыМаршрутов.ВариантМаршрута
        |
		|ЛЕВОЕ СОЕДИНЕНИЕ ЗавершенныеПоездки КАК ЗавершенныеПоездки
		|ПО	ЗавершенныеПоездки.ВариантМаршрута = ВариантыМаршрутов.ВариантМаршрута	
        |
		|ГДЕ
		|	IsNull(ЗавершенныеПоездки.КоличествоЗавершенных, 0) < IsNull(КоличествоВыездов.Выезды, 1) 	
		|;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешВариантыМаршрутов;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЗавершенныеПоездки;
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КоличествоВыездов;
		|";
   Возврат ТекстЗапроса;
   
КонецФункции

Функция ПолучитьТекстЗапросаДокументов()
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
       	|	Ссылка
       	|ИЗ
       	|	Документ.ПоездкаЗаМаршрутом 
	   	|ГДЕ
       	|	Проведен
       	|И 	СтатусПоездки = ЗНАЧЕНИЕ(Перечисление.КТС_СтатусыПоездки.ВПроцессе)";
   Возврат ТекстЗапроса;
   
КонецФункции

Функция ПолучитьТекстЗапросаСкладыЗагрузки()

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Склад КАК Склад,
		|	Минимум(ВЫБОР ДЕНЬНЕДЕЛИ(&Дата)
		|		КОГДА 1
		|			ТОГДА ВремяКОтгрузкеПН
		|		КОГДА 2
		|			ТОГДА ВремяКОтгрузкеВТ
		|		КОГДА 3
		|			ТОГДА ВремяКОтгрузкеСР
		|		КОГДА 4
		|			ТОГДА ВремяКОтгрузкеЧТ
		|		КОГДА 5
		|			ТОГДА ВремяКОтгрузкеПТ
		|		КОГДА 6
		|			ТОГДА ВремяКОтгрузкеСБ
		|		КОГДА 7
		|			ТОГДА ВремяКОтгрузкеВС
		|	КОНЕЦ) КАК ВремяКОтгрузке
		|ИЗ
		|	Справочник.ВариантыМаршрутов.СкладыОтгрузки
		|ГДЕ
		|	НЕ Ссылка.НеАктивен
		|И	НЕ Ссылка.ПометкаУдаления
		|И	Ссылка = &ВариантМаршрута
		|И	ВЫБОР ДЕНЬНЕДЕЛИ(&Дата)
		|		КОГДА 1
		|			ТОГДА ПН
		|		КОГДА 2
		|			ТОГДА ВТ
		|		КОГДА 3
		|			ТОГДА СР
		|		КОГДА 4
		|			ТОГДА ЧТ
		|		КОГДА 5
		|			ТОГДА ПТ
		|		КОГДА 6
		|			ТОГДА СБ
		|		КОГДА 7
		|			ТОГДА ВС
		|		ИНАЧЕ Ложь
		|	КОНЕЦ
		|И 	(Склад, Ссылка, ВЫБОР ДЕНЬНЕДЕЛИ(&Дата)
		|						КОГДА 1
		|							ТОГДА ВремяКОтгрузкеПН
		|						КОГДА 2
		|							ТОГДА ВремяКОтгрузкеВТ
		|						КОГДА 3
		|							ТОГДА ВремяКОтгрузкеСР
		|						КОГДА 4
		|							ТОГДА ВремяКОтгрузкеЧТ
		|						КОГДА 5
		|							ТОГДА ВремяКОтгрузкеПТ
		|						КОГДА 6
		|							ТОГДА ВремяКОтгрузкеСБ
		|						КОГДА 7
		|							ТОГДА ВремяКОтгрузкеВС
		|					КОНЕЦ) НЕ В (ВЫБРАТЬ 
		|									Склад, 
		|									Ссылка.ВариантМаршрута, 
		|									ВремяКОтгрузке
		|								ИЗ
		|									Документ.ПоездкаЗаМаршрутом.Склады
		|								ГДЕ
		|									Ссылка 							<> &Ссылка
		|								И	Ссылка.Проведен                  = Истина
		|								И	Ссылка.ВидПоездки				 = &ВидПоездки
		|								И	Ссылка.ВариантМаршрута 			 = &ВариантМаршрута
		|								И	НачалоПериода(Ссылка.Дата, День) = НачалоПериода(&Дата, День))
		|
		|СГРУППИРОВАТЬ ПО
		|	Склад
		|";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаСкладыЗагрузки()
 






////////////////////////////////////////////////////////////////////////////////
// Информация о внешней обработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "1.1.7";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Регл. обн. мест доставки [" + Версия + "]");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Регл. обн. мест доставки [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "Регл. обн. мест доставки [" + Версия + "]", "ВыполнитьОбновление();", "ВызовСерверногоМетода");
	ДобавитьКоманду(ТаблицаКоманд, "Регл. обн. оплат партнеров в доставке [" + Версия + "]", "ВыполнитьОбновлениеОплатПартнеров();", "ВызовСерверногоМетода");
                                                                
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(Индентификатор) Экспорт
	Выполнить(Индентификатор);	
КонецПроцедуры