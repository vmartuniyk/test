
////////////////////////////////////////////////////////////////////////////////
// Обратный импорт характеристик: реализация обратного иморта характеристик из
// сайта http://www.ktc-ua.com
//  
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура выполняет обратный импорт характеристик
// с помощью регламентного задания
//
Процедура ВыполнитьИмпортХарактеристик() Экспорт
	
	Перем ПутьКФайлуНаСервере;
	Перем ТаблицыСвойствИРеквизитов;
	
	Отказ=Ложь;
	
	ОповеститьОбОшибкеПоПочте("Начало загрузки характеристик.", "Начало: " + Строка(ТекущаяДата()));
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	СсылкаГруппаХарактеристики = СоздатьГруппуВДополнительныхСведениях();
	Если СсылкаГруппаХарактеристики = Неопределено Тогда
		ОповеститьОбОшибкеПоПочте("ВНИМАНИЕ! Ошибка при получении группы характеристик.", "Попытка получить или создать группу характеристик завершилась неудачно.");
		ВызватьИсключение "Ошибка при получении группы характеристик.";
		МенеджерВТ.Закрыть();
		Возврат;
	КонецЕсли;
	
	MyFTPConnection = FTP_Подключиться();
	Если MyFTPConnection = Неопределено Тогда Возврат; КонецЕсли;
		
	Если НЕ FTP_КопироватьФайлНаСервер(MyFTPConnection, ПутьКФайлуНаСервере) Тогда Возврат; КонецЕсли;
	
	zipФайл = Новый Файл(ПутьКФайлуНаСервере);
	Если НЕ zipФайл.Существует() Тогда
		ОповеститьОбОшибкеПоПочте("ВНИМАНИЕ! Ошибка при получении файла импорта.", "Путь к файлу: " + ПутьКФайлуНаСервере);
		ВызватьИсключение "Ошибка при получении файла импорта по адресу " + ПутьКФайлуНаСервере;	
		МенеджерВТ.Закрыть();
		Возврат;
	КонецЕсли;
	
	zipReader = Новый ЧтениеZipФайла(ПутьКФайлуНаСервере);
	zipReader.ИзвлечьВсе(zipФайл.Путь, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
	МассивФайлов = НайтиФайлы(zipФайл.Путь, "*.csv");
	
	mapping  = Новый Файл(zipФайл.Путь + "mapping.csv");
	Если mapping.Существует() И mapping.ЭтоФайл() Тогда	
		СоздатьИЗаполнитьДополнительныеСведения(mapping, МенеджерВТ, СсылкаГруппаХарактеристики, Отказ);
	Иначе
		ОповеститьОбОшибкеПоПочте("ВНИМАНИЕ! Не удалось получить файл mapping.csv.", "");
		ВызватьИсключение "Не удалось получить файл mapping.csv.";
		МенеджерВТ.Закрыть();
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		ОповеститьОбОшибкеПоПочте("ВНИМАНИЕ! Ошибки при получении таблицы свойств и реквизитов.", "");
		ВызватьИсключение "Ошибки при получении соответствия свойств и реквизитов.";
		МенеджерВТ.Закрыть();
		Возврат;
	КонецЕсли;
	
	CommonLibrary 			= GetLibrary("Библиотека внешних обработок");
	ДлинаКодаСправочника 	= Справочники.Номенклатура.ПустаяСсылка().Метаданные().ДлинаКода;
	
	Для Каждого Файл Из МассивФайлов Цикл
		Если НЕ ПроверитьФайлВыгрузки(Файл) Тогда Продолжить; КонецЕсли;
		ИмяФайла = Файл.ИмяБезРасширения;
		Если ИмяФайла = "title" Тогда
			CSV_2_ТЗ(Файл.Путь, Файл.Имя, Истина, ДлинаКодаСправочника, МенеджерВТ);
			Заполнитьtitle(МенеджерВТ, СсылкаГруппаХарактеристики);
		Иначе	
			CSV_2_ТЗ(Файл.Путь, Файл.Имя, Истина, ДлинаКодаСправочника, МенеджерВТ);
			ЗаполнитьСправочникПроизводители(ИмяФайла, МенеджерВТ);
			ЗаполнитьДополнительныеСведения(МенеджерВТ, СсылкаГруппаХарактеристики);
		КонецЕсли;
		УдалитьФайлы(Файл.ПолноеИмя);
	КонецЦикла;
	
	FTP_УдалитьФайл(MyFTPConnection);
	
	ОповеститьОбОшибкеПоПочте("Импорт характеристик прошел успешно.", "Дата окончания: " + Строка(ТекущаяДата()), mapping.ПолноеИмя);
	
	МенеджерВТ.Закрыть();
	
КонецПроцедуры


// ЗАГРУЗКА ХАРАКТЕРИСТИК XML

Функция ВыполнитьИмпортПоПозиции(НоменклатураСсылка) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВТ		  = Новый МенеджерВременныхТаблиц;
	КодБезНулей 	  = Формат(Число(НоменклатураСсылка.Код), "ЧГ=");
	ИмяВходящегоФайла = ПолучитьИмяВременногоФайла("xml");
	Отказ 			  = Ложь;
	
	СсылкаГруппаХарактеристики = СоздатьГруппуВДополнительныхСведениях();
	Если СсылкаГруппаХарактеристики = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поизошла ошибка. Сообщите 777.";
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		Соединение = Новый HTTPСоединение("www.ktc-ua.com");
		Соединение.Получить("single-export/"+КодБезНулей, ИмяВходящегоФайла);
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неудалось получить характеристики для номенлатуры "+НоменклатураСсылка.Наименование + ". Сообщите 777.";
		Сообщение.Сообщить();
		МенеджерВТ.Закрыть();
		Возврат Ложь;
	КонецПопытки;

	mapping  = Новый Файл("F:\1C_LOGS\import(ktc-ua.com)\mapping.csv");
	//mapping  = Новый Файл("C:\Users\akomar\Desktop\export\mapping.csv");
	Если mapping.Существует() И mapping.ЭтоФайл() Тогда
		СоздатьИЗаполнитьДополнительныеСведения(mapping, МенеджерВТ, СсылкаГруппаХарактеристики, Отказ);
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неудалось получить карту видов номенклатуры "+НоменклатураСсылка.Наименование + ". Сообщите 777.";
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецЕсли;
	
	Если Отказ Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неудалось получить карту видов номенклатуры "+НоменклатураСсылка.Наименование + ". Сообщите 777.";
		Сообщение.Сообщить();
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
						|	ВидНоменклатуры КАК ВидНоменклатуры,
						|	InetСвойство 	КАК InetСвойство,
						|	Наименование 	КАК Наименование
						|ИЗ
						|	ТаблицаРеквизитов
						|;
						|
						|ВЫБРАТЬ
						|	ВидНоменклатуры 	 КАК ВидНоменклатуры,
						|	InetСвойство 		 КАК InetСвойство,
						|	НаименованиеСвойства КАК НаименованиеСвойства
						|ИЗ
						|	ТаблицаСвойств
						|;");
						
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитов 	= РезультатЗапроса[РезультатЗапроса.ВГраница()-1].Выгрузить();
	ТаблицаСвойств 		= РезультатЗапроса[РезультатЗапроса.ВГраница()].Выгрузить();
	
	ДокументXML = Новый ЧтениеXML;
	ДокументXML.ОткрытьФайл(ИмяВходящегоФайла);
	
	Пока ДокументXML.Прочитать() Цикл
		Если ДокументXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			СтруктураПоиска 	= Новый Структура("InetСвойство, ВидНоменклатуры", ДокументXML.Имя, НоменклатураСсылка.ВидНоменклатуры);
			МассивРеквизитов 	= ТаблицаРеквизитов.НайтиСтроки(СтруктураПоиска);
			МассивСвойств 		= ТаблицаСвойств.НайтиСтроки(СтруктураПоиска);
			Если ДокументXML.Прочитать() Тогда
				Если МассивРеквизитов.Количество() > 0 Тогда
					Производитель 		= ВРег(СокрЛП(ДокументXML.Значение));
					ПроизводительСсылка = ПолучитьПроизводителя(Производитель);
					НоменклатураОбъект 							= НоменклатураСсылка.ПолучитьОбъект();
					НоменклатураОбъект.ОбменДанными.Загрузка  	= Истина;
					НоменклатураОбъект.Производитель 			= ПроизводительСсылка;
					НоменклатураОбъект.Записать();
				КонецЕсли;
				Если МассивСвойств.Количество() > 0 Тогда
					Свойство = ПолучитьСвойство(МассивСвойств[0].НаименованиеСвойства, СсылкаГруппаХарактеристики);
					
					НаборЗаписей = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Объект.Установить(НоменклатураСсылка);
					НаборЗаписей.Отбор.Свойство.Установить(Свойство);
					
					Запись 			= НаборЗаписей.Добавить();
					Запись.Объект 	= НоменклатураСсылка;
					Запись.Свойство = Свойство;
					Запись.Значение = ДокументXML.Значение;
					НаборЗаписей.Записать();
				КонецЕсли;
				Если СтруктураПоиска.InetСвойство = "title" Тогда
					Свойство = ПолучитьСвойство(СтруктураПоиска.InetСвойство, СсылкаГруппаХарактеристики);
					
					НаборЗаписей = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Объект.Установить(НоменклатураСсылка);
					НаборЗаписей.Отбор.Свойство.Установить(Свойство);
					
					Запись 			= НаборЗаписей.Добавить();
					Запись.Объект 	= НоменклатураСсылка;
					Запись.Свойство = Свойство;
					Запись.Значение = ДокументXML.Значение;
					НаборЗаписей.Записать();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	МенеджерВТ.Закрыть();
	
	Возврат Истина;
	
КонецФункции
 



////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


// ИНФОРМАЦИЯ ОБ ОБРАБОТКЕ

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "2.2.005";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Регл. обратный импорт характеристик");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Регл. обратный импорт характеристик [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Регл. обратный импорт характеристик [" + Версия + "]", "ОПХ", "ОткрытиеФормы", Ложь, "ОПХ");
	ДобавитьКоманду(ТаблицаКоманд, "Регл. обратный импорт характеристик [" + Версия + "]", "ВыполнитьИмпортХарактеристик();", "ВызовСерверногоМетода");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(Индентификатор) Экспорт
	Выполнить(Индентификатор);	
КонецПроцедуры





Функция ПолучитьПроизводителя(ИмяПроизводителя)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                     |	Ссылка
	                     |ИЗ
	                     |	Справочник.Производители  
	                     |ГДЕ
	                     |	Наименование = &Наименование");
	Запрос.УстановитьПараметр("Наименование", ИмяПроизводителя);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	НовыйЭлемент = Справочники.Производители.СоздатьЭлемент();
	НовыйЭлемент.Наименование = ВРег(ИмяПроизводителя);
		
	НовыйЭлемент.Записать();
	
	Возврат НовыйЭлемент.Ссылка;

КонецФункции // ПолучитьПроизводителя()

Функция ПолучитьСвойство(ИмяСвойства, Родитель)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДополнительныеРеквизитыИСведения.Ссылка
	                      |ИЗ
	                      |	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	                      |ГДЕ
	                      |	ДополнительныеРеквизитыИСведения.Наименование = &Наименование
	                      |	И ДополнительныеРеквизитыИСведения.Родитель = &Родитель");
						  
	Запрос.УстановитьПараметр("Наименование", ИмяСвойства);
	Запрос.УстановитьПараметр("Родитель", Родитель);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Неопределено);

КонецФункции // ПолучитьСвойство(ИмяСвойства)()
 
 





/////////////////////////////////////////////////////////////////////////////////
// 									ОБРАБОТКА ФАЙЛОВ 
/////////////////////////////////////////////////////////////////////////////////

// ФТП
Функция FTP_Подключиться()
	
	Перем Server;
	Перем StructConnection;
	Перем FTP_Profiles;
	Перем HTTP_Profiles;

	ЗапросFTP 		= Новый Запрос("ВЫБРАТЬ * ИЗ РегистрСведений.Регламент_FTP_Профили");
	FTP_Profiles 	= ЗапросFTP.Выполнить().Выгрузить();
	
	РезультатПоискаFTP = FTP_Profiles.Найти("www.ktc-ua.com", "Наименование");
	
	Если  РезультатПоискаFTP = Неопределено Тогда
		ОповеститьОбОшибкеПоПочте("ВНИМАНИЕ!!! Необходимо задать параметры FTP профиля для www.ktc-ua.com", "Задать профиль можно так: Все функции -> Регистры сведений -> FTP профили.");
		Возврат Неопределено;
	Иначе									
		Попытка											
			MyFTPConnection = Новый FTPСоединение(РезультатПоискаFTP.Server, 
													РезультатПоискаFTP.Port,
													РезультатПоискаFTP.User,
													РезультатПоискаFTP.Password,
													РезультатПоискаFTP.Proxy,
													РезультатПоискаFTP.PassiveConnection,
													РезультатПоискаFTP.Timeout);
		Исключение
			Тема = 	"Подключится к FTP серверу " + РезультатПоискаFTP.Server + " не удалось";
			Тело = 	"Технические данные подключения : " 							+ Символы.ПС +
					"Server: " + РезультатПоискаFTP.Server							+ Символы.ПС +
					"Port: " + РезультатПоискаFTP.Port								+ Символы.ПС +
					"User: " + РезультатПоискаFTP.User								+ Символы.ПС +
					"Password: ************" 										+ Символы.ПС +
					"Proxy: " + Строка(РезультатПоискаFTP.Proxy)					+ Символы.ПС +
					"PassiveMode: " + Строка(РезультатПоискаFTP.PassiveConnection)	+ Символы.ПС +
					"Timeout: "		+ Строка(РезультатПоискаFTP.Timeout)			+ Символы.ПС + 
					" "																+ Символы.ПС +
					"ОписаниеОшибки: " + ОписаниеОшибки();
					
			ОповеститьОбОшибкеПоПочте(Тема, Тело);
			Возврат Неопределено;
		КонецПопытки;																		
	КонецЕсли;
	
	Возврат MyFTPConnection;
	
КонецФункции

Функция FTP_КопироватьФайлНаСервер(MyFTPConnection, ПутьКФайлуНаСервере)
		
	ПутьКФайлуНаСервере = "F:\1C_LOGS\import(ktc-ua.com)\export"+Формат(ТекущаяДата(), "ДФ='гггг_ММ_дд_чч_мм_сс'")+".zip";
	//ПутьКФайлуНаСервере = "C:\Users\akomar\Desktop\export\export"+Формат(ТекущаяДата(), "ДФ='гггг_ММ_дд_чч_мм_сс'")+".zip";
	
	Попытка
		MyFTPConnection.Получить("/static/custom/ktc_pro/sites/www.ktc-ua.com/files/export/zip/export.zip", ПутьКФайлуНаСервере);
	Исключение
		ОповеститьОбОшибкеПоПочте("ВНИМАНИЕ!!! Ошибка получения данных с www.ktc-ua.com", ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

Процедура FTP_УдалитьФайл(MyFTPConnection)
	
	Попытка
		MyFTPConnection.Удалить("/static/custom/ktc_pro/sites/www.ktc-ua.com/files/export/zip/export.zip");
	Исключение
		ОповеститьОбОшибкеПоПочте("ВНИМАНИЕ!!! Произошел збой при удалении /static/custom/ktc_pro/sites/www.ktc-ua.com/files/export/zip/export.zip", Строка(ТекущаяДата()));
	КонецПопытки;
	
КонецПроцедуры

Процедура ПерейтиПоСсылкеНаСайте()
	
	ИмяВходящегоФайла = ПолучитьИмяВременногоФайла("txt");
	Попытка
		Соединение = Новый HTTPСоединение("www.ktc-ua.com");
		Соединение.Получить("exp", ИмяВходящегоФайла);
	Исключение
		ОповеститьОбОшибкеПоПочте("ВНИМАНИЕ! Невозможно перейти по ссылке http://www.ktc-ua.com/exp", ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры


// ТЕСТ БЕЗ ФТП
Процедура КопироватьФайлНаСервер(Знач ИмяФайлаИсточника, ИмяФайлаПриемника)
	
	ИмяФайлаПриемника = ПолучитьИмяВременногоФайла("zip");

	КопироватьФайл(ИмяФайлаИсточника, ИмяФайлаПриемника);
	
КонецПроцедуры




// CSV ФАЙЛ
Процедура CSV_2_ТЗ_mapping(csvДиректория, csvИмяФайла, МенеджерВТ)
	
	csvПолноеИмяФайла = csvДиректория + csvИмяФайла;
	
	csvТекст = Новый ТекстовыйДокумент;
	csvТекст.Прочитать(csvПолноеИмяФайла, КодировкаТекста.UTF8);
	csvЗаполнитьТЗ(csvТекст, csvИмяФайла, Ложь, 0, МенеджерВТ);
		
КонецПроцедуры

Процедура CSV_2_ТЗ(csvДиректория, csvИмяФайла, ПриводитьКодыВПервойКолонке, ДлинаКода, МенеджерВТ)
	
	csvПолноеИмяФайла = csvДиректория + csvИмяФайла;
	
	csvТекст = Новый ТекстовыйДокумент;
	csvТекст.Прочитать(csvПолноеИмяФайла, КодировкаТекста.UTF8);
	csvЗаполнитьТЗ(csvТекст, csvИмяФайла, ПриводитьКодыВПервойКолонке, ДлинаКода, МенеджерВТ);
		
КонецПроцедуры

Процедура ИнициализироватьТаблицу(ТаблицаФайла, csvИмяФайла, СтрокиЗапроса)
	
	КоличествоКолонок = 3;
	Если csvИмяФайла = "mapping.csv" 	Тогда КоличествоКолонок = 4; КонецЕсли;
	
	Для Инд = 1 ПО КоличествоКолонок Цикл
		НаименованиеКолонки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Колонка%1", Инд);
		ТаблицаФайла.Колонки.Добавить(НаименованиеКолонки, Новый ОписаниеТипов("Строка"));
		СтрокиЗапроса = СтрокиЗапроса + Символы.ПС + "ТаблицаФайла." + НаименованиеКолонки + " КАК " + НаименованиеКолонки;
		Если Инд <> КоличествоКолонок Тогда
			СтрокиЗапроса = СтрокиЗапроса + ",";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура csvЗаполнитьТЗ(csvТекст, csvИмяФайла, ПриводитьКодыВПервойКолонке, ДлинаКода, МенеджерВТ)
	
	СтрокиЗапроса = "";
	ТаблицаФайла  = Новый ТаблицаЗначений;
	ИнициализироватьТаблицу(ТаблицаФайла, csvИмяФайла, СтрокиЗапроса);
	
	НоминальноеКоличество = ТаблицаФайла.Колонки.Количество();
	Свойство			  = СтрЗаменить(csvИмяФайла, ".csv", "");
	
	//Проверка формата файла
	Для Инд = 1 по csvТекст.КоличествоСтрок() Цикл
		СтрокаЗагрузки 			= РекурсивноПолучитьВсюСтроку(csvТекст, csvТекст.ПолучитьСтроку(Инд), Инд); 
		ктсКоличествоКолонок 	= ктсКоличествоКолонок(ТаблицаФайла, СтрокаЗагрузки, НоминальноеКоличество, ПриводитьКодыВПервойКолонке, ДлинаКода, Свойство);				
	КонецЦикла;
	
	ТекстЗапроса = "
			|ВЫБРАТЬ
			|	%1
			|ПОМЕСТИТЬ %2
			|ИЗ
			|	&ТаблицаФайла КАК ТаблицаФайла
			|;";
			
	ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, СтрокиЗапроса, Свойство);
	
	Запрос 						   = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст				   = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ТаблицаФайла", ТаблицаФайла);
	
	Запрос.ВыполнитьПакет();
			
КонецПроцедуры

Функция ктсКоличествоКолонок(ТаблицаЗначений, Строка, НоминальноеКоличество, ПриводитьКодыВПервойКолонке, ДлинаКода, Свойство)
	
	НоваяСтрока = ТаблицаЗначений.Добавить();
	Строка = Строка + ";";
	Длина = СтрДлина(Строка);	
	КолКолонок = 0;
	
	Пока (Длина <> 0) Цикл 
 
		Если Найти (Строка,"""") = 1 Тогда  
			КусокСтроки = ктсПолучитьКолонкуИзПолногоCSV(Строка);
			Если КолКолонок < НоминальноеКоличество Тогда 
				НоваяСтрока[КолКолонок] = СтрЗаменить(КусокСтроки,"""""","""");
				НоваяСтрока[КолКолонок] = Сред(НоваяСтрока[КолКолонок], 2, СтрДлина(НоваяСтрока[КолКолонок]) - 2);
			КонецЕсли;
			Строка = Прав(Строка,Длина - СтрДлина(КусокСтроки) - 1); 
		Иначе
			ИндРазделителя = Найти (Строка,";");
			Если КолКолонок < НоминальноеКоличество Тогда
				НоваяСтрока[КолКолонок] = Лев(Строка, ИндРазделителя - 1);
			КонецЕсли;
			Строка = Прав(Строка,Длина - ИндРазделителя);
		КонецЕсли;
		
		КолКолонок = КолКолонок + 1;
		Длина = СтрДлина(Строка);	
		
	КонецЦикла;  
	
	Если ПриводитьКодыВПервойКолонке Тогда 
		НоваяСтрока.Колонка1 = ДобавитьНули(НоваяСтрока.Колонка1, ДлинаКода); 
		НоваяСтрока.Колонка3 = Свойство;
	КонецЕсли;
		
	Возврат КолКолонок;
		
КонецФункции

Функция ктсПолучитьКолонкуИзПолногоCSV(СтрокаДляРазбивки, КоличествоВхождений = 0)
	
	Позиция = Найти(СтрокаДляРазбивки, """;"); 
	КусокСтроки = Лев(СтрокаДляРазбивки, Позиция);
	КоличествоСимволов = СтрЧислоВхождений(КусокСтроки, """");
	Если (КоличествоСимволов + КоличествоВхождений) % 2 = 0 Тогда 			
		Возврат КусокСтроки;                              			
	Иначе 
		Возврат КусокСтроки + ктсПолучитьКолонкуИзПолногоCSV(Прав(СтрокаДляРазбивки, СтрДлина(СтрокаДляРазбивки) - Позиция ), КоличествоСимволов + КоличествоВхождений);
	КонецЕсли;
		
КонецФункции

Функция РекурсивноПолучитьВсюСтроку(ТекстовыйДокумент, Строка, Инд)
	
	Если СтрЧислоВхождений(Строка, """") % 2 = 0 Тогда
		Возврат Строка;
	Иначе
		Инд = Инд + 1;
		Возврат РекурсивноПолучитьВсюСтроку(ТекстовыйДокумент, Строка + ТекстовыйДокумент.ПолучитьСтроку(Инд), Инд);
	КонецЕсли;                                                                                         
	
КонецФункции



// Проверка на корректность фалйа выгрузки
// 	- является ли файл файлом csv
//	- игнорируем mapping.csv
//	- игнорируем title.csv
Функция ПроверитьФайлВыгрузки(ФайлВыгрузки)
	Если НЕ ФайлВыгрузки.ЭтоФайл() 			Тогда Возврат Ложь; КонецЕсли;
	Если ФайлВыгрузки.Расширение <> ".csv"  Тогда Возврат Ложь; КонецЕсли;
	Если ФайлВыгрузки.Имя = "mapping.csv"   Тогда Возврат Ложь; КонецЕсли;
	//Если ФайлВыгрузки.Имя = "title.csv"   	Тогда Возврат Ложь; КонецЕсли;
	
	Возврат Истина;
КонецФункции







////////////////////////////////////////////////////////////////////////////////
//			РАБОТАЕМ С ВИДАМИ НОМЕНКЛАТУРЫ / ДОПОЛНИТЕЛЬНЫМИ СВЕДЕНИЯМИ
////////////////////////////////////////////////////////////////////////////////

Функция СоздатьГруппуВДополнительныхСведениях()
	
	ГруппаХарактеристики = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Характеристики");
	Если ГруппаХарактеристики.Пустая() Тогда
		ОбъектГруппаХарактеристики 				= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьГруппу();
		ОбъектГруппаХарактеристики.Наименование = "Характеристики";
		ОбъектГруппаХарактеристики.Записать();
		ГруппаХарактеристики = ОбъектГруппаХарактеристики.Ссылка;
	КонецЕсли;
	
	Возврат ?(ГруппаХарактеристики.ПометкаУдаления, Неопределено, ГруппаХарактеристики);
	
КонецФункции

Процедура СоздатьИЗаполнитьДополнительныеСведения(mapping, МенеджерВТ, СсылкаГруппаХарактеристики, Отказ)
	
	Если СсылкаГруппаХарактеристики = Неопределено Тогда
		ОповеститьОбОшибкеПоПочте("ВНИМАНИЕ!!! Каталог Характеристики был удален. Обратный импорт характеристик не возможен","");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	CSV_2_ТЗ_mapping(mapping.Путь, mapping.Имя, МенеджерВТ);
	ТаблицаВидовНоменклатуры = ПолучитьТаблицуВыдовНоменклатуры(МенеджерВТ);
	
	СоздатьДополнительныеСведенияВидовНоменклатуры(СсылкаГруппаХарактеристики, ТаблицаВидовНоменклатуры, МенеджерВТ);
	
КонецПроцедуры

Функция ПолучитьТаблицуВыдовНоменклатуры(МенеджерВТ)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВЫРАЗИТЬ(КартаВидовНоменклатуры.Колонка1 КАК СТРОКА(50)) КАК inet_id,
	                      |	КартаВидовНоменклатуры.Колонка2 КАК наименование,
	                      |	КартаВидовНоменклатуры.Колонка3 КАК inet_свойства,
	                      |	КартаВидовНоменклатуры.Колонка4 КАК имена_свойств
	                      |ПОМЕСТИТЬ ТабКеш
	                      |ИЗ
	                      |	mapping КАК КартаВидовНоменклатуры
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	                      |	ВидыНоменклатуры.UID_internet,
	                      |	ВидыНоменклатуры.НаборСвойств
	                      |ПОМЕСТИТЬ ТабКешВидыНоменклатуры
	                      |ИЗ
	                      |	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	                      |ГДЕ
	                      |	ВидыНоменклатуры.UID_internet В
	                      |			(ВЫБРАТЬ
	                      |				ТабКеш.inet_id
	                      |			ИЗ
	                      |				ТабКеш)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТабКеш.inet_id,
	                      |	ТабКеш.наименование,
	                      |	ТабКеш.inet_свойства,
	                      |	ТабКеш.имена_свойств,
	                      |	ТабКешВидыНоменклатуры.ВидНоменклатуры,
	                      |	ТабКешВидыНоменклатуры.НаборСвойств
	                      |ИЗ
	                      |	ТабКеш КАК ТабКеш
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ТабКешВидыНоменклатуры КАК ТабКешВидыНоменклатуры
	                      |		ПО ТабКеш.inet_id = ТабКешВидыНоменклатуры.UID_internet
						  |;");
						  
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Возврат РезультатЗапроса[РезультатЗапроса.ВГраница()].Выгрузить();
	
КонецФункции

Процедура СоздатьДополнительныеСведенияВидовНоменклатуры(ГруппаХарактеристики, ТаблицаВидовНоменклатуры, МенеджерВТ)
	
	CommonLibrary = GetLibrary("Библиотека внешних обработок");	
	
	УникальныеСвойства		 = Новый Массив;
	ТаблицаУникальныхСвойств = Новый ТаблицаЗначений;
	ТаблицаУникальныхСвойств.Колонки.Добавить("Наименование", CommonLibrary.ПолучитьОписаниеТиповСтроки(100));
	ТаблицаНаборов			 = Новый ТаблицаЗначений;
	ТаблицаНаборов.Колонки.Добавить("НаборСсылка",  Новый ОписаниеТипов("СправочникСсылка.НаборыДополнительныхРеквизитовИСведений"));
	ТаблицаНаборов.Колонки.Добавить("Наименование", CommonLibrary.ПолучитьОписаниеТиповСтроки(100));
	ТаблицаСвойств			 = Новый ТаблицаЗначений;
	ТаблицаСвойств.Колонки.Добавить("ВидНоменклатуры",  Новый ОписаниеТипов("СправочникСсылка.ВидыНоменклатуры"));
	ТаблицаСвойств.Колонки.Добавить("InetСвойство", CommonLibrary.ПолучитьОписаниеТиповСтроки(100));
	ТаблицаСвойств.Колонки.Добавить("НаименованиеСвойства", CommonLibrary.ПолучитьОписаниеТиповСтроки(100));
	ТаблицаРеквизитов		 = Новый ТаблицаЗначений;
	ТаблицаРеквизитов.Колонки.Добавить("ВидНоменклатуры",  Новый ОписаниеТипов("СправочникСсылка.ВидыНоменклатуры"));
	ТаблицаРеквизитов.Колонки.Добавить("InetСвойство", CommonLibrary.ПолучитьОписаниеТиповСтроки(100));
	ТаблицаРеквизитов.Колонки.Добавить("Наименование", CommonLibrary.ПолучитьОписаниеТиповСтроки(100));

	
	Для Каждого СтрокаТаблицы ИЗ ТаблицаВидовНоменклатуры Цикл
		
		Массив_inet_свойств = CommonLibrary.РазобратьСтрокуВМассивПоРазделителю(СтрокаТаблицы.inet_свойства, ",");
		Массив_имен_свойств = CommonLibrary.РазобратьСтрокуВМассивПоРазделителю(СтрокаТаблицы.имена_свойств, ",");
		
		Для Индекс = 0 ПО Массив_имен_свойств.ВГраница() Цикл
			НаименованиеСвойства = Массив_имен_свойств[Индекс];
			Если СокрЛП(НаименованиеСвойства) = "Гарантія" ИЛИ СокрЛП(НаименованиеСвойства) = "Гарантия" Тогда НаименованиеСвойства = "Гарантія з сайту"; КонецЕсли;
			InetСвойство		 = Массив_inet_свойств[Индекс];
			Если УникальныеСвойства.Найти(НаименованиеСвойства) = Неопределено Тогда
				УникальныеСвойства.Добавить(НаименованиеСвойства);
				НоваяСтрока = ТаблицаУникальныхСвойств.Добавить();
				НоваяСтрока.Наименование = НаименованиеСвойства;
			КонецЕсли;
			Если НаименованиеСвойства = "Виробник" Тогда
				НоваяСтрока 						= ТаблицаРеквизитов.Добавить();
				НоваяСтрока.ВидНоменклатуры 		= СтрокаТаблицы.ВидНоменклатуры;
				НоваяСтрока.InetСвойство 			= InetСвойство;
				НоваяСтрока.Наименование		    = НаименованиеСвойства;
			Иначе
				НоваяСтрока 						= ТаблицаНаборов.Добавить();
				НоваяСтрока.НаборСсылка 			= СтрокаТаблицы.НаборСвойств;
				НоваяСтрока.Наименование    		= НаименованиеСвойства;
				НоваяСтрока 						= ТаблицаСвойств.Добавить();
				НоваяСтрока.ВидНоменклатуры 		= СтрокаТаблицы.ВидНоменклатуры;
				НоваяСтрока.InetСвойство 			= InetСвойство;
				НоваяСтрока.НаименованиеСвойства    = НаименованиеСвойства;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
						  |	ТаблицаСвойствНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
						  |	ТаблицаСвойствНоменклатуры.InetСвойство КАК InetСвойство,
						  |	ВЫРАЗИТЬ(ТаблицаСвойствНоменклатуры.НаименованиеСвойства КАК СТРОКА(150)) КАК НаименованиеСвойства
						  |ПОМЕСТИТЬ ТаблицаСвойств
						  |ИЗ
						  |	&ТаблицаСвойствНоменклатуры КАК ТаблицаСвойствНоменклатуры
						  |;
						  |
						  |ВЫБРАТЬ
						  |	ТаблицаРеквизитовНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
						  |	ТаблицаРеквизитовНоменклатуры.InetСвойство КАК InetСвойство,
						  |	ВЫРАЗИТЬ(ТаблицаРеквизитовНоменклатуры.Наименование КАК СТРОКА(150)) КАК Наименование
						  |ПОМЕСТИТЬ ТаблицаРеквизитов
						  |ИЗ
						  |	&ТаблицаРеквизитовНоменклатуры КАК ТаблицаРеквизитовНоменклатуры
						  |;");
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("ТаблицаСвойствНоменклатуры", ТаблицаСвойств);
	Запрос.УстановитьПараметр("ТаблицаРеквизитовНоменклатуры", ТаблицаРеквизитов);
	
	Запрос.ВыполнитьПакет();
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТаблицаУникальныхСвойств.Наименование
	                      |ПОМЕСТИТЬ КешУникальныхСвойств
	                      |ИЗ
	                      |	&ТаблицаУникальныхСвойств КАК ТаблицаУникальныхСвойств
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ДополнительныеРеквизитыИСведения.Наименование
	                      |ПОМЕСТИТЬ КешДополнительныхСведений
	                      |ИЗ
	                      |	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	                      |ГДЕ
	                      |	ДополнительныеРеквизитыИСведения.Родитель = &ГруппаХарактеристики
	                      |	И НЕ ДополнительныеРеквизитыИСведения.ПометкаУдаления
	                      |	И НЕ ДополнительныеРеквизитыИСведения.ЭтоГруппа
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	КешУникальныхСвойств.Наименование
	                      |ИЗ
	                      |	КешУникальныхСвойств КАК КешУникальныхСвойств
	                      |ГДЕ
	                      |	НЕ КешУникальныхСвойств.Наименование В
	                      |				(ВЫБРАТЬ
	                      |					КешДополнительныхСведений.Наименование
	                      |				ИЗ
	                      |					КешДополнительныхСведений КАК КешДополнительныхСведений)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	КешУникальныхСвойств.Наименование");
						  
	Запрос.УстановитьПараметр("ТаблицаУникальныхСвойств", ТаблицаУникальныхСвойств);
	Запрос.УстановитьПараметр("ГруппаХарактеристики", ГруппаХарактеристики);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
		ЭлементПВХ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
		ЭлементПВХ.ЭтоДополнительноеСведение 	= Истина;
		ЭлементПВХ.Родитель 					= ГруппаХарактеристики;
		ЭлементПВХ.Наименование 				= Выборка.Наименование;
		ЭлементПВХ.ТипЗначения 					= CommonLibrary.ПолучитьОписаниеТиповСтроки(100);
		ЭлементПВХ.Записать();
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	
	
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТаблицаНаборов.НаборСсылка,
	                      |	ТаблицаНаборов.Наименование КАК НаименованиеСвойства
	                      |ПОМЕСТИТЬ КешНаборСвойств
	                      |ИЗ
	                      |	&ТаблицаНаборов КАК ТаблицаНаборов
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ДополнительныеРеквизитыИСведения.Ссылка,
	                      |	ДополнительныеРеквизитыИСведения.Наименование
	                      |ПОМЕСТИТЬ КешДополнительныеСведения
	                      |ИЗ
	                      |	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	                      |ГДЕ
	                      |	ДополнительныеРеквизитыИСведения.Родитель = &ГруппаХарактеристики
	                      |	И НЕ ДополнительныеРеквизитыИСведения.ПометкаУдаления
	                      |	И НЕ ДополнительныеРеквизитыИСведения.ЭтоГруппа
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	КешНаборСвойст.НаборСсылка,
	                      |	КешНаборСвойст.НаименованиеСвойства,
	                      |	КешДополнительныеСведения.Ссылка КАК СвойствоСсылка
	                      |ПОМЕСТИТЬ КешНаборСвойствИСведений
	                      |ИЗ
	                      |	КешНаборСвойств КАК КешНаборСвойст
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ КешДополнительныеСведения КАК КешДополнительныеСведения
	                      |		ПО КешНаборСвойст.НаименованиеСвойства = КешДополнительныеСведения.Наименование
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ КешНаборСвойств
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ КешДополнительныеСведения
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка КАК НаборСсылка,
	                      |	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство КАК СвойствоСсылка
	                      |ПОМЕСТИТЬ КешНаборыВБазе
	                      |ИЗ
	                      |	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	КешНаборСвойствИСведений.НаборСсылка,
	                      |	КешНаборСвойствИСведений.СвойствоСсылка
	                      |ИЗ
	                      |	КешНаборСвойствИСведений КАК КешНаборСвойствИСведений
	                      |ГДЕ
	                      |	НЕ (КешНаборСвойствИСведений.НаборСсылка, КешНаборСвойствИСведений.СвойствоСсылка) В
	                      |				(ВЫБРАТЬ
	                      |					КешНаборыВБазе.НаборСсылка,
	                      |					КешНаборыВБазе.СвойствоСсылка
	                      |				ИЗ
	                      |					КешНаборыВБазе КАК КешНаборыВБазе)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	КешНаборСвойствИСведений.СвойствоСсылка,
	                      |	КешНаборСвойствИСведений.НаборСсылка");
						  
	Запрос.УстановитьПараметр("ТаблицаНаборов", ТаблицаНаборов);
	Запрос.УстановитьПараметр("ГруппаХарактеристики", ГруппаХарактеристики);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
		НаборОбъект = Выборка.НаборСсылка.ПолучитьОбъект();
		НоваяСтрока = НаборОбъект.ДополнительныеСведения.Добавить();
		НоваяСтрока.Свойство = Выборка.СвойствоСсылка;
		НаборОбъект.Записать();
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
				
КонецПроцедуры

Процедура ЗаполнитьДополнительныеСведения(МенеджерВТ, СсылкаГруппаХарактеристики)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТаблицаСвойств.ВидНоменклатуры,
	                      |	ТаблицаСвойств.InetСвойство,
	                      |	ВЫРАЗИТЬ(ТаблицаСвойств.НаименованиеСвойства КАК СТРОКА(150)) КАК НаименованиеСвойства
	                      |ПОМЕСТИТЬ КешТаблицаСвойств
	                      |ИЗ
	                      |	ТаблицаСвойств КАК ТаблицаСвойств
	                      |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |ВЫБРАТЬ
						  |	Номенклатура.Ссылка КАК СсылкаНоменклатуры,
						  |	Номенклатура.Код КАК КодНоменклатуры,
						  |	Номенклатура.ВидНоменклатуры,
						  |	ВЫРАЗИТЬ(Номенклатура.ВидНоменклатуры.UID_internet КАК СТРОКА(50)) КАК UID_internet
						  |ПОМЕСТИТЬ КешНоменклатуры
						  |ИЗ
						  |	Справочник.Номенклатура КАК Номенклатура
						  |ГДЕ
						  |	Номенклатура.Код В
						  |			(ВЫБРАТЬ
						  |				Код КАК Код
						  |			ИЗ
						  |				КешТаблицаХарактеристик)
						  |
						  |СГРУППИРОВАТЬ ПО
						  |	Номенклатура.Ссылка,
						  |	Номенклатура.Код,
						  |	ВЫРАЗИТЬ(Номенклатура.ВидНоменклатуры.UID_internet КАК СТРОКА(50)),
						  |	Номенклатура.ВидНоменклатуры
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |ВЫБРАТЬ
						  |	ДополнительныеРеквизитыИСведения.Ссылка,
						  |	ДополнительныеРеквизитыИСведения.Наименование
						  |ПОМЕСТИТЬ КешСвойств
						  |ИЗ
						  |	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
						  |ГДЕ
						  |	ДополнительныеРеквизитыИСведения.Родитель = &Родитель
						  |	И НЕ ДополнительныеРеквизитыИСведения.ЭтоГруппа
						  |	И НЕ ДополнительныеРеквизитыИСведения.ПометкаУдаления
						  |
						  |СГРУППИРОВАТЬ ПО
						  |	ДополнительныеРеквизитыИСведения.Ссылка,
						  |	ДополнительныеРеквизитыИСведения.Наименование
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |ВЫБРАТЬ
						  |	КешНоменклатуры.СсылкаНоменклатуры,
						  |	КешНоменклатуры.ВидНоменклатуры,
						  |	ВЫРАЗИТЬ(КешТаблицаХарактеристик.НаименованиеСвойства КАК СТРОКА(150)) КАК НаименованиеСвойства,
						  |	КешТаблицаХарактеристик.ЗначениеХарактеристики
						  |ПОМЕСТИТЬ КешХарактеристикСНоменклатурой
						  |ИЗ
						  |	КешТаблицаХарактеристик КАК КешТаблицаХарактеристик
						  |		ЛЕВОЕ СОЕДИНЕНИЕ КешНоменклатуры КАК КешНоменклатуры
						  |		ПО КешТаблицаХарактеристик.Код = КешНоменклатуры.КодНоменклатуры
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |ВЫБРАТЬ
						  |	КешНоменклатуры.СсылкаНоменклатуры,
						  |	КешНоменклатуры.КодНоменклатуры,
						  |	КешНаименованийПоставщиков.ЗначениеХарактеристики,
						  |	ВЫРАЗИТЬ(КешНаименованийПоставщиков.НаименованиеСвойства КАК СТРОКА(150)) КАК НаименованиеСвойства,
						  |	КешНоменклатуры.ВидНоменклатуры,
						  |	КешНоменклатуры.UID_internet
						  |ПОМЕСТИТЬ КешНаименованийПоставщиковСНоменклатурой
						  |ИЗ
						  |	КешТаблицаХарактеристик КАК КешНаименованийПоставщиков
						  |		ЛЕВОЕ СОЕДИНЕНИЕ КешНоменклатуры КАК КешНоменклатуры
						  |		ПО КешНаименованийПоставщиков.Код = КешНоменклатуры.КодНоменклатуры
						  |;
						  |
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |УНИЧТОЖИТЬ КешНоменклатуры;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |УНИЧТОЖИТЬ КешТаблицаХарактеристик;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |ВЫБРАТЬ
						  |	КешХарактеристикСНоменклатурой.СсылкаНоменклатуры,
						  |	КешТаблицаСвойств.НаименованиеСвойства,
						  |	КешХарактеристикСНоменклатурой.ЗначениеХарактеристики
						  |ПОМЕСТИТЬ КешПриведенныхНаименованийСвойств
						  |ИЗ
						  |	КешХарактеристикСНоменклатурой КАК КешХарактеристикСНоменклатурой
						  |		ЛЕВОЕ СОЕДИНЕНИЕ КешТаблицаСвойств КАК КешТаблицаСвойств
						  |		ПО КешХарактеристикСНоменклатурой.ВидНоменклатуры = КешТаблицаСвойств.ВидНоменклатуры
						  |			И КешХарактеристикСНоменклатурой.НаименованиеСвойства = КешТаблицаСвойств.InetСвойство
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |УНИЧТОЖИТЬ КешТаблицаСвойств;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |УНИЧТОЖИТЬ КешХарактеристикСНоменклатурой
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |ВЫБРАТЬ
						  |	КешПриведенныхНаименованийСвойств.СсылкаНоменклатуры,
						  |	КешСвойств.Ссылка КАК СсылкаСвойство,
						  |	ВЫРАЗИТЬ(КешПриведенныхНаименованийСвойств.ЗначениеХарактеристики КАК СТРОКА(150)) КАК ЗначениеХарактеристики
						  |ПОМЕСТИТЬ КешПриведенныхСвойств
						  |ИЗ
						  |	КешПриведенныхНаименованийСвойств КАК КешПриведенныхНаименованийСвойств
						  |		ЛЕВОЕ СОЕДИНЕНИЕ КешСвойств КАК КешСвойств
						  |		ПО КешПриведенныхНаименованийСвойств.НаименованиеСвойства = КешСвойств.Наименование
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |УНИЧТОЖИТЬ КешСвойств;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |УНИЧТОЖИТЬ КешПриведенныхНаименованийСвойств
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |ВЫБРАТЬ
						  |	КешПриведенныхСвойств.СсылкаНоменклатуры КАК Объект,
						  |	КешПриведенныхСвойств.СсылкаСвойство КАК Свойство,
						  |	КешПриведенныхСвойств.ЗначениеХарактеристики КАК Значение
						  |ИЗ
						  |	КешПриведенныхСвойств КАК КешПриведенныхСвойств
						  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
						  |		ПО КешПриведенныхСвойств.СсылкаНоменклатуры = ДополнительныеСведения.Объект
						  |			И КешПриведенныхСвойств.СсылкаСвойство = ДополнительныеСведения.Свойство
						  |ГДЕ
						  |	КешПриведенныхСвойств.ЗначениеХарактеристики <> ЕСТЬNULL(ДополнительныеСведения.Значение, ""NULL"")
						  |	И ЕСТЬNULL(КешПриведенныхСвойств.СсылкаНоменклатуры, 0) <> 0
						  |	И ЕСТЬNULL(КешПриведенныхСвойств.СсылкаСвойство, 0) <> 0
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |УНИЧТОЖИТЬ КешПриведенныхСвойств;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |ВЫБРАТЬ
						  |	КешНаименованийПоставщиковСНоменклатурой.СсылкаНоменклатуры КАК Номенклатура,
						  |	ВЫРАЗИТЬ(КешНаименованийПоставщиковСНоменклатурой.ЗначениеХарактеристики КАК СТРОКА(150)) КАК ЗначениеХарактеристики
						  |ПОМЕСТИТЬ КешАктуальныеПроизводители
						  |ИЗ
						  |	КешНаименованийПоставщиковСНоменклатурой КАК КешНаименованийПоставщиковСНоменклатурой
						  |ГДЕ
						  |	(КешНаименованийПоставщиковСНоменклатурой.ВидНоменклатуры, КешНаименованийПоставщиковСНоменклатурой.НаименованиеСвойства) В
						  |			(ВЫБРАТЬ
						  |				ТаблицаРеквизитов.ВидНоменклатуры,
						  |				ВЫРАЗИТЬ(ТаблицаРеквизитов.InetСвойство КАК СТРОКА(150))
						  |			ИЗ
						  |				ТаблицаРеквизитов КАК ТаблицаРеквизитов)
						  |	И КешНаименованийПоставщиковСНоменклатурой.СсылкаНоменклатуры.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |УНИЧТОЖИТЬ КешНаименованийПоставщиковСНоменклатурой;
						  |
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |ВЫБРАТЬ
						  |	Производители.Ссылка КАК Производитель,
						  |	Производители.Наименование
						  |ПОМЕСТИТЬ КешПроизводители
						  |ИЗ
						  |	Справочник.Производители КАК Производители
						  |ГДЕ
						  |	Производители.Наименование В
						  |			(ВЫБРАТЬ
						  |				ВЫРАЗИТЬ(ЗначениеХарактеристики КАК СТРОКА(150))
						  |			ИЗ
						  |				КешАктуальныеПроизводители)
						  | И НЕ Производители.ПометкаУдаления
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |ВЫБРАТЬ
						  |	КешАктуальныеПроизводители.Номенклатура,
						  |	ЕСТЬNULL(КешПроизводители.Производитель, ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)) КАК Производитель
						  |ИЗ
						  |	КешАктуальныеПроизводители КАК КешАктуальныеПроизводители
						  |		ЛЕВОЕ СОЕДИНЕНИЕ КешПроизводители КАК КешПроизводители
						  |		ПО КешАктуальныеПроизводители.ЗначениеХарактеристики = КешПроизводители.Наименование
						  |;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |УНИЧТОЖИТЬ КешАктуальныеПроизводители;
						  |
						  |////////////////////////////////////////////////////////////////////////////////
						  |УНИЧТОЖИТЬ КешПроизводители;
						  |");
						  
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("Родитель", СсылкаГруппаХарактеристики);
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	ВыборкаРегистр 		= РезультатПакета[13].Выбрать();
	ВыборкаСправочник   = РезультатПакета[18].Выбрать();
	
	НачатьТранзакцию();
	
	Пока ВыборкаРегистр.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(ВыборкаРегистр.Объект);
		НаборЗаписей.Отбор.Свойство.Установить(ВыборкаРегистр.Свойство);
		
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаРегистр);
		НаборЗаписей.Записать();
	КонецЦикла;
	
	Пока ВыборкаСправочник.Следующий() Цикл
		
		Попытка
			
			НоменклатураОбъект 							= ВыборкаСправочник.Номенклатура.ПолучитьОбъект();
			НоменклатураОбъект.ОбменДанными.Загрузка  	= Истина;
			НоменклатураОбъект.Производитель 			= ВыборкаСправочник.Производитель;
		
			НоменклатураОбъект.Записать();
		Исключение
			Продолжить;
			//ВызватьИсключение ОписаниеОшибки();
		КонецПопытки;
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
				
КонецПроцедуры

Процедура Заполнитьtitle(МенеджерВТ, ГруппаХарактеристики)
	
	CommonLibrary = GetLibrary("Библиотека внешних обработок");
	
	Элементtitle = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("title");
	Если Элементtitle = Неопределено ИЛИ Элементtitle.Родитель <> ГруппаХарактеристики Тогда
		ЭлементПВХ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
		ЭлементПВХ.ЭтоДополнительноеСведение 	= Истина;
		ЭлементПВХ.Родитель 					= ГруппаХарактеристики;
		ЭлементПВХ.Наименование 				= "title";
		ЭлементПВХ.ТипЗначения 					= CommonLibrary.ПолучитьОписаниеТиповСтроки(255);
		ЭлементПВХ.Записать();
		Элементtitle = ЭлементПВХ.Ссылка;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВЫРАЗИТЬ(Таблицаtitled.Колонка1 КАК СТРОКА(11)) КАК Код,
	                      |	Таблицаtitled.Колонка2 КАК ЗначениеХарактеристики,
	                      |	Таблицаtitled.Колонка3 КАК НаименованиеСвойства
	                      |ПОМЕСТИТЬ КешТаблицаtitle
	                      |ИЗ
	                      |	title КАК Таблицаtitled
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Номенклатура.Ссылка,
	                      |	Номенклатура.Код
	                      |ПОМЕСТИТЬ КешНоменклатура
	                      |ИЗ
	                      |	Справочник.Номенклатура КАК Номенклатура
	                      |ГДЕ
	                      |	Номенклатура.Код В
	                      |			(ВЫБРАТЬ
	                      |				КешТаблицаtitle.Код
	                      |			ИЗ
	                      |				КешТаблицаtitle КАК КешТаблицаtitle)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	КешНоменклатура.Ссылка КАК Объект,
	                      |	КешТаблицаtitle.ЗначениеХарактеристики КАК Значение
	                      |ИЗ
	                      |	КешТаблицаtitle КАК КешТаблицаtitle
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешНоменклатура КАК КешНоменклатура
	                      |		ПО КешТаблицаtitle.Код = КешНоменклатура.Код
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка,
	                      |	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство
	                      |ПОМЕСТИТЬ КешСвойстваtitle
	                      |ИЗ
	                      |	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
	                      |ГДЕ
	                      |	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Свойство = &Свойствоtitle
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка КАК НаборСсылка
	                      |ИЗ
	                      |	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения
	                      |ГДЕ
	                      |	НЕ НаборыДополнительныхРеквизитовИСведенийДополнительныеСведения.Ссылка В
	                      |				(ВЫБРАТЬ
	                      |					КешСвойстваtitle.Ссылка
	                      |				ИЗ
	                      |					КешСвойстваtitle КАК КешСвойстваtitle)
						  |;
						  |УНИЧТОЖИТЬ КешТаблицаtitle;
						  |УНИЧТОЖИТЬ КешНоменклатура;
						  |УНИЧТОЖИТЬ КешСвойстваtitle;
						  |УНИЧТОЖИТЬ title;");
						  
    Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
						  
	Запрос.УстановитьПараметр("Свойствоtitle", Элементtitle);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаНабор 		= РезультатЗапроса[4].Выбрать();
	ВыборкаСвойства     = РезультатЗапроса[2].Выбрать();
	
	НачатьТранзакцию();
	Пока ВыборкаНабор.Следующий() Цикл
		НаборОбъект = ВыборкаНабор.НаборСсылка.ПолучитьОбъект();
		Если НаборОбъект.Ссылка = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие Тогда Продолжить; КонецЕсли;
		НоваяСтрока = НаборОбъект.ДополнительныеСведения.Добавить();
		НоваяСтрока.Свойство = Элементtitle;
		НаборОбъект.Записать();
	КонецЦикла;
	
	Пока ВыборкаСвойства.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(ВыборкаСвойства.Объект);
		НаборЗаписей.Отбор.Свойство.Установить(Элементtitle);
		
		Запись 			 = НаборЗаписей.Добавить();
		Запись.Объект    = ВыборкаСвойства.Объект;
		Запись.Свойство  = Элементtitle;
		Запись.Значение = ВыборкаСвойства.Значение;
		//ЗаполнитьЗначенияСвойств(Запись, ВыборкаРегистр);
		НаборЗаписей.Записать();
	КонецЦикла;	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Функция ДобавитьНули(Значение, НужнаяДлинаЗначения)   
    Значение 	= СтрЗаменить(Формат(Значение, "ЧГ="), " ", "");
    НадоНулей 	= НужнаяДлинаЗначения - СтрДлина(Значение);
    ВедущиеНули = Формат(0,"ЧЦ="+НадоНулей+";ЧН=; ЧВН=; ЧГ=0");
    Возврат ВедущиеНули + Значение;
КонецФункции




///////////////////////////////////////////////////////////////////////////////
//				РАБОТАЕМ С РЕКВИЗИТАМИ
///////////////////////////////////////////////////////////////////////////////

Процедура ЗаполнитьСправочникПроизводители(ИмяТаблицы, МенеджерВТ)
		
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВЫРАЗИТЬ(ТаблицаХарактеристик.Колонка1 КАК СТРОКА(11)) КАК Код,
	                      |	ТаблицаХарактеристик.Колонка2 КАК ЗначениеХарактеристики,
	                      |	ТаблицаХарактеристик.Колонка3 КАК НаименованиеСвойства
	                      |ПОМЕСТИТЬ КешТаблицаХарактеристик
	                      |ИЗ
	                      |	"+ИмяТаблицы+" КАК ТаблицаХарактеристик
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Номенклатура.Ссылка,
	                      |	Номенклатура.Код,
	                      |	Номенклатура.ВидНоменклатуры
	                      |ПОМЕСТИТЬ КешНоменклатура
	                      |ИЗ
	                      |	Справочник.Номенклатура КАК Номенклатура
	                      |ГДЕ
	                      |	Номенклатура.Код В
	                      |			(ВЫБРАТЬ
	                      |				КешТаблицаХарактеристик.Код
	                      |			ИЗ
	                      |				КешТаблицаХарактеристик КАК КешТаблицаХарактеристик)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	КешНоменклатура.Ссылка,
	                      |	КешТаблицаХарактеристик.ЗначениеХарактеристики,
	                      |	ВЫРАЗИТЬ(КешТаблицаХарактеристик.НаименованиеСвойства КАК СТРОКА(200)) КАК НаименованиеСвойства,
	                      |	КешНоменклатура.ВидНоменклатуры
	                      |ПОМЕСТИТЬ КешХарактеристикиСНоменклатурой
	                      |ИЗ
	                      |	КешТаблицаХарактеристик КАК КешТаблицаХарактеристик
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ КешНоменклатура КАК КешНоменклатура
	                      |		ПО КешТаблицаХарактеристик.Код = КешНоменклатура.Код
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ КешНоменклатура
	                      |;
	                      |
						  |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВЫРАЗИТЬ(КешХарактеристикиСНоменклатурой.ЗначениеХарактеристики КАК СТРОКА(150)) КАК Производитель
	                      |ПОМЕСТИТЬ КешПроизводители
	                      |ИЗ
	                      |	КешХарактеристикиСНоменклатурой КАК КешХарактеристикиСНоменклатурой
	                      |ГДЕ
	                      |	(КешХарактеристикиСНоменклатурой.ВидНоменклатуры, КешХарактеристикиСНоменклатурой.НаименованиеСвойства) В
	                      |			(ВЫБРАТЬ
	                      |				ТаблицаРеквизитов.ВидНоменклатуры,
	                      |				ВЫРАЗИТЬ(ТаблицаРеквизитов.InetСвойство КАК СТРОКА(150))
	                      |			ИЗ
	                      |				ТаблицаРеквизитов КАК ТаблицаРеквизитов)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ КешХарактеристикиСНоменклатурой
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	КешПроизводители.Производитель КАК Производитель
	                      |ИЗ
	                      |	КешПроизводители КАК КешПроизводители
	                      |ГДЕ
	                      |	НЕ КешПроизводители.Производитель В
	                      |				(ВЫБРАТЬ
	                      |					Производители.Наименование
	                      |				ИЗ
	                      |					Справочник.Производители КАК Производители
						  |				ГДЕ Не Производители.ПометкаУдаления)
	                      |
						  |;
						  |
						  |УНИЧТОЖИТЬ "+ИмяТаблицы+";
						  |УНИЧТОЖИТЬ КешПроизводители;");
						  
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатЗапроса[6].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НовыйЭлемент = Справочники.Производители.СоздатьЭлемент();
		НовыйЭлемент.Наименование = ВРег(Выборка.Производитель);
		
		НовыйЭлемент.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПривестиНаименованияПоставщиков(Знач ТаблицаХарактеристик)
	
	ВременнаяТаблица = ТаблицаХарактеристик.Скопировать();
	Для Каждого СтрокаВременнойТаблицы ИЗ ВременнаяТаблица Цикл
		СтрокаВременнойТаблицы.ЗначениеХарактеристики = СокрЛП(ВРег(СтрокаВременнойТаблицы.ЗначениеХарактеристики));
	КонецЦикла;
	
	Возврат ВременнаяТаблица;
	
КонецФункции







////////////////////////////////////////////////////////////////////////////////
// 							РАБОТАЕМ С ЭЛЕКТРОННОЙ ПОЧТОЙ
////////////////////////////////////////////////////////////////////////////////

Функция GetLibrary(LibraryName) Экспорт
	Ссылка 		    = Справочники.ДополнительныеОтчетыИОбработки.НайтиПоНаименованию(LibraryName);
	Если Ссылка = Неопределено Тогда
		ВызватьИсключение "Библиотека с именем не найдена: " + LibraryName;	
	КонецЕсли;
	ДвоичныеДанные  = Ссылка.ХранилищеОбработки.Получить();
	АдресХранилища  = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	ИмяВнОбработки  = ВнешниеОбработки.Подключить(АдресХранилища, , Ложь);
	ОбработкаОбъект = ВнешниеОбработки.Создать(ИмяВнОбработки);
	Возврат ОбработкаОбъект;	
КонецФункции

Процедура ОповеститьОбОшибкеПоПочте(Тема, Тело, ИмяВременногоФайла=Неопределено)
	
	СообщениеОбОшибке = "Настройки библиотеки внешних обработок не найдены!" + Символы.ПС + "Задать настройки можно по адресу: ""Нормативно справочная информация""->""Дополнительные обработки""->""Настройки внешних обработок""";
	
	ОбъектБиблиотека	= GetLibrary("Библиотека внешних обработок");
	ГлобальныеНастройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиОбработокМодификацииКонфигурации", , , "ДополнительныеНастройкиОбработокМодификацииКонфигурации");
	Если НЕ ТипЗнч(ГлобальныеНастройки) = Тип("Структура") Тогда
		ВызватьИсключение СообщениеОбОшибке;	
	КонецЕсли;
	ДанныеПочты = Неопределено;
	Если НЕ ГлобальныеНастройки.СтандартнаяУчетнаяЗаписьЭлектроннойПочты.Пустая() И НЕ ПустаяСтрока(ГлобальныеНастройки.АдресЭлектроннойПочты) Тогда 
		ДанныеПочты = Новый Структура("УчетнаяЗаписьЭлектроннойПочты, АдресЭлектроннойПочты",  ГлобальныеНастройки.СтандартнаяУчетнаяЗаписьЭлектроннойПочты, Новый Массив);
		ДанныеПочты.АдресЭлектроннойПочты.Добавить(Новый Структура("Адрес, Представление", ГлобальныеНастройки.АдресЭлектроннойПочты, "Отдел тех. поддержки"));
	КонецЕсли;
	Если ДанныеПочты = Неопределено Тогда
		ВызватьИсключение СообщениеОбОшибке;
		Возврат;
	КонецЕсли;
	Кому = Новый Массив;
	Кому.Добавить(Новый Структура("Адрес, Представление", "1clog@ktc.rovno.ua", "Логи 1с"));
	Если ИмяВременногоФайла=Неопределено Тогда
		//ПараметрыПисьма = ОбъектБиблиотека.СформироватьПараметрыПисьма(Тема, Тело, ДанныеПочты.АдресЭлектроннойПочты);
		ПараметрыПисьма = ОбъектБиблиотека.СформироватьПараметрыПисьма(Тема, Тело, Кому);
	Иначе
		//ПараметрыПисьма = ОбъектБиблиотека.СформироватьПараметрыПисьма(Тема, Тело, ДанныеПочты.АдресЭлектроннойПочты,,,,Новый Структура("mapping", ИмяВременногоФайла));
		ПараметрыПисьма = ОбъектБиблиотека.СформироватьПараметрыПисьма(Тема, Тело, Кому,,,,Новый Структура("mapping", ИмяВременногоФайла));
	КонецЕсли;
	ОбъектБиблиотека.ОтправитьСообщениеПоSMTP(ГлобальныеНастройки.СтандартнаяУчетнаяЗаписьЭлектроннойПочты, ПараметрыПисьма);
	
КонецПроцедуры
