
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НачалоВыполнения = ?(Параметры.НачалоВыполнения = Дата("00010101"), ТекущаяДата(), Параметры.НачалоВыполнения);
	ЗаполнятьУникальныйИдентификатор = Ложь;
	
	Если НЕ  Параметры.Отправитель = Неопределено Тогда
		Модифицированность = Ложь;
		Отправитель = Параметры.Отправитель;
		ОтправительПредставление = Параметры.Отправитель.Наименование;
	КонецЕсли;
	
	Если НЕ  Параметры.Получатель = Неопределено Тогда
		Модифицированность = Ложь;
		Получатель = Параметры.Получатель;
		ПолучательПредставление = Параметры.Получатель.Наименование;
	Иначе
		ИспользоватьОтображениеКакЗадачи = Ложь;
	КонецЕсли;

	Если НЕ Параметры.Маршрута.Пустая() Тогда
	    Модифицированность = Ложь;   
		ВыполнитьРасчетДоставки();
 
	КонецЕсли; 
	
	Если НЕ Параметры.ИспользоватьОтображениеКакЗадачи = Неопределено Тогда
	    Модифицированность = Ложь;  
		ИспользоватьОтображениеКакЗадачи = Параметры.ИспользоватьОтображениеКакЗадачи;
	КонецЕсли;
	
	Если Не ПустаяСтрока(Параметры.ТекстЗадачи) Тогда
		Модифицированность = Ложь;
		ТекстЗадачи = Параметры.ТекстЗадачи;
	КонецЕсли;
	ТДДата = ТекущаяДата();

  КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьАдресПартнераСкладаАбонента();
    ЗаполнитьАдресПартнераСкладаПолучателя();
 КонецПроцедуры







////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаКлиенте
Процедура ОтправительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьОтправителяИлиПолучателя("Отправитель", СтандартнаяОбработка);
	ЗаполнитьАдресПартнераСкладаАбонента();
	Если Не ВроверитьВозможностьРасчетаДоставки() Тогда
		ВыполнитьРасчетДоставки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ВыбратьОтправителяИлиПолучателя("Получатель", СтандартнаяОбработка);
	ЗаполнитьАдресПартнераСкладаПолучателя();
	Если Не ВроверитьВозможностьРасчетаДоставки() Тогда
		ВыполнитьРасчетДоставки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	АдресПолучателяВыборНаКлиенте();
	Если Не ВроверитьВозможностьРасчетаДоставки() Тогда
		ВыполнитьРасчетДоставки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АдресДоставкиПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	АдресПолучателяВыборНаКлиенте();
	Если Не ВроверитьВозможностьРасчетаДоставки() Тогда
		ВыполнитьРасчетДоставки();
	КонецЕсли;
	
КонецПроцедуры
 &НаКлиенте
Процедура АдресОтправителяПредставленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
  	АдресОтправителяВыборНаКлиенте();
	Если Не ВроверитьВозможностьРасчетаДоставки() Тогда
		ВыполнитьРасчетДоставки();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура НачалоВыполненияПриИзменении(Элемент)
	ПроверкаДатыНаКлиенте();
	ВыполнитьРасчетДоставки();
	

	
КонецПроцедуры

  
&НаКлиенте
Процедура АдресОтправителяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
  	АдресОтправителяВыборНаКлиенте();
	Если Не ВроверитьВозможностьРасчетаДоставки() Тогда
		ВыполнитьРасчетДоставки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтправительОчистка(Элемент, СтандартнаяОбработка)
	Маршрут 						= Неопределено;
	МаршрутПредставление		 	= Неопределено;
	ТранзитныйСклад 			 	= Неопределено;
	ТранзитныйСкладПредставление 	= Неопределено;
	МаршрутТранзит				 	= Неопределено;
	МаршрутТранзитПредставление  	= Неопределено;
	АдресОтправителя			 	= Неопределено;
	АдресОтправителяПредставления 	= Неопределено;
	АдресДоставкиПредставление		= Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура ПолучательОчистка(Элемент, СтандартнаяОбработка)
	Маршрут 					 = Неопределено;
	МаршрутПредставление		 = Неопределено;
	ТранзитныйСклад 			 = Неопределено;
	ТранзитныйСкладПредставление = Неопределено;
	МаршрутТранзит				 = Неопределено;
	МаршрутТранзитПредставление  = Неопределено;
	АдресДоставки				 = Неопределено;
КонецПроцедуры




////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура СоздатьПрямуюЗадачу(Команда)
	
	Если ПроверитьЗаполнениеРеквизитов() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ 		= Ложь;
	Результат   = СоздатьЗадачуНаМаршрут(Отказ);
	
	
	
	Если Не Отказ Тогда
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьТранзитнуюЗадачу(Команда)
	
	Если ПроверитьЗаполнениеРеквизитов() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ 		= Ложь;
	Результат   = СоздатьТранзитнуюЗадачуНаМаршрут(Отказ);
	
	Если Не Отказ Тогда
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
Функция ПолучитьСписокПеревозчиков(СписокВыбора)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
							|	Партнер КАК Партнер,
							|	Партнер.Наименование КАК Наименование
							|ИЗ
							|	РегистрСведений.ПартнерыСегмента
							|ГДЕ
							|	Сегмент = &Сегмент
							|
							|УПОРЯДОЧИТЬ ПО
							|	Партнер.Наименование");
					
	Запрос.УстановитьПараметр("Сегмент", Справочники.СегментыПартнеров.ПолучитьСсылку(Новый УникальныйИдентификатор("b837dc86-07b1-11e2-9d4d-001e673c80fc")));
	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		СписокВыбора.Добавить(Выборка.Партнер,Выборка.Наименование);
	КонецЦикла;	
	
 	Возврат СписокВыбора;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокСкладов()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Новый СписокЗначений;
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= "ВЫБРАТЬ
	             	  |	Ссылка КАК Значение,
	             	  |	Наименование КАК Представление
	             	  |ИЗ
	             	  |	Справочник.Склады
					  |ГДЕ
					  |	НЕ ПометкаУдаления
					  |	И НЕ ЭтоГруппа
	             	  |
	             	  |УПОРЯДОЧИТЬ ПО
	             	  |	Представление";
					  
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Результат.Добавить(Выборка.Значение, Выборка.Представление);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции


&НаКлиенте
Процедура ВыбратьОтправителяИлиПолучателя(ИмяРеквизита, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить("Склад", "Склад");
	СписокВыбора.Добавить("Партнер", "Партнер");
	
	ПолучитьСписокПеревозчиков(СписокВыбора);
	
	Результат = СписокВыбора.ВыбратьЭлемент("Выберите склад или партнера.");
	
	Если Результат = Неопределено Тогда 
		Возврат; 
	КонецЕсли;
	
	Если Результат.Значение = "Партнер" Тогда 
		Результат = ОткрытьФормуМодально("Справочник.Партнеры.ФормаВыбора");
		Если Результат = Неопределено Тогда
			Возврат;
		КонецЕсли;
	    ЭтаФорма[ИмяРеквизита] 				   = Результат;
		ЭтаФорма[ИмяРеквизита+"Представление"] = Строка(Результат);
		Возврат;
	КонецЕсли;
	
	Если Результат.Значение = "Склад" Тогда
		СписокВыбораСклада 	= ПолучитьСписокСкладов();
		Результат			= СписокВыбораСклада.ВыбратьЭлемент("Выберите склад.");
		Если Результат = Неопределено Тогда 
			Возврат; 
		КонецЕсли;
		ЭтаФорма[ИмяРеквизита]				   = Результат.Значение;
		ЭтаФорма[ИмяРеквизита+"Представление"] = Результат.Представление;
		Возврат;
	КонецЕсли;
	
	Если НЕ Результат.Значение = "Склад" И НЕ Результат.Значение = "Партнер" Тогда 
		ЭтаФорма[ИмяРеквизита]     		       = Результат.Значение;
		ЭтаФорма[ИмяРеквизита+"Представление"] = Результат.Значение;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ВыбратьОтправителяИлиПолучателя()

&НаКлиенте
Процедура ЗаполнитьАдресПартнераСкладаАбонента()
	
	АдресОтправителя				 =	ПолучитьАдресАбонента(Отправитель);
	АдресОтправителяПредставления	 =	ПолучитьАдресАбонента(Отправитель);

	
	Если ТипЗнч(Отправитель) = Тип("СправочникСсылка.Склады") Тогда
	   Элементы.АдресОтправителяПредставления.Доступность  			= Ложь;
	   Элементы.АдресОтправителяПредставления.КнопкаВыбора 			= Ложь;
	 
    Иначе
	   Элементы.АдресОтправителяПредставления.Доступность 			= Истина;
	   Элементы.АдресОтправителяПредставления.КнопкаВыбора 			= Истина;
		   
	КонецЕсли;
   КонецПроцедуры // ЗаполнитьАдресПартнераСклада()

&НаКлиенте
Процедура ЗаполнитьАдресПартнераСкладаПолучателя()
	  
	АдресДоставки				 = ПолучитьАдресАбонента(Получатель); 
	АдресДоставкиПредставление	 = Строка(ПолучитьАдресАбонента(Получатель));
	
	Если ТипЗнч(Получатель) = Тип("СправочникСсылка.Склады") Тогда
	   Элементы.АдресДоставкиПредставление.Доступность 				= 	Ложь;
	   Элементы.АдресДоставкиПредставление.КнопкаВыбора				= 	Ложь;
	   
	Иначе
	   Элементы.АдресДоставкиПредставление.Доступность 				= Истина;
	   Элементы.АдресДоставкиПредставление.КнопкаВыбора				= Истина;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьАдресПартнераСклада()


  &НаКлиенте
  Процедура АдресОтправителяВыборНаКлиенте()
  
  Если НЕ ТипЗнч(Отправитель) =  Тип("СправочникСсылка.Склады") Тогда
	 	ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Адрес", 		 АдресОтправителя);
		ПараметрыФормы.Вставить("ВыводитьУлицу", Истина);
		АдресОтправителя				 = ОткрытьФормуМодально("Справочник.ВариантыМаршрутов.Форма.ПодборИзКлассификатора", ПараметрыФормы);
		АдресОтправителяПредставления	 = ОткрытьФормуМодально("Справочник.ВариантыМаршрутов.Форма.ПодборИзКлассификатора", ПараметрыФормы);
  КонецЕсли;
  
КонецПроцедуры // ()

 &НаКлиенте
  Процедура АдресПолучателяВыборНаКлиенте()
  
  Если НЕ ТипЗнч(Получатель) =  Тип("СправочникСсылка.Склады") Тогда
	 	ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Адрес", 		 АдресДоставки);
		ПараметрыФормы.Вставить("ВыводитьУлицу", Истина);
		АдресДоставки 				= ОткрытьФормуМодально("Справочник.ВариантыМаршрутов.Форма.ПодборИзКлассификатора", ПараметрыФормы);
		АдресДоставкиПредставление 	= ОткрытьФормуМодально("Справочник.ВариантыМаршрутов.Форма.ПодборИзКлассификатора", ПараметрыФормы);

  КонецЕсли;
  
  КонецПроцедуры // ()

 Процедура ПроверкаДатыНаКлиенте()
		 
 	Если НачалоВыполнения<ТДДата Тогда
	   ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Начало выполнения задачи менше текущей даты'"),,, "НачалоВыполнения");
   
	КонецЕсли; 
 
 КонецПроцедуры
 

&НаКлиенте
Функция ПроверитьЗаполнениеРеквизитов()
	
	Результат = Ложь;
	
	Если ПустаяСтрока(ОтправительПредставление) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо заполнить отправителя'"),,, "ОтправительПредставление");
		Результат = Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(ПолучательПредставление) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо заполнить получатель'"),,, "ПолучательПредставление");
		Результат = Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстЗадачи) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо заполнить текст задачи'"),,, "ТекстЗадачи");
		Результат = Истина;
	КонецЕсли;
	
	

	Возврат Результат;
	
КонецФункции // ПроверитьЗаполнениеРеквизитов()


&НаКлиенте
Функция ВроверитьВозможностьРасчетаДоставки()

	Результат = Ложь;
	
	
	Если ПустаяСтрока(ОтправительПредставление) ИЛИ ПустаяСтрока(ПолучательПредставление) Тогда
		Результат = Истина;
	КонецЕсли;
	
	Если ТипЗнч(Отправитель) = Тип("СправочникСсылка.Партнеры") И ТипЗнч(Получатель) = Тип("СправочникСсылка.Партнеры") Тогда
		Результат = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Доставка между двома партнерамы невозможна.'"));
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // ВроверитьВозможностьРасчетаДоставки()
 
// Расчитиваем маршрут доставки
//
// Параметры:
//  НЕТ
//
&НаСервере
Процедура ВыполнитьРасчетДоставки()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос 		 = Новый Запрос;
	Запрос.Текст = СформироватьТекстЗапросаРасчетДоставки();
	
	Запрос.УстановитьПараметр("Получатель", НормализироватьПредставлениеАбонента(Получатель,АдресДоставки));    
	Запрос.УстановитьПараметр("Отправитель", НормализироватьПредставлениеАбонента(Отправитель, АдресОтправителя));
	Запрос.УстановитьПараметр("ДатаСеанса", НачалоВыполнения);
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	ТранзитныйСклад 			 = Неопределено;
	ТранзитныйСкладПредставление = Неопределено;
	
	МаршрутТранзит				 = Неопределено;
	МаршрутТранзитПредставление  = Неопределено;
	
	Маршрут				 		 = Неопределено;
	МаршрутПредставление 		 = Неопределено;
	СтрокаМаршрут		 = НСтр("ru = ""Задача по маршруту:""");
	СтрокаДатаВыезда	 = НСтр("ru = ""; Дата выезда:""");
	СтрокаМаршрутТранзит = НСтр("ru = ""Транзитний маршрут:""");
	
	Если ТипЗнч(Отправитель) = Тип("СправочникСсылка.Партнеры") Тогда
		
		Выборка = РезультатПакета[2].Выбрать();
				
		Если Выборка.Следующий() Тогда		
			Маршрут 			 = Выборка.Маршрут;
			МаршрутПредставление = СтрокаМаршрут + Выборка.МаршрутПредставление;
		Иначе
			Маршрут				 = Неопределено;
			МаршрутПредставление = Неопределено;
		КонецЕсли;
		
	Иначе
		
		Выборка 		= РезультатПакета[4].Выбрать();
		ВыборкаТранзит  = РезультатПакета[10].Выбрать();
				
		Если Выборка.Следующий() Тогда
			

			Маршрут 			 = Выборка.Маршрут;
			МаршрутПредставление = СтрокаМаршрут + Выборка.МаршрутПредсталение + СтрокаДатаВыезда + Выборка.ДатаВремяВыезда;
		КонецЕсли;
		
		Если ВыборкаТранзит.Следующий() Тогда
			
			ТранзитныйСклад			     = ВыборкаТранзит.ТранзитныйСклад;
			ТранзитныйСкладПредставление = ВыборкаТранзит.ТранзитныйСкладПредставление;
			МаршрутТранзит				 = ВыборкаТранзит.МаршрутТранзит;
			СтрокаМаршрутТранзит		 = СтрокаМаршрутТранзит + ВыборкаТранзит.МаршрутТранзитПредставление;
			//+ СтрокаДатаВыезда + ВыборкаТранзит.ДатаВремяВыездаОтОтправителя;
			СтрокаМаршрутКПолучателю	 = СтрокаМаршрут + ВыборкаТранзит.МаршрутКПолучателю.Наименование + СтрокаДатаВыезда + ВыборкаТранзит.ДатаВремяВыездаКПолучателю;	
			МаршрутТранзитПредставление  = СтрокаМаршрутТранзит + Символы.ПС + СтрокаМаршрутКПолучателю;
		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьТекстЗапросаРасчетДоставки()

	Если ТипЗнч(Отправитель) = Тип("СправочникСсылка.Партнеры")  Тогда
		
		ТекстЗапроса = "
			|ВЫБРАТЬ
			|	Ссылка КАК Маршрут
			|ПОМЕСТИТЬ МаршрутыОтПолучателей
			|ИЗ
			|	Справочник.ВариантыМаршрутов.СписокАдресов
			|ГДЕ
			|	ГородСклад = &Отправитель
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Ссылка КАК Маршрут
			|ПОМЕСТИТЬ МаршрутКПолучателю
			|ИЗ
			|	Справочник.ВариантыМаршрутов.ВозвратнаяДоставкаОтПартнеров
			|ГДЕ
			|	Склад = &Получатель
			|;

			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	МаршрутКПолучателю.Маршрут КАК Маршрут,
			|	ПРЕДСТАВЛЕНИЕ(МаршрутКПолучателю.Маршрут) КАК МаршрутПредставление
			|ИЗ
			|	МаршрутКПолучателю КАК МаршрутКПолучателю
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаршрутыОтПолучателей КАК МаршрутыОтПолучателей
			|		ПО МаршрутКПолучателю.Маршрут = МаршрутыОтПолучателей.Маршрут
			|;
			|УНИЧТОЖИТЬ МаршрутыОтПолучателей;
			|УНИЧТОЖИТЬ МаршрутКПолучателю;";
		
	Иначе
	
		ТекстЗапроса = "
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	Ссылка			КАК Склад,
			|	Представление   КАК Представление
			|ПОМЕСТИТЬ АдресаСкладов
			|ИЗ
			|	Справочник.Склады.КонтактнаяИнформация
			|ГДЕ
			|	Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
			|;
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	Ссылка КАК Маршрут
			|ПОМЕСТИТЬ МаршрутыОтОтправителя	
			|ИЗ
			|	Справочник.ВариантыМаршрутов.СкладыОтгрузки
			|ГДЕ
			|	Склад = &Отправитель
	        |
			|ОБЪЕДИНИТЬ
	        |
			|ВЫБРАТЬ
			|	Ссылка КАК Маршрут
			|ИЗ
			|	Справочник.ВариантыМаршрутов.ВозвратнаяДоставка
			|ГДЕ
			|	СкладПолучатель  = &Получатель
			|И	СкладОтправитель = &Отправитель	
			|;
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	Ссылка КАК Маршрут
			|ПОМЕСТИТЬ МаршрутыКПолучателю
			|ИЗ
			|	Справочник.ВариантыМаршрутов.СписокАдресов
			|ГДЕ
			|	ГородСклад = &Получатель
	        |
			|ОБЪЕДИНИТЬ
	        |
			|ВЫБРАТЬ
			|	Ссылка КАК Маршрут
			|ИЗ
			|	Справочник.ВариантыМаршрутов.ВозвратнаяДоставка
			|ГДЕ
			|	СкладПолучатель  = &Получатель
			|И	СкладОтправитель = &Отправитель
			|;
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	&Отправитель									КАК СкладОтправитель,
			|	&Получатель										КАК СкладПолучатель,
			|	МаршрутыКПолучателю.Маршрут 					КАК Маршрут,
			|	ПРЕДСТАВЛЕНИЕ(МаршрутыКПолучателю.Маршрут)      КАК МаршрутПредставление,
			|	МаршрутыКПолучателю.Маршрут.КалендарьМаршрута 	КАК КалендарьМаршрута,
			|	
			|	IsNull(СкладыОтгрузки.ПН, СкладыОтгрузкиРезерв.ПН) КАК ПН,
			|	IsNull(СкладыОтгрузки.ВТ, СкладыОтгрузкиРезерв.ВТ) КАК ВТ,
			|	IsNull(СкладыОтгрузки.СР, СкладыОтгрузкиРезерв.СР) КАК СР,
			|	IsNull(СкладыОтгрузки.ЧТ, СкладыОтгрузкиРезерв.ЧТ) КАК ЧТ,
			|	IsNull(СкладыОтгрузки.ПТ, СкладыОтгрузкиРезерв.ПТ) КАК ПТ,
			|	IsNull(СкладыОтгрузки.СБ, СкладыОтгрузкиРезерв.СБ) КАК СБ,
			|	IsNull(СкладыОтгрузки.ВС, СкладыОтгрузкиРезерв.ВС) КАК ВС,
			|	
			|	IsNull(СкладыОтгрузки.ВремяВыездаПН, СкладыОтгрузкиРезерв.ВремяВыездаПН) КАК ВремяВыездаПН,
			|	IsNull(СкладыОтгрузки.ВремяВыездаВТ, СкладыОтгрузкиРезерв.ВремяВыездаВТ) КАК ВремяВыездаВТ,
			|	IsNull(СкладыОтгрузки.ВремяВыездаСР, СкладыОтгрузкиРезерв.ВремяВыездаСР) КАК ВремяВыездаСР,
			|	IsNull(СкладыОтгрузки.ВремяВыездаЧТ, СкладыОтгрузкиРезерв.ВремяВыездаЧТ) КАК ВремяВыездаЧТ,
			|	IsNull(СкладыОтгрузки.ВремяВыездаПТ, СкладыОтгрузкиРезерв.ВремяВыездаПТ) КАК ВремяВыездаПТ,
			|	IsNull(СкладыОтгрузки.ВремяВыездаСБ, СкладыОтгрузкиРезерв.ВремяВыездаСБ) КАК ВремяВыездаСБ,
			|	IsNull(СкладыОтгрузки.ВремяВыездаВС, СкладыОтгрузкиРезерв.ВремяВыездаВС) КАК ВремяВыездаВС
			|	
			|ПОМЕСТИТЬ МаршрутПрямойДоставки
			|ИЗ
			|	МаршрутыКПолучателю КАК МаршрутыКПолучателю
			|	
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаршрутыОтОтправителя КАК МаршрутыОтОтправителя
			|ПО МаршрутыОтОтправителя.Маршрут = МаршрутыКПолучателю.Маршрут
	        |
			|ЛЕВОЕ СОЕДИНЕНИЕ АдресаСкладов КАК АдресаСкладаПолучателя 
			|ПО	АдресаСкладаПолучателя.Склад = &Получатель 
	        |
			|ЛЕВОЕ СОЕДИНЕНИЕ АдресаСкладов КАК АдресаСкладаОтправителя 
			|ПО	АдресаСкладаОтправителя.Склад = &Отправитель
	        |
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыМаршрутов.СкладыОтгрузки КАК СкладыОтгрузки 
			|ПО	СкладыОтгрузки.Ссылка = МаршрутыКПолучателю.Маршрут	
			|И	СкладыОтгрузки.Склад  = &Отправитель
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыМаршрутов.СкладыОтгрузки КАК СкладыОтгрузкиРезерв 
			|ПО	СкладыОтгрузкиРезерв.Ссылка = МаршрутыКПолучателю.Маршрут	
			|И	СкладыОтгрузкиРезерв.Склад  = &Получатель
	        |
			|ГДЕ
			|	ВЫБОР
			|		КОГДА ТИПЗНАЧЕНИЯ(&Получатель) = ТИП(Строка)
			|			ТОГДА АдресаСкладаОтправителя.Представление <> &Получатель
			|		ИНАЧЕ АдресаСкладаПолучателя.Представление <> АдресаСкладаОтправителя.Представление
			|	КОНЕЦ
			|;
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	МаршрутПрямойДоставки.СкладОтправитель,
			|	МаршрутПрямойДоставки.СкладПолучатель,
			|	МаршрутПрямойДоставки.Маршрут, 
			|	ПРЕДСТАВЛЕНИЕ(МаршрутПрямойДоставки.Маршрут) КАК МаршрутПредсталение,
			|	Минимум(ДОБАВИТЬКДАТЕ(
			|				ДОБАВИТЬКДАТЕ(
			|							КалендарныеГрафики.ДатаГрафика, ЧАС, ЧАС(	
			|																	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафики.ДатаГрафика)
			|																		КОГДА 1
			|																		ТОГДА МаршрутПрямойДоставки.ВремяВыездаПН
			|																		КОГДА 2
			|																		ТОГДА МаршрутПрямойДоставки.ВремяВыездаВТ
			|																		КОГДА 3
			|																		ТОГДА МаршрутПрямойДоставки.ВремяВыездаСР
			|																		КОГДА 4
			|																		ТОГДА МаршрутПрямойДоставки.ВремяВыездаЧТ
			|																		КОГДА 5
			|																		ТОГДА МаршрутПрямойДоставки.ВремяВыездаПТ
			|																		КОГДА 6
			|																		ТОГДА МаршрутПрямойДоставки.ВремяВыездаСБ
			|																		КОГДА 7
			|																		ТОГДА МаршрутПрямойДоставки.ВремяВыездаВС
			|																	КОНЕЦ
			|																	)
			|						), МИНУТА, МИНУТА(	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафики.ДатаГрафика)
			|												КОГДА 1
			|												ТОГДА МаршрутПрямойДоставки.ВремяВыездаПН
			|												КОГДА 2
			|												ТОГДА МаршрутПрямойДоставки.ВремяВыездаВТ
			|												КОГДА 3
			|												ТОГДА МаршрутПрямойДоставки.ВремяВыездаСР
			|												КОГДА 4
			|												ТОГДА МаршрутПрямойДоставки.ВремяВыездаЧТ
			|												КОГДА 5
			|												ТОГДА МаршрутПрямойДоставки.ВремяВыездаПТ
			|												КОГДА 6
			|												ТОГДА МаршрутПрямойДоставки.ВремяВыездаСБ
			|												КОГДА 7
			|												ТОГДА МаршрутПрямойДоставки.ВремяВыездаВС
			|											КОНЕЦ
			|											)
			|				)
			|			)	КАК ДатаВремяВыезда
			|ИЗ
			|	МаршрутПрямойДоставки КАК МаршрутПрямойДоставки
			|	
			|	
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафики
			|ПО	КалендарныеГрафики.Календарь 	= МаршрутПрямойДоставки.КалендарьМаршрута
			|И	КалендарныеГрафики.ДатаГрафика >= НАЧАЛОПЕРИОДА(&ДатаСеанса, День)
			|И	КалендарныеГрафики.ДеньВключенВГрафик
			|И	(ВЫБОР	ДЕНЬНЕДЕЛИ(КалендарныеГрафики.ДатаГрафика)
			|		КОГДА 1
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутПрямойДоставки.ПН
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 2
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутПрямойДоставки.ВТ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 3
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутПрямойДоставки.СР
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 4
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутПрямойДоставки.ЧТ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 5
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутПрямойДоставки.ПТ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 6
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутПрямойДоставки.СБ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 7
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутПрямойДоставки.ВС
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|	КОНЕЦ)
	        |
			|ГДЕ
			|	&ДатаСеанса < КалендарныеГрафики.ДатаГрафика	
			|ИЛИ
			|	ЧАС(&ДатаСеанса) < ЧАС(	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафики.ДатаГрафика)
			|									КОГДА 1
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаПН
			|									КОГДА 2
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаВТ
			|									КОГДА 3
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаСР
			|									КОГДА 4
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаЧТ
			|									КОГДА 5
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаПТ
			|									КОГДА 6
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаСБ
			|									КОГДА 7
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаВС
			|								КОНЕЦ
			|							 )
			|ИЛИ
			|	(ЧАС(&ДатаСеанса) = ЧАС(	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафики.ДатаГрафика)
			|									КОГДА 1
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаПН
			|									КОГДА 2
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаВТ
			|									КОГДА 3
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаСР
			|									КОГДА 4
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаЧТ
			|									КОГДА 5
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаПТ
			|									КОГДА 6
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаСБ
			|									КОГДА 7
			|									ТОГДА МаршрутПрямойДоставки.ВремяВыездаВС
			|								КОНЕЦ
			|							 )
			|	И МИНУТА(&ДатаСеанса) <= МИНУТА(ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафики.ДатаГрафика)
			|										КОГДА 1
			|										ТОГДА МаршрутПрямойДоставки.ВремяВыездаПН
			|										КОГДА 2
			|										ТОГДА МаршрутПрямойДоставки.ВремяВыездаВТ
			|										КОГДА 3
			|										ТОГДА МаршрутПрямойДоставки.ВремяВыездаСР
			|										КОГДА 4
			|										ТОГДА МаршрутПрямойДоставки.ВремяВыездаЧТ
			|										КОГДА 5
			|										ТОГДА МаршрутПрямойДоставки.ВремяВыездаПТ
			|										КОГДА 6
			|										ТОГДА МаршрутПрямойДоставки.ВремяВыездаСБ
			|										КОГДА 7
			|										ТОГДА МаршрутПрямойДоставки.ВремяВыездаВС
			|									КОНЕЦ
			|								) 	
			|	)		
	        |
			|СГРУППИРОВАТЬ ПО
			|	МаршрутПрямойДоставки.СкладОтправитель,
			|	МаршрутПрямойДоставки.СкладПолучатель,
			|	МаршрутПрямойДоставки.Маршрут
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДатаВремяВыезда ВОЗР
			|;
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	СкладыОтгрузки.Ссылка 										КАК МаршрутТранзит,
			|	ВЫРАЗИТЬ(СписокАдресов.ГородСклад КАК Справочник.Склады) 	КАК СкладТранзит
			|ПОМЕСТИТЬ МаршрутыОтОтправителяТранзит	
			|ИЗ
			|	Справочник.ВариантыМаршрутов.СкладыОтгрузки КАК СкладыОтгрузки
			|	
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВариантыМаршрутов.СписокАдресов КАК СписокАдресов
			|ПО СписокАдресов.Ссылка = СкладыОтгрузки.Ссылка
			|И  ВЫРАЗИТЬ(СписокАдресов.ГородСклад КАК Справочник.Склады) <> &Получатель
			|И	ВЫРАЗИТЬ(СписокАдресов.ГородСклад КАК Справочник.Склады) <> &Отправитель
			|	
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Модуль_ДоступныеСклады КАК ДоступныеСклады
			|ПО ДоступныеСклады.Склад = СкладыОтгрузки.Ссылка
			|И  ДоступныеСклады.Транзитный
	        |
			|ГДЕ
			|	СкладыОтгрузки.Склад = &Отправитель	
			|	
			|ОБЪЕДИНИТЬ
	        |
			|ВЫБРАТЬ
			|	Ссылка 			КАК МаршрутТранзит,
			|	СкладПолучатель КАК СкладТранзит
			|ИЗ
			|	Справочник.ВариантыМаршрутов.ВозвратнаяДоставка
			|ГДЕ
			|	СкладОтправитель = &Отправитель	
			|;
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	&Отправитель										КАК СкладОтправитель,
			|	СкладыОтгрузки.Склад									КАК СкладТранзит,
			|	&Получатель										КАК СкладПолучатель,
			|	МаршрутОтОтправителя.МаршрутТранзит						КАК МаршрутОтОтправителя,
			|	МаршрутОтОтправителя.МаршрутТранзит.КалендарьМаршрута	КАК КалендарьМаршрутаОтОтправителя,
			|	СкладыОтгрузки.Ссылка 									КАК МаршрутКПолучателю,
			|	СкладыОтгрузки.Ссылка.КалендарьМаршрута 				КАК КалендарьМаршрутаКПолучателю,
			|	
			|	СкладыТранзита.ПН,
			|	СкладыТранзита.ВТ,
			|	СкладыТранзита.СР,
			|	СкладыТранзита.ЧТ,
			|	СкладыТранзита.ПТ,
			|	СкладыТранзита.СБ,
			|	СкладыТранзита.ВС,
			|	
			|	СкладыТранзита.ВремяВыездаПН,
			|	СкладыТранзита.ВремяВыездаВТ,
			|	СкладыТранзита.ВремяВыездаСР,
			|	СкладыТранзита.ВремяВыездаЧТ,
			|	СкладыТранзита.ВремяВыездаПТ,
			|	СкладыТранзита.ВремяВыездаСБ,
			|	СкладыТранзита.ВремяВыездаВС,
			|	
			|	СкладыОтгрузки.ПН 				КАК тПН,
			|	СкладыОтгрузки.ВТ 				КАК тВТ,
			|	СкладыОтгрузки.СР 				КАК тСР,
			|	СкладыОтгрузки.ЧТ 				КАК тЧТ,
			|	СкладыОтгрузки.ПТ 				КАК тПТ,
			|	СкладыОтгрузки.СБ 				КАК тСБ,
			|	СкладыОтгрузки.ВС 				КАК тВС,
			|	
			|	СкладыОтгрузки.ВремяВыездаПН 	КАК тВремяВыездаПН,
			|	СкладыОтгрузки.ВремяВыездаВТ 	КАК тВремяВыездаВТ,
			|	СкладыОтгрузки.ВремяВыездаСР 	КАК тВремяВыездаСР,
			|	СкладыОтгрузки.ВремяВыездаЧТ 	КАК тВремяВыездаЧТ,
			|	СкладыОтгрузки.ВремяВыездаПТ 	КАК тВремяВыездаПТ,
			|	СкладыОтгрузки.ВремяВыездаСБ 	КАК тВремяВыездаСБ,
			|	СкладыОтгрузки.ВремяВыездаВС 	КАК тВремяВыездаВС
			|	
			|ПОМЕСТИТЬ МаршрутыКПолучателюТранзит	
			|ИЗ
			|	Справочник.ВариантыМаршрутов.СкладыОтгрузки КАК СкладыОтгрузки
			|	
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ МаршрутыОтОтправителяТранзит КАК МаршрутОтОтправителя
			|ПО МаршрутОтОтправителя.СкладТранзит = СкладыОтгрузки.Склад
	        |
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВариантыМаршрутов.СписокАдресов КАК СписокАдресов
			|ПО СписокАдресов.Ссылка = СкладыОтгрузки.Ссылка
			|И	ВЫРАЗИТЬ(СписокАдресов.ГородСклад КАК Справочник.Склады) = &Получатель
	        |
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыМаршрутов.СкладыОтгрузки КАК СкладыТранзита 
			|ПО	СкладыТранзита.Ссылка = МаршрутОтОтправителя.МаршрутТранзит	
			|И	СкладыТранзита.Склад  = СкладыОтгрузки.Склад
	        |
			|ЛЕВОЕ СОЕДИНЕНИЕ АдресаСкладов КАК АдресаСкладаПолучателя 
			|ПО	АдресаСкладаПолучателя.Склад = &Получатель
	        |
			|ЛЕВОЕ СОЕДИНЕНИЕ АдресаСкладов КАК АдресаСкладаТранзита 
			|ПО	АдресаСкладаТранзита.Склад = СкладыОтгрузки.Склад 
	        |
			|ЛЕВОЕ СОЕДИНЕНИЕ АдресаСкладов КАК АдресаСкладаОтправителя 
			|ПО	АдресаСкладаОтправителя.Склад = &Отправитель 
	        |
			|ГДЕ
			|	АдресаСкладаОтправителя.Представление <> АдресаСкладаПолучателя.Представление
			|И   АдресаСкладаОтправителя.Представление <> АдресаСкладаТранзита.Представление 	
			|;
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	МаршрутыКПолучателюТранзит.СкладОтправитель,
			|	МаршрутыКПолучателюТранзит.МаршрутОтОтправителя,
			|	МаршрутыКПолучателюТранзит.СкладТранзит, 
			|	Минимум(ДОБАВИТЬКДАТЕ(
			|				ДОБАВИТЬКДАТЕ(
			|							КалендарныеГрафикиОтправителя.ДатаГрафика, ЧАС, ЧАС(	
			|																	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафикиОтправителя.ДатаГрафика)
			|																		КОГДА 1
			|																		ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаПН
			|																		КОГДА 2
			|																		ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаВТ
			|																		КОГДА 3
			|																		ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаСР
			|																		КОГДА 4
			|																		ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаЧТ
			|																		КОГДА 5
			|																		ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаПТ
			|																		КОГДА 6
			|																		ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаСБ
			|																		КОГДА 7
			|																		ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаВС
			|																	КОНЕЦ
			|																	)
			|						), МИНУТА, МИНУТА(	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафикиОтправителя.ДатаГрафика)
			|												КОГДА 1
			|												ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаПН
			|												КОГДА 2
			|												ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаВТ
			|												КОГДА 3
			|												ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаСР
			|												КОГДА 4
			|												ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаЧТ
			|												КОГДА 5
			|												ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаПТ
			|												КОГДА 6
			|												ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаСБ
			|												КОГДА 7
			|												ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаВС
			|											КОНЕЦ
			|											)
			|				)
			|			)	КАК ДатаВремяВыездаОтОтправителя
			|ПОМЕСТИТЬ ТаблицаПрибытияНаТранзитныйСклад
			|ИЗ
			|	МаршрутыКПолучателюТранзит КАК МаршрутыКПолучателюТранзит
			|	
			|	
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафикиОтправителя
			|ПО	КалендарныеГрафикиОтправителя.Календарь 	= МаршрутыКПолучателюТранзит.КалендарьМаршрутаОтОтправителя
			|И	КалендарныеГрафикиОтправителя.ДатаГрафика  >= НАЧАЛОПЕРИОДА(&ДатаСеанса, День)
			|И	КалендарныеГрафикиОтправителя.ДеньВключенВГрафик
			|И	(ВЫБОР	ДЕНЬНЕДЕЛИ(КалендарныеГрафикиОтправителя.ДатаГрафика)
			|		КОГДА 1
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.ПН
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 2
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.ВТ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 3
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.СР
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 4
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.ЧТ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 5
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.ПТ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 6
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.СБ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 7
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.ВС
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|	КОНЕЦ)
	        |
			|ГДЕ
			|	&ДатаСеанса < КалендарныеГрафикиОтправителя.ДатаГрафика	
			|ИЛИ
			|	ЧАС(&ДатаСеанса) < ЧАС(	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафикиОтправителя.ДатаГрафика)
			|									КОГДА 1
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаПН
			|									КОГДА 2
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаВТ
			|									КОГДА 3
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаСР
			|									КОГДА 4
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаЧТ
			|									КОГДА 5
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаПТ
			|									КОГДА 6
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаСБ
			|									КОГДА 7
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаВС
			|								КОНЕЦ
			|							 )
			|ИЛИ
			|	(ЧАС(&ДатаСеанса) = ЧАС(	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафикиОтправителя.ДатаГрафика)
			|									КОГДА 1
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаПН
			|									КОГДА 2
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаВТ
			|									КОГДА 3
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаСР
			|									КОГДА 4
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаЧТ
			|									КОГДА 5
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаПТ
			|									КОГДА 6
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаСБ
			|									КОГДА 7
			|									ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаВС
			|								КОНЕЦ
			|							 )
			|	И МИНУТА(&ДатаСеанса) <= МИНУТА(ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафикиОтправителя.ДатаГрафика)
			|										КОГДА 1
			|										ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаПН
			|										КОГДА 2
			|										ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаВТ
			|										КОГДА 3
			|										ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаСР
			|										КОГДА 4
			|										ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаЧТ
			|										КОГДА 5
			|										ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаПТ
			|										КОГДА 6
			|										ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаСБ
			|										КОГДА 7
			|										ТОГДА МаршрутыКПолучателюТранзит.ВремяВыездаВС
			|									КОНЕЦ
			|								) 	
			|	)		
	        |
			|СГРУППИРОВАТЬ ПО
			|	МаршрутыКПолучателюТранзит.СкладОтправитель,
			|	МаршрутыКПолучателюТранзит.МаршрутОтОтправителя,
			|	МаршрутыКПолучателюТранзит.СкладТранзит
			|;
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	МаршрутыКПолучателюТранзит.СкладОтправитель,
			|	МаршрутыКПолучателюТранзит.МаршрутОтОтправителя,
			|	ТаблицаПрибытияНаТранзитныйСклад.ДатаВремяВыездаОтОтправителя,
			|	
			|	МаршрутыКПолучателюТранзит.СкладТранзит,
			|	
			|	МаршрутыКПолучателюТранзит.СкладПолучатель,
			|	МаршрутыКПолучателюТранзит.МаршрутКПолучателю,
			|	Минимум(ДОБАВИТЬКДАТЕ(
			|				ДОБАВИТЬКДАТЕ(
			|							КалендарныеГрафикиПолучателя.ДатаГрафика, ЧАС, ЧАС(	
			|																	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафикиПолучателя.ДатаГрафика)
			|																		КОГДА 1
			|																		ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаПН
			|																		КОГДА 2
			|																		ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаВТ
			|																		КОГДА 3
			|																		ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаСР
			|																		КОГДА 4
			|																		ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаЧТ
			|																		КОГДА 5
			|																		ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаПТ
			|																		КОГДА 6
			|																		ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаСБ
			|																		КОГДА 7
			|																		ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаВС
			|																	КОНЕЦ
			|																	)
			|						), МИНУТА, МИНУТА(	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафикиПолучателя.ДатаГрафика)
			|												КОГДА 1
			|												ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаПН
			|												КОГДА 2
			|												ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаВТ
			|												КОГДА 3
			|												ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаСР
			|												КОГДА 4
			|												ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаЧТ
			|												КОГДА 5
			|												ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаПТ
			|												КОГДА 6
			|												ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаСБ
			|												КОГДА 7
			|												ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаВС
			|											КОНЕЦ
			|											)
			|				)
			|			)	КАК ДатаВремяВыездаКПолучателю
			|ПОМЕСТИТЬ ВариантыТранзитов		
			|ИЗ
			|	МаршрутыКПолучателюТранзит КАК МаршрутыКПолучателюТранзит
			|	
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПрибытияНаТранзитныйСклад КАК ТаблицаПрибытияНаТранзитныйСклад
			|ПО	ТаблицаПрибытияНаТранзитныйСклад.МаршрутОтОтправителя 	= МаршрутыКПолучателюТранзит.МаршрутОтОтправителя
			|И	ТаблицаПрибытияНаТранзитныйСклад.СкладТранзит 			= МаршрутыКПолучателюТранзит.СкладТранзит
	        |
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК КалендарныеГрафикиПолучателя
			|ПО	КалендарныеГрафикиПолучателя.Календарь 	= МаршрутыКПолучателюТранзит.КалендарьМаршрутаКПолучателю
			|И	КалендарныеГрафикиПолучателя.ДатаГрафика  >= НачалоПериода(ТаблицаПрибытияНаТранзитныйСклад.ДатаВремяВыездаОтОтправителя, День)
			|И	КалендарныеГрафикиПолучателя.ДеньВключенВГрафик
			|И	(ВЫБОР	ДЕНЬНЕДЕЛИ(КалендарныеГрафикиПолучателя.ДатаГрафика)
			|		КОГДА 1
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.тПН
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 2
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.тВТ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 3
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.тСР
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 4
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.тЧТ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 5
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.тПТ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 6
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.тСБ
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|		КОГДА 7
			|		ТОГДА 	ВЫБОР
			|					КОГДА МаршрутыКПолучателюТранзит.тВС
			|					ТОГДА Истина
			|					ИНАЧЕ ЛОЖЬ
			|				КОНЕЦ
			|	КОНЕЦ)
	        |
			|ГДЕ
			|	ТаблицаПрибытияНаТранзитныйСклад.ДатаВремяВыездаОтОтправителя < КалендарныеГрафикиПолучателя.ДатаГрафика	
			|ИЛИ
			|	ЧАС(ТаблицаПрибытияНаТранзитныйСклад.ДатаВремяВыездаОтОтправителя) < ЧАС(	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафикиПолучателя.ДатаГрафика)
			|																					КОГДА 1
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаПН
			|																					КОГДА 2
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаВТ
			|																					КОГДА 3
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаСР
			|																					КОГДА 4
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаЧТ
			|																					КОГДА 5
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаПТ
			|																					КОГДА 6
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаСБ
			|																					КОГДА 7
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаВС
			|																				КОНЕЦ
			|																			 )
			|ИЛИ
			|	(ЧАС(ТаблицаПрибытияНаТранзитныйСклад.ДатаВремяВыездаОтОтправителя) = ЧАС(	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафикиПолучателя.ДатаГрафика)
			|																					КОГДА 1
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаПН
			|																					КОГДА 2
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаВТ
			|																					КОГДА 3
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаСР
			|																					КОГДА 4
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаЧТ
			|																					КОГДА 5
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаПТ
			|																					КОГДА 6
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаСБ
			|																					КОГДА 7
			|																					ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаВС
			|																				КОНЕЦ
			|																			 )
			|	И МИНУТА(ТаблицаПрибытияНаТранзитныйСклад.ДатаВремяВыездаОтОтправителя) < МИНУТА(	ВЫБОР ДЕНЬНЕДЕЛИ(КалендарныеГрафикиПолучателя.ДатаГрафика)
			|																							КОГДА 1
			|																							ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаПН
			|																							КОГДА 2
			|																							ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаВТ
			|																							КОГДА 3
			|																							ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаСР
			|																							КОГДА 4
			|																							ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаЧТ
			|																							КОГДА 5
			|																							ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаПТ
			|																							КОГДА 6
			|																							ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаСБ
			|																							КОГДА 7
			|																							ТОГДА МаршрутыКПолучателюТранзит.тВремяВыездаВС
			|																						КОНЕЦ
			|																					) 	
			|	)		
	        |
			|СГРУППИРОВАТЬ ПО
			|	МаршрутыКПолучателюТранзит.СкладОтправитель,
			|	МаршрутыКПолучателюТранзит.МаршрутОтОтправителя,
			|	ТаблицаПрибытияНаТранзитныйСклад.ДатаВремяВыездаОтОтправителя,
			|	
			|	МаршрутыКПолучателюТранзит.СкладТранзит,
			|	
			|	МаршрутыКПолучателюТранзит.СкладПолучатель,
			|	МаршрутыКПолучателюТранзит.МаршрутКПолучателю
			|;
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	МИНИМУМ(ДатаВремяВыездаКПолучателю) КАК ДатаВремяВыездаКПолучателю
			|ПОМЕСТИТЬ КраткаяДоставкаТранзита
			|ИЗ
			|	ВариантыТранзитов
			|;
			////////////////////////////////////////////////////////////////////////////////
			//
			|ВЫБРАТЬ
			|	ВариантыТранзитов.СкладОтправитель,
			|	ВариантыТранзитов.МаршрутОтОтправителя КАК МаршрутТранзит,
			|	ПРЕДСТАВЛЕНИЕ(ВариантыТранзитов.МаршрутОтОтправителя) КАК МаршрутТранзитПредставление,
			|	ВариантыТранзитов.ДатаВремяВыездаОтОтправителя,
			|	ВариантыТранзитов.СкладТранзит КАК ТранзитныйСклад,
			|	ПРЕДСТАВЛЕНИЕ(ВариантыТранзитов.СкладТранзит) КАК ТранзитныйСкладПредставление,
			|	ВариантыТранзитов.СкладПолучатель,
			|	ВариантыТранзитов.МаршрутКПолучателю,
			|	ВариантыТранзитов.ДатаВремяВыездаКПолучателю		
			|ИЗ
			|	ВариантыТранзитов КАК ВариантыТранзитов
			|	
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ КраткаяДоставкаТранзита КАК КраткаяДоставкаТранзита
			|ПО КраткаяДоставкаТранзита.ДатаВремяВыездаКПолучателю = ВариантыТранзитов.ДатаВремяВыездаКПолучателю
			|;";
			
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции // СформироватьТекстЗапросаРасчетДоставки()

 

&НаСервере
Функция НормализироватьПредставлениеАбонента(Абонент, АдресАбонента)
	Если ТипЗнч(Абонент) = Тип("СправочникСсылка.Склады") Тогда
		Возврат Абонент;
	КонецЕсли;
	
	ОбработкаКлассификатор = ModuleLibraryServer.GetLibrary("Маршруты адресный классификатор");
	Возврат ОбработкаКлассификатор.ПолучитьГородПоАдресу(АдресАбонента);
	
КонецФункции // НормализироватьПредставлениеАбонента()




// Создание задач на маршрут

&НаСервере
Функция СоздатьЗадачуНаМаршрут(Отказ)

	УстановитьПривилегированныйРежим(Истина);
	
	Если Получатель.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Поле обязательно к заполнению.'"),,, "ПолучательПредставление");
		Отказ = Истина;
	КонецЕсли;
	
	Если Отправитель.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Поле обязательно к заполнению.'"),,, "ОтправительПредставление");
		Отказ = Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстЗадачи) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Поле обязательно к заполнению.'"),,, "ТекстЗадачи");
		Отказ = Истина;
	КонецЕсли;
	
	Если Маршрут.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ошибка при автоматической установке маршрута, сообщите на 777'"),,, "МаршрутПредставление");
		Отказ = Истина;
	КонецЕсли;	
	
	Если ПустаяСтрока(АдресДоставки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо установить адрес партнера или склада в карточке получателя.'"));
		Отказ = Истина;
	КонецЕсли;
	
	Если НачалоВыполнения<ТДДата Тогда
		 НачалоВыполнения = ТекущаяДата();
	КонецЕсли; 
	
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	ТранзитныйСклад = Справочники.Склады.ПустаяСсылка();
	
	ПараметрыМеста 	= Новый Структура;
	ПараметрыМеста.Вставить("НачалоВыполненияЗадачи",			НачалоВыполнения);
	ПараметрыМеста.Вставить("Отправитель", 						Отправитель);
	ПараметрыМеста.Вставить("АдресОтправителя", 				АдресОтправителя);
	ПараметрыМеста.Вставить("Владелец", 						Получатель);
	ПараметрыМеста.Вставить("АдресДоставки", 					АдресДоставки);
	ПараметрыМеста.Вставить("ВариантМаршрута", 					Маршрут);
	ПараметрыМеста.Вставить("ТекстЗадачи", 						ТекстЗадачи);
	ПараметрыМеста.Вставить("Транзит", 							Ложь);
	ПараметрыМеста.Вставить("ТранзитныйСклад", 					ТранзитныйСклад);
	ПараметрыМеста.Вставить("ИспользоватьОтображениеКакЗадачи",	ИспользоватьОтображениеКакЗадачи);


	Возврат СоздатьЗадачу(ПараметрыМеста);
		
КонецФункции // СоздатьЗадачуНаМаршрут()

&НаСервере
Функция СоздатьТранзитнуюЗадачуНаМаршрут(Отказ)

	УстановитьПривилегированныйРежим(Истина);
	
	Если Получатель.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Поле обязательно к заполнению.'"),,, "ПолучательПредставление");
		Отказ = Истина;
	КонецЕсли;
	
	Если Отправитель.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Поле обязательно к заполнению.'"),,, "ОтправительПредставление");
		Отказ = Истина;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстЗадачи) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Поле обязательно к заполнению.'"),,, "ТекстЗадачи");
		Отказ = Истина;
	КонецЕсли;
	
	Если МаршрутТранзит.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ошибка при автоматической установке маршрута, сообщите на 777'"),,, "МаршрутПредставление");
		Отказ = Истина;
	КонецЕсли;
	
	Если ТранзитныйСклад.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ошибка при автоматической установке маршрута, сообщите на 777'"),,, "МаршрутПредставление");
		Отказ = Истина;
	КонецЕсли;
	
//	АдресДоставки = ПолучитьАдресАбонента(ТранзитныйСклад);
//	АдресАбонента =	ПолучитьАдресАбонента(Отправитель);	
	

	Если ПустаяСтрока(АдресДоставки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо установить адрес партнера или склада в карточке получателя.'"));
		Отказ = Истина;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыМеста = Новый Структура;
	ПараметрыМеста.Вставить("НачалоВыполненияЗадачи",			НачалоВыполнения);
	ПараметрыМеста.Вставить("Отправитель", 						Отправитель);
	ПараметрыМеста.Вставить("АдресОтправителя", 				АдресОтправителя);
	ПараметрыМеста.Вставить("Владелец", 						Получатель);
	ПараметрыМеста.Вставить("ТранзитныйСклад", 					ТранзитныйСклад);
	ПараметрыМеста.Вставить("АдресДоставки", 					АдресДоставки);
	ПараметрыМеста.Вставить("ВариантМаршрута", 					МаршрутТранзит);
	ПараметрыМеста.Вставить("ТекстЗадачи", 						ТекстЗадачи);
	ПараметрыМеста.Вставить("Транзит", 							Истина);
	ПараметрыМеста.Вставить("ИспользоватьОтображениеКакЗадачи",	ИспользоватьОтображениеКакЗадачи);

	Возврат СоздатьЗадачу(ПараметрыМеста);

КонецФункции // СоздатьТранзитнуюЗадачуНаМаршрут()
 
&НаСервере
Функция СоздатьЗадачу(ПараметрыМеста)

	НачатьТранзакцию();
	
	НовоеМесто = Справочники.МестаДоставки.СоздатьЭлемент();
	Период	   = ПараметрыМеста.НачалоВыполненияЗадачи;
	
	ЗаполнитьЗначенияСвойств(НовоеМесто, ПараметрыМеста);
	НовоеМесто.Транзит		 					= ПараметрыМеста.Транзит;
	НовоеМесто.ЭтоЗадача	 					= Истина;
	НовоеМесто.Ответственный 					= ПараметрыСеанса.ТекущийПользователь;
	НовоеМесто.ТранзитныйСклад					= ПараметрыМеста.ТранзитныйСклад;
	Если ТипЗнч(ПараметрыМеста.Отправитель) = Тип("СправочникСсылка.Партнеры") Тогда
		Если КодУжеУпартнера Тогда
			НовоеМесто.ЗаполнятьУникальныйИдентификатор = Ложь;
		Иначе
			НовоеМесто.ЗаполнятьУникальныйИдентификатор = Истина;
		КонецЕсли;
	Иначе
		НовоеМесто.ЗаполнятьУникальныйИдентификатор = Ложь;
	КонецЕсли;
	НовоеМесто.УстановитьНовыйКод();
	
	Попытка
	    НовоеМесто.Записать();			
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		ОтменитьТранзакцию();
		Возврат Неопределено;
	КонецПопытки; 
	
	НаборЗаписей = РегистрыСведений.ЗадачиНаМаршрут.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Период);
	НаборЗаписей.Отбор.Место.Установить(НовоеМесто.Ссылка);
	
	Запись 				  = НаборЗаписей.Добавить();
	Запись.Период		  = Период;
	Запись.Место		  = НовоеМесто.Ссылка;
	
	Запись.СтатусОтгрузки = Перечисления.СтатусыОтгрузкиМест.ЗадачаПоставлена;
	
	Запись.ВариантМаршрута= ПараметрыМеста.ВариантМаршрута;
	Запись.Отправитель    = ПараметрыМеста.Отправитель;
	Запись.Пользователь	  = ПараметрыСеанса.ТекущийПользователь;
	Запись.АдресОтправителя = ПараметрыМеста.АдресОтправителя;
	
	Попытка
	    НаборЗаписей.Записать();			
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		ОтменитьТранзакцию();
		Возврат Неопределено;
	КонецПопытки;
	ЗаписатьКТС_ГеографическиеРасположенияПартнеров(ПараметрыМеста.Отправитель, ПараметрыМеста.АдресОтправителя);
	
	ЗафиксироватьТранзакцию();
	
	
	Результат = Новый Структура;
	Результат.Вставить("Задача", НовоеМесто.Ссылка);
	Результат.Вставить("Получатель", Получатель);
	Результат.Вставить("ПолучательПредставление", Строка(Получатель));
	Результат.Вставить("ЗадачаПредставление", Строка(НовоеМесто.Ссылка));
	Результат.Вставить("Маршрут", Маршрут);
	
	Возврат Результат;

КонецФункции // СоздатьЗадачи()


&НаСервере
Процедура ЗаписатьКТС_ГеографическиеРасположенияПартнеров(Владелец,АдресДоставки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	Владелец,
		|	ГородСклад		
		|ИЗ
		|	Справочник.КТС_ГеографическиеРасположенияПартнеров
		|ГДЕ
		|	Владелец 	= &Владелец
		|И	ГородСклад	= &ГородСклад
		|";
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("ГородСклад", АдресДоставки);
    Если Запрос.Выполнить().Пустой() Тогда		
		НовыйОбъект = Справочники.КТС_ГеографическиеРасположенияПартнеров.СоздатьЭлемент();
		НовыйОбъект.Владелец 	= Владелец;
		НовыйОбъект.ГородСклад 	= АдресДоставки;
		НовыйОбъект.УстановитьНовыйКод();
		Попытка
			НовыйОбъект.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());	
		КонецПопытки;
	КонецЕсли;
	

КонецПроцедуры //ЗаписатьКТС_ГеографическиеРасположенияПартнеров ()


&НаСервере
Функция ПолучитьАдресАбонента(Абонент)
   	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	
	Если ТипЗнч(Абонент) = Тип("СправочникСсылка.Партнеры") Тогда
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Представление КАК Адрес
		               |ИЗ
		               |	Справочник.Партнеры.КонтактнаяИнформация
		               |ГДЕ
		               |	Ссылка = &Абонент
		               |	И Представление <> """"
		               |	И Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Представление КАК Адрес
		               |ИЗ
		               |	Справочник.Склады.КонтактнаяИнформация
		               |ГДЕ
		               |	Ссылка = &Абонент
		               |	И Представление <> """"
		               |	И Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)";			   
	КонецЕсли;
				   
	Запрос.УстановитьПараметр("Абонент", Абонент);
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Адрес, "");
    УстановитьПривилегированныйРежим(Ложь);

КонецФункции // ПолучитьАдресАбонента()



