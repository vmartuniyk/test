
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Выполняем заполнение по умолчанию.
	КоличествоШтрихкодов 			= 4000;
	КоличествоСимволовВШтрихкоде    = 13;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СформироватьШтрихкоды(Команда)
	
	Если КоличествоШтрихкодов = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо указать количество штрихкодов.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),, "КоличествоШтрихкодов");
		Возврат;
	КонецЕсли;
	
	СформироватьШтрихкодыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечататьШтрихкоды(Команда)
	
	КоличествоСгенерированныхШтрихкодов = ТабицаШтрихкодов.Количество();
	Если КоличествоСгенерированныхШтрихкодов = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Для печати сгенерируйте список штрихкодов.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		Возврат;
	КонецЕсли;
	
	ТабДокумент = СформироватьПечатныеФормы();
	ТабДокумент.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСписок(Команда)
	ТабицаШтрихкодов.Очистить();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьШтрихкодыНаСервере()

	УстановитьПривилегированныйРежим(Истина);
	
	ПрефиксВнутреннегоШтрихкода = Формат(Константы.ПрефиксШтучногоШтрихкода.Получить(),"ЧЦ=2; ЧН=; ЧВН=");
	ПрефиксШтучногоТовара		= РегистрыСведений.ШтрихкодыНоменклатуры.ПрефиксШтучногоТовара();
	
	НовыйШтрихкод   	= "";
	ОписаниеТипаЧисла 	= Новый ОписаниеТипов("Число");
	
	Для Индекс = 1 По КоличествоШтрихкодов Цикл
		
		КодБаза					= Мин(РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьМаксимальноеЗначениеКодаШтрихкодаЧислом(ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода) + 1, 99999999);
		КодТаблица				= ОписаниеТипаЧисла.ПривестиЗначение(Сред(НовыйШтрихкод, 5, 8));
		Код						= Макс(КодБаза, КодТаблица) + 1;
		
	    НовыйШтрихкод   		= РегистрыСведений.ШтрихкодыНоменклатуры.ПолучитьШтрихкодПоКоду(Код, ПрефиксШтучногоТовара, ПрефиксВнутреннегоШтрихкода);
		НоваяСтрока 			= ТабицаШтрихкодов.Добавить();
		НоваяСтрока.Штрихкод    = СокрЛП(НовыйШтрихкод);
			
	КонецЦикла; 

КонецПроцедуры // СформитьШтрихкодыНаСервере()

&НаСервере
Функция СформироватьПечатныеФормы()

	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент 						= Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПРИХОДНЫЙ_ОРДЕР_ПЕЧАТЬ_ШТРИХКОДА";
	БибилиотекаПечатныхФорм 			= git_ПереопределениеОбработчиковСервер.ПолучитьВнешнийОбъектПоИмени("Обработка 'Внешние печатные формы'");
	Макет								= БибилиотекаПечатныхФорм.ПолучитьМакет("ПФ_MXL_ПриходныйОрдерНаТовары_МакетШтрихкода");
	
	НомерТипаДокумента = 0;	
	Для Каждого СтрокаТаблицы Из ТабицаШтрихкодов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
			
		ОбластьШтрихкода 	= Макет.ПолучитьОбласть("ОбластьШтрихкода");
		//ВнешняяКомпонента 	= Обработки.ПечатьЭтикетокИЦенников.ПодключитьВнешнююКомпонентуПечатиШтрихкода();	
		Эталон 				= Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет("Эталон");
		КоличествоМиллиметровВПикселе = Эталон.Рисунки.Квадрат100Пикселей.Высота / 100;

		Рисунок = ОбластьШтрихкода.Рисунки[0];
		
		ПараметрыШтрихкода = Новый Структура;
		ПараметрыШтрихкода.Вставить("Ширина",          Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселе));
		ПараметрыШтрихкода.Вставить("Высота",          Окр(Рисунок.Высота / КоличествоМиллиметровВПикселе));
		ПараметрыШтрихкода.Вставить("Штрихкод",        СокрЛП(СтрокаТаблицы.Штрихкод));
		ПараметрыШтрихкода.Вставить("ТипКода",         4);
		ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
		ПараметрыШтрихкода.Вставить("РазмерШрифта",    10);
		
		Рисунок.Картинка = МенеджерОборудованияСервер.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
		Рисунок.Лево	 = 3;
		
		ОбластьКодТовара 	 		   = Макет.ПолучитьОбласть("КодТовара");
		ОбластьКодТовара.Параметры.Код = "";
		
		ТабДокумент.Вывести(ОбластьКодТовара);
		ТабДокумент.Вывести(ОбластьШтрихкода);
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции // СформироватьПечатныеФормы()
 

#КонецОбласти