
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Параметры.Свойство("Заказ")= Ложь Тогда
		ТекстСообщения = НСтр("ru='Ссылка на Заказ не найденная. Обратитесь в тех. поддержку!'");
	    ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;	
	КонецЕсли;
	Заказ = Параметры.Заказ;
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
		Склад = Заказ.СкладОтправитель;
	Иначе 
		Склад = Заказ.Склад;
	КонецЕсли;
	
	ТолькоПросмотр =Не РольДоступна("ПолныеПрава");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьНаКлиенте();

КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьНаКлиенте();
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Если Поле.Имя = "ТоварыНоменклатура" Тогда 
		Если ТекущиеДанные.Свойство("Номенклатура")=Неопределено Тогда
			Возврат;	
		КонецЕсли;
		ФормаОткрытия = ПолучитьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", Новый Структура("Ключ", ТекущиеДанные.Номенклатура));
		ФормаОткрытия.ТолькоПросмотр = ТолькоПросмотр;
		ФормаОткрытия.Открыть();
	КонецЕсли;
	
	Если Поле.Имя = "ТоварыОжидается" Тогда 
		Если ТекущиеДанные.Свойство("Ожидается")=Неопределено Тогда
			Возврат;	
		КонецЕсли;
		
		Если ТекущиеДанные.Ожидается = Ложь Тогда
			Возврат;	
		КонецЕсли;
		
		СформироватьОтчетОжидаемыеТовары(ТекущиеДанные.Номенклатура);
	Иначе 
		Элементы.ГруппаРасшифровкаОжидпется.Видимость = Ложь;
	КонецЕсли;

	Если	Поле.Имя = "ТоварыДокументОжидается" 
		Или Поле.Имя = "ТоварыДокументНаТранзитномСкладе" 
		Или Поле.Имя = "ТоварыДокументВПути" 
		Или Поле.Имя = "ТоварыДокументОжидаетОтгрузки" 
		Или Поле.Имя = "ТоварыДокументОтгружено" Тогда 
		
		Если ТекущиеДанные.Свойство("Документ")=Неопределено Тогда
			Возврат;	
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.Документ) Тогда
			Возврат;	
		КонецЕсли;
		
		ШаблонИмяФормы 		= "Документ.%ИмяДокумента%.Форма.ФормаДокумента";
		ИмяФормыОткрытия	= СтрЗаменить(ШаблонИмяФормы,"%ИмяДокумента%",ПолучитьИмяДокумента(ТекущиеДанные.Документ)); 
		ФормаОткрытия 		= ПолучитьФорму(ИмяФормыОткрытия, Новый Структура("Ключ", ТекущиеДанные.Документ));
		ФормаОткрытия.ТолькоПросмотр = ТолькоПросмотр;
		ФормаОткрытия.Открыть();
	КонецЕсли;
	
	Если 	Поле.Имя = "ТоварыМестоНаТранзитномСкладе" 
		Или Поле.Имя = "ТоварыМестоВПути" 
		Или Поле.Имя = "ТоварыМестоОжидается" Тогда 
		
		Если ТекущиеДанные.Свойство("Место") = Неопределено Тогда
			Возврат;	
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущиеДанные.Место) Тогда
			Возврат;	
		КонецЕсли;
		
		ФормаОткрытия = ПолучитьФорму("Справочник.МестаДоставки.Форма.ФормаЭлемента", Новый Структура("Ключ", ТекущиеДанные.Место));
		ФормаОткрытия.ТолькоПросмотр = ТолькоПросмотр;
		ФормаОткрытия.Открыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Данные_Расшифровки = ПолучитьДанныеРасшифровки(Расшифровка);
	Если Данные_Расшифровки <> Неопределено Тогда
		ОткрытьЗначение(Данные_Расшифровки);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьИмяДокумента(ДокументСсылка)

	УстановитьПривилегированныйРежим(Истина);
	
	Возврат	ДокументСсылка.Метаданные().Имя;

КонецФункции // ПолучитьИмяДокумента()


&НаКлиенте
Процедура СформироватьНаКлиенте()
	
	Если Не ЗначениеЗаполнено(Заказ) Тогда 
		Возврат;
	КонецЕсли;
			
	ПараметрыФормы 	 		= ПолучитьПараметрыФормы();
	ФормаОбеспечения 		= ПолучитьФорму("Обработка.СостояниеОбеспечения.Форма.СостояниеОбеспеченияЗаказа", ПараметрыФормы, ЭтаФорма);
	ДанныеФормыКоллекция	= ФормаОбеспечения.Объект.Товары;
	ЗаказПриИзмененииНаСервере(ДанныеФормыКоллекция);
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыФормы()

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заказ"					,Заказ.Ссылка);
	ПараметрыФормы.Вставить("ТолькоПросмотр"		,Ложь);
	ПараметрыФормы.Вставить("АдресТовары"			,ПоместитьВоВременноеХранилище(Заказ.Товары.Выгрузить(), УникальныйИдентификатор));
	ПараметрыФормы.Вставить("Склад"					,Склад);
	
	Если ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказКлиента") Тогда 
		ПараметрыФормы.Вставить("ЖелаемаяДатаОтгрузки"	,Заказ.ЖелаемаяДатаОтгрузки);
		ПараметрыФормы.Вставить("НеОтгружатьЧастями"	,Заказ.НеОтгружатьЧастями);
	ИначеЕсли ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда	
		ПараметрыФормы.Вставить("Заказ"					,Заказ.Ссылка);
		ПараметрыФормы.Вставить("ЖелаемаяДатаОтгрузки"	,?(ЗначениеЗаполнено(Заказ.ЖелаемаяДатаПоступления), Заказ.ЖелаемаяДатаПоступления - Заказ.ДлительностьПеремещения * 86400, Неопределено));
	ИначеЕсли ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда	 
		ПараметрыФормы.Вставить("Назначение"			,?(Заказ.Назначение.Пустая(), Заказ.НазначениеТовары, Заказ.Назначение));
		ПараметрыФормы.Вставить("ЖелаемаяДатаОтгрузки"	,?(ЗначениеЗаполнено(Заказ.ЖелаемаяДатаПоступления), Заказ.ЖелаемаяДатаПоступления - Заказ.ДлительностьСборкиРазборки * 86400, Неопределено));		
	ИначеЕсли ТипЗнч(Заказ) = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление") Тогда	 
		ПараметрыФормы.Вставить("ЖелаемаяДатаОтгрузки"	,Заказ.ЖелаемаяДатаОтгрузки);
		ПараметрыФормы.Вставить("НеОтгружатьЧастями"	,Заказ.НеОтгружатьЧастями);
	КонецЕсли;
	
	
	Возврат ПараметрыФормы;

КонецФункции // ПолучитьПараметрыФормы()

&НаСервере
Процедура ЗаказПриИзмененииНаСервере(ДанныеФормыКоллекция)

	УстановитьПривилегированныйРежим(Истина);
	Запрос 	= Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаМесторасположениеТоваров();
	Запрос.УстановитьПараметр("СостояниеОбеспечения",ДанныеФормыКоллекция.Выгрузить());
	Запрос.УстановитьПараметр("Заказ"				,Заказ);
	Запрос.УстановитьПараметр("Склад"				,Склад);	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());	          
КонецПроцедуры

	
&НаСервере
Функция ПолучитьТекстЗапросаМесторасположениеТоваров()
	
	ТекстЗапрос = 
	
	////////////////////////////////////////////////////////////////////////////////
	//0. Загружаем состояние обеспечения по заказу
	"ВЫБРАТЬ
	|	СостояниеОбеспечения.НомерСтроки,
	|	ВЫРАЗИТЬ(СостояниеОбеспечения.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	СостояниеОбеспечения.КоличествоУпаковок,
	|	СостояниеОбеспечения.Упаковка,
	|	СостояниеОбеспечения.ЕдиницаИзмерения,
	|	СостояниеОбеспечения.ВНаличии,
	|	СостояниеОбеспечения.ОбеспеченоПоступлением,
	|	СостояниеОбеспечения.НеОбеспечено,
	|	СостояниеОбеспечения.СостояниеНаличия,
	|	СостояниеОбеспечения.ПолностьюИлиЧастичноВНаличии,
	|	СостояниеОбеспечения.ЧастичноИлиНетВНаличии,
	|	СостояниеОбеспечения.ВариантОбеспечения
	|ПОМЕСТИТЬ ВТ_СостояниеОбеспечения
	|ИЗ
	|	&СостояниеОбеспечения КАК СостояниеОбеспечения
	|;
	////////////////////////////////////////////////////////////////////////////////
	// 1.
	|ВЫБРАТЬ
	|	Модуль_ДоступныеСклады.Склад
	|ПОМЕСТИТЬ ВТ_ТранзитныеСклады
	|ИЗ
	|	РегистрСведений.Модуль_ДоступныеСклады КАК Модуль_ДоступныеСклады
	|ГДЕ
	|	Модуль_ДоступныеСклады.Транзитный = ИСТИНА
	|	И Модуль_ДоступныеСклады.Склад.ПометкаУдаления = ЛОЖЬ
	|;
	|
	////////////////////////////////////////////////////////////////////////////////
	//
	|ВЫБРАТЬ
	|	Назначения.Ссылка
	|ПОМЕСТИТЬ ВТ_Назначения
	|ИЗ
	|	Справочник.Назначения КАК Назначения
	|ГДЕ
	|	Назначения.ПометкаУдаления = ЛОЖЬ
	|	И Назначения.Заказ = &Заказ
	|;
	|
	////////////////////////////////////////////////////////////////////////////////
	//
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбеспечениеЗаказов.Регистратор,
	|	ОбеспечениеЗаказов.Номенклатура,
	|	ВЫБОР
	|		КОГДА ОбеспечениеЗаказов.НаличиеПодЗаказ + ОбеспечениеЗаказов.НаличиеСоСклада = 0
	|			ТОГДА ОбеспечениеЗаказов.Заказано
	|		ИНАЧЕ ОбеспечениеЗаказов.НаличиеПодЗаказ + ОбеспечениеЗаказов.НаличиеСоСклада
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ВТ_Обеспечение
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов КАК ОбеспечениеЗаказов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Назначения КАК ВТ_Назначения
	|		ПО ОбеспечениеЗаказов.Назначение = ВТ_Назначения.Ссылка
	|			И (ОбеспечениеЗаказов.Склад = &Склад)
	|ГДЕ
	|	ОбеспечениеЗаказов.Назначение В
	|			(ВЫБРАТЬ
	|				ВТ_Назначения.Ссылка
	|			ИЗ
	|				ВТ_Назначения)
	|	И ОбеспечениеЗаказов.Регистратор <> &Заказ
	|;
	|
	////////////////////////////////////////////////////////////////////////////////
	//
	|ВЫБРАТЬ
	|	МестаДоставки.Ссылка КАК Место
	|ПОМЕСТИТЬ ВТ_МестаПоНазначению
	|ИЗ
	|	Справочник.МестаДоставки КАК МестаДоставки
	|ГДЕ
	|	МестаДоставки.ПометкаУдаления = ЛОЖЬ
	|	И МестаДоставки.Назначение В
	|			(ВЫБРАТЬ
	|				ВТ_Назначения.Ссылка
	|			ИЗ
	|				ВТ_Назначения)
	|	И МестаДоставки.Транзит = ЛОЖЬ
	|;
	|
	////////////////////////////////////////////////////////////////////////////////
	//
	|ВЫБРАТЬ
	|	МАКСИМУМ(ОтгрузкаМест.Период) КАК Период,
	|	ОтгрузкаМест.Место
	|ПОМЕСТИТЬ ВТ_ЗначениеОтгрузки
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест КАК ОтгрузкаМест
	|ГДЕ
	|	ОтгрузкаМест.Место В
	|			(ВЫБРАТЬ
	|				ВТ_МестаПоНазначению.Место
	|			ИЗ
	|				ВТ_МестаПоНазначению)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтгрузкаМест.Место
	|;
	|
	////////////////////////////////////////////////////////////////////////////////
	//
	|ВЫБРАТЬ
	|	ОтгрузкаМест.Место КАК Место,
	|	ВЫБОР
	|		КОГДА ОтгрузкаМест.СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаСкладеОтгрузки,
	|	ВЫБОР
	|		КОГДА ОтгрузкаМест.СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВПути,
	|	ОтгрузкаМест.СтатусОтгрузки КАК СтатусОтгрузки
	|ПОМЕСТИТЬ ВТ_ОтгруженыеМеста
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест КАК ОтгрузкаМест
	|
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗначениеОтгрузки КАК ВТ_ЗначениеОтгрузки
	|ПО ОтгрузкаМест.Период = ВТ_ЗначениеОтгрузки.Период
	|И 	ОтгрузкаМест.Место = ВТ_ЗначениеОтгрузки.Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестаПоДокументам.Место КАК Место,
	|	ВЫБОР
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.РасходныйОрдерНаТовары
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары).Распоряжение
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.КТС_ОтгрузкаТоваров
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.КТС_ОтгрузкаТоваров).Распоряжение
	|	КОНЕЦ КАК Документ
	|ПОМЕСТИТЬ ВТ_ДокументПоМесту
	|ИЗ
	|	РегистрСведений.МестаПоДокументам КАК МестаПоДокументам
	|ГДЕ
	|	МестаПоДокументам.Место В
	|			(ВЫБРАТЬ
	|				ВТ_ОтгруженыеМеста.Место
	|			ИЗ
	|				ВТ_ОтгруженыеМеста)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестаНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(МестаНоменклатуры.Количество) КАК Количество,
	|	ВТ_ОтгруженыеМеста.НаСкладеОтгрузки КАК НаТранзитномСкладе,
	|	ВТ_ОтгруженыеМеста.ВПути КАК ВПути,
	|	ВТ_ДокументПоМесту.Документ КАК Документ,
	|	МестаНоменклатуры.Место КАК Место,
	|	ВТ_ОтгруженыеМеста.СтатусОтгрузки КАК СтатусОтгрузки
	|ПОМЕСТИТЬ ВТ_НоменклатураПоМесту
	|ИЗ
	|	РегистрСведений.МестаНоменклатуры КАК МестаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОтгруженыеМеста КАК ВТ_ОтгруженыеМеста
	|		ПО МестаНоменклатуры.Место = ВТ_ОтгруженыеМеста.Место
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументПоМесту КАК ВТ_ДокументПоМесту
	|		ПО МестаНоменклатуры.Место = ВТ_ДокументПоМесту.Место
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОтгруженыеМеста.НаСкладеОтгрузки,
	|	ВТ_ОтгруженыеМеста.ВПути,
	|	ВТ_ДокументПоМесту.Документ,
	|	МестаНоменклатуры.Номенклатура,
	|	МестаНоменклатуры.Место,
	|	ВТ_ОтгруженыеМеста.СтатусОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестаДоставки.Ссылка КАК Место
	|ПОМЕСТИТЬ ВТ_МестаПоНазначениюОжидаются
	|ИЗ
	|	Справочник.МестаДоставки КАК МестаДоставки
	|ГДЕ
	|	МестаДоставки.ПометкаУдаления = ЛОЖЬ
	|	И МестаДоставки.Назначение В
	|			(ВЫБРАТЬ
	|				ВТ_Назначения.Ссылка
	|			ИЗ
	|				ВТ_Назначения)
	|	И МестаДоставки.Транзит = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ОтгрузкаМест.Период) КАК Период,
	|	ОтгрузкаМест.Место
	|ПОМЕСТИТЬ ВТ_ЗначениеОтгрузкиОжидаются
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест КАК ОтгрузкаМест
	|ГДЕ
	|	ОтгрузкаМест.Место В
	|			(ВЫБРАТЬ
	|				ВТ_МестаПоНазначению.Место
	|			ИЗ
	|				ВТ_МестаПоНазначениюОжидаются КАК ВТ_МестаПоНазначению)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтгрузкаМест.Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтгрузкаМест.Место КАК Место,
	|	ВЫБОР
	|		КОГДА ОтгрузкаМест.СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаТранзитномСкладе,
	|	ВЫБОР
	|		КОГДА ОтгрузкаМест.СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Ожидается
	|ПОМЕСТИТЬ ВТ_ОтгруженыеМестаОжидаются
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест КАК ОтгрузкаМест
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗначениеОтгрузкиОжидаются КАК ВТ_ЗначениеОтгрузкиОжидаются
	|		ПО ОтгрузкаМест.Место = ВТ_ЗначениеОтгрузкиОжидаются.Место
	|			И ОтгрузкаМест.Период = ВТ_ЗначениеОтгрузкиОжидаются.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестаПоДокументам.Место КАК Место,
	|	ВЫБОР
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.РасходныйОрдерНаТовары
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары).Распоряжение
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.КТС_ОтгрузкаТоваров
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.КТС_ОтгрузкаТоваров).Распоряжение
	|	КОНЕЦ КАК Документ
	|ПОМЕСТИТЬ ВТ_ДокументПоМестуОжидается
	|ИЗ
	|	РегистрСведений.МестаПоДокументам КАК МестаПоДокументам
	|ГДЕ
	|	МестаПоДокументам.Место В
	|			(ВЫБРАТЬ
	|				ВТ_ОтгруженыеМестаОжидаются.Место
	|			ИЗ
	|				ВТ_ОтгруженыеМестаОжидаются)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестаНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(МестаНоменклатуры.Количество) КАК Количество,
	|	ВТ_ДокументПоМестуОжидается.Документ КАК Документ,
	|	ВТ_ДокументПоМестуОжидается.Место КАК Место
	|ПОМЕСТИТЬ ВТ_ОжидаетсяМестом
	|ИЗ
	|	РегистрСведений.МестаНоменклатуры КАК МестаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОтгруженыеМестаОжидаются КАК ВТ_ОтгруженыеМестаОжидаются
	|		ПО МестаНоменклатуры.Место = ВТ_ОтгруженыеМестаОжидаются.Место
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументПоМестуОжидается КАК ВТ_ДокументПоМестуОжидается
	|		ПО МестаНоменклатуры.Место = ВТ_ДокументПоМестуОжидается.Место
	|
	|СГРУППИРОВАТЬ ПО
	|	МестаНоменклатуры.Номенклатура,
	|	ВТ_ДокументПоМестуОжидается.Место,
	|	ВТ_ДокументПоМестуОжидается.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбеспечениеЗаказовОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ОбеспечениеЗаказовОбороты.ЗаказаноОборот) КАК ЗаказаноОборот
	|ПОМЕСТИТЬ ВТ_ОжидаетсяПодОбеспечение
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			Назначение В
	|				(ВЫБРАТЬ
	|					ВТ_Назначения.Ссылка
	|				ИЗ
	|					ВТ_Назначения)) КАК ОбеспечениеЗаказовОбороты
	|ГДЕ
	|	ОбеспечениеЗаказовОбороты.Регистратор <> &Заказ
	|	И НЕ ОбеспечениеЗаказовОбороты.Регистратор ССЫЛКА Документ.ЗаказНаПеремещение
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбеспечениеЗаказовОбороты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыКлиентовОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ЗаказыКлиентовОбороты.ЗаказаноРасход) КАК ЗаказаноРасход,
	|	ЗаказыКлиентовОбороты.Регистратор КАК Документ
	|ПОМЕСТИТЬ ВТ_ОтгруженыеТовары
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			ЗаказКлиента = &Заказ
	|				И Склад = &Склад
	|				И Склад.ИспользоватьОрдернуюСхемуПриОтгрузке = ЛОЖЬ) КАК ЗаказыКлиентовОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыКлиентовОбороты.Регистратор,
	|	ЗаказыКлиентовОбороты.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказыКлиентовОбороты.Номенклатура,
	|	СУММА(ТоварыКОтгрузкеОбороты.КОтгрузкеРасход),
	|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			ЗаказКлиента = &Заказ
	|				И Склад = &Склад
	|				И Склад.ИспользоватьОрдернуюСхемуПриОтгрузке = ИСТИНА) КАК ЗаказыКлиентовОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Обороты(, , Регистратор, ) КАК ТоварыКОтгрузкеОбороты
	|		ПО ЗаказыКлиентовОбороты.Регистратор = ТоварыКОтгрузкеОбороты.ДокументОтгрузки
	|			И ЗаказыКлиентовОбороты.Номенклатура = ТоварыКОтгрузкеОбороты.Номенклатура
	|			И (ТоварыКОтгрузкеОбороты.Регистратор ССЫЛКА Документ.РасходныйОрдерНаТовары)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыКлиентовОбороты.Номенклатура,
	|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыКлиентовОбороты.Номенклатура КАК Номенклатура,
	|	СУММА(ЗаказыКлиентовОбороты.ЗаказаноРасход) КАК ЗаказаноРасход,
	|	ЗаказыКлиентовОбороты.Регистратор КАК Документ
	|ПОМЕСТИТЬ ВТ_ТоварыКОтгрузке
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			ЗаказКлиента = &Заказ
	|				И Склад = &Склад
	|				И Склад.ИспользоватьОрдернуюСхемуПриОтгрузке = ИСТИНА) КАК ЗаказыКлиентовОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыКлиентовОбороты.Номенклатура,
	|	ЗаказыКлиентовОбороты.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.Номенклатура КАК Номенклатура,
	|	КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.КПоступлениюКонечныйОстаток - КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.КПоступлениюНачальныйОстаток КАК КоличествоУпаковок,
	|	ЛОЖЬ КАК НетВНаличии,
	|	ИСТИНА КАК Ожидается,
	|	ЛОЖЬ КАК НаТранзитномСкладе,
	|	ЛОЖЬ КАК ВПути,
	|	ЛОЖЬ КАК НаСкладеОтгрузки,
	|	NULL КАК ОжидаетОтгрузки,
	|	ЛОЖЬ КАК Отгружено,
	|	NULL КАК Документ,
	|	NULL КАК Место
	|ПОМЕСТИТЬ ВТ_ТоварыПодЗаказ
	|ИЗ
	|	РегистрНакопления.КТС_ТоварыКПоступлениюПодОбеспечение.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			Назначение В
	|				(ВЫБРАТЬ
	|					ВТ_Назначения.Ссылка
	|				ИЗ
	|					ВТ_Назначения)) КАК КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты
	|ГДЕ
	|	КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.КПоступлениюКонечныйОстаток > 0
	|	И НЕ (КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.Номенклатура, КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.Регистратор) В
	|				(ВЫБРАТЬ
	|					ВТ_ОжидаетсяМестом.Номенклатура,
	|					ВТ_ОжидаетсяМестом.Документ
	|				ИЗ
	|					ВТ_ОжидаетсяМестом)
	|	И КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.КПоступлениюОборот <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОжидаетсяПодОбеспечение.Номенклатура,
	|	ВТ_ОжидаетсяПодОбеспечение.ЗаказаноОборот,
	|	ЛОЖЬ КАК НетВНаличии,
	|	ИСТИНА КАК Ожидается,
	|	ЛОЖЬ КАК НаТранзитномСкладе,
	|	ЛОЖЬ КАК ВПути,
	|	ЛОЖЬ КАК НаСкладеОтгрузки,
	|	NULL,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТ_ОжидаетсяПодОбеспечение КАК ВТ_ОжидаетсяПодОбеспечение
	|ГДЕ
	|	ВТ_ОжидаетсяПодОбеспечение.ЗаказаноОборот > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОжидаетсяМестом.Номенклатура,
	|	ВТ_ОжидаетсяМестом.Количество,
	|	ЛОЖЬ КАК НетВНаличии,
	|	ИСТИНА КАК Ожидается,
	|	ЛОЖЬ КАК НаТранзитномСкладе,
	|	ЛОЖЬ КАК ВПути,
	|	ЛОЖЬ КАК НаСкладеОтгрузки,
	|	NULL,
	|	ЛОЖЬ,
	|	ВТ_ОжидаетсяМестом.Документ,
	|	ВТ_ОжидаетсяМестом.Место
	|ИЗ
	|	ВТ_ОжидаетсяМестом КАК ВТ_ОжидаетсяМестом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбеспечениеЗаказовОстатки.Номенклатура,
	|	ОбеспечениеЗаказовОстатки.НаличиеПодЗаказОстаток + ОбеспечениеЗаказовОстатки.НаличиеСоСкладаОстаток,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	NULL,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов.Остатки(
	|			,
	|			Склад В
	|				(ВЫБРАТЬ
	|					ВТ_ТранзитныеСклады.Склад
	|				ИЗ
	|					ВТ_ТранзитныеСклады)) КАК ОбеспечениеЗаказовОстатки
	|ГДЕ
	|	ОбеспечениеЗаказовОстатки.Назначение В
	|			(ВЫБРАТЬ
	|				ВТ_Назначения.Ссылка
	|			ИЗ
	|				ВТ_Назначения)
	|	И ОбеспечениеЗаказовОстатки.КЗаказуОстаток = 0
	|	И ОбеспечениеЗаказовОстатки.ПотребностьОстаток <> 0
	|	И ОбеспечениеЗаказовОстатки.НаличиеПодЗаказОстаток + ОбеспечениеЗаказовОстатки.НаличиеСоСкладаОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_НоменклатураПоМесту.Номенклатура,
	|	ВТ_НоменклатураПоМесту.Количество - ЕСТЬNULL(ВТ_Обеспечение.Количество, 0),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА ВТ_НоменклатураПоМесту.СтатусОтгрузки <> ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ПогруженоВМашину)
	|				И ВТ_НоменклатураПоМесту.СтатусОтгрузки <> ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_НоменклатураПоМесту.СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ПогруженоВМашину)
	|				ИЛИ ВТ_НоменклатураПоМесту.СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ЛОЖЬ КАК НаСкладеОтгрузки,
	|	NULL,
	|	ЛОЖЬ,
	|	ВТ_НоменклатураПоМесту.Документ,
	|	ВТ_НоменклатураПоМесту.Место
	|ИЗ
	|	ВТ_НоменклатураПоМесту КАК ВТ_НоменклатураПоМесту
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обеспечение КАК ВТ_Обеспечение
	|		ПО ВТ_НоменклатураПоМесту.Номенклатура = ВТ_Обеспечение.Номенклатура
	|			И ВТ_НоменклатураПоМесту.Документ = ВТ_Обеспечение.Регистратор
	|ГДЕ
	|	НЕ (ВТ_НоменклатураПоМесту.Документ, ВТ_НоменклатураПоМесту.Номенклатура) В
	|				(ВЫБРАТЬ
	|					ВТ_Обеспечение.Регистратор,
	|					ВТ_Обеспечение.Номенклатура
	|				ИЗ
	|					ВТ_Обеспечение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_СостояниеОбеспечения.Номенклатура,
	|	СУММА(ВТ_СостояниеОбеспечения.ВНаличии),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ИСТИНА КАК НаСкладеОтгрузки,
	|	NULL,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТ_СостояниеОбеспечения КАК ВТ_СостояниеОбеспечения
	|ГДЕ
	|	ВТ_СостояниеОбеспечения.ВНаличии > 0
	|	И ВТ_СостояниеОбеспечения.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_СостояниеОбеспечения.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТоварыКОтгрузке.Номенклатура,
	|	ВТ_ТоварыКОтгрузке.ЗаказаноРасход - ЕСТЬNULL(ВТ_ОтгруженыеТовары.ЗаказаноРасход, 0),
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ КАК НаСкладеОтгрузки,
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ВТ_ТоварыКОтгрузке.Документ,
	|	NULL
	|ИЗ
	|	ВТ_ТоварыКОтгрузке КАК ВТ_ТоварыКОтгрузке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОтгруженыеТовары КАК ВТ_ОтгруженыеТовары
	|		ПО ВТ_ТоварыКОтгрузке.Номенклатура = ВТ_ОтгруженыеТовары.Номенклатура
	|			И ВТ_ТоварыКОтгрузке.Документ = ВТ_ОтгруженыеТовары.Документ
	|ГДЕ
	|	ВТ_ТоварыКОтгрузке.ЗаказаноРасход - ЕСТЬNULL(ВТ_ОтгруженыеТовары.ЗаказаноРасход, 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ОтгруженыеТовары.Номенклатура,
	|	ВТ_ОтгруженыеТовары.ЗаказаноРасход,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ КАК НаСкладеОтгрузки,
	|	ЛОЖЬ,
	|	ИСТИНА,
	|	ВТ_ОтгруженыеТовары.Документ,
	|	NULL
	|ИЗ
	|	ВТ_ОтгруженыеТовары КАК ВТ_ОтгруженыеТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Номенклатура,
	|	ЗаказКлиентаТовары.КоличествоУпаковок,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ИСТИНА КАК НаСкладеОтгрузки,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка = &Заказ
	|	И ЗаказКлиентаТовары.Отменено = ЛОЖЬ
	|	И ЗаказКлиентаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТоварыПодЗаказ.Номенклатура КАК Номенклатура,
	|	СУММА(ВТ_ТоварыПодЗаказ.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВТ_ИтогоТоваровПодЗаказ
	|ИЗ
	|	ВТ_ТоварыПодЗаказ КАК ВТ_ТоварыПодЗаказ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТоварыПодЗаказ.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
	|	СУММА(ЗаказКлиентаТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВТ_ИтогоТоварыВЗаказе
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|ГДЕ
	|	ЗаказКлиентаТовары.Ссылка = &Заказ
	|	И ЗаказКлиентаТовары.Ссылка.Проведен = ИСТИНА
	|	И ЗаказКлиентаТовары.Отменено = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТоварыПодЗаказ.Номенклатура КАК Номенклатура,
	|	ВТ_ТоварыПодЗаказ.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВТ_ТоварыПодЗаказ.НетВНаличии КАК НетВНаличии,
	|	ВТ_ТоварыПодЗаказ.Ожидается КАК Ожидается,
	|	ВТ_ТоварыПодЗаказ.НаТранзитномСкладе КАК НаТранзитномСкладе,
	|	ВТ_ТоварыПодЗаказ.ВПути КАК ВПути,
	|	ВТ_ТоварыПодЗаказ.НаСкладеОтгрузки КАК НаСкладеОтгрузки,
	|	ВТ_ТоварыПодЗаказ.Отгружено КАК Отгружено,
	|	ВТ_ТоварыПодЗаказ.Документ КАК Документ,
	|	ВТ_ТоварыПодЗаказ.Место КАК Место,
	|	ВТ_ТоварыПодЗаказ.ОжидаетОтгрузки КАК ОжидаетОтгрузки,
	| 	ВЫБОР
	|		КОГДА Максимум(IsNull(ПоездкаЗаМаршрутом.ОтгруженоПартнеру, ДАТАВРЕМЯ(1,1,1))) <> ДАТАВРЕМЯ(1,1,1)
	|		ТОГДА Истина
	|		Иначе Ложь
	|	КОНЕЦ КАК ОтгруженоМагазину
	|ИЗ
	|	ВТ_ТоварыПодЗаказ КАК ВТ_ТоварыПодЗаказ
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом
	|ПО	ПоездкаЗаМаршрутом.МестоДоставки = ВТ_ТоварыПодЗаказ.Место
	|И	ПоездкаЗаМаршрутом.ОтгруженоПартнеру <> ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТоварыПодЗаказ.Номенклатура,
	|	ВТ_ТоварыПодЗаказ.КоличествоУпаковок,
	|	ВТ_ТоварыПодЗаказ.НетВНаличии,
	|	ВТ_ТоварыПодЗаказ.Ожидается,
	|	ВТ_ТоварыПодЗаказ.НаТранзитномСкладе,
	|	ВТ_ТоварыПодЗаказ.ВПути,
	|	ВТ_ТоварыПодЗаказ.НаСкладеОтгрузки,
	|	ВТ_ТоварыПодЗаказ.Отгружено,
	|	ВТ_ТоварыПодЗаказ.Документ,
	|	ВТ_ТоварыПодЗаказ.Место,
	|	ВТ_ТоварыПодЗаказ.ОжидаетОтгрузки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИтогоТоварыВЗаказе.Номенклатура,
	|	ВТ_ИтогоТоварыВЗаказе.КоличествоУпаковок - ЕСТЬNULL(ВТ_ИтогоТоваровПодЗаказ.КоличествоУпаковок, 0),
	|	ИСТИНА,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	ВТ_ИтогоТоварыВЗаказе КАК ВТ_ИтогоТоварыВЗаказе
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИтогоТоваровПодЗаказ КАК ВТ_ИтогоТоваровПодЗаказ
	|		ПО ВТ_ИтогоТоварыВЗаказе.Номенклатура = ВТ_ИтогоТоваровПодЗаказ.Номенклатура
	|ГДЕ
	|	ВТ_ИтогоТоварыВЗаказе.КоличествоУпаковок - ЕСТЬNULL(ВТ_ИтогоТоваровПодЗаказ.КоличествоУпаковок, 0) > 0";
	
	Возврат ТекстЗапрос;
	
КонецФункции // ПолучитьТекстЗапросаМесторасположениеТоваров()
			   

&НаСервере
Процедура СформироватьОтчетОжидаемыеТовары(Номенклатура)

	УстановитьПривилегированныйРежим(Истина);
	
	Результат.Очистить();
	
	Элементы.ГруппаРасшифровкаОжидпется.Видимость 		= Истина;
	
	СхемаКомпоновкиДанных = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	НаборыДанных 	= СхемаКомпоновкиДанных.НаборыДанных;
	ОсновнойНабор   = НаборыДанных.Найти("НаборДанных1");
	
	Если ОсновнойНабор = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Отчет сломался. Сообщите в службу поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;

	ОсновнойНабор.Запрос = ТекстЗапросаОсновногоНабораДанных();
	
	УстановитьЗначениеПараметраКомпоновкиДанных("Заказ"			,Заказ			,КомпоновщикНастроек.Настройки.ПараметрыДанных);
	УстановитьЗначениеПараметраКомпоновкиДанных("Номенклатура"	,Номенклатура	,КомпоновщикНастроек.Настройки.ПараметрыДанных);
	УстановитьЗначениеПараметраКомпоновкиДанных("Склад"			,Склад			,КомпоновщикНастроек.Настройки.ПараметрыДанных);
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета	= Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки		= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки, , , Ложь);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	
	АдресДанныеРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, ЭтаФорма.УникальныйИдентификатор);

	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеПараметраКомпоновкиДанных(ИмяПараметра, ЗначениеПараметра, ПараметрыДанных)

	Параметр = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	
	Если Параметр = Неопределено Тогда
		ТекстСообщения = НСтр("ru='Не удалось получить параметр «%1». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ИмяПараметра);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметр.Значение 		= ЗначениеПараметра;
	Параметр.Использование  = Истина;

КонецПроцедуры

&НаСервере
Функция ТекстЗапросаОсновногоНабораДанных()

	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Назначения.Ссылка
	|ПОМЕСТИТЬ ВТ_Назначения
	|ИЗ
	|	Справочник.Назначения КАК Назначения
	|ГДЕ
	|	Назначения.ПометкаУдаления = ЛОЖЬ
	|	И Назначения.Заказ = &Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ОбеспечениеЗаказов.Регистратор,
	|	ОбеспечениеЗаказов.Номенклатура,
	|	ВЫБОР
	|		КОГДА ОбеспечениеЗаказов.НаличиеПодЗаказ + ОбеспечениеЗаказов.НаличиеСоСклада = 0
	|			ТОГДА ОбеспечениеЗаказов.Заказано
	|		ИНАЧЕ ОбеспечениеЗаказов.НаличиеПодЗаказ + ОбеспечениеЗаказов.НаличиеСоСклада
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ВТ_Обеспечение
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов КАК ОбеспечениеЗаказов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Назначения КАК ВТ_Назначения
	|		ПО ОбеспечениеЗаказов.Назначение = ВТ_Назначения.Ссылка
	|			И (ОбеспечениеЗаказов.Склад = &Склад)
	|ГДЕ
	|	ОбеспечениеЗаказов.Назначение В
	|			(ВЫБРАТЬ
	|				ВТ_Назначения.Ссылка
	|			ИЗ
	|				ВТ_Назначения КАК ВТ_Назначения)
	|	И ОбеспечениеЗаказов.Регистратор <> &Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестаДоставки.Ссылка КАК Место
	|ПОМЕСТИТЬ ВТ_МестаПоНазначениюОжидаются
	|ИЗ
	|	Справочник.МестаДоставки КАК МестаДоставки
	|ГДЕ
	|	МестаДоставки.ПометкаУдаления = ЛОЖЬ
	|	И МестаДоставки.Назначение В
	|			(ВЫБРАТЬ
	|				ВТ_Назначения.Ссылка
	|			ИЗ
	|				ВТ_Назначения КАК ВТ_Назначения)
	|	И МестаДоставки.Транзит = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ОтгрузкаМест.Период) КАК Период,
	|	ОтгрузкаМест.Место
	|ПОМЕСТИТЬ ВТ_ЗначениеОтгрузкиОжидаются
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест КАК ОтгрузкаМест
	|ГДЕ
	|	ОтгрузкаМест.Место В
	|			(ВЫБРАТЬ
	|				ВТ_МестаПоНазначению.Место
	|			ИЗ
	|				ВТ_МестаПоНазначениюОжидаются КАК ВТ_МестаПоНазначению)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтгрузкаМест.Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтгрузкаМест.Место,
	|	ВЫБОР
	|		КОГДА ОтгрузкаМест.СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаТранзитномСкладе,
	|	ВЫБОР
	|		КОГДА ОтгрузкаМест.СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Ожидается,
	|	ОтгрузкаМест.СтатусОтгрузки
	|ПОМЕСТИТЬ ВТ_ОтгруженыеМестаОжидаются
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест КАК ОтгрузкаМест
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗначениеОтгрузкиОжидаются КАК ВТ_ЗначениеОтгрузкиОжидаются
	|		ПО ОтгрузкаМест.Место = ВТ_ЗначениеОтгрузкиОжидаются.Место
	|			И ОтгрузкаМест.Период = ВТ_ЗначениеОтгрузкиОжидаются.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестаПоДокументам.Место,
	|	ВЫБОР
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.РасходныйОрдерНаТовары
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары).Распоряжение
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.КТС_ОтгрузкаТоваров
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.КТС_ОтгрузкаТоваров).Распоряжение
	|	КОНЕЦ КАК Документ
	|ПОМЕСТИТЬ ВТ_ДокументПоМестуОжидается
	|ИЗ
	|	РегистрСведений.МестаПоДокументам КАК МестаПоДокументам
	|ГДЕ
	|	МестаПоДокументам.Место В
	|			(ВЫБРАТЬ
	|				ВТ_ОтгруженыеМеста.Место
	|			ИЗ
	|				ВТ_ОтгруженыеМестаОжидаются КАК ВТ_ОтгруженыеМеста)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестаНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(МестаНоменклатуры.Количество) КАК Количество,
	|	ВТ_ДокументПоМестуОжидается.Документ,
	|	ВТ_ДокументПоМестуОжидается.Место,
	|	ВТ_ОтгруженыеМестаОжидаются.СтатусОтгрузки
	|ПОМЕСТИТЬ ВТ_ОжидаетсяМестом
	|ИЗ
	|	РегистрСведений.МестаНоменклатуры КАК МестаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОтгруженыеМестаОжидаются КАК ВТ_ОтгруженыеМестаОжидаются
	|		ПО МестаНоменклатуры.Место = ВТ_ОтгруженыеМестаОжидаются.Место
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументПоМестуОжидается КАК ВТ_ДокументПоМестуОжидается
	|		ПО МестаНоменклатуры.Место = ВТ_ДокументПоМестуОжидается.Место
	|ГДЕ
	|	МестаНоменклатуры.Номенклатура = &Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	МестаНоменклатуры.Номенклатура,
	|	ВТ_ДокументПоМестуОжидается.Место,
	|	ВТ_ДокументПоМестуОжидается.Документ,
	|	ВТ_ОтгруженыеМестаОжидаются.СтатусОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестаДоставки.Ссылка КАК Место
	|ПОМЕСТИТЬ ВТ_МестаПоНазначению
	|ИЗ
	|	Справочник.МестаДоставки КАК МестаДоставки
	|ГДЕ
	|	МестаДоставки.ПометкаУдаления = ЛОЖЬ
	|	И МестаДоставки.Назначение В
	|			(ВЫБРАТЬ
	|				ВТ_Назначения.Ссылка
	|			ИЗ
	|				ВТ_Назначения КАК ВТ_Назначения)
	|	И МестаДоставки.Транзит = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ОтгрузкаМест.Период) КАК Период,
	|	ОтгрузкаМест.Место
	|ПОМЕСТИТЬ ВТ_ЗначениеОтгрузки
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест КАК ОтгрузкаМест
	|ГДЕ
	|	ОтгрузкаМест.Место В
	|			(ВЫБРАТЬ
	|				ВТ_МестаПоНазначению.Место
	|			ИЗ
	|				ВТ_МестаПоНазначению КАК ВТ_МестаПоНазначению)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтгрузкаМест.Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтгрузкаМест.Место,
	|	ВЫБОР
	|		КОГДА ОтгрузкаМест.СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НаСкладеОтгрузки,
	|	ВЫБОР
	|		КОГДА ОтгрузкаМест.СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ВПути,
	|	ОтгрузкаМест.СтатусОтгрузки
	|ПОМЕСТИТЬ ВТ_ОтгруженыеМеста
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест КАК ОтгрузкаМест
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗначениеОтгрузки КАК ВТ_ЗначениеОтгрузки
	|		ПО ОтгрузкаМест.Период = ВТ_ЗначениеОтгрузки.Период
	|			И ОтгрузкаМест.Место = ВТ_ЗначениеОтгрузки.Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестаПоДокументам.Место,
	|	ВЫБОР
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.РасходныйОрдерНаТовары
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары).Распоряжение
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.КТС_ОтгрузкаТоваров
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.КТС_ОтгрузкаТоваров).Распоряжение
	|	КОНЕЦ КАК Документ
	|ПОМЕСТИТЬ ВТ_ДокументПоМесту
	|ИЗ
	|	РегистрСведений.МестаПоДокументам КАК МестаПоДокументам
	|ГДЕ
	|	МестаПоДокументам.Место В
	|			(ВЫБРАТЬ
	|				ВТ_ОтгруженыеМеста.Место
	|			ИЗ
	|				ВТ_ОтгруженыеМеста КАК ВТ_ОтгруженыеМеста)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестаНоменклатуры.Номенклатура,
	|	СУММА(МестаНоменклатуры.Количество) КАК Количество,
	|	ЛОЖЬ КАК НетВНаличии,
	|	ЛОЖЬ КАК Отгружено,
	|	ЛОЖЬ КАК Ожидается,
	|	ВТ_ОтгруженыеМеста.НаСкладеОтгрузки КАК НаТранзитномСкладе,
	|	ЛОЖЬ КАК НаСкладеОтгрузки,
	|	ВТ_ОтгруженыеМеста.ВПути КАК ВПути,
	|	ВТ_ДокументПоМесту.Документ,
	|	МестаНоменклатуры.Место,
	|	ВТ_ОтгруженыеМеста.СтатусОтгрузки
	|ПОМЕСТИТЬ ВТ_НоменклатураПоМесту
	|ИЗ
	|	РегистрСведений.МестаНоменклатуры КАК МестаНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОтгруженыеМеста КАК ВТ_ОтгруженыеМеста
	|		ПО МестаНоменклатуры.Место = ВТ_ОтгруженыеМеста.Место
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДокументПоМесту КАК ВТ_ДокументПоМесту
	|		ПО МестаНоменклатуры.Место = ВТ_ДокументПоМесту.Место
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОтгруженыеМеста.НаСкладеОтгрузки,
	|	ВТ_ОтгруженыеМеста.ВПути,
	|	ВТ_ДокументПоМесту.Документ,
	|	МестаНоменклатуры.Номенклатура,
	|	МестаНоменклатуры.Место,
	|	ВТ_ОтгруженыеМеста.СтатусОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.Период КАК Период,
	|	КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.Номенклатура,
	|	КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.КПоступлениюКонечныйОстаток - КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.КПоступлениюНачальныйОстаток КАК Количество,
	|	КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.Регистратор КАК Документ,
	|	NULL КАК Место,
	|	NULL КАК СтатусОтгрузки
	|ИЗ
	|	РегистрНакопления.КТС_ТоварыКПоступлениюПодОбеспечение.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			,
	|			Назначение В
	|					(ВЫБРАТЬ
	|						ВТ_Назначения.Ссылка
	|					ИЗ
	|						ВТ_Назначения КАК ВТ_Назначения)
	|				И Номенклатура = &Номенклатура) КАК КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты
	|ГДЕ
	|	КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.КПоступлениюКонечныйОстаток > 0
	|	И НЕ (КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.Номенклатура, КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.Регистратор) В
	|				(ВЫБРАТЬ
	|					ВТ_ОжидаетсяМестом.Номенклатура,
	|					ВТ_ОжидаетсяМестом.Документ
	|				ИЗ
	|					ВТ_ОжидаетсяМестом)
	|	И КТС_ТоварыКПоступлениюПодОбеспечениеОстаткиИОбороты.КПоступлениюОборот <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбеспечениеЗаказовОбороты.Период,
	|	ОбеспечениеЗаказовОбороты.Номенклатура,
	|	ОбеспечениеЗаказовОбороты.ЗаказаноОборот,
	|	ОбеспечениеЗаказовОбороты.Регистратор,
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			Назначение В
	|				(ВЫБРАТЬ
	|					ВТ_Назначения.Ссылка
	|				ИЗ
	|					ВТ_Назначения КАК ВТ_Назначения)) КАК ОбеспечениеЗаказовОбороты
	|ГДЕ
	|	ОбеспечениеЗаказовОбороты.Регистратор <> &Заказ
	|	И НЕ ОбеспечениеЗаказовОбороты.Регистратор ССЫЛКА Документ.ЗаказНаПеремещение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ВТ_ОжидаетсяМестом.Номенклатура,
	|	ВТ_ОжидаетсяМестом.Количество,
	|	ВТ_ОжидаетсяМестом.Документ,
	|	ВТ_ОжидаетсяМестом.Место,
	|	ВТ_ОжидаетсяМестом.СтатусОтгрузки
	|ИЗ
	|	ВТ_ОжидаетсяМестом КАК ВТ_ОжидаетсяМестом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	ВТ_НоменклатураПоМесту.Номенклатура,
	|	ВТ_НоменклатураПоМесту.Количество - ЕСТЬNULL(ВТ_Обеспечение.Количество, 0),
	|	ВТ_НоменклатураПоМесту.Документ,
	|	ВТ_НоменклатураПоМесту.Место,
	|	ВТ_НоменклатураПоМесту.СтатусОтгрузки
	|ИЗ
	|	ВТ_НоменклатураПоМесту КАК ВТ_НоменклатураПоМесту
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обеспечение КАК ВТ_Обеспечение
	|		ПО ВТ_НоменклатураПоМесту.Номенклатура = ВТ_Обеспечение.Номенклатура
	|			И ВТ_НоменклатураПоМесту.Документ = ВТ_Обеспечение.Регистратор
	|ГДЕ
	|	НЕ (ВТ_НоменклатураПоМесту.Документ, ВТ_НоменклатураПоМесту.Номенклатура) В
	|				(ВЫБРАТЬ
	|					ВТ_Обеспечение.Регистратор,
	|					ВТ_Обеспечение.Номенклатура
	|				ИЗ
	|					ВТ_Обеспечение КАК ВТ_Обеспечение)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаОсновногоНабораДанных()

&НаСервере
Функция ПолучитьДанныеРасшифровки(Расшифровка)
	
	Данные = ПолучитьИзВременногоХранилища(АдресДанныеРасшифровки); 
	Поля = Данные.Элементы.Получить(Расшифровка).ПолучитьПоля();
	ПолеДокумент = Поля.Найти("Документ");
	Если ПолеДокумент <> Неопределено Тогда
		Возврат ПолеДокумент.Значение;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции // ПолучитьДанныеРасшифровки()

#КонецОбласти

