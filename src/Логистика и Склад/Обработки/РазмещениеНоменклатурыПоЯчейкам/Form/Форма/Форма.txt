
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ОбработатьИзменениеСкладаНаСервере(Настройки["Склад"]);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура СканерОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)

	Сканер = Текст;
		
	Если ПустаяСтрока(Текст) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьДанныеСканераНаСервере(Текст);
	
	Сканер = "";	
	
КонецПроцедуры

&НаКлиенте
Процедура СкладНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элементы.Склад.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокСкладов());
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	ОбработатьИзменениеСкладаНаСервере(Склад);
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СписокНоменклатуры

&НаКлиенте
Процедура СписокНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСписок(Команда)
	СписокНоменклатуры.Очистить();
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыполнитьРазмещение(Команда)
	
	Если Вопрос("Точно хотите разместить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыполнитьПроверкуЗаполнения() Тогда
		Возврат;
	КонецЕсли;
	ВыполнитьРазмещениеНаСервере();	
	Пояснение = НСтр("ru='Размещение в %1 виполнено'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	Пояснение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Пояснение, Строка(СкладскаяЯчейка));
	ПоказатьОповещениеПользователя(НСтр("ru='Размещение виполнено'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
								, 
								Пояснение,
								БиблиотекаКартинок.Информация32);
	СписокНоменклатуры.Очистить();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


// Интерфейс пользователя на клиенте

&НаКлиенте
Функция ВыполнитьПроверкуЗаполнения()

	Отказ = Ложь;
	
	Если СкладскаяЯчейка.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо указать ячейку'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),, "СкладскаяЯчейка");
		Отказ = Истина;
	КонецЕсли;
	
	Если СписокНоменклатуры.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Необходимо заполнить список номенклатуры'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		Отказ = Истина;
	КонецЕсли;
	
	Возврат Отказ;

КонецФункции // ВыполнитьПроверкуЗаполнения()
 


// Обработка сканера

&НаСервере
Процедура ОбработатьДанныеСканераНаСервере(ДанныеСканера)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ОбработатьДанныеСканера(ЭтаФорма, Склад, ДанныеСканера);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");	
КонецПроцедуры // ОбработатьДанныеСканераНаСервере()


// Обработка выбора склада

&НаСервереБезКонтекста
Функция ПолучитьСписокСкладов()

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.Склады
	                      |ГДЕ
	                      |	НЕ ЭтоГруппа
	                      |	И НЕ ПометкаУдаления
	                      |	И НастройкаАдресногоХранения В (ЗНАЧЕНИЕ(Перечисление.НастройкиАдресногоХранения.ЯчейкиСправочно), ЗНАЧЕНИЕ(Перечисление.НастройкиАдресногоХранения.ЯчейкиОстатки))");
						  
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат.ВыгрузитьКолонку("Ссылка");

КонецФункции // ПолучитьСписокСкладов()

&НаСервере
Процедура ОбработатьИзменениеСкладаНаСервере(СкладСсылка)
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	ОбъектОбработка.УстановитьДоступностьЭлементовФормы(ЭтаФорма, ЗначениеЗаполнено(СкладСсылка));
	ЗначениеВРеквизитФормы(ОбъектОбработка, "Объект");
КонецПроцедуры // ОбработатьИзменениеСкладаНаСервере()


// Ячейки

&НаСервере
Процедура ВыполнитьРазмещениеНаСервере()
	ОбъектОбработка = РеквизитФормыВЗначение("Объект");
	ОбъектОбработка.ЗаписатьЯчейки(ЭтаФорма);
	ЗначениеВРеквизитФормы(ОбъектОбработка, "Объект");
КонецПроцедуры // ВыполнитьРазмещениеНаСервере()

&НаКлиенте
Процедура СписокНоменклатурыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры


 


 


 


 


 