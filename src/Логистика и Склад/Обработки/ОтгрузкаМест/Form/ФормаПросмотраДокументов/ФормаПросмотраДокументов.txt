#Область ИнтерфейсАвтоматическихТестов

&НаКлиенте
Перем ЮнитТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СписокТестов = Новый Массив;	
	Возврат СписокТестов;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;	
	КонецЕсли;

	Заголовок = Строка(Параметры.Номенклатура);
	ЗагрузитьСписокДокументов(Параметры);
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийТаблициФормыТаблицаДокументов

&НаКлиенте
Процедура ТаблицаДокументовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьЗначение(Элемент.ТекущиеДанные.ДокументОтгрузки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьИзОтгрузкиМест(Команда)
	
	ТекущиеДанные 		= Элементы.ТаблицаДокументов.ТекущиеДанные;
	Если ТекущиеДанные 	= Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ОрдерныйСклад Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Функция доступна только для безордерных складов.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		Возврат;
	КонецЕсли;
	
	РезультатУдаления = УдалитьПозициюИзОтгрузкиМест(ТекущиеДанные.ДокументОтгрузки, ТекущиеДанные.Номенклатура, ТекущиеДанные.КоличествоВДокументе);
	
	Если РезультатУдаления Тогда
		Оповестить("ОтгрузкаМест_ОбновитьПулНоменклатуры");
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьСписокДокументов(Параметры)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаСписокДокументов(Параметры.ОрдернаяСхемаСклада);
	
	Запрос.УстановитьПараметр("Получатель", 				Параметры.Получатель);
	Запрос.УстановитьПараметр("Номенклатура", 				Параметры.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", 			Параметры.Характеристика);
	Запрос.УстановитьПараметр("Склад", 						Параметры.Склад);
	Запрос.УстановитьПараметр("АдресДоставки", 				Параметры.АдресДоставки);
	Запрос.УстановитьПараметр("АдресПартнера", 				Параметры.АдресПартнера);
	Запрос.УстановитьПараметр("ПолучательЧерезПеревозчика", Параметры.ПолучательЧерезПеревозчика);
	Запрос.УстановитьПараметр("Назначение", 				Параметры.Назначение);
	Запрос.УстановитьПараметр("ВозвратнаяДоставкаНП",		Параметры.ВозвратнаяДоставкаНП);
	Запрос.УстановитьПараметр("ПлатитПолучатель", 			Параметры.ПлатитПолучатель);
	
	ТаблицаДокументов.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоДокументов 	= ТаблицаДокументов.Количество();
	СтрокаЗаголовок			= НСтр("ru='Документы %1'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	
	Если КоличествоДокументов = 0 Тогда
		СтрокаЗаголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаЗаголовок, "");
	Иначе
		СтрокаЗаголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаЗаголовок, "(" + КоличествоДокументов + ")");
	КонецЕсли;
	
	Элементы.ГруппаДокументы.Заголовок = СтрокаЗаголовок;

КонецПроцедуры // ЗагрузитьСписокДокументов()

&НаСервере
Функция ПолучитьТекстЗапросаСписокДокументов(ОрдернаяСхемаСклада)

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Ссылка КАК Склад,
		|	Представление КАК АдресДоставки	
		|ПОМЕСТИТЬ АдресаСкладов
		|ИЗ
		|	Справочник.Склады.КонтактнаяИнформация
		|ГДЕ
		|	Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
		|	И Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСклада)
		|;";
		
	Если ОрдернаяСхемаСклада Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	Товары.ДокументОтгрузки КАК ДокументОтгрузки,
			|	ВЫБОР
			|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
			|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ВнутреннееПотреблениеТоваров).МоментВремени
			|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ПеремещениеТоваров
			|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ПеремещениеТоваров).МоментВремени
			|		КОГДА ДокументОтгрузки ССЫЛКА Документ.СборкаТоваров
			|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.СборкаТоваров).МоментВремени
			|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ВозвратТоваровПоставщику
			|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ВозвратТоваровПоставщику).МоментВремени
			|		КОГДА ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
			|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).МоментВремени
			|	КОНЕЦ КАК МоментВремени,
			|	Товары.Номенклатура 	КАК Номенклатура,
			|	Товары.Характеристика 	КАК Характеристика,
			|	Товары.КОтгрузкеОстаток КАК Количество
			|ПОМЕСТИТЬ КешНоменклатураПредварительная
			|ИЗ
			|	РегистрНакопления.ТоварыКОтгрузке.Остатки(, Номенклатура = &Номенклатура
			|				И Характеристика = &Характеристика
			|				И Склад = &Склад) КАК Товары
			|	
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Маршруты_ДокументыПоМаршрутам КАК Маршруты
			|		ПО Маршруты.Регистратор  = Товары.ДокументОтгрузки
			|			И ВЫБОР Маршруты.Перевозчик
			|				КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
			|					ТОГДА Маршруты.Получатель = &Получатель И Маршруты.АдресДоставки = &АдресПартнера
			|				ИНАЧЕ Маршруты.Перевозчик = &Получатель 
			|														И Маршруты.АдресДоставки 		= &АдресДоставки 
			|														И Маршруты.ОтделениеНовойПочты	= &АдресПартнера 
			|														И Маршруты.Получатель 			= &ПолучательЧерезПеревозчика 
			|														И Маршруты.ВозвратнаяДоставка 	= &ВозвратнаяДоставкаНП 
			|														И Маршруты.ПлатитПолучатель 	= &ПлатитПолучатель 
			|			КОНЕЦ
			|;
			|
			|ВЫБРАТЬ
			|	Товары.Ссылка КАК Перемещение,
			|	Товары.Назначение КАК Назначение,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика
			|ПОМЕСТИТЬ КешПеремещения
			|ИЗ
			|	Документ.ПеремещениеТоваров.Товары КАК Товары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешНоменклатураПредварительная КАК КешНоменклатураПредварительная
			|		ПО Товары.Ссылка = КешНоменклатураПредварительная.ДокументОтгрузки
			|			И Товары.Номенклатура = КешНоменклатураПредварительная.Номенклатура
			|			И Товары.Характеристика = КешНоменклатураПредварительная.Характеристика
			|;
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	КешНоменклатураПредварительная.ДокументОтгрузки КАК ДокументОтгрузки,
			|	КешНоменклатураПредварительная.МоментВремени КАК МоментВремени,
			|	КешНоменклатураПредварительная.Номенклатура КАК Номенклатура,
			|	КешНоменклатураПредварительная.Характеристика КАК Характеристика,
			|	КешНоменклатураПредварительная.Количество КАК Количество
			|ПОМЕСТИТЬ КешНоменклатура
			|ИЗ
			|	КешНоменклатураПредварительная КАК КешНоменклатураПредварительная
			|		ЛЕВОЕ СОЕДИНЕНИЕ КешПеремещения КАК КешПеремещения
			|		ПО КешНоменклатураПредварительная.ДокументОтгрузки = КешПеремещения.Перемещение
			|			И КешНоменклатураПредварительная.Номенклатура = КешПеремещения.Номенклатура
			|			И КешНоменклатураПредварительная.Характеристика = КешПеремещения.Характеристика
			|ГДЕ
			|	ЕСТЬNULL(КешПеремещения.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))=&Назначение
			|;";
			
	Иначе
			
		ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ
			|	Товары.ДокументОтгрузки  КАК ДокументОтгрузки,
			|	ВЫБОР
			|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ПеремещениеТоваров
			|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ПеремещениеТоваров).МоментВремени
			|		КОГДА ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
			|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).МоментВремени
			|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
			|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ВнутреннееПотреблениеТоваров).МоментВремени
			|		КОГДА ДокументОтгрузки ССЫЛКА Документ.ВозвратТоваровПоставщику
			|			ТОГДА ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ВозвратТоваровПоставщику).МоментВремени
			|	КОНЕЦ КАК МоментВремени,
			|	Товары.Номенклатура 	 КАК Номенклатура,
			|	Товары.Характеристика 	 КАК Характеристика,
			|	Товары.КоличествоОстаток КАК Количество
			|ПОМЕСТИТЬ КешНоменклатураПредварительная
			|ИЗ
			|	РегистрНакопления.КТС_ОтгрузкаИзБезордерныхСкладов.Остатки(,Номенклатура = &Номенклатура
			|				И Характеристика = &Характеристика
			|				И Склад = &Склад) КАК Товары
			|	
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Маршруты_ДокументыПоМаршрутам КАК Маршруты
			|		ПО Маршруты.Регистратор  = Товары.ДокументОтгрузки
			|			И ВЫБОР Маршруты.Перевозчик
			|				КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
			|					ТОГДА Маршруты.Получатель = &Получатель И Маршруты.АдресДоставки = &АдресДоставки
			|				ИНАЧЕ Маршруты.Перевозчик = &Получатель 
			|														И Маршруты.АдресДоставки 		= &АдресДоставки 
			|														И Маршруты.ОтделениеНовойПочты	= &АдресПартнера 
			|														И Маршруты.Получатель 			= &ПолучательЧерезПеревозчика 
			|														И Маршруты.ВозвратнаяДоставка 	= &ВозвратнаяДоставкаНП 
			|														И Маршруты.ПлатитПолучатель 	= &ПлатитПолучатель 
			|			КОНЕЦ
          	|;
			|
			|ВЫБРАТЬ
			|	Товары.Ссылка КАК Перемещение,
			|	Товары.Назначение КАК Назначение,
			|	Товары.Номенклатура КАК Номенклатура,
			|	Товары.Характеристика КАК Характеристика
			|ПОМЕСТИТЬ КешПеремещения
			|ИЗ
			|	Документ.ПеремещениеТоваров.Товары КАК Товары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешНоменклатураПредварительная КАК КешНоменклатураПредварительная
			|		ПО Товары.Ссылка = КешНоменклатураПредварительная.ДокументОтгрузки
			|			И Товары.Номенклатура = КешНоменклатураПредварительная.Номенклатура
			|			И Товары.Характеристика = КешНоменклатураПредварительная.Характеристика
			|;
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	КешНоменклатураПредварительная.ДокументОтгрузки КАК ДокументОтгрузки,
			|	КешНоменклатураПредварительная.МоментВремени КАК МоментВремени,
			|	КешНоменклатураПредварительная.Номенклатура КАК Номенклатура,
			|	КешНоменклатураПредварительная.Характеристика КАК Характеристика,
			|	КешНоменклатураПредварительная.Количество КАК Количество
			|ПОМЕСТИТЬ КешНоменклатура
			|ИЗ
			|	КешНоменклатураПредварительная КАК КешНоменклатураПредварительная
			|		ЛЕВОЕ СОЕДИНЕНИЕ КешПеремещения КАК КешПеремещения
			|		ПО КешНоменклатураПредварительная.ДокументОтгрузки = КешПеремещения.Перемещение
			|			И КешНоменклатураПредварительная.Номенклатура = КешПеремещения.Номенклатура
			|			И КешНоменклатураПредварительная.Характеристика = КешПеремещения.Характеристика
			|ГДЕ
			|	ЕСТЬNULL(КешПеремещения.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))=&Назначение
			|;";
		
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	Номенклатура КАК Номенклатура,
	|	Характеристика КАК Характеристика,
	|	СУММА(Количество) КАК Количество
	|ПОМЕСТИТЬ КешКоличествоНоменклатура
	|ИЗ
	|	КешНоменклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|ВЫБРАТЬ
	|	Место КАК Место,
	|	СтатусОтгрузки КАК СтатусОтгрузки
	|ПОМЕСТИТЬ МестаОтгрузкиПредварительные
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест.СрезПоследних(,
	|					Склад = &Склад
	|						И Не Место.Архивный
	|						И Место.Владелец = &Получатель)
	|;
	|
	|ВЫБРАТЬ
	|	Место КАК Место
	|ПОМЕСТИТЬ МестаОтгрузки
	|ИЗ
	|	МестаОтгрузкиПредварительные
	|ГДЕ
	|	СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.КомплектацияЗавершена)
	|		ИЛИ СтатусОтгрузки = ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.НачалоКомплектации)
	|;
	|
	|ВЫБРАТЬ
	|	Номенклатура КАК Номенклатура,
	|	Характеристика КАК Характеристика,
	|	СУММА(Количество) КАК Количество
	|ПОМЕСТИТЬ НоменклатураМестаОтгрузки
	|ИЗ
	|	РегистрСведений.МестаНоменклатуры
	|ГДЕ
	|	Место В (ВЫБРАТЬ Место ИЗ МестаОтгрузки)
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|ВЫБРАТЬ
	|	КешНоменклатура.Номенклатура КАК Номенклатура,
	|	КешНоменклатура.Характеристика КАК Характеристика,
	|	КешНоменклатура.Количество - ЕСТЬNULL(НоменклатураМестаОтгрузки.Количество, 0) КАК Количество
	|ПОМЕСТИТЬ КоличествоНоменклатуры
	|ИЗ
	|	КешНоменклатура КАК КешНоменклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураМестаОтгрузки КАК НоменклатураМестаОтгрузки
	|	ПО КешНоменклатура.Номенклатура = НоменклатураМестаОтгрузки.Номенклатура
	|		И КешНоменклатура.Характеристика = НоменклатураМестаОтгрузки.Характеристика
	|;
	|
	|ВЫБРАТЬ
	|	КешНоменклатура.ДокументОтгрузки КАК ДокументОтгрузки,
	|	КешНоменклатура.Номенклатура КАК Номенклатура,
	|	КешНоменклатура.Характеристика КАК Характеристика,
	|	СУММА(КешНоменклатураКопия.Количество) КАК КоличествоПеред,
	|	СУММА(КешНоменклатураКопия.Количество) - КешНоменклатура.Количество КАК КоличествоПосле
	|ПОМЕСТИТЬ КоличествоНаростающие
	|ИЗ
	|	КешНоменклатура КАК КешНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешНоменклатура КАК КешНоменклатураКопия
	|		ПО КешНоменклатура.Номенклатура = КешНоменклатураКопия.Номенклатура
	|			И КешНоменклатура.Характеристика = КешНоменклатураКопия.Характеристика
	|			И КешНоменклатура.МоментВремени >= КешНоменклатураКопия.МоментВремени
	|
	|СГРУППИРОВАТЬ ПО
	|	КешНоменклатура.ДокументОтгрузки,
	|	КешНоменклатура.Номенклатура,
	|	КешНоменклатура.Характеристика,
	|	КешНоменклатура.Количество
	|;
	|
	|ВЫБРАТЬ
	|	КоличествоНаростающие.ДокументОтгрузки КАК ДокументОтгрузки,
	|	КоличествоНаростающие.Номенклатура КАК Номенклатура,
	|	КоличествоНаростающие.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА КоличествоНаростающие.КоличествоПеред <= КоличествоНоменклатуры.Количество
	|			ТОГДА КоличествоНаростающие.КоличествоПеред - КоличествоНаростающие.КоличествоПосле
	|		ИНАЧЕ КоличествоНоменклатуры.Количество - КоличествоНаростающие.КоличествоПосле
	|	КОНЕЦ КАК КоличествоВДокументе,
	|	ВЫБОР
	|		КОГДА КоличествоНаростающие.ДокументОтгрузки ССЫЛКА Документ.ПеремещениеТоваров
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПеремещение,
	|	ВЫБОР
	|		КОГДА КоличествоНаростающие.ДокументОтгрузки ССЫЛКА Документ.ПеремещениеТоваров
	|			ТОГДА ВЫРАЗИТЬ(КоличествоНаростающие.ДокументОтгрузки КАК Документ.ПеремещениеТоваров).СкладОтправитель.ИспользоватьОрдернуюСхемуПриОтгрузке
	|		КОГДА КоличествоНаростающие.ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(КоличествоНаростающие.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|	КОНЕЦ КАК ОрдерныйСклад
	|ИЗ
	|	КоличествоНаростающие КАК КоличествоНаростающие
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоНоменклатуры КАК КоличествоНоменклатуры
	|		ПО КоличествоНаростающие.Номенклатура = КоличествоНоменклатуры.Номенклатура
	|			И КоличествоНаростающие.Характеристика = КоличествоНоменклатуры.Характеристика
	|			И КоличествоНаростающие.КоличествоПосле < КоличествоНоменклатуры.Количество";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаСписокДокументов()
 
&НаСервере
Процедура УдалитьИзДокумента(СтрокаТаблицы)
	
	ДокументОбъект  = СтрокаТаблицы.ДокументОтгрузки.ПолучитьОбъект();
	Товары 		    = ДокументОбъект.Товары;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", СтрокаТаблицы.Номенклатура);
	СтруктураПоиска.Вставить("Характеристика", СтрокаТаблицы.Характеристика);
	
	НайденныеСтроки 	= Товары.НайтиСтроки(СтруктураПоиска);
	КоличествоУдалено   = СтрокаТаблицы.КоличестоКУдалению;
	Комментарий			= "Из перемещения были удалены позиции:";
	
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		Если КоличествоУдалено = 0 Тогда
			Прервать;
		КонецЕсли;
		Количество = Мин(КоличествоУдалено, НайденнаяСтрока.Количество);
		Если Количество = НайденнаяСтрока.Количество Тогда
			Товары.Удалить(НайденнаяСтрока);
		Иначе
			НайденнаяСтрока.Количество = НайденнаяСтрока.Количество - Количество;
		КонецЕсли;
		КомментарийПредварительный = "%1 %2 %3 %4";
		Комментарий = Комментарий + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(КомментарийПредварительный,
										Символы.ПС,
										СтрокаТаблицы.Номенклатура,
										СтрокаТаблицы.Характеристика,
										Количество);
		СоздатьРезервУдаленныхСтрок(СтрокаТаблицы, Количество);
		КоличествоУдалено = КоличествоУдалено - Количество;
	КонецЦикла;
	
	ДокументОбъект.Комментарий = ДокументОбъект.Комментарий + Комментарий;
	
	Если Товары.Количество() = 0 Тогда 
		ДокументОбъект.Записать();
		ДокументОбъект.УстановитьПометкуУдаления(Истина);
	Иначе
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры // УдалитьИзДокумента()
 
&НаСервере
Процедура СоздатьРезервУдаленныхСтрок(ПараметрыЗаполнения, Количество)
	
	ВыполнятьРезервТовараСДефектом = Ложь;
	СоглашениеДляРезервирования = Справочники.СоглашенияСКлиентами.ПустаяСсылка();
	
	Настройки = ПолучитьНастройкиУсловийДоставки();
	
	Если ТипЗнч(Настройки) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Свойство("КТСДоставка_ВыполнятьРезервТовараСДефектом", ВыполнятьРезервТовараСДефектом);
	Если Не ВыполнятьРезервТовараСДефектом Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Свойство("КТСДоставка_СоглашениеДляРезервирования", СоглашениеДляРезервирования);
	Если СоглашениеДляРезервирования.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ДокументОбъект = Документы.ЗаказКлиента.СоздатьДокумент();
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ПараметрыЗаполнения.ДокументОтгрузки);
	
	ДокументОбъект.УстановитьНовыйНомер();
	ДокументОбъект.Соглашение	= СоглашениеДляРезервирования;
	
	Товары = ДокументОбъект.Товары;
	
	НоваяСтрока = Товары.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ПараметрыЗаполнения);
	
	НоваяСтрока.Количество 		   = Количество;
	НоваяСтрока.КоличествоУпаковок = Количество;
	
	ДокументОбъект.ЗаполнитьУсловияПродажПоCоглашению();
	
	ДокументОбъект.Статус 		= Перечисления.СтатусыЗаказовКлиентов.КОтгрузке;
	ДокументОбъект.Приоритет    = Перечисления.Приоритеты.Высокий;
	ДокументОбъект.Партнер		= СоглашениеДляРезервирования.Партнер;
	ДокументОбъект.Контрагент 	= СоглашениеДляРезервирования.Контрагент;
	ДокументОбъект.Склад		= ПараметрыЗаполнения.ДокументОтгрузки.СкладОтправитель;
	ДокументОбъект.Менеджер		= ПараметрыСеанса.ТекущийПользователь;
	
	ДокументОбъект.РассчитатьДатыОтгрузки();
	ДокументОбъект.ЗаполнитьЭтапыГрафикаОплаты();
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);

КонецПроцедуры // СоздатьРезервУдаленныхСтрок()
 
&НаСервере
Функция ПолучитьНастройкиУсловийДоставки()

	Перем ВыполнятьРезервТовараСДефектом, ПартнерДляРезервирования, СпискиРассылки;
	
	Настройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиОбработокМодификацииКонфигурации", , , "ДополнительныеНастройкиОбработокМодификацииКонфигурации");
	
	Если ТипЗнч(Настройки) = Тип("Структура") Тогда
		Возврат Настройки;
	КонецЕсли;	

	Возврат Неопределено;
	
КонецФункции // ПолучитьНастройкиУсловийДоставки()

&НаСервере
Функция УдалитьПозициюИзОтгрузкиМест(Документ, Номенклатура, Количество)

	УстановитьПривилегированныйРежим(Истина);
	
	ДокументОтгрузки = Документы.КТС_ОтгрузкаТоваров.СоздатьДокумент();
	ДокументОтгрузки.УстановитьНовыйНомер();
	ДокументОтгрузки.Дата = Документ.Дата+1;
	
	ДокументОтгрузки.Распоряжение   = Документ;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ДокументОтгрузки.Склад = Документ.СкладОтправитель;
	Иначе
		ДокументОтгрузки.Склад = Документ.Склад;
	КонецЕсли;
	
	НоваяСтрока					= ДокументОтгрузки.Товары.Добавить();
	НоваяСтрока.Номенклатура    = Номенклатура;
	НоваяСтрока.Количество    	= Количество;
	
	Попытка
		ДокументОтгрузки.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции // УдалитьПозициюИзОтгрузкиМест()
 
#КонецОбласти
 