#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;	
	КонецЕсли;
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	Настройки = ХранилищеНастроекДанныхФорм.Загрузить(
														"НастройкиКонструктораЕмейловЗСЦ_" + ТекущийПользователь.УникальныйИдентификатор()
														,
														, "Настройки Емейлов"
														,ТекущийПользователь.УникальныйИдентификатор()
														);
    Если ТипЗнч(Настройки) = Тип("Структура") Тогда
        Если Настройки.Свойство("ТемаЭлектронногоЛиста") Тогда
            ТемаЭлектронногоЛиста =    Настройки.ТемаЭлектронногоЛиста; 
        КонецЕсли;
        Если Настройки.Свойство("ТекстЭлектронногоПисьма") Тогда
             ТекстЭлектронногоПисьма = Настройки.ТекстЭлектронногоПисьма; 
		КонецЕсли;    
		Если Настройки.Свойство("ОтправлятьЕмейлНаАСЦ") Тогда
             ОтправлятьЕмейлНаАСЦ = Настройки.ОтправлятьЕмейлНаАСЦ; 
		КонецЕсли;
		 
		Если Настройки.Свойство("УчетнаяЗаписьОтправкиПисьма") Тогда
             УчетнаяЗаписьОтправкиПисьма = Настройки.УчетнаяЗаписьОтправкиПисьма; 
		КонецЕсли;
		Если Настройки.Свойство("ПолучателиЭлектронныхПисем") Тогда
		     ПолучателиЭлектронныхПисем.Загрузить(Настройки.ПолучателиЭлектронныхПисем); 
		КонецЕсли; 
	КонецЕсли;      
	
	ЗагрузитьТаблицуШаблонов();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ТаблицаШаблоновТемыПисьмаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	ТекущиеДанные = Элемент.ТекущиеДанные;   	
	ТекстСообщения = ТемаЭлектронногоЛиста + "[" + ТекущиеДанные.ИмяШаблона + "]";
	Если СтрДлина(ТекстСообщения) > 200 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Сообщение превышает возможное количество символов в теме письма.'"), , "Объект.ТемаЭлектронногоПисьма");
		Возврат;
	КонецЕсли;
	ТемаЭлектронногоЛиста = ТекстСообщения;  	
	Модифицированность		 = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаШаблоновЭлектроннойПочтыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элемент.ТекущиеДанные;


	ТекстСообщения = ТекстЭлектронногоПисьма + "[" + ТекущиеДанные.ИмяШаблона + "]";
	Если СтрДлина(ТекстСообщения) > 300 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Сообщение не помещается.'"), , "ТемаЭлектронногоЛиста");
		Возврат;
	КонецЕсли;
	ТекстЭлектронногоПисьма = ТекстСообщения;  
	
	Модифицированность		 = Истина;

КонецПроцедуры
#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)
	Отказ = ЛОЖЬ;
	СохранитьНастройкиНаСервере(Отказ);
	Если Отказ = ЛОЖЬ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиНаСервере(Отказ)
	УстановитьПривилегированныйРежим(Истина);
	
	ПроверитьВерныйАдресЕмейла(Отказ);
	
	Если Отказ =Истина Тогда
		Возврат;	
	КонецЕсли; 
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();
	Настройки = Новый Структура;        
    Настройки.Вставить("ТемаЭлектронногоЛиста"	        ,ТемаЭлектронногоЛиста);
    Настройки.Вставить("ТекстЭлектронногоПисьма"	    ,ТекстЭлектронногоПисьма);   
	Настройки.Вставить("ОтправлятьЕмейлНаАСЦ"	    	,ОтправлятьЕмейлНаАСЦ);      
	Настройки.Вставить("УчетнаяЗаписьОтправкиПисьма"	,УчетнаяЗаписьОтправкиПисьма); 
	Настройки.Вставить("ПолучателиЭлектронныхПисем"	    ,ПолучателиЭлектронныхПисем.Выгрузить());
	ХранилищеНастроекДанныхФорм.Сохранить(
										"НастройкиКонструктораЕмейловЗСЦ_" + ТекущийПользователь.УникальныйИдентификатор()
										,
										,Настройки
										, "Настройки Емейлов"
										,ТекущийПользователь.УникальныйИдентификатор()
										); 
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьАдресЭП(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтветНаВопросПриДобавленииПолучателяЭлектронногоПисьм", ЭтаФорма);
	ПоказатьВопрос(ОписаниеОповещения, "Добавить через книгу адресов?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции 
&НаКлиенте
Процедура ОтветНаВопросПриДобавленииПолучателяЭлектронногоПисьм(Результат, ДополнительныеПараметры)  Экспорт 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ДобавитьИзАдреснойКнигиПартнер(Ложь);
	Иначе
		НоваяСтрока = ПолучателиЭлектронныхПисем.Добавить();
		ТекущийЭлемент = Элементы.ПолучателиЭлектронныхПисем;
		Элементы.ПолучателиЭлектронныхПисем.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	КонецЕсли;

КонецПроцедуры // ВыполнитьПослеЗакрытияАдреснойКниги()

&НаКлиенте
Процедура ДобавитьИзАдреснойКнигиПартнер(ЗаменаСтроки)
 
 	Оповещение = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияАдреснойКнигиПартнер", ЭтаФорма,ЗаменаСтроки);
	ОткрытьФорму("ОбщаяФорма.АдреснаяКнига", , ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры // ДобавитьИзАдреснойКниги()

&НаКлиенте
Процедура ВыполнитьПослеЗакрытияАдреснойКнигиПартнер(Результат, ЗаменаСтроки)  Экспорт 
	 
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		 
		СписокАдрес = ПолучателиЭлектронныхПисем;
		Для каждого Строка Из Результат Цикл
			
			Если Не ПустаяСтрока(Строка.Адрес) Тогда
			    СтрокаСписка = СписокАдрес.Добавить();
				СтрокаСписка.Представление    = Строка.Представление;
				СтрокаСписка.Адрес		  = Строка.Адрес;
				СвернутьПолучателиЭлектронныхПисемПартнер();
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьПослеЗакрытияАдреснойКниги()

&НаСервере
Процедура СвернутьПолучателиЭлектронныхПисемПартнер()

	ТаблицаЗначений = ПолучателиЭлектронныхПисем.Выгрузить();
	ТаблицаЗначений.Свернуть("Адрес, Представление");
	ПолучателиЭлектронныхПисем.Загрузить(ТаблицаЗначений);
	
КонецПроцедуры // СвернутьПолучателиЭлектронныхПисемПартнер()


&НаСервере
Процедура ПроверитьВерныйАдресЕмейла(Отказ)	
	Для каждого Строка Из ПолучателиЭлектронныхПисем Цикл
		Если git_ПереопределениеОбработчиковСервер.ПолучитьВнешнийОбъектПоИмени("Библиотека внешних обработок").ПроверитьЗаполнениеПочтовогоАдреса(Строка.Адрес) Тогда
			СообщенияОбОшибке = НСтр("ru='Не верный почтовый адрес «%1»!'");
			СообщенияОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщенияОбОшибке, Строка.Адрес); 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщенияОбОшибке,,,,Отказ);
			Возврат;
		КонецЕсли;	
	КонецЦикла; 
  
КонецПроцедуры // ПроверитьВерныйАдресЕмейла()

&НаСервере
Процедура ЗагрузитьТаблицуШаблонов()
	
	НоваяСтрока = ТаблицаШаблонов.Добавить();
	НоваяСтрока.ИмяШаблона 				= "ТТН";
	НоваяСтрока.ПредставлениеШаблона 	= "ТТН";
	НоваяСтрока.ИндексКартинки			= 0; 
	
	НоваяСтрока = ТаблицаШаблонов.Добавить();
	НоваяСтрока.ИмяШаблона 				= "Перевозчик";
	НоваяСтрока.ПредставлениеШаблона 	= "Перевозчик";
	НоваяСтрока.ИндексКартинки			= 0; 
	
	НоваяСтрока = ТаблицаШаблонов.Добавить();
	НоваяСтрока.ИмяШаблона 				= "КонтактноеЛицо";
	НоваяСтрока.ПредставлениеШаблона 	= "КонтактноеЛицо";
	НоваяСтрока.ИндексКартинки			= 0; 
	
	НоваяСтрока = ТаблицаШаблонов.Добавить();
	НоваяСтрока.ИмяШаблона 				= "АдресПартнера";
	НоваяСтрока.ПредставлениеШаблона 	= "Адрес партнера (доставки)";
	НоваяСтрока.ИндексКартинки			= 0; 	

КонецПроцедуры // ЗагрузитьТаблицуШаблонов()

#КонецОбласти