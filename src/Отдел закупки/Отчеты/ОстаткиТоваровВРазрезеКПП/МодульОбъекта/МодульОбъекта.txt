
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УстановитьПривилегированныйРежим(Истина);
	
	ДатаСреза = ПолучитьЗначениеПараметра("ДатаСреза");
	ДатаСреза = ?(ТипЗнч(ДатаСреза)=Тип("СтандартнаяДатаНачала"), ДатаСреза.Дата, ДатаСреза);
	Если ДатаСреза = Дата("00010101") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Для корректной работы отчета необходимо указать дату среза, на которую получают остатки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		Возврат;
	КонецЕсли;
	
	ВидКПП = ПолучитьЗначениеПараметра("ВидКПП");
	Если ТипЗнч(ВидКПП) <> Тип("Число") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Для корректной работы отчета необходимо задать значения параметра «Вид КПП».'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		Возврат;
	КонецЕсли;
	
	Если ВидКПП < 1 ИЛИ ВидКПП > 2 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Для корректной работы отчета необходимо задать значения параметра «Вид КПП».'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()));
		Возврат;
	КонецЕсли;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаНоменклатуры", ПолучитьТаблицуНоменклатуры(ДатаСреза, ВидКПП));

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуНоменклатуры(ДатаСреза, ВидКПП)

	Запрос 			= Новый Запрос;
	Запрос.Текст    = ТекстЗапросаТаблицаНоменклатуры(ВидКПП);
	
	Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьТаблицуНоменклатуры()

Функция ТекстЗапросаТаблицаНоменклатуры(ВидКПП)

	ТекстЗапроса = "
				|ВЫБРАТЬ
				|	ВложенныйЗапрос.Номенклатура 					КАК Номенклатура,
				|	ВложенныйЗапрос.Характеристика					КАК Характеристика,
				|	ВложенныйЗапрос.Склад							КАК Склад,
				|	СУММА(ВложенныйЗапрос.Количество) 				КАК Количество,
				|	ВложенныйЗапрос.Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры
				|ПОМЕСТИТЬ ОстаткиТоваров
				|ИЗ
				|	(ВЫБРАТЬ
				|		Номенклатура 		КАК Номенклатура,
				|		Характеристика 		КАК Характеристика,
				|		Склад 				КАК Склад,
				|		ВНаличииОстаток 	КАК Количество
				|	ИЗ
				|		РегистрНакопления.СвободныеОстатки.Остатки(&ДатаСреза, )
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		Номенклатура		КАК Номенклатура,
				|		Характеристика		КАК Характеристика,
				|		Склад				КАК Склад,        	
				|		КПоступлениюОстаток КАК Количество
				|	ИЗ
				|		РегистрНакопления.ТоварыКПоступлению.Остатки(&ДатаСреза, )) КАК ВложенныйЗапрос

				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Склад

				|ИНДЕКСИРОВАТЬ ПО
				|	Номенклатура
				|;

				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Номенклатура 	КАК Номенклатура,
				|	Значение 		КАК КПП
				|ПОМЕСТИТЬ ТаблицаКПП
				|ИЗ
				|	РегистрСведений.%1.СрезПоследних(
				|			&ДатаСреза,
				|			Номенклатура В
				|				(ВЫБРАТЬ
				|					Номенклатура
				|				ИЗ
				|					ОстаткиТоваров))

				|ИНДЕКСИРОВАТЬ ПО
				|	Номенклатура
				|;

				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Номенклатура 		КАК Номенклатура,
				|	ТоварнаяКатегория   КАК ТоварнаяКатегория
				|ПОМЕСТИТЬ ТаблицаТоварныхКатегорий
				|ИЗ
				|	РегистрСведений.ТОМА_ТоварнаяКатегория.СрезПоследних(
				|			&ДатаСреза,
				|			Номенклатура В
				|				(ВЫБРАТЬ
				|					Номенклатура
				|				ИЗ
				|					ОстаткиТоваров))

				|ИНДЕКСИРОВАТЬ ПО
				|	Номенклатура
				|;

				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ОстаткиТоваров.Номенклатура																					КАК Номенклатура,
				|	ОстаткиТоваров.Характеристика																				КАК Характеристика,
				|	ОстаткиТоваров.Склад																						КАК Склад,
				|	ОстаткиТоваров.Количество																					КАК Количество,
				|	ЕСТЬNULL(ТаблицаКПП.КПП, ЗНАЧЕНИЕ(Справочник.КоефициентПриоритетностиНоменклатуры.ПустаяСсылка)) 			КАК КПП,
				|	ЕСТЬNULL(ТаблицаТоварныхКатегорий.ТоварнаяКатегория, ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)) 	КАК ТоварнаяКатегория,
				|	ОстаткиТоваров.ВидНоменклатуры																				КАК ВидНоменклатуры
				|ИЗ
				|	ОстаткиТоваров КАК ОстаткиТоваров
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКПП КАК ТаблицаКПП
				|		ПО ОстаткиТоваров.Номенклатура = ТаблицаКПП.Номенклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоварныхКатегорий КАК ТаблицаТоварныхКатегорий
				|		ПО ОстаткиТоваров.Номенклатура = ТаблицаТоварныхКатегорий.Номенклатура
				|		
				|ГДЕ
				|	ОстаткиТоваров.Количество > 0";
				
	ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, ?(ВидКПП=1,"КПП_Розница_ЗначениеКоефициентаПриоритетностиПродаж", "КПП_Опт_ЗначениеКоефициентаПриоритетностиПродаж"));
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаТаблицаНоменклатуры()
 
Функция ПолучитьЗначениеПараметра(ИмяПараметра)
	
	ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
   	Если ПараметрДанных <> Неопределено Тогда
    	ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
   		Если ПараметрПользовательскойНастройки <> Неопределено Тогда
			Возврат ПараметрПользовательскойНастройки.Значение;
     	Иначе
       		Возврат ПараметрДанных.Значение;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции

#КонецОбласти