Функция СведенияОВнешнейОбработке() Экспорт
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Оборотно-сальдовая ведомость");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", "1.5");    
    ПараметрыРегистрации.Вставить("Информация", "Оборотно-сальдовая ведомость");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Оборотно-сальдовая ведомость", "ОСВ", "ОткрытиеФормы", Ложь, "ОСВ");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
КонецФункции

Процедура СчитатьДокументыНазначений(МассивНазначений)
	
	Макет = ПолучитьМакет("МакетДокументыНазначений");
	
	Для Инд = 1 По Макет.ВысотаТаблицы Цикл
		МассивНазначений.Добавить(Макет.Область(Инд,1).Текст);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры





Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДокументРезультат.Очистить();	               
	
	ПользовательскиеНастройки 			= КомпоновщикНастроек.ПользовательскиеНастройки;
	ЭлементыПользовательскихНастроек    = ПользовательскиеНастройки.Элементы;			
				
	ЭлементНастроекПериод 				= ЭлементыПользовательскихНастроек.Найти("f9a41cd0-4073-4848-88d3-30af5935e566");
	Период								= ?(ЭлементНастроекПериод.Использование, ЭлементНастроекПериод.Значение, Неопределено);
	
	//ЭлементНастроекНоменклатура			= ЭлементыПользовательскихНастроек.Найти("b0d7f104-96f8-4491-8238-e2358e183740");
	//Номенклатура						= ?(ЭлементНастроекНоменклатура.Использование, ЭлементНастроекНоменклатура.ПравоеЗначение, Неопределено);
	//
	//ЭлементНастроекПартнер				= ЭлементыПользовательскихНастроек.Найти("af2eec9a-ff1d-44f3-88fb-e786b94db244");
	//Партнер								= ?(ЭлементНастроекПартнер.Использование, ЭлементНастроекПартнер.ПравоеЗначение, Неопределено);

	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//0.
		|ВЫБРАТЬ
		|	РТиУ.Регистратор 					КАК Ссылка1,
		|	АУН.Номенклатура					КАК Номенклатура1,
		|	АУН.Характеристика					КАК Характеристика1,
		|	РТиУ.КоличествоОборот   			КАК КоличествоРасход,
		|	0 									КАК КоличествоПриход,
		|	0 									КАК КоличествоНачальныйОстаток,
		|	0 									КАК КоличествоКонечныйОстаток,
		|	0 									КАК ВнутренниеДвижения,
		//|	РТиУ.СуммаВыручкиОборот				КАК СуммаРеализ,
		//|	РТиУ.СебестоимостьОборот			КАК СуммаРеализ,
		|	РТиУ.КоличествоОборот * СтоимостьНоменклатуры.Стоимость КАК СуммаРеализ,
		|	0 									КАК СуммаПост,
		|	0 									КАК СтоимостьНачальныйОстаток,
		|	0 									КАК СтоимостьКонечныйОстаток,
		|	АУПП.Партнер						КАК Партнер,
		|	НАЧАЛОПЕРИОДА(РТиУ.Период, МЕСЯЦ) 	КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РТиУ.Период, НЕДЕЛЯ) 	КАК ПериодНеделя,
		|	0 									КАК КоличествоПриходРегистр,
		|	0 									КАК КоличествоРасходРегистр
		|ПОМЕСТИТЬ ТабКешПериод	
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериода, &КонецПериода, Регистратор) КАК РТиУ	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО	АУН.КлючАналитики = РТиУ.АналитикаУчетаНоменклатуры
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АУПП
		|ПО	АУПП.КлючАналитики = РТиУ.АналитикаУчетаПоПартнерам
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьНоменклатуры
		|ПО	АУН.КлючАналитики 			= СтоимостьНоменклатуры.АналитикаУчетаНоменклатуры
		|И 	АУПП.Организация 			= СтоимостьНоменклатуры.Организация
		|И 	РТиУ.ВидЗапасов             = СтоимостьНоменклатуры.ВидЗапасов
		|И 	СтоимостьНоменклатуры.Период= НАЧАЛОПЕРИОДА(РТиУ.Период, МЕСЯЦ)
		|	
		|ГДЕ
		|	РТиУ.Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|	
		|                       
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПТиУ.Регистратор,
		|	АУН.Номенклатура,
		|	АУН.Характеристика,
		|	0,
		|	ПТиУ.КоличествоОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ПТиУ.СтоимостьОборот,
		|	0,
		|	0,
		|	ВЫРАЗИТЬ(ПТиУ.Регистратор КАК Документ.ПоступлениеТоваровУслуг).Партнер,
		|	НАЧАЛОПЕРИОДА(ПТиУ.Период, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ПТиУ.Период, НЕДЕЛЯ),
		|	0,
		|	0	
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Обороты(&НачалоПериода, &КонецПериода, Регистратор) КАК ПТиУ	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО	АУН.КлючАналитики = ПТиУ.АналитикаУчетаНоменклатуры
		|	
		|ГДЕ
		|	Регистратор Ссылка Документ.ПоступлениеТоваровУслуг	
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТП.Регистратор,
		|	АУН.Номенклатура,
		|	АУН.Характеристика,
		|	0,
		|	ВТП.КоличествоОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ВТП.СтоимостьОборот,
		|	0,
		|	0,
		|	ВЫРАЗИТЬ(ВТП.Регистратор КАК Документ.ВозвратТоваровПоставщику).Партнер,
		|	НАЧАЛОПЕРИОДА(ВТП.Период, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ВТП.Период, НЕДЕЛЯ),
		|	0,
		|	0
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Обороты(&НачалоПериода, &КонецПериода, Регистратор) КАК ВТП	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО	АУН.КлючАналитики = ВТП.АналитикаУчетаНоменклатуры
		|	
		|ГДЕ
		|	Регистратор Ссылка Документ.ВозвратТоваровПоставщику
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТоК.Регистратор,
		|	АУН.Номенклатура,
		|	АУН.Характеристика,
		|	ВТоК.КоличествоОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		//|	ВТоК.СуммаВыручкиОборот,
		|	ВТоК.КоличествоОборот * СтоимостьНоменклатуры.Стоимость,
		|	0,
		|	0,
		|	0,
		|	АУПП.Партнер,
		|	НАЧАЛОПЕРИОДА(ВТоК.Период, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ВТоК.Период, НЕДЕЛЯ),
		|	0,
		|	0	
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериода, &КонецПериода, Регистратор) КАК ВТоК	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО	АУН.КлючАналитики = ВТоК.АналитикаУчетаНоменклатуры
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АУПП
		|ПО	АУПП.КлючАналитики = ВТоК.АналитикаУчетаПоПартнерам
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
		|ПО	ВТоК.Регистратор 				= СебестоимостьТоваров.Регистратор
		|И	ВТоК.АналитикаУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьНоменклатуры
		|ПО	АУН.КлючАналитики 			= СтоимостьНоменклатуры.АналитикаУчетаНоменклатуры
		|И 	АУПП.Организация 			= СтоимостьНоменклатуры.Организация
		|И 	ВТоК.ВидЗапасов             = СтоимостьНоменклатуры.ВидЗапасов
		//|И 	СтоимостьНоменклатуры.Период= НАЧАЛОПЕРИОДА(ВТоК.Период, МЕСЯЦ)
		|И	ВЫБОР
		|		КОГДА СебестоимостьТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов)
		|		ТОГДА СтоимостьНоменклатуры.Период = НАЧАЛОПЕРИОДА(СебестоимостьТоваров.ПериодПродажи, МЕСЯЦ)
		|		ИНАЧЕ СтоимостьНоменклатуры.Период = НАЧАЛОПЕРИОДА(ВТоК.Период, МЕСЯЦ)
		|	КОНЕЦ
		|	
		|ГДЕ
		|	ВТоК.Регистратор Ссылка Документ.ВозвратТоваровОтКлиента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СНТ.Регистратор,
		|	АУН.Номенклатура,
		|	АУН.Характеристика,
		|	0,
		|	0,
		|	0,
		|	0,
		|	СНТ.КоличествоОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
		|	НАЧАЛОПЕРИОДА(СНТ.Период, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(СНТ.Период, НЕДЕЛЯ),
		|	0,
		|	0
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Обороты(&НачалоПериода, &КонецПериода, Регистратор) КАК СНТ	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО	АУН.КлючАналитики = СНТ.АналитикаУчетаНоменклатуры
		|	
		|ГДЕ
		|	Регистратор Ссылка Документ.СписаниеНедостачТоваров
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СТ.Регистратор,
		|	АУН.Номенклатура,
		|	АУН.Характеристика,
		|	0,
		|	0,
		|	0,
		|	0,
		|	СТ.КоличествоОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
		|	НАЧАЛОПЕРИОДА(СТ.Период, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(СТ.Период, НЕДЕЛЯ),
		|	0,
		|	0
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Обороты(&НачалоПериода, &КонецПериода, Регистратор) КАК СТ	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО	АУН.КлючАналитики = СТ.АналитикаУчетаНоменклатуры
		|	
		|ГДЕ
		|	Регистратор Ссылка Документ.СборкаТоваров
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОИТ.Регистратор,
		|	АУН.Номенклатура,
		|	АУН.Характеристика,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ОИТ.КоличествоОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
		|	НАЧАЛОПЕРИОДА(ОИТ.Период, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ОИТ.Период, НЕДЕЛЯ),
		|	0,
		|	0
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Обороты(&НачалоПериода, &КонецПериода, Регистратор) КАК ОИТ	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО	АУН.КлючАналитики = ОИТ.АналитикаУчетаНоменклатуры
		|	
		|ГДЕ
		|	Регистратор Ссылка Документ.ОприходованиеИзлишковТоваров
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	ТоварыОрганизацийОстаткиИОбороты.Номенклатура,
		|	ТоварыОрганизацийОстаткиИОбороты.Характеристика,
		|	0,
		|	0,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоНачальныйОстаток,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоКонечныйОстаток,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
		|	НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(&КонецПериода, НЕДЕЛЯ),
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоПриход,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоРасход
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Авто, , ) КАК ТоварыОрганизацийОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВПТ.Регистратор,
		|	АУН.Номенклатура,
		|	АУН.Характеристика,
		|	-ВПТ.КоличествоОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
		|	НАЧАЛОПЕРИОДА(ВПТ.Период, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ВПТ.Период, НЕДЕЛЯ),
		|	0,
		|	0
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Обороты(&НачалоПериода, &КонецПериода, Регистратор) КАК ВПТ	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО	АУН.КлючАналитики = ВПТ.АналитикаУчетаНоменклатуры
		|	
		|ГДЕ
		|	Регистратор Ссылка Документ.ВнутреннееПотреблениеТоваров
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВО.Регистратор,
		|	АУН.Номенклатура,
		|	АУН.Характеристика,
		|	0,
		|	ВО.КоличествоОборот,
		|	0,
		|	0,
		|	0,
		|	0,
		|	ВО.СтоимостьОборот,
		|	0,
		|	0,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
		|	НАЧАЛОПЕРИОДА(ВО.Период, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ВО.Период, НЕДЕЛЯ),
		|	0,
		|	0
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Обороты(&НачалоПериода, &КонецПериода, Регистратор) КАК ВО	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО	АУН.КлючАналитики = ВО.АналитикаУчетаНоменклатуры
		|	
		|ГДЕ
		|	Регистратор Ссылка Документ.ВводОстатков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	СебестоимостьТоваровОстаткиИОбороты.АналитикаУчетаНоменклатуры.Номенклатура,
		|	СебестоимостьТоваровОстаткиИОбороты.АналитикаУчетаНоменклатуры.Характеристика,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	0,
		|	СебестоимостьТоваровОстаткиИОбороты.СтоимостьНачальныйОстаток,
		|	СебестоимостьТоваровОстаткиИОбороты.СтоимостьКонечныйОстаток,
		|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
		|	НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(&КонецПериода, НЕДЕЛЯ),
		|	0,
		|   0
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Авто, , ) КАК СебестоимостьТоваровОстаткиИОбороты
		|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	ТабКешПериод.ПериодМесяц,
	|	ТабКешПериод.ПериодНеделя,
	|	ТабКешПериод.Ссылка1,
	|	ТабКешПериод.Номенклатура1,
	|	ТабКешПериод.Характеристика1,
	|	ТабКешПериод.КоличествоРасход,
	|	ТабКешПериод.КоличествоПриход,
	|	ТабКешПериод.КоличествоНачальныйОстаток,
	|	ТабКешПериод.КоличествоКонечныйОстаток,
	|	ТабКешПериод.ВнутренниеДвижения,
	|	ТабКешПериод.КоличествоПриходРегистр,
	|	ТабКешПериод.КоличествоРасходРегистр,
	|	ТабКешПериод.КоличествоНачальныйОстаток + ТабКешПериод.КоличествоПриходРегистр - ТабКешПериод.КоличествоРасходРегистр - ТабКешПериод.КоличествоКонечныйОстаток КАК Проверка,
	//|	ТабКешПериод.КоличествоПриход +1000 КАК Проверка2,
	|	ВЫБОР
	|		КОГДА ТабКешПериод.Ссылка1 ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
	|			ТОГДА ТабКешПериод.КоличествоРасход * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|		ИНАЧЕ ТабКешПериод.СуммаРеализ
	|	КОНЕЦ КАК СуммаРасход,
	
	|	ВЫБОР
	|		КОГДА ТабКешПериод.Ссылка1 ССЫЛКА Документ.ВводОстатков
	|		ТОГДА ТабКешПериод.СуммаПост
	|		ИНАЧЕ ТабКешПериод.СуммаПост
	|	КОНЕЦ КАК СуммаПриход,
	//ЦЕНААААААААААААААААААА
	|
    |   ВЫБОР 
	|		КОГДА КоличествоРасход > 0 
	|		ТОГДА 	ВЫБОР
	|					КОГДА ТабКешПериод.Ссылка1 ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
	|					ТОГДА ТабКешПериод.КоличествоРасход * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|					ИНАЧЕ ТабКешПериод.СуммаРеализ
	|				КОНЕЦ / ТабКешПериод.КоличествоРасход
	|		КОГДА КоличествоПриход > 0 
	|		ТОГДА ТабКешПериод.СуммаПост / ТабКешПериод.КоличествоПриход 
	|	КОНЕЦ КАК ЦенаЗакупки,
	//*********
	|	ТабКешПериод.СтоимостьНачальныйОстаток,
	|	ТабКешПериод.СтоимостьКонечныйОстаток,
	|	ТабКешПериод.Партнер,
	|	ТабКешПериод.ВнутренниеДвижения * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК СтоимостьВнутреннегоДвижения,
	|	0 КАК МаркетинговаяАкция,
	//|	НЕДЕЛЯ(ТабКешПериод.Ссылка1.Дата) - 1 КАК НомерНедели
	|	НЕДЕЛЯ(ТабКешПериод.Ссылка1.Дата) КАК НомерНедели
	//|	КоличествоКонечныйОстаток - КоличествоПриход + КоличествоРасход + ВнутренниеДвижения - КоличествоНачальныйОстаток КАК Проверка
	//|	ТабКешПериод.КоличествоКонечныйОстаток + 100  КАК Проверка1
	|ИЗ
	|	ТабКешПериод КАК ТабКешПериод
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонецПериода, Номенклатура В (ВЫБРАТЬ Номенклатура1 ИЗ ТабКешПериод) И ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыСрезПоследних
	|ПО ТабКешПериод.Номенклатура1 	 = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|И 	ТабКешПериод.Характеристика1 = ЦеныНоменклатурыСрезПоследних.Характеристика";
								
				
	Запрос.УстановитьПараметр("ВидЦены", Справочники.ВидыЦен.НайтиПоНаименованию("Вхідна"));
	Запрос.УстановитьПараметр("Валюта", Константы.ВалютаУправленческогоУчета.Получить());
	//Запрос.УстановитьПараметр("СвойствоДнейНаСкладе", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Дней на складе"));
    //Если НЕ Период = Неопределено Тогда
		Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
		Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	//КонецЕсли; 
	//Если Не Номенклатура = Неопределено Тогда
	//	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	//КонецЕсли;
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	мСхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ОбъектЗапроса", РезультатЗапроса);
	
	Настройки 					= мСхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	
	КомпоновщикНастроекДанных = Новый КомпоновщикНастроекКомпоновкиДанных; 
	КомпоновщикНастроекДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(мСхемаКомпоновкиДанных)); 
	КомпоновщикНастроекДанных.ЗагрузитьНастройки(КомпоновщикНастроек.ПолучитьНастройки()); 
	КомпоновщикНастроекДанных.ЗагрузитьПользовательскиеНастройки(КомпоновщикНастроек.ПользовательскиеНастройки); 
	
	
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных;
	ДанныеРасшифровки			= Новый ДанныеРасшифровкиКомпоновкиДанных;
	МакетКомпоновки				= КомпоновщикМакета.Выполнить(мСхемаКомпоновкиДанных, КомпоновщикНастроекДанных.ПолучитьНастройки(), ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанны    = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанны.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода						 	  = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;	
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанны);
		
КонецПроцедуры
