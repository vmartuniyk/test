
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;		
	
	Настройки = ПолучитьИПроверитьНастройки();
	
	БонусыМенеджерамЗаСертификаты = ПолучитьБонусыМенеджерамЗаСертификаты(Настройки);
	

	
	//УстановитьПривилегированныйРежим(Истина);
	
	СегментыСервер.ВключитьОтборПоСегментуНоменклатурыВСКД(КомпоновщикНастроек);
	
	ПараметрыКомпоновщика 					= КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы;
	ПользовательскиеПараметрыКомпоновщика   = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	
	УстановитьПараметрыДанныхКомпоновщикаНастроек(ПараметрыКомпоновщика, ПользовательскиеПараметрыКомпоновщика,Настройки);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("БонусыМенеджерамЗаСертификаты", БонусыМенеджерамЗаСертификаты);
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки(); 

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
		
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ПолучитьИПроверитьНастройки()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Настройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиПроцентовКТСПомощь", , , "ДополнительныеНастройкиПроцентовКТСПомощь");
	
	Если ТипЗнч(Настройки) <> Тип("Структура") Тогда
		ВызватьИсключение НСтр("ru='Не удалось получить настройки «КТС Помощь». Обратитесь в службу технической поддрежки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Настройки.Свойство("ПроцентПродажыУслуги") = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задан процент от продажы услуги «КТС Помощь». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Настройки.Свойство("ПроцентИсполненияУслуги") = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задан процент от исполнения услуги «КТС Помощь». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Настройки.Свойство("СвойствоПомощьКТС") = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задано свойство «КТС Помощь». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
			
	Если Настройки.Свойство("ПроцентОтПродажыСертификата") = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Не задан процент от продажы сертификата на дополнительное обслужывание. Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Если Настройки.Свойство("ВидНоменклатурыСертификаты") = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Вид номенклатуры сертификата на дополнительное обслужывание. Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

Процедура УстановитьПараметрыДанныхКомпоновщикаНастроек(ПараметрыКомпоновщика, ПользовательскиеПараметрыКомпоновщика,Настройки)
	
	ИндетификаторВходнойЦены				= Новый УникальныйИдентификатор("8bdf84fb-404c-11e0-9f98-001517115d85");
	ВидЦеныВходная							= Справочники.ВидыЦен.ПолучитьСсылку(ИндетификаторВходнойЦены);
	ВалютаУправленческогоУчета				= Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегламентированогоУчета			= Константы.ВалютаРегламентированногоУчета.Получить();
	
	ПараметрДанных = ПараметрыКомпоновщика.Найти("ВидЦеныВходная");
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрПользовательскойНастройки = ПользовательскиеПараметрыКомпоновщика.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройки <> Неопределено Тогда
			ПараметрПользовательскойНастройки.Значение = ВидЦеныВходная;
		Иначе
			ПараметрДанных.Значение = ВидЦеныВходная;
		КонецЕсли;
	Иначе
		ВызватьИсключение НСтр("ru='Не удалось получить входную цену.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	ПараметрДанныхУпрУч = ПараметрыКомпоновщика.Найти("ВалютаУправленческогоУчета");
	Если ПараметрДанныхУпрУч <> Неопределено Тогда
		ПараметрПользовательскойНастройкиУпрУч = ПользовательскиеПараметрыКомпоновщика.Найти(ПараметрДанныхУпрУч.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройкиУпрУч <> Неопределено Тогда
			ПараметрПользовательскойНастройкиУпрУч.Значение = ВалютаУправленческогоУчета;
		Иначе
			ПараметрДанныхУпрУч.Значение = ВалютаУправленческогоУчета;
		КонецЕсли;
	Иначе
		ВызватьИсключение НСтр("ru='Не удалось получить входную цену.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;

	ПараметрДанныхРеглУч = ПараметрыКомпоновщика.Найти("ВалютаРегламентированогоУчета");
	Если ПараметрДанныхРеглУч <> Неопределено Тогда
		ПараметрПользовательскойНастройкиРеглУч = ПользовательскиеПараметрыКомпоновщика.Найти(ПараметрДанныхУпрУч.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройкиРеглУч <> Неопределено Тогда
			ПараметрПользовательскойНастройкиРеглУч.Значение = ВалютаРегламентированогоУчета;
		Иначе
			ПараметрДанныхРеглУч.Значение = ВалютаРегламентированогоУчета;
		КонецЕсли;
	Иначе
		ВызватьИсключение НСтр("ru='Не удалось получить входную цену.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	ПараметрДанных = ПараметрыКомпоновщика.Найти("ВидНоменклатурыКТСПомощь");
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрДанных.Значение = Справочники.ВидыНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор("91f45981-0c03-11e2-9d4d-001e673c80fc"));
	КонецЕсли;
	
	ПараметрДанных = ПараметрыКомпоновщика.Найти("ПроцентПродажыУслуги");
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрДанных.Значение = Настройки.ПроцентПродажыУслуги;
	КонецЕсли;
	
	ПараметрДанных = ПараметрыКомпоновщика.Найти("ПроцентИсполненияУслуги");
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрДанных.Значение = Настройки.ПроцентИсполненияУслуги;
	КонецЕсли;
	
	ПараметрДанных = ПараметрыКомпоновщика.Найти("СвойствоПомощьКТС");
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрДанных.Значение = Настройки.СвойствоПомощьКТС;
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьБонусыМенеджерамЗаСертификаты(Настройки)

	
	Запрос 		 = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПолучитьБонусыМенеджерамЗаСертификаты();
	
	ПериодОтчета = ПолучитьЗначениеПараметра("ПериодОтчета");
	
	Запрос.УстановитьПараметр("НачалоПериода"					, ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода"					, ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("КурсВалютыУправленческогоУчета"	, ПолучитьЗначениеПараметра("КурсВалютыУправленческогоУчета"));
	Запрос.УстановитьПараметр("ПроцентОтПродажыСертификата"		, Настройки.ПроцентОтПродажыСертификата);
	Запрос.УстановитьПараметр("ВидНоменклатурыСертификата"		, Настройки.ВидНоменклатурыСертификаты);
	Запрос.УстановитьПараметр("ПроцентПродажыУслуги"			, Настройки.ПроцентПродажыУслуги);
	Запрос.УстановитьПараметр("НастройкаСертификатов"			, Настройки.НастройкаСертификатов.Получить());
	
	Запрос.УстановитьПараметр("ПроцентИсполненияУслуги"			, Настройки.ПроцентИсполненияУслуги);
	Запрос.УстановитьПараметр("СвойствоПомощьКТС"				, Настройки.СвойствоПомощьКТС);
	
	
	ИндетификаторВходнойЦены				= Новый УникальныйИдентификатор("8bdf84fb-404c-11e0-9f98-001517115d85");
	ВидЦеныВходная							= Справочники.ВидыЦен.ПолучитьСсылку(ИндетификаторВходнойЦены);
	ВалютаУправленческогоУчета				= Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегламентированогоУчета			= Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос.УстановитьПараметр("ВидЦеныВходная"					, ВидЦеныВходная);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета"		,ВалютаУправленческогоУчета);
	Запрос.УстановитьПараметр("ВалютаРегламентированогоУчета"	,ВалютаРегламентированогоУчета);
	Запрос.УстановитьПараметр("ВидНоменклатурыКТСПомощь"		, Справочники.ВидыНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор("91f45981-0c03-11e2-9d4d-001e673c80fc")));
	Запрос.УстановитьПараметр("ПроцентПродажыУслуги"			,Настройки.ПроцентПродажыУслуги);
	Запрос.УстановитьПараметр("ПроцентИсполненияУслуги"			,Настройки.ПроцентИсполненияУслуги);
	Запрос.УстановитьПараметр("СвойствоПомощьКТС"				,Настройки.СвойствоПомощьКТС);
	Запрос.УстановитьПараметр("ДанныеПоПродажам"				, ПолучитьЗначениеПараметра("ДанныеПоПродажам"));
	Запрос.УстановитьПараметр("ПоказыватьПродажи"				, ПолучитьЗначениеПараметра("ПоказыватьПродажи"));	        
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьБонусыМенеджерамЗаСертификаты()

Функция ТекстЗапросаПолучитьБонусыМенеджерамЗаСертификаты()

	 ТекстЗапроса = 

	////////////////////////////////////////////////////////////////////////////////
	// Необходимо для отбора по сегменту номенклатуры
	"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Сегменты.Номенклатура,
	|	Сегменты.Характеристика,
	|	ИСТИНА КАК ИспользуетсяОтборПоСегментуНоменклатуры
	|ПОМЕСТИТЬ ОтборПоСегментуНоменклатуры
	|ИЗ
	|	РегистрСведений.НоменклатураСегмента КАК Сегменты
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ИспользуетсяОтборПоСегментуНоменклатуры
	|{ГДЕ
	|	Сегменты.Сегмент.* КАК СегментНоменклатуры,
	|	Сегменты.Номенклатура.* КАК Номенклатура,
	|	Сегменты.Характеристика.* КАК Характеристика}
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Выбираем все комплектующие сборок
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК ДокументСборка,
	|	Товары.Ссылка.Дата КАК ДатаДокумента,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ВидЦеныВходная КАК ВидЦены,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ КешТоварыСборок
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка.Проведен

	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.Ссылка.Дата,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	&ВидЦеныВходная
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Выбираем все зборки
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СборкаТоваров.Ссылка КАК ДокументСборка,
	|	СборкаТоваров.Дата КАК ДатаДокумента,
	|	СборкаТоваров.Номенклатура КАК Номенклатура,
	|	СборкаТоваров.Характеристика КАК Характеристика,
	|	&ВидЦеныВходная КАК ВидЦены,
	|	СУММА(СборкаТоваров.Количество) КАК Количество
	|ПОМЕСТИТЬ КешСборки
	|ИЗ
	|	Документ.СборкаТоваров КАК СборкаТоваров
	|ГДЕ
	|	СборкаТоваров.Проведен

	|СГРУППИРОВАТЬ ПО
	|	СборкаТоваров.Ссылка,
	|	СборкаТоваров.Дата,
	|	СборкаТоваров.Номенклатура,
	|	СборкаТоваров.Характеристика,
	|	&ВидЦеныВходная	
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Выбираем цены сборок
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Период КАК Период,
	|	Номенклатура КАК Номенклатура,
	|	Характеристика КАК Характеристика,
	|	ВЫБОР Упаковка
	|		КОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Цена
	|		ИНАЧЕ Цена * Упаковка.Коэффициент
	|	КОНЕЦ КАК Цена
	|ПОМЕСТИТЬ КешЦеныСборокПериоды
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры
	|ГДЕ
	|	(Номенклатура, ВидЦены, Характеристика)	В
	|	(ВЫБРАТЬ
	|			Номенклатура,
	|			ВидЦены,
	|			Характеристика
	|		ИЗ
	|			КешСборки)
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Наростающие итоги по ценам сборок
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КешЦеныСборокПериоды.Номенклатура 											КАК Номенклатура,
	|	КешЦеныСборокПериоды.Характеристика 										КАК Характеристика,
	|	КешЦеныСборокПериоды.Период 												КАК НачалоПериода,
	|	КешЦеныСборокПериоды.Цена 													КАК Цена,
	|	МИНИМУМ(ЕСТЬNULL(КешЦеныСборокПериодыКопия.Период, ДАТАВРЕМЯ(3999, 1, 1)))	КАК КонецПериода
	|ПОМЕСТИТЬ КешЦеныСборок
	|ИЗ
	|	КешЦеныСборокПериоды КАК КешЦеныСборокПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ КешЦеныСборокПериоды КАК КешЦеныСборокПериодыКопия
	|		ПО КешЦеныСборокПериоды.Номенклатура = КешЦеныСборокПериодыКопия.Номенклатура
	|		И КешЦеныСборокПериоды.Характеристика = КешЦеныСборокПериодыКопия.Характеристика
	|		И КешЦеныСборокПериоды.Период < КешЦеныСборокПериодыКопия.Период

	|СГРУППИРОВАТЬ ПО
	|	КешЦеныСборокПериоды.Номенклатура,
	|	КешЦеныСборокПериоды.Характеристика,
	|	КешЦеныСборокПериоды.Период,
	|	КешЦеныСборокПериоды.Цена
	|;


	////////////////////////////////////////////////////////////////////////////////
	// Строим таблицу цен комплектующих
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Период 											КАК Период,
	|	НАЧАЛОПЕРИОДА(Период, МЕСЯЦ)					КАК ПериодНачало,
	|	КОНЕЦПЕРИОДА(Период, МЕСЯЦ)						КАК ПериодОкончание,
	|	Номенклатура 									КАК Номенклатура,
	|	Характеристика 									КАК Характеристика,
	|	ВЫБОР Упаковка
	|		КОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	|			ТОГДА Цена
	|		ИНАЧЕ Цена * Упаковка.Коэффициент
	|	КОНЕЦ 											КАК Цена
	|ПОМЕСТИТЬ КешТаблицаЦеныКомплектующих
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры
	|ГДЕ
	|	(Номенклатура, ВидЦены, Характеристика)	В
	|	(ВЫБРАТЬ
	|			Номенклатура,
	|			ВидЦены,
	|			Характеристика
	|		ИЗ
	|			КешТоварыСборок)
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Определяем период для получение цены на комплектующее сборки
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТоварыСборок.ДатаДокумента 						КАК ДатаДокумента,
	|	ТоварыСборок.ДокументСборка 					КАК ДокументСборка,
	|	ТоварыСборок.Номенклатура 						КАК Номенклатура,
	|	ТоварыСборок.Характеристика						КАК Характеристика,
	|	ТоварыСборок.Количество 						КАК Количество,
	|	МАКСИМУМ(ЦеныКомплектующихПериоды.Период) 		КАК Период
	|ПОМЕСТИТЬ КешЦеныКомплектующихПериоды
	|ИЗ
	|	КешТоварыСборок КАК ТоварыСборок
	|		ЛЕВОЕ СОЕДИНЕНИЕ КешТаблицаЦеныКомплектующих КАК ЦеныКомплектующихПериоды
	|		ПО ЦеныКомплектующихПериоды.Номенклатура = ТоварыСборок.Номенклатура
	|		И ЦеныКомплектующихПериоды.Характеристика = ТоварыСборок.Характеристика
	|		И ТоварыСборок.ДатаДокумента >= ЦеныКомплектующихПериоды.Период

	|СГРУППИРОВАТЬ ПО
	|	ТоварыСборок.ДатаДокумента,
	|	ТоварыСборок.ДокументСборка,
	|	ТоварыСборок.Номенклатура,
	|	ТоварыСборок.Характеристика,
	|	ТоварыСборок.Количество
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Получаем цены комплектующих сборок
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦеныКомплектующихПериоды.ДокументСборка 							КАК ДокументСборка,
	|	ЦеныКомплектующихПериоды.Номенклатура 								КАК Номенклатура,
	|	ЦеныКомплектующихПериоды.Характеристика 							КАК Характеристика,
	|	ЦеныКомплектующихПериоды.Количество * ТаблицаЦеныКомплектующих.Цена КАК Сумма
	|ПОМЕСТИТЬ КешСуммаКомплектующих
	|ИЗ
	|	КешЦеныКомплектующихПериоды КАК ЦеныКомплектующихПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ КешТаблицаЦеныКомплектующих КАК ТаблицаЦеныКомплектующих
	|		ПО ТаблицаЦеныКомплектующих.Номенклатура = ЦеныКомплектующихПериоды.Номенклатура
	|		И ТаблицаЦеныКомплектующих.Характеристика = ЦеныКомплектующихПериоды.Характеристика
	|		И ТаблицаЦеныКомплектующих.Период = ЦеныКомплектующихПериоды.Период
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Получаем цены сборок
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Сборки.ДокументСборка 					КАК ДокументСборка,
	|	Сборки.Номенклатура 					КАК Номенклатура,
	|	Сборки.Характеристика 					КАК Характеристика,
	|	Сборки.Количество * ЦеныСборок.Цена 	КАК Сумма
	|ПОМЕСТИТЬ КешСуммаСборок
	|ИЗ	
	|	КешСборки КАК Сборки
	|		ЛЕВОЕ СОЕДИНЕНИЕ КешЦеныСборок КАК ЦеныСборок
	|		ПО ЦеныСборок.Номенклатура = Сборки.Номенклатура
	|		И ЦеныСборок.Характеристика = Сборки.Характеристика
	|		И (ЦеныСборок.НачалоПериода < Сборки.ДатаДокумента
	|		И ЦеныСборок.КонецПериода > Сборки.ДатаДокумента 
	|		ИЛИ ЦеныСборок.НачалоПериода > Сборки.ДатаДокумента)
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Коэффициенты сборок
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СуммаСборок.Номенклатура 									КАК НоменклатураСборка,
	|	СуммаСборок.Характеристика 									КАК ХарактеристикаСборка,
	|	СуммаКомплектующих.Номенклатура 							КАК Номенклатура,
	|	СуммаКомплектующих.Характеристика 							КАК Характеристика,
	|	СУММА(СуммаКомплектующих.Сумма) / СУММА(СуммаСборок.Сумма)	КАК Коэффициент
	|ПОМЕСТИТЬ КешКоеффСборок
	|ИЗ
	|	КешСуммаСборок КАК СуммаСборок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешСуммаКомплектующих КАК СуммаКомплектующих
	|		ПО СуммаКомплектующих.ДокументСборка = СуммаСборок.ДокументСборка

	|СГРУППИРОВАТЬ ПО
	|	СуммаСборок.Номенклатура,
	|	СуммаСборок.Характеристика,
	|	СуммаКомплектующих.Номенклатура,
	|	СуммаКомплектующих.Характеристика
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Получение выручки, себестоимости и валовой прибыли
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ

	|	АналитикаНоменклатуры.Номенклатура		КАК Номенклатура,
	|	АналитикаНоменклатуры.Характеристика	КАК Характеристика,
	|	АналитикаПоПартнерам.Организация 		КАК Организация,
	| 	АналитикаНоменклатуры.Склад 			КАК Склад,

	|	ВЫБОР Продажи.Регистратор
	|		КОГДА НЕОПРЕДЕЛЕНО ТОГДА
	|			NULL
	|		ИНАЧЕ
	|			Продажи.Регистратор
	|	КОНЕЦ 									КАК Регистратор,

	|	//Ресурсы
	|	Продажи.КоличествоОборот             	КАК Количество,
	|	Продажи.СуммаВыручкиОборот           	КАК Выручка,
	|	Продажи.СуммаВыручкиРеглОборот       	КАК ВыручкаРегл,		
	|	Продажи.СуммаВыручкиБезНДСОборот     	КАК ВыручкаБезНДС,

	|	///Себестоимость
	|	ВЫБОР
	|		КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|			ТОГДА Продажи.СуммаВыручкиОборот
	|		КОГДА ЕСТЬNULL(РасчетСебестоимости.Ссылка.ПредварительныйРасчет, ЛОЖЬ) ТОГДА
	|			ВЫРАЗИТЬ(Продажи.КоличествоОборот * ЕСТЬNULL(СтоимостьНоменклатуры.Стоимость, 0) КАК ЧИСЛО(15, 2))	
	|		ИНАЧЕ
	|			Продажи.СебестоимостьОборот
	|	КОНЕЦ 									КАК Себестоимость,

	|	///СебестоимостьБезНДС
	|	ВЫБОР
	|		КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|			ТОГДА Продажи.СуммаВыручкиБезНДСОборот
	|		КОГДА ЕСТЬNULL(РасчетСебестоимости.Ссылка.ПредварительныйРасчет, ЛОЖЬ) 
	|			ТОГДА ВЫРАЗИТЬ(Продажи.КоличествоОборот * ЕСТЬNULL(СтоимостьНоменклатуры.СтоимостьБезНДС, 0) КАК ЧИСЛО(15, 2))	
	|		ИНАЧЕ
	|			Продажи.СебестоимостьБезНДСОборот
	|	КОНЕЦ 									КАК СебестоимостьБезНДС,

	|	///СебестоимостьРегл
	|	ВЫБОР
	|		КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|			ТОГДА Продажи.СуммаВыручкиРеглОборот
	|		КОГДА ЕСТЬNULL(РасчетСебестоимости.Ссылка.ПредварительныйРасчет, ЛОЖЬ) 
	|			ТОГДА ВЫРАЗИТЬ(Продажи.КоличествоОборот * ЕСТЬNULL(СтоимостьНоменклатуры.СтоимостьРегл, 0) КАК ЧИСЛО(15, 2))	
	|		ИНАЧЕ
	|			Продажи.СебестоимостьРеглОборот
	|	КОНЕЦ 									КАК СебестоимостьРегл,

	|	////ДопРасходы
	|	ВЫБОР
	|		КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(РасчетСебестоимости.Ссылка.ПредварительныйРасчет, ЛОЖЬ) 
	|			ТОГДА ВЫРАЗИТЬ(Продажи.КоличествоОборот * ЕСТЬNULL(СтоимостьНоменклатуры.СтоимостьДопРасходы, 0) КАК ЧИСЛО(15, 2))	
	|		ИНАЧЕ
	|			Продажи.СуммаДополнительныхРасходовОборот
	|	КОНЕЦ 									КАК ДопРасходы,

	|	////ДопРасходыБезНДС
	|	ВЫБОР
	|		КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(РасчетСебестоимости.Ссылка.ПредварительныйРасчет, ЛОЖЬ) 
	|			ТОГДА ВЫРАЗИТЬ(Продажи.КоличествоОборот * ЕСТЬNULL(СтоимостьНоменклатуры.СтоимостьДопРасходыБезНДС, 0) КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ
	|			Продажи.СуммаДополнительныхРасходовБезНДСОборот
	|	КОНЕЦ 									КАК ДопРасходыБезНДС,

	|	Продажи.ПериодДень      				КАК День,
	|	Продажи.ПериодНеделя    				КАК Неделя,
	|	Продажи.ПериодДекада    				КАК Декада,
	|	Продажи.ПериодМесяц     				КАК Месяц,
	|	Продажи.ПериодКвартал   				КАК Квартал,
	|	Продажи.ПериодПолугодие 				КАК Полугодие,
	|	Продажи.ПериодГод       				КАК Год
	|	
	|	{ВЫБРАТЬ
	|		Номенклатура.*,
	|		Характеристика.*}

	|ПОМЕСТИТЬ КешВыручкаИСебестоимостьПродаж

	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|						&НачалоПериода, 
	|						&КонецПериода, 
	|						Авто,) КАК Продажи
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО Продажи.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.КлючАналитики

	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО Продажи.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики

	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьНоменклатуры
	|			ПО Продажи.АналитикаУчетаНоменклатуры   = СтоимостьНоменклатуры.АналитикаУчетаНоменклатуры
	|				И (АналитикаПоПартнерам.Организация = СтоимостьНоменклатуры.Организация)
	|				И (Продажи.ВидЗапасов               = СтоимостьНоменклатуры.ВидЗапасов)
	|				И (СтоимостьНоменклатуры.Период     = НАЧАЛОПЕРИОДА(Продажи.ПериодМесяц,МЕСЯЦ)) // т.к. стоимость товаров хранится по месяцам

	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимости
	|			ПО (НАЧАЛОПЕРИОДА(Продажи.ПериодМесяц, МЕСЯЦ) = НАЧАЛОПЕРИОДА(РасчетСебестоимости.Ссылка.Дата, МЕСЯЦ)) // т.к. документ заводится 1 на месяц
	|				И (АналитикаПоПартнерам.Организация       = РасчетСебестоимости.Организация)
	|				И (РасчетСебестоимости.Ссылка.Проведен)
	|	ГДЕ
	|	(&ПоказыватьПродажи = 1
	|				И АналитикаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИЛИ &ПоказыватьПродажи = 2
	|				И АналитикаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИЛИ &ПоказыватьПродажи = 0)
	|	{ГДЕ
	|		АналитикаНоменклатуры.Номенклатура.*   КАК Номенклатура,
	|		АналитикаНоменклатуры.Характеристика.* КАК Характеристика,
	|		(АналитикаНоменклатуры.Номенклатура, АналитикаНоменклатуры.Характеристика) В
	|			(ВЫБРАТЬ
	|				ОтборПоСегментуНоменклатуры.Номенклатура,
	|				ОтборПоСегментуНоменклатуры.Характеристика
	|			ИЗ
	|				ОтборПоСегментуНоменклатуры
	|			ГДЕ
	|				ОтборПоСегментуНоменклатуры.ИспользуетсяОтборПоСегментуНоменклатуры = &ИспользуетсяОтборПоСегментуНоменклатуры)}
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Нарастающий итог по курсам валют.
	|ВЫБРАТЬ 
	|	КурсыВалют.Курс / КурсыВалют.Кратность КАК Курс,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.Период
	|ПОМЕСТИТЬ КурсыВалют 
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|;

	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КурсыВалют.Курс,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.Период КАК НачалоПериода,
	|	МИНИМУМ(ЕСТЬNULL(КурсыВалютКопия.Период, ДАТАВРЕМЯ(3999, 1, 1))) КАК КонецПериода 
	|ПОМЕСТИТЬ ТаблицаКурсов
	|ИЗ
	|	КурсыВалют КАК КурсыВалют
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалютКопия
	|		ПО КурсыВалютКопия.Период > КурсыВалют.Период
	|		И КурсыВалютКопия.Валюта = КурсыВалют.Валюта

	|СГРУППИРОВАТЬ ПО
	|	КурсыВалют.Период,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Валюта
	|;
	|ВЫБРАТЬ
	|	НастройкаСертификатов.Сертификат	КАК Номенклатура,
	|	НастройкаСертификатов.Процент 		КАК Процент
	|ПОМЕСТИТЬ НастройкаСертификатов
	|ИЗ
	|	&НастройкаСертификатов КАК НастройкаСертификатов
	|;
	|

	////////////////////////////////////////////////////////////////////////////////
	// Начисления бонусом продавцам
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	БонусыМенеджерам.Номенклатура 									КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)	КАК Характеристика,
	|	БонусыМенеджерам.Организация 									КАК Организация,
	|	БонусыМенеджерам.ЗаработокМенеджераУпрОборот * ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) КАК Бонус,
	|	БонусыМенеджерам.Регистратор КАК Регистратор,
	|	
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодМесяц, МЕСЯЦ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодМесяц, МЕСЯЦ), ДЕНЬ) + 1 					КАК ДнейВМесяце,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодКвартал, КВАРТАЛ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодКвартал, КВАРТАЛ), ДЕНЬ) + 1 			КАК ДнейВКвартале,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодПолугодие, ПОЛУГОДИЕ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодПолугодие, ПОЛУГОДИЕ), ДЕНЬ) + 1	КАК ДнейВПолугодии,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодГод, ГОД), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодГод, ГОД), ДЕНЬ) + 1 							КАК ДнейВГоду,
	|	
	|	БонусыМенеджерам.ПериодДень 		КАК День,
	|	БонусыМенеджерам.ПериодНеделя 		КАК Неделя,
	|	БонусыМенеджерам.ПериодДекада 		КАК Декада,
	|	БонусыМенеджерам.ПериодМесяц 		КАК Месяц,
	|	БонусыМенеджерам.ПериодКвартал 		КАК Квартал,
	|	БонусыМенеджерам.ПериодПолугодие 	КАК Полугодие,
	|	БонусыМенеджерам.ПериодГод 			КАК Год

	|ПОМЕСТИТЬ КешБонусыМенеджерам
	|ИЗ
	|	РегистрНакопления.КПП_БонусыМенеджерамНачисленые.Обороты(
	|												&НачалоПериода, 
	|												&КонецПериода, 
	|												Авто, ) КАК БонусыМенеджерам
	|												
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
	|	ПО 
	|		БонусыМенеджерам.ПериодДень >= ЗаработокМенеджераМножительПоМесяцам.НачалоПериода
	|	И	БонусыМенеджерам.ПериодДень < ЗаработокМенеджераМножительПоМесяцам.КонецПериода
	|	
	|ГДЕ
	|	БонусыМенеджерам.ЗаработокМенеджераУпрОборот <> 0
	|{ГДЕ
	|	((БонусыМенеджерам.Номенклатура, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) В
	|			(ВЫБРАТЬ
	|				ОтборПоСегментуНоменклатуры.Номенклатура,
	|				ОтборПоСегментуНоменклатуры.Характеристика
	|			ИЗ
	|				ОтборПоСегментуНоменклатуры
	|			ГДЕ
	|				ОтборПоСегментуНоменклатуры.ИспользуетсяОтборПоСегментуНоменклатуры = &ИспользуетсяОтборПоСегментуНоменклатур))}
	|ОБЪЕДИНИТЬ ВСЕ

	// Начисления бонусом продавцам для КТС Помощь
	|ВЫБРАТЬ 
	|	БонусыМенеджерам.Номенклатура 									КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)	КАК Характеристика,
	|	БонусыМенеджерам.Организация 									КАК Организация,
	|	БонусыМенеджерам.СуммаУпрОборот * ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) * (КТСПомощь.ПроцентПродажы + КТСПомощь.ПроцентИсполнения) / 100 КАК Бонус,
	|	БонусыМенеджерам.Регистратор 									КАК Регистратор,
	|	
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодМесяц, МЕСЯЦ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодМесяц, МЕСЯЦ), ДЕНЬ) + 1 					КАК ДнейВМесяце,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодКвартал, КВАРТАЛ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодКвартал, КВАРТАЛ), ДЕНЬ) + 1 			КАК ДнейВКвартале,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодПолугодие, ПОЛУГОДИЕ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодПолугодие, ПОЛУГОДИЕ), ДЕНЬ) + 1	КАК ДнейВПолугодии,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодГод, ГОД), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодГод, ГОД), ДЕНЬ) + 1 							КАК ДнейВГоду,
	|	
	|	БонусыМенеджерам.ПериодДень			КАК День,
	|	БонусыМенеджерам.ПериодНеделя		КАК Неделя,
	|	БонусыМенеджерам.ПериодДекада		КАК Декада,
	|	БонусыМенеджерам.ПериодМесяц		КАК Месяц,
	|	БонусыМенеджерам.ПериодКвартал		КАК Квартал,
	|	БонусыМенеджерам.ПериодПолугодие	КАК Полугодие,
	|	БонусыМенеджерам.ПериодГод			КАК Год
	|ИЗ
	|	РегистрНакопления.КПП_БонусыМенеджерамНачисленые.Обороты(
	|												&НачалоПериода, 
	|												&КонецПериода, 
	|												Авто, ) КАК БонусыМенеджерам

	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
	|		ПО БонусыМенеджерам.ПериодДень >= ЗаработокМенеджераМножительПоМесяцам.НачалоПериода
	|			И БонусыМенеджерам.ПериодДень < ЗаработокМенеджераМножительПоМесяцам.КонецПериода
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КТСПомощь КАК КТСПомощь
	|		ПО БонусыМенеджерам.Номенклатура = КТСПомощь.Номенклатура
	|		
	|ГДЕ
	|	БонусыМенеджерам.ЗаработокМенеджераУпрОборот = 0
	|{ГДЕ
	|	((БонусыМенеджерам.Номенклатура, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) В
	|			(ВЫБРАТЬ
	|				ОтборПоСегментуНоменклатуры.Номенклатура,
	|				ОтборПоСегментуНоменклатуры.Характеристика
	|			ИЗ
	|				ОтборПоСегментуНоменклатуры
	|			ГДЕ
	|				ОтборПоСегментуНоменклатуры.ИспользуетсяОтборПоСегментуНоменклатуры = &ИспользуетсяОтборПоСегментуНоменклатур))}

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	БонусыМенеджерам.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	БонусыМенеджерам.Организация,
	|	ВЫБОР
	|		КОГДА ДополнительныеСведения.Значение = БонусыМенеджерам.Менеджер
	|			ТОГДА БонусыМенеджерам.СуммаУпрОборот * ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) * &ПроцентПродажыУслуги / 100
	|		ИНАЧЕ БонусыМенеджерам.СуммаУпрОборот * ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) * &ПроцентИсполненияУслуги / 100
	|	КОНЕЦ,
	|	БонусыМенеджерам.Регистратор,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодМесяц, МЕСЯЦ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодМесяц, МЕСЯЦ), ДЕНЬ) + 1,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодКвартал, КВАРТАЛ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодКвартал, КВАРТАЛ), ДЕНЬ) + 1,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодПолугодие, ПОЛУГОДИЕ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодПолугодие, ПОЛУГОДИЕ), ДЕНЬ) + 1,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодГод, ГОД), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодГод, ГОД), ДЕНЬ) + 1,
	|	БонусыМенеджерам.ПериодДень,
	|	БонусыМенеджерам.ПериодНеделя,
	|	БонусыМенеджерам.ПериодДекада,
	|	БонусыМенеджерам.ПериодМесяц,
	|	БонусыМенеджерам.ПериодКвартал,
	|	БонусыМенеджерам.ПериодПолугодие,
	|	БонусыМенеджерам.ПериодГод
	|ИЗ
	|	РегистрНакопления.КПП_БонусыМенеджерамНачисленые.Обороты(
	|												&НачалоПериода, 
	|												&КонецПериода, 
	|												Авто, 
	|												НЕ Номенклатура В
	|																(ВЫБРАТЬ Номенклатура ИЗ РегистрСведений.КТСПомощь)) КАК БонусыМенеджерам

	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
	|		ПО БонусыМенеджерам.ПериодДень >= ЗаработокМенеджераМножительПоМесяцам.НачалоПериода
	|			И БонусыМенеджерам.ПериодДень < ЗаработокМенеджераМножительПоМесяцам.КонецПериода
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|		ПО ДополнительныеСведения.Свойство = &СвойствоПомощьКТС
	|		И БонусыМенеджерам.Регистратор = ВЫРАЗИТЬ(ДополнительныеСведения.Объект КАК Документ.РеализацияТоваровУслуг)
	|		И ДополнительныеСведения.Значение <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|ГДЕ
	|	БонусыМенеджерам.ЗаработокМенеджераУпрОборот = 0
	|	И БонусыМенеджерам.Номенклатура.ВидНоменклатуры = &ВидНоменклатурыКТСПомощь				
	
	|ОБЪЕДИНИТЬ ВСЕ

	////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	БонусыМенеджерам.Номенклатура 																													КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) 																					КАК Характеристика,
	|	БонусыМенеджерам.Организация 																													КАК Организация,
	|	БонусыМенеджерам.СуммаУпрОборот * ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) * КТСПомощь.Процент / 100 						КАК Бонус,
	|	БонусыМенеджерам.Регистратор 																													КАК Регистратор,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодМесяц, МЕСЯЦ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодМесяц, МЕСЯЦ), ДЕНЬ) + 1 					КАК ДнейВМесяце,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодКвартал, КВАРТАЛ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодКвартал, КВАРТАЛ), ДЕНЬ) + 1 			КАК ДнейВКвартале,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодПолугодие, ПОЛУГОДИЕ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодПолугодие, ПОЛУГОДИЕ), ДЕНЬ) + 1	КАК ДнейВПолугодии,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодГод, ГОД), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодГод, ГОД), ДЕНЬ) + 1 							КАК ДнейВГоду,
	|	БонусыМенеджерам.ПериодДень 																													КАК День,
	|	БонусыМенеджерам.ПериодНеделя 																													КАК Неделя,
	|	БонусыМенеджерам.ПериодДекада 																													КАК Декада,
	|	БонусыМенеджерам.ПериодМесяц 																													КАК Месяц,
	|	БонусыМенеджерам.ПериодКвартал 																													КАК Квартал,
	|	БонусыМенеджерам.ПериодПолугодие 																												КАК Полугодие,
	|	БонусыМенеджерам.ПериодГод 																														КАК Год
	|ИЗ
	|	РегистрНакопления.КПП_БонусыМенеджерамНачисленые.Обороты(&НачалоПериода, &КонецПериода, Авто, ) КАК БонусыМенеджерам
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
	|	ПО 
	|		БонусыМенеджерам.ПериодДень >= ЗаработокМенеджераМножительПоМесяцам.НачалоПериода
	|	И	БонусыМенеджерам.ПериодДень < ЗаработокМенеджераМножительПоМесяцам.КонецПериода
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НастройкаСертификатов КАК КТСПомощь
	|	ПО 
	|		БонусыМенеджерам.Номенклатура = КТСПомощь.Номенклатура
	|ГДЕ
	|	БонусыМенеджерам.ЗаработокМенеджераУпрОборот = 0
	|{ГДЕ
	|	((БонусыМенеджерам.Номенклатура, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) В
	|			(ВЫБРАТЬ
	|				Номенклатура,
	|				Характеристика
	|			ИЗ
	|				ОтборПоСегментуНоменклатуры
	|			ГДЕ
	|				ИспользуетсяОтборПоСегментуНоменклатуры = &ИспользуетсяОтборПоСегментуНоменклатур))}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БонусыМенеджерам.Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	БонусыМенеджерам.Организация,
	|	БонусыМенеджерам.СуммаУпрОборот * ЕСТЬNULL(ЗаработокМенеджераМножительПоМесяцам.Коэффициент, 1) * &ПроцентОтПродажыСертификата / 100,
	|	БонусыМенеджерам.Регистратор,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодМесяц, МЕСЯЦ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодМесяц, МЕСЯЦ), ДЕНЬ) + 1,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодКвартал, КВАРТАЛ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодКвартал, КВАРТАЛ), ДЕНЬ) + 1,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодПолугодие, ПОЛУГОДИЕ), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодПолугодие, ПОЛУГОДИЕ), ДЕНЬ) + 1,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(БонусыМенеджерам.ПериодГод, ГОД), КОНЕЦПЕРИОДА(БонусыМенеджерам.ПериодГод, ГОД), ДЕНЬ) + 1,
	|	БонусыМенеджерам.ПериодДень,
	|	БонусыМенеджерам.ПериодНеделя,
	|	БонусыМенеджерам.ПериодДекада,
	|	БонусыМенеджерам.ПериодМесяц,
	|	БонусыМенеджерам.ПериодКвартал,
	|	БонусыМенеджерам.ПериодПолугодие,
	|	БонусыМенеджерам.ПериодГод
	|ИЗ
	|	РегистрНакопления.КПП_БонусыМенеджерамНачисленые.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			НЕ Номенклатура В
	|					(ВЫБРАТЬ
	|						Номенклатура
	|					ИЗ
	|						НастройкаСертификатов)) КАК БонусыМенеджерам
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаработокМенеджераМножительПоМесяцам КАК ЗаработокМенеджераМножительПоМесяцам
	|	ПО 
	|		БонусыМенеджерам.ПериодДень >= ЗаработокМенеджераМножительПоМесяцам.НачалоПериода
	|	И	БонусыМенеджерам.ПериодДень < ЗаработокМенеджераМножительПоМесяцам.КонецПериода
	|
	|ГДЕ
	|	БонусыМенеджерам.ЗаработокМенеджераУпрОборот	= 0
	|И	БонусыМенеджерам.Номенклатура.ВидНоменклатуры	= &ВидНоменклатурыСертификата	
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Обработка результатов выборки по выручке, себестоимости и валовой прибыли
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Продажи.Номенклатура КАК Номенклатура,
	|	Продажи.Характеристика КАК Характеристика,
	|	Продажи.Организация КАК Организация,
	|	Продажи.Склад КАК Склад,

	|	Продажи.Регистратор КАК Регистратор,
	|	
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Продажи.Месяц, МЕСЯЦ), КОНЕЦПЕРИОДА(Продажи.Месяц, МЕСЯЦ), ДЕНЬ)+1 КАК ДнейВМесяце,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Продажи.Квартал, КВАРТАЛ), КОНЕЦПЕРИОДА(Продажи.Квартал, КВАРТАЛ), ДЕНЬ)+1 КАК ДнейВКвартале,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Продажи.Полугодие, ПОЛУГОДИЕ), КОНЕЦПЕРИОДА(Продажи.Полугодие, ПОЛУГОДИЕ), ДЕНЬ)+1 КАК ДнейВПолугодии,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Продажи.Год, ГОД), КОНЕЦПЕРИОДА(Продажи.Год, ГОД), ДЕНЬ)+1 КАК ДнейВГоду,
	|	
	|	Продажи.День      КАК День,
	|	Продажи.Неделя    КАК Неделя,
	|	Продажи.Декада    КАК Декада,
	|	Продажи.Месяц     КАК Месяц,
	|	Продажи.Квартал   КАК Квартал,
	|	Продажи.Полугодие КАК Полугодие,
	|	Продажи.Год       КАК Год,
	|	
	|	СУММА(Продажи.Количество) КАК Количество,
	|	
	|	// Выручка
	|	ВЫБОР &ДанныеПоПродажам
	|		КОГДА 1 
	|			ТОГДА СУММА(Продажи.Выручка)
	|	 	КОГДА 3 
	|	 		ТОГДА СУММА(Продажи.ВыручкаРегл)
	|		ИНАЧЕ
	|			СУММА(Продажи.ВыручкаБезНДС)
	|	КОНЕЦ КАК Выручка,
	|	
	|	// Выручка НДС
	|	СУММА(Продажи.Выручка)-СУММА(Продажи.ВыручкаБезНДС) КАК ВыручкаНДС,
	|	
	|	// Себестоимость
	|	ВЫБОР &ДанныеПоПродажам 
	|		КОГДА 1 
	|			ТОГДА СУММА(Продажи.Себестоимость)
	|		КОГДА 3 
	|			ТОГДА СУММА(Продажи.СебестоимостьРегл)
	|		ИНАЧЕ
	|			СУММА(Продажи.СебестоимостьБезНДС)
	|	КОНЕЦ КАК Себестоимость,
	|	
	|	// Дополнительные расходы
	|	ВЫБОР &ДанныеПоПродажам
	|		КОГДА 1 
	|			ТОГДА СУММА(Продажи.ДопРасходы)
	|		КОГДА 3 
	|			ТОГДА 0
	|		ИНАЧЕ
	|			СУММА(Продажи.ДопРасходыБезНДС)
	|	КОНЕЦ КАК ДопРасходы,
	|	
	|	// Валовая прибыль
	|	ВЫБОР &ДанныеПоПродажам
	|		КОГДА 1 
	|			ТОГДА СУММА(Продажи.Выручка) - СУММА(Продажи.Себестоимость) - СУММА(Продажи.ДопРасходы)
	|		КОГДА 3 
	|			ТОГДА СУММА(Продажи.ВыручкаРегл) - СУММА(Продажи.СебестоимостьРегл)
	|		ИНАЧЕ
	|			СУММА(Продажи.ВыручкаБезНДС) - СУММА(Продажи.СебестоимостьБезНДС) - СУММА(Продажи.ДопРасходыБезНДС) 		 
	|	КОНЕЦ КАК ВаловаяПрибыль,
	|	
	|	// Курсовая разница
	|	ВЫБОР &КурсВалютыУправленческогоУчета
	|		КОГДА 0
	|			ТОГДА 0
	|		ИНАЧЕ 
	|			ВЫБОР &ДанныеПоПродажам
	|				КОГДА 1 
	|					ТОГДА СУММА(Продажи.Выручка-(Продажи.Выручка*ТаблицаКурсов.Курс/&КурсВалютыУправленческогоУчета))
	|			 	КОГДА 3 
	|			 		ТОГДА СУММА(Продажи.ВыручкаРегл-(Продажи.ВыручкаРегл*ТаблицаКурсов.Курс/&КурсВалютыУправленческогоУчета))
	|				ИНАЧЕ
	|					СУММА(Продажи.ВыручкаБезНДС-(Продажи.ВыручкаБезНДС*ТаблицаКурсов.Курс/&КурсВалютыУправленческогоУчета))
	|			КОНЕЦ	
	|	КОНЕЦ КАК КурсоваяРазница
	|ПОМЕСТИТЬ КешВаловаяПрибыль	
	|ИЗ
	|	КешВыручкаИСебестоимостьПродаж КАК Продажи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсов
	|		ПО Продажи.День >= ТаблицаКурсов.НачалоПериода
	|		И Продажи.День < ТаблицаКурсов.КонецПериода
	|		И ТаблицаКурсов.Валюта В (ВЫБРАТЬ ВалютаУправленческогоУчета ИЗ Константы)

	|СГРУППИРОВАТЬ ПО
	|	Продажи.Номенклатура,
	|	Продажи.Характеристика,
	|	Продажи.Организация,
	|	Продажи.Склад,
	|	Продажи.Регистратор,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Продажи.Месяц, МЕСЯЦ), КОНЕЦПЕРИОДА(Продажи.Месяц, МЕСЯЦ), ДЕНЬ)+1,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Продажи.Квартал, КВАРТАЛ), КОНЕЦПЕРИОДА(Продажи.Квартал, КВАРТАЛ), ДЕНЬ)+1,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Продажи.Полугодие, ПОЛУГОДИЕ), КОНЕЦПЕРИОДА(Продажи.Полугодие, ПОЛУГОДИЕ), ДЕНЬ)+1,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Продажи.Год, ГОД), КОНЕЦПЕРИОДА(Продажи.Год, ГОД), ДЕНЬ)+1,
	|	Продажи.День,
	|	Продажи.Неделя,
	|	Продажи.Декада,
	|	Продажи.Месяц,
	|	Продажи.Квартал,
	|	Продажи.Полугодие,
	|	Продажи.Год
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Получаем стоимость склада 
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьСклада.Номенклатура КАК Номенклатура,
	|	СтоимостьСклада.Характеристика КАК Характеристика,
	|	СтоимостьСклада.Склад КАК Склад,
	|	СтоимостьСклада.Организация КАК Организация,
	|	
	|	СтоимостьСклада.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьСклада.КОСОборот КАК КОСОборот,
	|	                               
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(СтоимостьСклада.ПериодМесяц, МЕСЯЦ), КОНЕЦПЕРИОДА(СтоимостьСклада.ПериодМесяц, МЕСЯЦ), ДЕНЬ)+1 КАК ДнейВМесяце,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(СтоимостьСклада.ПериодКвартал, КВАРТАЛ), КОНЕЦПЕРИОДА(СтоимостьСклада.ПериодКвартал, КВАРТАЛ), ДЕНЬ)+1 КАК ДнейВКвартале,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(СтоимостьСклада.ПериодПолугодие, ПОЛУГОДИЕ), КОНЕЦПЕРИОДА(СтоимостьСклада.ПериодПолугодие, ПОЛУГОДИЕ), ДЕНЬ)+1 КАК ДнейВПолугодии,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(СтоимостьСклада.ПериодГод, ГОД), КОНЕЦПЕРИОДА(СтоимостьСклада.ПериодГод, ГОД), ДЕНЬ)+1 КАК ДнейВГоду,
	|	
	|	СтоимостьСклада.ПериодДень КАК День,
	|	СтоимостьСклада.ПериодНеделя КАК Неделя,
	|	СтоимостьСклада.ПериодДекада КАК Декада,
	|	СтоимостьСклада.ПериодМесяц КАК Месяц,
	|	СтоимостьСклада.ПериодКвартал КАК Квартал,
	|	СтоимостьСклада.ПериодПолугодие КАК Полугодие,
	|	СтоимостьСклада.ПериодГод КАК Год
	|ПОМЕСТИТЬ КешСтоимостьСклада	
	|ИЗ
	|	РегистрНакопления.СтоимостьСклада.Обороты(
	|        							&НачалоПериода, 
	|									&КонецПериода,
	|									Авто) КАК СтоимостьСклада
	|{ГДЕ
	| (Номенклатура, Характеристика) В
	|			(ВЫБРАТЬ
	|				ОтборПоСегментуНоменклатуры.Номенклатура,
	|				ОтборПоСегментуНоменклатуры.Характеристика
	|			ИЗ
	|				ОтборПоСегментуНоменклатуры
	|			ГДЕ
	|				ОтборПоСегментуНоменклатуры.ИспользуетсяОтборПоСегментуНоменклатуры = &ИспользуетсяОтборПоСегментуНоменклатур)}
	|;

	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КоеффСборок.Номенклатура КАК Номенклатура,
	|	КоеффСборок.Характеристика КАК Характеристика,
	|	ТабВаловаяПрибыль.Организация КАК Организация,
	|	ТабВаловаяПрибыль.Склад КАК Склад,
	|	ТабВаловаяПрибыль.Регистратор КАК Регистратор,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТабВаловаяПрибыль.Месяц, МЕСЯЦ), КОНЕЦПЕРИОДА(ТабВаловаяПрибыль.Месяц, МЕСЯЦ), ДЕНЬ)+1 КАК ДнейВМесяце,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТабВаловаяПрибыль.Квартал, КВАРТАЛ), КОНЕЦПЕРИОДА(ТабВаловаяПрибыль.Квартал, КВАРТАЛ), ДЕНЬ)+1 КАК ДнейВКвартале,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТабВаловаяПрибыль.Полугодие, ПОЛУГОДИЕ), КОНЕЦПЕРИОДА(ТабВаловаяПрибыль.Полугодие, ПОЛУГОДИЕ), ДЕНЬ)+1 КАК ДнейВПолугодии,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ТабВаловаяПрибыль.Год, ГОД), КОНЕЦПЕРИОДА(ТабВаловаяПрибыль.Год, ГОД), ДЕНЬ)+1 КАК ДнейВГоду,
	|	ТабВаловаяПрибыль.День КАК День,
	|	ТабВаловаяПрибыль.Неделя КАК Неделя,
	|	ТабВаловаяПрибыль.Декада КАК Декада,
	|	ТабВаловаяПрибыль.Месяц КАК Месяц,
	|	ТабВаловаяПрибыль.Квартал КАК Квартал,
	|	ТабВаловаяПрибыль.Полугодие КАК Полугодие,
	|	ТабВаловаяПрибыль.Год КАК Год,
	|	ТабВаловаяПрибыль.ВаловаяПрибыль * КоеффСборок.Коэффициент КАК ВаловаяПрибыль
	|ПОМЕСТИТЬ КешВаловаяПрибыльСборок
	|ИЗ
	|	КешВаловаяПрибыль КАК ТабВаловаяПрибыль
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешКоеффСборок КАК КоеффСборок
	|		ПО ТабВаловаяПрибыль.Номенклатура = КоеффСборок.НоменклатураСборка
	|		И ТабВаловаяПрибыль.Характеристика = КоеффСборок.ХарактеристикаСборка 
	|		
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Получаем курсовую разницу для поступлений в гривнах
	////////////////////////////////////////////////////////////////////////////////

	////////////////////////////////////////////////////////////////////////////////
	// Так как дату для расчета курсовой разницы необходимо брать из этапов оплаты
	// заказа поставщику.
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодСекунда 		КАК ДатаОплаты,
	|	Регистратор 		КАК ЗаказПоставщику,
	|	
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ПериодМесяц, МЕСЯЦ), КОНЕЦПЕРИОДА(ПериодМесяц, МЕСЯЦ), ДЕНЬ)+1 КАК ДнейВМесяце,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ПериодКвартал, КВАРТАЛ), КОНЕЦПЕРИОДА(ПериодКвартал, КВАРТАЛ), ДЕНЬ)+1 КАК ДнейВКвартале,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ПериодПолугодие, ПОЛУГОДИЕ), КОНЕЦПЕРИОДА(ПериодПолугодие, ПОЛУГОДИЕ), ДЕНЬ)+1 КАК ДнейВПолугодии,
	|	РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(ПериодГод, ГОД), КОНЕЦПЕРИОДА(ПериодГод, ГОД), ДЕНЬ)+1 КАК ДнейВГоду,
	|	
	|	ПериодДень 			КАК День,
	|	ПериодНеделя 		КАК Неделя,
	|	ПериодДекада 		КАК Декада,
	|	ПериодМесяц 		КАК Месяц,
	|	ПериодКвартал 		КАК Квартал,
	|	ПериодПолугодие 	КАК Полугодие,
	|	ПериодГод 			КАК Год

	|ПОМЕСТИТЬ ТаблицаЗаказовПоставщикам
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками.Обороты(&НачалоПериода, &КонецПериода, 
	|													Авто, 
	|													Валюта = &ВалютаРегламентированогоУчета)
	|ГДЕ
	|	КОплатеРасход <> 0
	|	И Регистратор ССЫЛКА Документ.ЗаказПоставщику

	|ИНДЕКСИРОВАТЬ ПО
	|	ЗаказПоставщику
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Для для расчета курсовой разницы также нужно брать дату от момента поступления
	// товаров на склад.
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказыПоставщикамОбороты.Регистратор 										КАК ПоступлениеТоваров,
	|	ЗаказыПоставщикамОбороты.Период 											КАК ДатаПоступления,
	|	
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.ДатаОплаты, ДАТАВРЕМЯ(1, 1, 1))			КАК ДатаОплаты,
	|	
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.ДнейВМесяце, ДАТАВРЕМЯ(1, 1, 1))			КАК ДнейВМесяце,
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.ДнейВКвартале, ДАТАВРЕМЯ(1, 1, 1))		КАК ДнейВКвартале,
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.ДнейВПолугодии, ДАТАВРЕМЯ(1, 1, 1))		КАК ДнейВПолугодии,
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.ДнейВГоду, ДАТАВРЕМЯ(1, 1, 1))			КАК ДнейВГоду,
	|	
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.День, ДАТАВРЕМЯ(1, 1, 1))				КАК День,
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.Неделя, ДАТАВРЕМЯ(1, 1, 1))				КАК Неделя,
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.Декада, ДАТАВРЕМЯ(1, 1, 1))				КАК Декада,
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.Месяц, ДАТАВРЕМЯ(1, 1, 1))				КАК Месяц,
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.Квартал, ДАТАВРЕМЯ(1, 1, 1))				КАК Квартал,
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.Полугодие, ДАТАВРЕМЯ(1, 1, 1))			КАК Полугодие,
	|	ЕСТЬNULL(ТаблицаЗаказовПоставщикам.Год, ДАТАВРЕМЯ(1, 1, 1))					КАК Год
	|	
	|ПОМЕСТИТЬ ТаблицаПоступленийТоваров
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Обороты(
	|			&НачалоПериода, 	// Нужно для того чтобы дата автоматически не подставлялась
	|			&КонецПериода,      // Нужно для того чтобы дата автоматически не подставлялась
	|			Регистратор,
	|			ЗаказПоставщику В
	|				(ВЫБРАТЬ
	|					ЗаказПоставщику
	|				ИЗ
	|					ТаблицаЗаказовПоставщикам)) КАК ЗаказыПоставщикамОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЗаказовПоставщикам КАК ТаблицаЗаказовПоставщикам
	|		ПО ЗаказыПоставщикамОбороты.ЗаказПоставщику = ТаблицаЗаказовПоставщикам.ЗаказПоставщику
	|ГДЕ
	|	ЗаказыПоставщикамОбороты.КОформлениюРасход > 0
	|	И ЗаказыПоставщикамОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг

	|ИНДЕКСИРОВАТЬ ПО
	|	ПоступлениеТоваров
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Подтягиваем номенклатуру, характеристику из поступлений, а также склад и
	// организацию (все нужно для корректной работы отчета). Тянем из документа
	// поскольку существующие регистры плохо приспособлены для выборки номенклатуры.
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПоступленийТоваров.ПоступлениеТоваров			КАК ПоступлениеТоваров,
	|	ТаблицаПоступленийТоваров.ДатаОплаты					КАК ДатаОплаты,
	|	ТаблицаПоступленийТоваров.ДатаПоступления				КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура								КАК Номенклатура,
	|	ТаблицаТовары.Характеристика							КАК Характеристика,
	|	ТаблицаТовары.КоличествоУпаковок 						КАК Количество,
	|	ТаблицаТовары.Цена										КАК Цена,
	|	ТаблицаТовары.Склад										КАК Склад,
	|	ВЫРАЗИТЬ(ТаблицаПоступленийТоваров.ПоступлениеТоваров КАК Документ.ПоступлениеТоваровУслуг).Организация КАК Организация,
	|	
	|	ТаблицаПоступленийТоваров.ДнейВМесяце					КАК ДнейВМесяце,
	|	ТаблицаПоступленийТоваров.ДнейВКвартале					КАК ДнейВКвартале,
	|	ТаблицаПоступленийТоваров.ДнейВПолугодии				КАК ДнейВПолугодии,
	|	ТаблицаПоступленийТоваров.ДнейВГоду						КАК ДнейВГоду,
	|	
	|	ТаблицаПоступленийТоваров.День							КАК День,
	|	ТаблицаПоступленийТоваров.Неделя						КАК Неделя,
	|	ТаблицаПоступленийТоваров.Декада						КАК Декада,
	|	ТаблицаПоступленийТоваров.Месяц							КАК Месяц,
	|	ТаблицаПоступленийТоваров.Квартал						КАК Квартал,
	|	ТаблицаПоступленийТоваров.Полугодие						КАК Полугодие,
	|	ТаблицаПоступленийТоваров.Год							КАК Год
	|	
	|ПОМЕСТИТЬ ТаблицаНоменклатурыПоступлений
	|ИЗ
	|	ТаблицаПоступленийТоваров КАК ТаблицаПоступленийТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|		ПО ТаблицаПоступленийТоваров.ПоступлениеТоваров = ТаблицаТовары.Ссылка
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Непосредственный расчет курсовой разницу гривневых поступлений.
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаНоменклатурыПоступлений.ПоступлениеТоваров			КАК ПоступлениеТоваров,
	|	ТаблицаНоменклатурыПоступлений.Номенклатура					КАК Номенклатура,
	|	ТаблицаНоменклатурыПоступлений.Характеристика				КАК Характеристика,
	|	ТаблицаНоменклатурыПоступлений.Склад						КАК Склад,
	|	ТаблицаНоменклатурыПоступлений.Организация					КАК Организация,
	|	ТаблицаНоменклатурыПоступлений.Количество 
	|		* (ТаблицаНоменклатурыПоступлений.Цена 
	|				* (ТаблицаКурсовРеглДатаПоступления.Курс / ТаблицаКурсовУпрДатаПоступления.Курс) 
	|			- ТаблицаНоменклатурыПоступлений.Цена 
	|				* (ТаблицаКурсовРеглДатаОплаты.Курс / ТаблицаКурсовУпрДатаОплаты.Курс)) КАК КурсоваяРазницаПоступлений,
	|				
	|	ТаблицаНоменклатурыПоступлений.ДнейВМесяце					КАК ДнейВМесяце,
	|	ТаблицаНоменклатурыПоступлений.ДнейВКвартале				КАК ДнейВКвартале,
	|	ТаблицаНоменклатурыПоступлений.ДнейВПолугодии				КАК ДнейВПолугодии,
	|	ТаблицаНоменклатурыПоступлений.ДнейВГоду					КАК ДнейВГоду,
	|	
	|	ТаблицаНоменклатурыПоступлений.День							КАК День,
	|	ТаблицаНоменклатурыПоступлений.Неделя						КАК Неделя,
	|	ТаблицаНоменклатурыПоступлений.Декада						КАК Декада,
	|	ТаблицаНоменклатурыПоступлений.Месяц						КАК Месяц,
	|	ТаблицаНоменклатурыПоступлений.Квартал						КАК Квартал,
	|	ТаблицаНоменклатурыПоступлений.Полугодие					КАК Полугодие,
	|	ТаблицаНоменклатурыПоступлений.Год							КАК Год
	|	
	|ПОМЕСТИТЬ ТаблицаКурсовыхРазницПоступлений
	|ИЗ
	|	ТаблицаНоменклатурыПоступлений КАК ТаблицаНоменклатурыПоступлений
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовУпрДатаОплаты
	|		ПО ТаблицаНоменклатурыПоступлений.ДатаОплаты >= ТаблицаКурсовУпрДатаОплаты.НачалоПериода
	|			И ТаблицаНоменклатурыПоступлений.ДатаОплаты < ТаблицаКурсовУпрДатаОплаты.КонецПериода
	|			И (ТаблицаКурсовУпрДатаОплаты.Валюта = &ВалютаУправленческогоУчета)
	|			
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовРеглДатаОплаты
	|		ПО ТаблицаНоменклатурыПоступлений.ДатаОплаты >= ТаблицаКурсовРеглДатаОплаты.НачалоПериода
	|			И ТаблицаНоменклатурыПоступлений.ДатаОплаты < ТаблицаКурсовРеглДатаОплаты.КонецПериода
	|			И (ТаблицаКурсовРеглДатаОплаты.Валюта = &ВалютаРегламентированогоУчета)
	|			
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовУпрДатаПоступления
	|		ПО ТаблицаНоменклатурыПоступлений.ДатаПоступления >= ТаблицаКурсовУпрДатаПоступления.НачалоПериода
	|			И ТаблицаНоменклатурыПоступлений.ДатаПоступления < ТаблицаКурсовУпрДатаПоступления.КонецПериода
	|			И (ТаблицаКурсовУпрДатаПоступления.Валюта = &ВалютаУправленческогоУчета)
	|			
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовРеглДатаПоступления
	|		ПО ТаблицаНоменклатурыПоступлений.ДатаПоступления >= ТаблицаКурсовРеглДатаПоступления.НачалоПериода
	|			И ТаблицаНоменклатурыПоступлений.ДатаПоступления < ТаблицаКурсовРеглДатаПоступления.КонецПериода
	|			И (ТаблицаКурсовРеглДатаПоступления.Валюта = &ВалютаРегламентированогоУчета)
	|;

	////////////////////////////////////////////////////////////////////////////////
	// Запрос основной выборки

	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабВаловаяПрибыль.Номенклатура КАК Номенклатура,
	|	ТабВаловаяПрибыль.Характеристика КАК Характеристика,
	|	ТабВаловаяПрибыль.Организация КАК Организация,
	|	ТабВаловаяПрибыль.Склад КАК Склад,
	|	ТабВаловаяПрибыль.Регистратор КАК Регистратор,
	|	ТабВаловаяПрибыль.ДнейВМесяце КАК ДнейВМесяце,
	|	ТабВаловаяПрибыль.ДнейВКвартале КАК ДнейВКвартале,
	|	ТабВаловаяПрибыль.ДнейВПолугодии КАК ДнейВПолугодии,
	|	ТабВаловаяПрибыль.ДнейВГоду КАК ДнейВГоду,
	|	ТабВаловаяПрибыль.День КАК День,
	|	ТабВаловаяПрибыль.Неделя КАК Неделя,
	|	ТабВаловаяПрибыль.Декада КАК Декада,
	|	ТабВаловаяПрибыль.Месяц КАК Месяц,
	|	ТабВаловаяПрибыль.Квартал КАК Квартал,
	|	ТабВаловаяПрибыль.Полугодие КАК Полугодие,
	|	ТабВаловаяПрибыль.Год КАК Год,
	|	ТабВаловаяПрибыль.Количество КАК Количество,
	|	ТабВаловаяПрибыль.Выручка КАК Выручка,
	|	ТабВаловаяПрибыль.ВыручкаНДС КАК ВыручкаНДС,
	|	ТабВаловаяПрибыль.Себестоимость КАК Себестоимость,
	|	ТабВаловаяПрибыль.ДопРасходы КАК ДопРасходы,
	|	ТабВаловаяПрибыль.ВаловаяПрибыль КАК ВаловаяПрибыль,
	|	ТабВаловаяПрибыль.КурсоваяРазница КАК КурсоваяРазница,
	|	0 КАК ВаловаяПрибыльСборок,
	|	0 КАК ВыплаченныеПродавцамБонусы,
	|	0 КАК СтоимостьОборот,
	|	0 КАК КОСОборот,
	|	0 КАК КурсоваяРазницаПоступлений
	|ИЗ
	|	КешВаловаяПрибыль КАК ТабВаловаяПрибыль
	|ГДЕ
	|	(ТабВаловаяПрибыль.Номенклатура, ТабВаловаяПрибыль.Характеристика) НЕ В
	|	(ВЫБРАТЬ
	|		Номенклатура,
	|		Характеристика
	|	ИЗ
	|		КешСборки)

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	ВаловаяПрибыльСборок.Номенклатура,
	|	ВаловаяПрибыльСборок.Характеристика,
	|	ВаловаяПрибыльСборок.Организация,
	|	ВаловаяПрибыльСборок.Склад,
	|	ВаловаяПрибыльСборок.Регистратор,
	|	ВаловаяПрибыльСборок.ДнейВМесяце,
	|	ВаловаяПрибыльСборок.ДнейВКвартале,
	|	ВаловаяПрибыльСборок.ДнейВПолугодии,
	|	ВаловаяПрибыльСборок.ДнейВГоду,
	|	ВаловаяПрибыльСборок.День,
	|	ВаловаяПрибыльСборок.Неделя,
	|	ВаловаяПрибыльСборок.Декада,
	|	ВаловаяПрибыльСборок.Месяц,
	|	ВаловаяПрибыльСборок.Квартал,
	|	ВаловаяПрибыльСборок.Полугодие,
	|	ВаловаяПрибыльСборок.Год,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ВаловаяПрибыльСборок.ВаловаяПрибыль,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	КешВаловаяПрибыльСборок КАК ВаловаяПрибыльСборок

	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	БонусыМенеджерам.Номенклатура,
	|	БонусыМенеджерам.Характеристика,
	|	БонусыМенеджерам.Организация,
	|	NULL,
	|	БонусыМенеджерам.Регистратор,
	|	БонусыМенеджерам.ДнейВМесяце,
	|	БонусыМенеджерам.ДнейВКвартале,
	|	БонусыМенеджерам.ДнейВПолугодии,
	|	БонусыМенеджерам.ДнейВГоду,
	|	БонусыМенеджерам.День,
	|	БонусыМенеджерам.Неделя,
	|	БонусыМенеджерам.Декада,
	|	БонусыМенеджерам.Месяц,
	|	БонусыМенеджерам.Квартал,
	|	БонусыМенеджерам.Полугодие,
	|	БонусыМенеджерам.Год,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	БонусыМенеджерам.Бонус,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	КешБонусыМенеджерам КАК БонусыМенеджерам
	|	
	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	ТабСтоимостьСклада.Номенклатура,
	|	ТабСтоимостьСклада.Характеристика,
	|	ТабСтоимостьСклада.Организация,
	|	ТабСтоимостьСклада.Склад,
	|	NULL,
	|	ТабСтоимостьСклада.ДнейВМесяце,
	|	ТабСтоимостьСклада.ДнейВКвартале,
	|	ТабСтоимостьСклада.ДнейВПолугодии,
	|	ТабСтоимостьСклада.ДнейВГоду,
	|	ТабСтоимостьСклада.День,
	|	ТабСтоимостьСклада.Неделя,
	|	ТабСтоимостьСклада.Декада,
	|	ТабСтоимостьСклада.Месяц,
	|	ТабСтоимостьСклада.Квартал,
	|	ТабСтоимостьСклада.Полугодие,
	|	ТабСтоимостьСклада.Год,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	ТабСтоимостьСклада.СтоимостьОборот,
	|	ТабСтоимостьСклада.КОСОборот,
	|	0
	|ИЗ
	|	КешСтоимостьСклада КАК ТабСтоимостьСклада
	|	
	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	Номенклатура 						КАК Номенклатура,
	|	Характеристика 						КАК Характеристика,
	|	Организация 						КАК Организация,
	|	Склад 								КАК Склад,
	|	ПоступлениеТоваров 					КАК Регистратор,
	|	ДнейВМесяце 						КАК ДнейВМесяце,
	|	ДнейВКвартале 						КАК ДнейВКвартале,
	|	ДнейВПолугодии 						КАК ДнейВПолугодии,
	|	ДнейВГоду 							КАК ДнейВГоду,
	|	День 								КАК День,
	|	Неделя 								КАК Неделя,
	|	Декада 								КАК Декада,
	|	Месяц								КАК Месяц,
	|	Квартал 							КАК Квартал,
	|	Полугодие 							КАК Полугодие,
	|	Год 								КАК Год,
	|	0 									КАК Количество,
	|	0 									КАК Выручка,
	|	0 									КАК ВыручкаНДС,
	|	0 									КАК Себестоимость,
	|	0 									КАК ДопРасходы,
	|	0 									КАК ВаловаяПрибыль,
	|	0 									КАК КурсоваяРазница,
	|	0 									КАК ВаловаяПрибыльСборок,
	|	0 									КАК ВыплаченныеПродавцамБонусы,
	|	0 									КАК СтоимостьОборот,
	|	0 									КАК КОСОборот,
	|	КурсоваяРазницаПоступлений			КАК КурсоваяРазницаПоступлений
	|ИЗ
	|	ТаблицаКурсовыхРазницПоступлений";

			
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаТаблицаПродаж()


Функция ПолучитьЗначениеПараметра(ИмяПараметра)
	
	ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
   	Если ПараметрДанных <> Неопределено Тогда
    	ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
   		Если ПараметрПользовательскойНастройки <> Неопределено Тогда
			Возврат ПараметрПользовательскойНастройки.Значение;
     	Иначе
       		Возврат ПараметрДанных.Значение;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции
	

#КонецОбласти


#Область СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "2.2.20";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Отчет для продактов ["+Версия+"]");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Отчет для продактов ["+Версия+"]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Отчет для продактов ["+Версия+"]", "ОДП", "ОткрытиеФормы", Ложь, "ОДП");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
КонецФункции

Процедура СчитатьДокументыНазначений(МассивНазначений)
	
	//Макет = ПолучитьМакет("МакетДокументыНазначений");
	//
	//Для Инд = 1 По Макет.ВысотаТаблицы Цикл
	//	МассивНазначений.Добавить(Макет.Область(Инд,1).Текст);
	//КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

#КонецОбласти 
