#Область ИнтерфейсАвтоматичкихТестов
Перем ЮнитТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СпиокТестов = Новый Массив;	
	Возврат СпиокТестов;
	
КонецФункции
#КонецОбласти 

#Область ПрограммныйИнтерфейс

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)	
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);	
	
	ОтчетКонтрольЗаЗаказамиПоставщика	= ПолучитьНаборДанных();
	ВнешниеНаборыДанных 				= Новый Структура;
	ВнешниеНаборыДанных.Вставить("ОтчетКонтрольЗаЗаказамиПоставщика",ОтчетКонтрольЗаЗаказамиПоставщика);
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки(); 
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	Если МакетКомпоновки.НаборыДанных.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru= 'Отчет не сформирован. Включите хотя бы одну группировку в ""Элементы оформления и группировки"".'") ;
	КонецЕсли;
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции


Функция ПолучитьЗначениеПараметра(ИмяПараметра)
	
	ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	Если ПараметрДанных <> Неопределено Тогда
		ПараметрПользовательскойНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройки <> Неопределено Тогда
			Возврат ПараметрПользовательскойНастройки.Значение;
		Иначе
			Возврат ПараметрДанных.Значение;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьНаборДанных()
	Запрос 		 		= Новый Запрос;
	ТекстЗапроса 		= ПолучитьТекстЗапросаНаборДанных();
	ПериодОтчета 		= ПолучитьЗначениеПараметра("ПериодОтчета");
	Соглашения 	 		= ПолучитьЗначениеПараметра("Соглашения");
	СтатусОприходования	= ПолучитьЗначениеПараметра("СтатусОприходования");

	Если Соглашения<>Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоглашенияЗаДень%","  Соглашение В(&Соглашение) И  ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоглашенияЗаПериод%","  ЦеныНоменклатуры.Соглашение В(&Соглашение) И  ");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоглашенияЗаДень%"," ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоглашенияЗаПериод%"," ");
	КонецЕсли; 

	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ВалютаУпрУчета", 		Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ДатаНачало", 			ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 			ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("Соглашение", 			Соглашения);
	Запрос.УстановитьПараметр("Сегодня", 				НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("СтатусОприходования", 	СтатусОприходования);

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьНаборДанных()



Функция ПолучитьТекстЗапросаНаборДанных()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ СпрНоменклатура
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(&ДатаНачало, &ДатаОкончания, , , )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//1
	|ВЫБРАТЬ
	|	СпрНоменклатура.Номенклатура КАК Номенклатура,
	|	ОстаткиТоваров.КоличествоОстаток КАК ОбщийОстатокНаСкладе
	|ПОМЕСТИТЬ ОстаткиТоваровОбщие
	|ИЗ
	|	СпрНоменклатура КАК СпрНоменклатура
	|		
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
	|				&ДатаОкончания,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						СпрНоменклатура.Номенклатура
	|					ИЗ
	|						СпрНоменклатура)) КАК ОстаткиТоваров
	|ПО (ОстаткиТоваров.Номенклатура = СпрНоменклатура.Номенклатура)
	|;
	|
	////////////////////////////////////////////////////////////////////////////////
	//2
	|ВЫБРАТЬ
	|	ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику,
	|	ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику.Партнер КАК Поставщик,
	|	ЗаказыПоставщикамОстаткиИОбороты.КодСтроки,
	|	ЗаказыПоставщикамОстаткиИОбороты.Номенклатура,
	|	Товары.Количество,
	|	Товары.Цена,
	|	Товары.ДатаПоступления КАК ДатаПрихода
	|ПОМЕСТИТЬ СрезПоЗаказе
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(
	|			&ДатаНачало,
	|			&ДатаОкончания,
	|			,
	|			,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					СпрНоменклатура.Номенклатура
	|				ИЗ
	|					СпрНоменклатура)) КАК ЗаказыПоставщикамОстаткиИОбороты
	|
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК Товары
	|ПО ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику = Товары.Ссылка
	|И ЗаказыПоставщикамОстаткиИОбороты.Номенклатура = Товары.Номенклатура
	|И ЗаказыПоставщикамОстаткиИОбороты.КодСтроки = Товары.КодСтроки
	|;
	////////////////////////////////////////////////////////////////////////////////
	//3
	|ВЫБРАТЬ
	|	ПартииОстатки.Поставщик КАК Поставщик,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	СУММА(ПартииОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиПартий
	|ИЗ
	|	РегистрНакопления.КТС_ДвижениеТоваровПоставщиков.Остатки(
	|			&ДатаОкончания,
	|			АналитикаУчетаНоменклатуры.Номенклатура В
	|				(ВЫБРАТЬ
	|					СпрНоменклатура.Номенклатура
	|				ИЗ
	|					СпрНоменклатура)) КАК ПартииОстатки
	|
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|ПО (Аналитика.КлючАналитики = ПартииОстатки.АналитикаУчетаНоменклатуры)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииОстатки.Поставщик,
	|	Аналитика.Номенклатура
	|;
	////////////////////////////////////////////////////////////////////////////////
	//4
	|ВЫБРАТЬ
	|	СрезПоЗаказе.ЗаказПоставщику,
	|	СрезПоЗаказе.Поставщик,
	|	СрезПоЗаказе.КодСтроки,
	|	СрезПоЗаказе.Номенклатура,
	|	СрезПоЗаказе.Количество,
	|	СрезПоЗаказе.Цена,
	|	СрезПоЗаказе.ДатаПрихода,
	|	ЕСТЬNULL(ОстаткиПартий.КоличествоОстаток, 0) КАК ОстатокПоставщика
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	СрезПоЗаказе КАК СрезПоЗаказе
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПартий КАК ОстаткиПартий
	|ПО СрезПоЗаказе.Поставщик = ОстаткиПартий.Поставщик
	|И СрезПоЗаказе.Номенклатура = ОстаткиПартий.Номенклатура
	|;
	////////////////////////////////////////////////////////////////////////////////
	//5
	|ВЫБРАТЬ
	|	ТаблицаТовары.ЗаказПоставщику,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Количество,
	|	ЗаказыПоставщикамОстаткиИОбороты.ЗаказаноКонечныйОстаток КАК НеПринято,
	|	ТаблицаТовары.Поставщик,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.ДатаПрихода,
	|	ТаблицаТовары.ОстатокПоставщика
	|ПОМЕСТИТЬ ТаблицаОприходованияТовара
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.ОстаткиИОбороты(
	|				&ДатаНачало,
	|				&ДатаОкончания,
	|				,
	|				,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						СпрНоменклатура.Номенклатура
	|					ИЗ
	|						СпрНоменклатура)) КАК ЗаказыПоставщикамОстаткиИОбороты
	|ПО ТаблицаТовары.ЗаказПоставщику = ЗаказыПоставщикамОстаткиИОбороты.ЗаказПоставщику
	|И ТаблицаТовары.Номенклатура = ЗаказыПоставщикамОстаткиИОбороты.Номенклатура
	|И ТаблицаТовары.КодСтроки = ЗаказыПоставщикамОстаткиИОбороты.КодСтроки
	|
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &СтатусОприходования = 1
	|				ТОГДА ЕСТЬNULL(ЗаказыПоставщикамОстаткиИОбороты.ЗаказаноКонечныйОстаток, 0) = 0
	|			КОГДА &СтатусОприходования = 2
	|				ТОГДА ТаблицаТовары.Количество - ЕСТЬNULL(ЗаказыПоставщикамОстаткиИОбороты.ЗаказаноКонечныйОстаток, 0) > 0
	|			КОГДА &СтатусОприходования = 3
	|				ТОГДА ТаблицаТовары.Количество = ЕСТЬNULL(ЗаказыПоставщикамОстаткиИОбороты.ЗаказаноКонечныйОстаток, 0)
	|			КОГДА &СтатусОприходования = 4
	|				ТОГДА ИСТИНА
	|		КОНЕЦ
	|;
	////////////////////////////////////////////////////////////////////////////////
	//6
	|ВЫБРАТЬ
	|	ТаблицаОприходованияТовара.ЗаказПоставщику,
	|	ТаблицаОприходованияТовара.Номенклатура,
	|	СУММА(ТаблицаОприходованияТовара.Количество) КАК Количество,
	|	ТаблицаОприходованияТовара.Поставщик,
	|	ТаблицаОприходованияТовара.Цена,
	|	ТаблицаОприходованияТовара.ДатаПрихода,
	|	ТаблицаОприходованияТовара.ОстатокПоставщика,
	|	ТаблицаОприходованияТовара.ЗаказПоставщику.Соглашение КАК СоглашениеПоставщика
	|ПОМЕСТИТЬ ОстатокОприходованияТовара
	|ИЗ
	|	ТаблицаОприходованияТовара КАК ТаблицаОприходованияТовара
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОприходованияТовара.ЗаказПоставщику,
	|	ТаблицаОприходованияТовара.Номенклатура,
	|	ТаблицаОприходованияТовара.Поставщик,
	|	ТаблицаОприходованияТовара.Цена,
	|	ТаблицаОприходованияТовара.ДатаПрихода,
	|	ТаблицаОприходованияТовара.ОстатокПоставщика,
	|	ТаблицаОприходованияТовара.ЗаказПоставщику.Соглашение
	|;
	////////////////////////////////////////////////////////////////////////////////
	//7
	|УНИЧТОЖИТЬ СрезПоЗаказе
	|;
	////////////////////////////////////////////////////////////////////////////////
	//8
	|УНИЧТОЖИТЬ ОстаткиПартий
	|;
	////////////////////////////////////////////////////////////////////////////////
	//9
	|УНИЧТОЖИТЬ ТаблицаТовары
	|;
	////////////////////////////////////////////////////////////////////////////////
	//10
	|УНИЧТОЖИТЬ ТаблицаОприходованияТовара
	|;
	////////////////////////////////////////////////////////////////////////////////
	//11
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Период КАК Период,
	|	ЦеныНоменклатуры.Соглашение КАК Соглашение,
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВЫБОР &ВалютаУпрУчета
	|		КОГДА ЦеныНоменклатуры.Валюта
	|			ТОГДА ЦеныНоменклатуры.Цена
	|		ИНАЧЕ ЦеныНоменклатуры.Цена * (КурсыВалют.Курс / КурсыВалют.Кратность) / (КурсУпрВалюты.Курс / КурсУпрВалюты.Кратность)
	|	КОНЕЦ КАК Цена
	|ПОМЕСТИТЬ ТабЦены_1
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПервых(
	|			&Сегодня,  %СоглашенияЗаДень%
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					СпрНоменклатура.Номенклатура
	|				ИЗ
	|					СпрНоменклатура)) КАК ЦеныНоменклатуры
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних КАК КурсыВалют
	|ПО (КурсыВалют.Валюта = ЦеныНоменклатуры.Валюта)
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних КАК КурсУпрВалюты
	|ПО (КурсУпрВалюты.Валюта = &ВалютаУпрУчета)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	////////////////////////////////////////////////////////////////////////////////
	//12
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура,
	|	МИНИМУМ(ЦеныНоменклатуры.Цена) КАК Цена
	|ПОМЕСТИТЬ ТабЦены_2
	|ИЗ
	|	ТабЦены_1 КАК ЦеныНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатуры.Номенклатура
	|;
	////////////////////////////////////////////////////////////////////////////////
	//13
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|ПОМЕСТИТЬ ТабЦены_3
	|ИЗ
	|	ТабЦены_2 КАК ТабЦены_2
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ТабЦены_1 КАК ЦеныНоменклатуры
	|ПО ТабЦены_2.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|И ТабЦены_2.Цена = ЦеныНоменклатуры.Цена
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатуры.Номенклатура,
	|	ЦеныНоменклатуры.Цена
	|;
	////////////////////////////////////////////////////////////////////////////////
	//14
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Соглашение КАК Соглашение,
	|	ЦеныНоменклатуры.Соглашение.Партнер КАК Партнер,
	|	ЦеныНоменклатуры.Цена КАК Цена
	|ПОМЕСТИТЬ ЦеныНоменклатурыСегодня
	|ИЗ
	|	ТабЦены_1 КАК ЦеныНоменклатуры
	|
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабЦены_3 КАК ТабЦены_3
	|ПО (ТабЦены_3.Номенклатура = ЦеныНоменклатуры.Номенклатура)
	|И (ТабЦены_3.Цена = ЦеныНоменклатуры.Цена)
	|И (ТабЦены_3.Период = ЦеныНоменклатуры.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Партнер
	|;
	////////////////////////////////////////////////////////////////////////////////
	//15
	|УНИЧТОЖИТЬ ТабЦены_1
	|;
	////////////////////////////////////////////////////////////////////////////////
	//16
	|УНИЧТОЖИТЬ ТабЦены_2
	|;
	////////////////////////////////////////////////////////////////////////////////
	//17
	|УНИЧТОЖИТЬ ТабЦены_3
	|;
	////////////////////////////////////////////////////////////////////////////////
	//18
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Период КАК Период,
	|	ЦеныНоменклатуры.Соглашение КАК Соглашение,
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВЫБОР &ВалютаУпрУчета
	|		КОГДА ЦеныНоменклатуры.Валюта
	|			ТОГДА ЦеныНоменклатуры.Цена
	|		ИНАЧЕ ЦеныНоменклатуры.Цена * (КурсыВалют.Курс / КурсыВалют.Кратность) / (КурсУпрВалюты.Курс / КурсУпрВалюты.Кратность)
	|	КОНЕЦ КАК Цена
	|ПОМЕСТИТЬ ТабЦеныЗаПериод_1
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатурыПоставщиков КАК ЦеныНоменклатуры
	|
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ СпрНоменклатура КАК СпрНоменклатура
	|ПО (СпрНоменклатура.Номенклатура = ЦеныНоменклатуры.Номенклатура)
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних КАК КурсыВалют
	|ПО (КурсыВалют.Валюта = ЦеныНоменклатуры.Валюта)
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(, Валюта = &ВалютаУпрУчета) КАК КурсУпрВалюты
	|ПО (ИСТИНА)
	|
	|ГДЕ
	|   %СоглашенияЗаПериод%
	|	ЦеныНоменклатуры.Период >= &ДатаНачало
	|	И ЦеныНоменклатуры.Период <= &ДатаОкончания
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	////////////////////////////////////////////////////////////////////////////////
	//19
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура,
	|	МИНИМУМ(ЦеныНоменклатуры.Цена) КАК Цена
	|ПОМЕСТИТЬ ТабЦеныЗаПериод_2
	|ИЗ
	|	ТабЦеныЗаПериод_1 КАК ЦеныНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатуры.Номенклатура
	|;
	////////////////////////////////////////////////////////////////////////////////
	//20
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|ПОМЕСТИТЬ ТабЦеныЗаПериод_3
	|ИЗ
	|	ТабЦеныЗаПериод_2 КАК ТабЦеныЗаПериод_2
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ТабЦеныЗаПериод_1 КАК ЦеныНоменклатуры
	|ПО ТабЦеныЗаПериод_2.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|И ТабЦеныЗаПериод_2.Цена = ЦеныНоменклатуры.Цена
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатуры.Номенклатура,
	|	ЦеныНоменклатуры.Цена
	|;
	////////////////////////////////////////////////////////////////////////////////
	//21
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Соглашение КАК Соглашение,
	|	ЦеныНоменклатуры.Соглашение.Партнер КАК Партнер,
	|	ЦеныНоменклатуры.Цена КАК Цена
	|ПОМЕСТИТЬ ЦеныНоменклатурыЗаПериод
	|ИЗ
	|	ТабЦеныЗаПериод_1 КАК ЦеныНоменклатуры
	|
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабЦеныЗаПериод_3 КАК ТабЦеныЗаПериод_3
	|ПО (ТабЦеныЗаПериод_3.Номенклатура = ЦеныНоменклатуры.Номенклатура)
	|И (ТабЦеныЗаПериод_3.Цена = ЦеныНоменклатуры.Цена)
	|И (ТабЦеныЗаПериод_3.Период = ЦеныНоменклатуры.Период)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Партнер
	|;
	////////////////////////////////////////////////////////////////////////////////
	//22
	|УНИЧТОЖИТЬ ТабЦеныЗаПериод_1
	|;
	////////////////////////////////////////////////////////////////////////////////
	//23
	|УНИЧТОЖИТЬ ТабЦеныЗаПериод_2
	|;
	////////////////////////////////////////////////////////////////////////////////
	//24
	|УНИЧТОЖИТЬ ТабЦеныЗаПериод_3
	|;
	////////////////////////////////////////////////////////////////////////////////
	//24
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураПоставщиков.Код КАК КодПоставщика,
	|	НоменклатураПоставщиков.Номенклатура,
	|	НоменклатураПоставщиков.Артикул КАК PartNumberПоставщика,
	|	НоменклатураПоставщиков.Владелец КАК Поставщик
	|ПОМЕСТИТЬ СпрНоменклатураПоставщика
	|ИЗ
	|	СпрНоменклатура КАК СпрНоменклатура
	|
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	|ПО СпрНоменклатура.Номенклатура = НоменклатураПоставщиков.Номенклатура
	|;
	////////////////////////////////////////////////////////////////////////////////
	//25
	|ВЫБРАТЬ
	|	ОстатокОприходованияТовара.ЗаказПоставщику,
	|	ОстатокОприходованияТовара.Номенклатура,
	|	ОстатокОприходованияТовара.Количество,
	|	ОстатокОприходованияТовара.Поставщик,
	|	ОстатокОприходованияТовара.Цена,
	|	ОстатокОприходованияТовара.ДатаПрихода,
	|	ОстатокОприходованияТовара.ОстатокПоставщика,
	|	ЕСТЬNULL(ОстаткиТоваровОбщие.ОбщийОстатокНаСкладе, 0) КАК ОбщийОстатокНаСкладе,
	|	СпрНоменклатураПоставщика.КодПоставщика КАК КодПоставщика,
	|	СпрНоменклатураПоставщика.PartNumberПоставщика КАК PartNumberПоставщика,
	|	ЕСТЬNULL(ЦеныНоменклатурыЗаПериод.Соглашение, """") КАК ПоставщикМинЦеныЗаПериод,
	|	ЕСТЬNULL(ЦеныНоменклатурыЗаПериод.Цена, 0) КАК МинЦенаПоставщикаЗаПериод,
	|	ЕСТЬNULL(ЦеныНоменклатурыСегодня.Соглашение, """") КАК ПоставщикМинЦеныЗаСегодня,
	|	ЕСТЬNULL(ЦеныНоменклатурыСегодня.Цена, 0) КАК МинЦенаПоставщикаЦенаЗаСегодня,
	|	ЕСТЬNULL(АктуальнаЦена.Цена, 0) КАК АктуальнаЦена,
	|	ОстатокОприходованияТовара.Номенклатура.Код КАК Код,
	|	ОстатокОприходованияТовара.Номенклатура.Артикул КАК PartNumber 
	|ИЗ
	|	ОстатокОприходованияТовара КАК ОстатокОприходованияТовара
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиТоваровОбщие КАК ОстаткиТоваровОбщие
	|ПО ОстатокОприходованияТовара.Номенклатура = ОстаткиТоваровОбщие.Номенклатура
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ СпрНоменклатураПоставщика КАК СпрНоменклатураПоставщика
	|ПО ОстатокОприходованияТовара.Номенклатура = СпрНоменклатураПоставщика.Номенклатура
	|И ОстатокОприходованияТовара.Поставщик = СпрНоменклатураПоставщика.Поставщик
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатурыЗаПериод КАК ЦеныНоменклатурыЗаПериод
	|ПО ОстатокОприходованияТовара.Номенклатура = ЦеныНоменклатурыЗаПериод.Номенклатура
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатурыСегодня КАК ЦеныНоменклатурыСегодня
	|ПО ОстатокОприходованияТовара.Номенклатура = ЦеныНоменклатурыСегодня.Номенклатура
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних(&ДатаОкончания,
	|																		Номенклатура В
	|																		(ВЫБРАТЬ
	|																			СпрНоменклатура.Номенклатура
	|																		ИЗ
	|																			СпрНоменклатура) ) КАК АктуальнаЦена
	|ПО ОстатокОприходованияТовара.Номенклатура = АктуальнаЦена.Номенклатура
	|И ОстатокОприходованияТовара.СоглашениеПоставщика = АктуальнаЦена.Соглашение
	|;
	////////////////////////////////////////////////////////////////////////////////
	//26
	|УНИЧТОЖИТЬ СпрНоменклатура
	|;
	////////////////////////////////////////////////////////////////////////////////
	//27
	|УНИЧТОЖИТЬ ОстаткиТоваровОбщие
	|;
	////////////////////////////////////////////////////////////////////////////////
	//28
	|УНИЧТОЖИТЬ ОстатокОприходованияТовара
	|;
	////////////////////////////////////////////////////////////////////////////////
	//29
	|УНИЧТОЖИТЬ ЦеныНоменклатурыСегодня
	|;
	////////////////////////////////////////////////////////////////////////////////
	//30
	|УНИЧТОЖИТЬ ЦеныНоменклатурыЗаПериод
	|;
	////////////////////////////////////////////////////////////////////////////////
	//31
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СпрНоменклатураПоставщика";
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти


#Область СведенияОВнешнемОтчете

Функция 	СведенияОВнешнейОбработке() Экспорт
	
	Версия = "1.0.2";
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
	ПараметрыРегистрации = Новый Структура;
	
	// Объявим еще одну переменную, которая нам потребуется ниже
	МассивНазначений = Новый Массив;
	
	// Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
	// Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
	ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");
	
	// Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
	// Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
	// которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	
	// Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Наименование", "Отчет контроль за заказами поставщика");
	
	// Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	
	// Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
	ПараметрыРегистрации.Вставить("Версия", Версия);    
	ПараметрыРегистрации.Вставить("Информация", "Отчет контроль за заказами поставщика'");
	
	// Создадим таблицу команд (подробнее смотрим ниже)
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	// Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "Остатки приходов поставщиков", "ФормаОтчета", "ОткрытиеФормы", Ложь, "");
	
	// Сохраним таблицу команд в параметры регистрации обработки
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	// Теперь вернем системе наши параметры
	Возврат ПараметрыРегистрации;
КонецФункции

Функция 	ПолучитьТаблицуКоманд()
	
	// Создадим пустую таблицу команд и колонки в ней
	Команды = Новый ТаблицаЗначений;
	
	// Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 
	
	// Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	
	// Тут задается, как должна вызваться команда обработки
	// Возможные варианты:
	// - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
	// - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
	// - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	
	// Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	
	// Для печатной формы должен содержать строку ПечатьMXL 
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Процедура 	ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	// Добавляем команду в таблицу команд по переданному описанию.
	// Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

#КонецОбласти

