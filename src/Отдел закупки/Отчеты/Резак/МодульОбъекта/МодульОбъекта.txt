
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = ПолучитьТекстЗапросаКомпоновки();
	СформироватьОтчетПрограммно(ТекстЗапроса, ДанныеРасшифровки, ДокументРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТекстЗапросаКомпоновки()

	ТекстЗапроса = "
			
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбработкаЗаказовКлиентов.Номенклатура КАК Номенклатура,
		|	ВЫРАЗИТЬ(ОбработкаЗаказовКлиентов.ЗаказКлиента КАК Документ.ЗаказКлиента) КАК ЗаказКлиента,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ОбработкаЗаказовКлиентов.КодСтроки,
		|	ОбработкаЗаказовКлиентов.КоличествоВЗаказе,
		|	ОбработкаЗаказовКлиентов.ДатаАктуальности
		|ПОМЕСТИТЬ ОбособленыНоменклатура
		|ИЗ
		|	РегистрСведений.ОбработкаЗаказовКлиентов КАК ОбработкаЗаказовКлиентов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|		ПО ОбработкаЗаказовКлиентов.ЗаказКлиента = ЗаказКлиентаТовары.Ссылка
		|			И ОбработкаЗаказовКлиентов.Номенклатура = ЗаказКлиентаТовары.Номенклатура
		|			И ОбработкаЗаказовКлиентов.КодСтроки = ЗаказКлиентаТовары.КодСтроки
		|		И (ЗаказКлиентаТовары.ОтменитьЗаказПодЗаказ = ЛОЖЬ)
		|			И (ЗаказКлиентаТовары.Отменено = ЛОЖЬ)
		|ГДЕ
		|	ОбработкаЗаказовКлиентов.ЗаказКлиента ССЫЛКА Документ.ЗаказКлиента
		|	И ВЫРАЗИТЬ(ОбработкаЗаказовКлиентов.ЗаказКлиента КАК Документ.ЗаказКлиента).Дата >= &НачалоПериода
		|	И ВЫРАЗИТЬ(ОбработкаЗаказовКлиентов.ЗаказКлиента КАК Документ.ЗаказКлиента).Дата <= &КонецПериода
		|	И НЕ ОбработкаЗаказовКлиентов.ДатаАктуальности = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)

		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	ЗаказКлиента
		|;

		|               
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   ТоварыКПоступлениюОбороты.Период КАК ДатаПоступления,
		|   ОбеспечениеЗаказовОбороты.Номенклатура,
		|   ВЫРАЗИТЬ(ОбеспечениеЗаказовОбороты.Назначение.Заказ КАК Документ.ЗаказКлиента) КАК Заказ,
		|   ОбеспечениеЗаказовОбороты.НаличиеПодЗаказПриход,
		|   ВЫРАЗИТЬ(ОбеспечениеЗаказовОбороты.Регистратор КАК Документ.ПеремещениеТоваров) КАК Регистратор,
		|   ОбеспечениеЗаказовОбороты.Склад,
		|   ТоварыКПоступлениюОбороты.КПоступлениюРасход КАК КПоступлению
		|ПОМЕСТИТЬ ПоступленияПоОбеспечению
		|ИЗ
		|   РегистрНакопления.ОбеспечениеЗаказов.Обороты(
		|   		&НачалоПериода,
		|   		,
		|   		Регистратор,
		|   		(Номенклатура, Характеристика, ВЫРАЗИТЬ(Назначение.Заказ КАК Документ.ЗаказКлиента)) В
		|   			(
		|   				ВЫБРАТЬ
		|   					Номенклатура,
		|   					Характеристика,
		|   					ЗаказКлиента
		|   				ИЗ
		|   					ОбособленыНоменклатура)
		|   			И Склад = &ЛогистическийСклад) КАК ОбеспечениеЗаказовОбороты
		|   	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению.Обороты(
		|   			&НачалоПериода,
		|   			,
		|   			Регистратор,
		|   			Номенклатура В
		|   					(ВЫБРАТЬ
		|   						Номенклатура
		|   					ИЗ
		|   						ОбособленыНоменклатура)
		|   				И Склад = &ЛогистическийСклад) КАК ТоварыКПоступлениюОбороты
		|   	ПО ОбеспечениеЗаказовОбороты.Номенклатура = ТоварыКПоступлениюОбороты.Номенклатура
		|   		И ((ВЫРАЗИТЬ(ОбеспечениеЗаказовОбороты.Регистратор КАК Документ.ПеремещениеТоваров)) = (ВЫРАЗИТЬ(ТоварыКПоступлениюОбороты.ДокументПоступления КАК Документ.ПеремещениеТоваров)))
		|ГДЕ
		|   ОбеспечениеЗаказовОбороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров

		|ОБЪЕДИНИТЬ

		|ВЫБРАТЬ
		|   ОбеспечениеЗаказовОбороты.Период,
		|   ОбеспечениеЗаказовОбороты.Номенклатура,
		|   ВЫРАЗИТЬ(ОбеспечениеЗаказовОбороты.Назначение.Заказ КАК Документ.ЗаказКлиента),
		|   ОбеспечениеЗаказовОбороты.НаличиеПодЗаказПриход,
		|   ВЫРАЗИТЬ(ОбеспечениеЗаказовОбороты.Регистратор КАК Документ.ПоступлениеТоваровУслуг),
		|   ОбеспечениеЗаказовОбороты.Склад,
		|   ОбеспечениеЗаказовОбороты.НаличиеПодЗаказПриход
		|ИЗ
		|   РегистрНакопления.ОбеспечениеЗаказов.Обороты(
		|   		&НачалоПериода,
		|   		,
		|   		Регистратор,
		|   		(Номенклатура, Характеристика, ВЫРАЗИТЬ(Назначение.Заказ КАК Документ.ЗаказКлиента)) В
		|   			(
		|   				ВЫБРАТЬ
		|   					Номенклатура,
		|   					Характеристика,
		|   					ЗаказКлиента
		|   				ИЗ
		|   					ОбособленыНоменклатура)
		|   			И Склад = &ЛогистическийСклад) КАК ОбеспечениеЗаказовОбороты
		|ГДЕ
		|   ОбеспечениеЗаказовОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг

		|ОБЪЕДИНИТЬ

		|ВЫБРАТЬ
		|   ОбеспечениеЗаказовОбороты.Период,
		|   ОбеспечениеЗаказовОбороты.Номенклатура,
		|   ВЫРАЗИТЬ(ОбеспечениеЗаказовОбороты.Назначение.Заказ КАК Документ.ЗаказКлиента),
		|   ОбеспечениеЗаказовОбороты.НаличиеСоСкладаРасход,
		|   ВЫРАЗИТЬ(ОбеспечениеЗаказовОбороты.Регистратор КАК Документ.ПеремещениеТоваров),
		|   ОбеспечениеЗаказовОбороты.Склад,
		|   ОбеспечениеЗаказовОбороты.НаличиеСоСкладаРасход
		|ИЗ
		|   РегистрНакопления.ОбеспечениеЗаказов.Обороты(
		|   		&НачалоПериода,
		|   		,
		|   		Регистратор,
		|   		(Номенклатура, Характеристика, ВЫРАЗИТЬ(Назначение.Заказ КАК Документ.ЗаказКлиента)) В
		|   			(
		|   				ВЫБРАТЬ
		|   					Номенклатура,
		|   					Характеристика,
		|   					ЗаказКлиента
		|   				ИЗ
		|   					ОбособленыНоменклатура)
		|   			И Склад = &ЛогистическийСклад) КАК ОбеспечениеЗаказовОбороты
		|ГДЕ
		|   ОбеспечениеЗаказовОбороты.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   ОбособленыНоменклатура.ЗаказКлиента,
		|   ОбособленыНоменклатура.КодСтроки,
		|   ОбособленыНоменклатура.Номенклатура,
		|   ОбособленыНоменклатура.КоличествоВЗаказе,
		|   ОбособленыНоменклатура.ДатаАктуальности,
		|   СУММА(ОбособленыНоменклатураКопия.КоличествоВЗаказе) - ОбособленыНоменклатура.КоличествоВЗаказе КАК КоличествоВЗаказеДо,
		|   СУММА(ОбособленыНоменклатураКопия.КоличествоВЗаказе) КАК КоличествоВЗаказеПосле
		|ПОМЕСТИТЬ ОбособленаНоменклатураПоНаростающим
		|ИЗ
		|   ОбособленыНоменклатура КАК ОбособленыНоменклатура
		|   	ЛЕВОЕ СОЕДИНЕНИЕ ОбособленыНоменклатура КАК ОбособленыНоменклатураКопия
		|   	ПО ОбособленыНоменклатура.ЗаказКлиента = ОбособленыНоменклатураКопия.ЗаказКлиента
		|   		И ОбособленыНоменклатура.Номенклатура = ОбособленыНоменклатураКопия.Номенклатура
		|   		И ОбособленыНоменклатура.ДатаАктуальности >= ОбособленыНоменклатураКопия.ДатаАктуальности
		|   		И (ВЫБОР
		|   			КОГДА ОбособленыНоменклатура.ДатаАктуальности = ОбособленыНоменклатураКопия.ДатаАктуальности
		|   				ТОГДА ОбособленыНоменклатура.КодСтроки >= ОбособленыНоменклатураКопия.КодСтроки
		|   			ИНАЧЕ ИСТИНА
		|   		КОНЕЦ)

		|СГРУППИРОВАТЬ ПО
		|   ОбособленыНоменклатура.ЗаказКлиента,
		|   ОбособленыНоменклатура.КодСтроки,
		|   ОбособленыНоменклатура.Номенклатура,
		|   ОбособленыНоменклатура.КоличествоВЗаказе,
		|   ОбособленыНоменклатура.ДатаАктуальности

		|ИНДЕКСИРОВАТЬ ПО
		|   ОбособленыНоменклатура.ЗаказКлиента,
		|   ОбособленыНоменклатура.Номенклатура,
		|   ОбособленыНоменклатура.КоличествоВЗаказе
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   ПоступленияПоОбеспечению.Заказ,
		|   ПоступленияПоОбеспечению.Регистратор,
		|   ПоступленияПоОбеспечению.Номенклатура,
		|   ПоступленияПоОбеспечению.ДатаПоступления КАК ДатаПоступления,
		|   ПоступленияПоОбеспечению.КПоступлению,
		|   СУММА(ПоступленияПоОбеспечениюКопия.КПоступлению) - ПоступленияПоОбеспечению.КПоступлению КАК КПоступлениюДо,
		|   СУММА(ПоступленияПоОбеспечениюКопия.КПоступлению) КАК КПоступлениюПосле
		|ПОМЕСТИТЬ ПоступленияПоОбеспечениюНаростающие
		|ИЗ
		|   ПоступленияПоОбеспечению КАК ПоступленияПоОбеспечению
		|   	ЛЕВОЕ СОЕДИНЕНИЕ ПоступленияПоОбеспечению КАК ПоступленияПоОбеспечениюКопия
		|   	ПО ПоступленияПоОбеспечению.Заказ = ПоступленияПоОбеспечениюКопия.Заказ
		|   		И ПоступленияПоОбеспечению.Номенклатура = ПоступленияПоОбеспечениюКопия.Номенклатура
		|   		И ПоступленияПоОбеспечению.ДатаПоступления >= ПоступленияПоОбеспечениюКопия.ДатаПоступления
		|   		И (ВЫБОР
		|   			КОГДА ПоступленияПоОбеспечению.ДатаПоступления = ПоступленияПоОбеспечениюКопия.ДатаПоступления
		|   				ТОГДА ПоступленияПоОбеспечению.Регистратор >= ПоступленияПоОбеспечениюКопия.Регистратор
		|   			ИНАЧЕ ИСТИНА
		|   		КОНЕЦ)

		|СГРУППИРОВАТЬ ПО
		|   ПоступленияПоОбеспечению.Заказ,
		|   ПоступленияПоОбеспечению.Регистратор,
		|   ПоступленияПоОбеспечению.Номенклатура,
		|   ПоступленияПоОбеспечению.КПоступлению,
		|   ПоступленияПоОбеспечению.ДатаПоступления

		|ИНДЕКСИРОВАТЬ ПО
		|   ПоступленияПоОбеспечению.Заказ,
		|   ПоступленияПоОбеспечению.Номенклатура
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   ОбособленаНоменклатураПоНаростающим.ЗаказКлиента КАК ЗаказКлиента,
		|   ОбособленаНоменклатураПоНаростающим.Номенклатура КАК Номенклатура,
		|   ОбособленаНоменклатураПоНаростающим.КоличествоВЗаказеПосле КАК Точка
		|ПОМЕСТИТЬ КешТочки
		|ИЗ
		|   ОбособленаНоменклатураПоНаростающим КАК ОбособленаНоменклатураПоНаростающим

		|ОБЪЕДИНИТЬ

		|ВЫБРАТЬ
		|   ПоступленияПоОбеспечениюНаростающие.Заказ,
		|   ПоступленияПоОбеспечениюНаростающие.Номенклатура,
		|   ПоступленияПоОбеспечениюНаростающие.КПоступлениюПосле
		|ИЗ
		|   ПоступленияПоОбеспечениюНаростающие КАК ПоступленияПоОбеспечениюНаростающие

		|ИНДЕКСИРОВАТЬ ПО
		|   ЗаказКлиента,
		|   Номенклатура
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   КешТочки.ЗаказКлиента КАК ЗаказКлиента,
		|   КешТочки.Номенклатура,
		|   ЕСТЬNULL(ОбособленаНоменклатураПоНаростающим.КодСтроки, 0) КАК КодСтроки,
		|   ЕСТЬNULL(ОбособленаНоменклатураПоНаростающим.КоличествоВЗаказе, 0) КАК КоличествоВЗаказе,
		|   ЕСТЬNULL(ОбособленаНоменклатураПоНаростающим.КоличествоВЗаказеПосле, 0) КАК КоличествоВЗаказеПосле,
		|   ЕСТЬNULL(ОбособленаНоменклатураПоНаростающим.ДатаАктуальности, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаАктуальности,
		|   МАКСИМУМ(ЕСТЬNULL(ПоступленияПоОбеспечениюНаростающие.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0))) КАК ДатаПоступления,
		|   МАКСИМУМ(ЕСТЬNULL(ПоступленияПоОбеспечениюНаростающие.КПоступлениюПосле, 0)) КАК КПоступлениюПосле
		|ПОМЕСТИТЬ ОбъединенияПоНаростающим
		|ИЗ
		|   КешТочки КАК КешТочки
		|   	ЛЕВОЕ СОЕДИНЕНИЕ ОбособленаНоменклатураПоНаростающим КАК ОбособленаНоменклатураПоНаростающим
		|   	ПО КешТочки.ЗаказКлиента = ОбособленаНоменклатураПоНаростающим.ЗаказКлиента
		|   		И КешТочки.Номенклатура = ОбособленаНоменклатураПоНаростающим.Номенклатура
		|   		И КешТочки.Точка <= ОбособленаНоменклатураПоНаростающим.КоличествоВЗаказеПосле
		|   		И КешТочки.Точка > ОбособленаНоменклатураПоНаростающим.КоличествоВЗаказеДо
		|   	ЛЕВОЕ СОЕДИНЕНИЕ ПоступленияПоОбеспечениюНаростающие КАК ПоступленияПоОбеспечениюНаростающие
		|   	ПО КешТочки.ЗаказКлиента = ПоступленияПоОбеспечениюНаростающие.Заказ
		|   		И КешТочки.Номенклатура = ПоступленияПоОбеспечениюНаростающие.Номенклатура
		|   		И КешТочки.Точка <= ПоступленияПоОбеспечениюНаростающие.КПоступлениюПосле
		|   		И КешТочки.Точка > ПоступленияПоОбеспечениюНаростающие.КПоступлениюДо

		|СГРУППИРОВАТЬ ПО
		|   КешТочки.ЗаказКлиента,
		|   КешТочки.Номенклатура,
		|   ЕСТЬNULL(ОбособленаНоменклатураПоНаростающим.ДатаАктуальности, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)),
		|   ЕСТЬNULL(ОбособленаНоменклатураПоНаростающим.КодСтроки, 0),
		|   ЕСТЬNULL(ОбособленаНоменклатураПоНаростающим.КоличествоВЗаказеПосле, 0),
		|   ЕСТЬNULL(ОбособленаНоменклатураПоНаростающим.КоличествоВЗаказе, 0)
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   ОбъединенияПоНаростающим.ЗаказКлиента,
		|   ОбъединенияПоНаростающим.Номенклатура,
		|   ОбъединенияПоНаростающим.ДатаАктуальности КАК ДатаАктуальности,
		|   ОбъединенияПоНаростающим.ДатаПоступления,
		|   1 КАК КоличествоЗаказов,
		|   ВЫБОР
		|   	КОГДА НАЧАЛОПЕРИОДА(ОбъединенияПоНаростающим.ДатаПоступления, ДЕНЬ) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|   			И ОбъединенияПоНаростающим.ДатаАктуальности < &ТекущаяДата
		|   		ТОГДА 1
		|   	КОГДА ОбъединенияПоНаростающим.КПоступлениюПосле < ОбъединенияПоНаростающим.КоличествоВЗаказеПосле
		|   			И ОбъединенияПоНаростающим.ДатаАктуальности < &ТекущаяДата
		|   		ТОГДА 1
		|   	КОГДА ОбъединенияПоНаростающим.ДатаАктуальности < НАЧАЛОПЕРИОДА(ОбъединенияПоНаростающим.ДатаПоступления, ДЕНЬ)
		|   			И ОбъединенияПоНаростающим.ДатаАктуальности < &ТекущаяДата
		|   		ТОГДА 1
		|   КОНЕЦ КАК Залет,
		|   ОбъединенияПоНаростающим.Номенклатура.ВидНоменклатуры КАК ВидыНоменклатуры,
		|   ОбъединенияПоНаростающим.КоличествоВЗаказе
		|ИЗ
		|   ОбособленыНоменклатура КАК ОбособленыНоменклатура
		|   	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъединенияПоНаростающим КАК ОбъединенияПоНаростающим
		|   	ПО ОбособленыНоменклатура.Номенклатура = ОбъединенияПоНаростающим.Номенклатура
		|   		И ОбособленыНоменклатура.ЗаказКлиента = ОбъединенияПоНаростающим.ЗаказКлиента
		|   		И ОбособленыНоменклатура.КодСтроки = ОбъединенияПоНаростающим.КодСтроки
		|ГДЕ
		|   ОбъединенияПоНаростающим.ДатаАктуальности <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаКомпоновки()

Процедура СформироватьОтчетПрограммно(ТекстЗапроса, ДанныеРасшифровки, ДокументРезультат)
		
	НаборыДанных 	= СхемаКомпоновкиДанных.НаборыДанных;
	ОсновнойНабор   = НаборыДанных.Найти("НаборДанных1");
	
	Если ОсновнойНабор = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Отчет сломался. Сообщите в службу поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	ОсновнойНабор.Запрос = ТекстЗапроса;
	
	//УстановитьПараметрыКомпоновкиДанных(КомпоновщикНастроек);
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки, , , Ложь);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры

Процедура УстановитьПараметрыКомпоновкиДанных(КомпоновщикНастроек)

	ПараметрыДанных 	= КомпоновщикНастроек.Настройки.ПараметрыДанных;
	
	ЛогистическийСклад	= Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d3409-40c2-11e0-9f98-001517115d85")); // Склад Соборна
	УстановитьЗначениеПараметраКомпоновкиДанных("ЛогистическийСклад", ЛогистическийСклад, ПараметрыДанных);

КонецПроцедуры

Процедура УстановитьЗначениеПараметраКомпоновкиДанных(ИмяПараметра, ЗначениеПараметра, ПараметрыДанных)

	Параметр = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	
	Если Параметр = Неопределено Тогда
		ТекстСообщения = НСтр("ru='Не удалось получить параметр «%1». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ИмяПараметра);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметр.Значение 		= ЗначениеПараметра;
	Параметр.Использование  = Истина;

КонецПроцедуры

#КонецОбласти