
////////////////////////////////////////////////////////////////////////////////
// ИНТЕРФЕЙС АВТОМАТИЧЕСКИХ ТЕСТОВ

Перем ЮнитТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СпиокТестов = Новый Массив;	
	Возврат СпиокТестов;
	
КонецФункции

Процедура ВыполнитьРассылку() Экспорт   
	
	УИ 					= Новый УникальныйИдентификатор("ac5acd51-31ad-11e4-80d4-001e676b0175");
	СвойствоЗаработок	= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(УИ);
	УИ 					= Новый УникальныйИдентификатор("8bdf84ff-404c-11e0-9f98-001517115d85");
	ВидЦеныРозница		= Справочники.ВидыЦен.ПолучитьСсылку(УИ);
	
	Запрос 			= Новый Запрос;	
	Запрос.Текст	= ПолучитьТекстЗапросаИзмененныеДанные();
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ДатаСравнения", ТекущаяДата()-900);
	Запрос.УстановитьПараметр("Розница", ВидЦеныРозница);
	Запрос.УстановитьПараметр("СвойствоЗаработок", СвойствоЗаработок);
			
	ВыборкаСклад = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СписокРассылки = Новый Соответствие;
	Пока ВыборкаСклад.Следующий() Цикл
		Тема = 	"Внимание заработок менеджера изменился!";
		Тело =  "<P><B>Дата:</B> "	    	+ ТекущаяДата()	+
				"<table border=""1"" cellspacing=""0"" width=""95%"" style=""font-family:ms shell dlg font-size:8""> " +
					"<tr bgcolor=""#f7f3de"">" +
						"<td ""2"">Код</td>" +
						"<td ""2"">Артикул</td>" +
						"<td ""2"">Номенклатура</td>" +
						"<td ""3"">Заробіток менеджера</td>" +
					"</tr>";
		ВыборкаКому = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаКому.Следующий() Цикл 
			ВыборкаПрофиль = ВыборкаКому.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПрофиль.Следующий() Цикл 
				Кому = Новый Массив;
				Кому.Добавить(Новый Структура("Адрес, Представление", ВыборкаПрофиль.Кому, "It's ROBOT"));	
				СтруктураПисьма = Новый Структура("Тема, Тело, Кому, Профиль", Тема, Тело, Кому, ВыборкаПрофиль.Профиль);
			
				ВыборкаЗаписей = ВыборкаПрофиль.Выбрать();
				Пока ВыборкаЗаписей.Следующий() Цикл
					СтруктураПисьма.Тело = СтруктураПисьма.Тело +
											"<tr>"
												"<td>" + ВыборкаЗаписей.Код 				+ "</td>" +
												"<td>" + ВыборкаЗаписей.Артикул 			+ "</td>" +
												"<td>" + ВыборкаЗаписей.Номенклатура 		+ "</td>" +
												"<td>" + ВыборкаЗаписей.ЗаработокМенеджера	+ "</td>" +
											"</tr>";
				КонецЦикла;
				СписокРассылки.Вставить(ВыборкаСклад.Склад, СтруктураПисьма);
			КонецЦикла;						
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого ЭлементРассылки Из СписокРассылки Цикл
		СтруктураПисьма = ЭлементРассылки.Значение;
		ПараметрыПисьма = ktcОбщийМодульПротоколов.СформироватьПараметрыПисьма(СтруктураПисьма.Тема, СтруктураПисьма.Тело, СтруктураПисьма.Кому, , , , , , ТипТекстаПочтовогоСообщения.HTML);
		ktcОбщийМодульПротоколов.ОтправитьСообщениеПоSMTP(СтруктураПисьма.Профиль, ПараметрыПисьма);	
	КонецЦикла;	
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаИзмененныеДанные()

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыВНаличии.Номенклатура			КАК Номенклатура,
		|	ТоварыВНаличии.Склад				КАК Склад,
		|	ТоварыВНаличии.Номенклатура.Код 	КАК Код,
		|	ТоварыВНаличии.Номенклатура.Артикул КАК Артикул,
		|	EmailОповещение.Кому 				КАК Кому,
		|	EmailОповещение.Профиль 			КАК Профиль
		|ПОМЕСТИТЬ ОсновнойКеш
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ТекущаяДата, ) КАК ТоварыВНаличии
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Регламент_EmailОповещение КАК EmailОповещение
		|	ПО 
		|		EmailОповещение.ВидЦены = &Розница
		|	И	ТоварыВНаличии.Склад 	= EmailОповещение.Склад
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КПП_КоэффициентыПриоритетностиПоВидуНоменклатурыРозница.СрезПоследних(&ТекущаяДата, ) КАК РС_КПП
		|	ПО 
		|		(НЕ (РС_КПП.ВидНоменклатуры, РС_КПП.КПП, РС_КПП.Значение) В
		|			(ВЫБРАТЬ
		|				ВидНоменклатуры,
		|				КПП,
		|				Значение
		|			ИЗ
		|				РегистрСведений.КПП_КоэффициентыПриоритетностиПоВидуНоменклатурыРозница.СрезПоследних(&ДатаСравнения)))
		|	И	ТоварыВНаличии.Номенклатура.ВидНоменклатуры = РС_КПП.ВидНоменклатуры

		|ОБЪЕДИНИТЬ

		|ВЫБРАТЬ
		|	ТекущаяЦена.Номенклатура,
		|	ТоварыВНаличии.Склад,
		|	ТекущаяЦена.Номенклатура.Код,
		|	ТекущаяЦена.Номенклатура.Артикул,
		|	EmailОповещение.Кому,
		|	EmailОповещение.Профиль
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ТекущаяДата, ) КАК ТоварыВНаличии
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Регламент_EmailОповещение КАК EmailОповещение
		|	ПО 
		|		EmailОповещение.ВидЦены = &Розница
		|	И	ТоварыВНаличии.Склад 	= EmailОповещение.Склад
		|		
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ТекущаяДата, ВидЦены = &Розница) КАК ТекущаяЦена
		|	ПО 
		|		ТоварыВНаличии.Номенклатура = ТекущаяЦена.Номенклатура
		|	И	(НЕ (ТекущаяЦена.Номенклатура, ТекущаяЦена.Цена) В
		|			(ВЫБРАТЬ
		|				Номенклатура,
		|				Цена
		|			ИЗ
		|				РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСравнения, ВидЦены = &Розница)))

		|ОБЪЕДИНИТЬ

		|ВЫБРАТЬ
		|	КППРозница.Номенклатура,
		|	ТоварыВНаличии.Склад,
		|	КППРозница.Номенклатура.Код,
		|	КППРозница.Номенклатура.Артикул,
		|	EmailОповещение.Кому,
		|	EmailОповещение.Профиль
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ТекущаяДата, ) КАК ТоварыВНаличии
		|		
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Регламент_EmailОповещение КАК EmailОповещение
		|	ПО 
		|		EmailОповещение.ВидЦены = &Розница
		|	И	ТоварыВНаличии.Склад 	= EmailОповещение.Склад
		|		
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КПП_Розница_ЗначениеКоефициентаПриоритетностиПродаж.СрезПоследних(&ТекущаяДата, ) КАК КППРозница
		|	ПО 
		|		ТоварыВНаличии.Номенклатура = КППРозница.Номенклатура
		|	И	(НЕ (КППРозница.Номенклатура, КППРозница.Значение) В
		|			(ВЫБРАТЬ
		|				Номенклатура,
		|				Значение
		|			ИЗ
		|				РегистрСведений.КПП_Розница_ЗначениеКоефициентаПриоритетностиПродаж.СрезПоследних(&ДатаСравнения, )))
		|;

		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОсновнойКеш.Номенклатура										КАК Номенклатура,
		|	ОсновнойКеш.Код													КАК Код,
		|	ОсновнойКеш.Артикул												КАК Артикул,
		|	ОсновнойКеш.Склад 												КАК Склад,
		|	ОсновнойКеш.Кому 												КАК Кому,
		|	ОсновнойКеш.Профиль 											КАК Профиль,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ДопСведения.Значение, 0) КАК ЧИСЛО(15, 2))	КАК ЗаработокМенеджера
		|ИЗ
		|	ОсновнойКеш КАК ОсновнойКеш
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДопСведения
		|	ПО 	
		|		ОсновнойКеш.Номенклатура	= ВЫРАЗИТЬ(ДопСведения.Объект КАК Справочник.Номенклатура)
		|	И	ДопСведения.Свойство 		= &СвойствоЗаработок
		|	
		|ИТОГИ ПО
		|	Склад,
		|	Кому,
		|	Профиль";	
	
	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаИзмененныеДанные()


////////////////////////////////////////////////////////////////////////////////
// Информация о внешней обработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "1.0.0";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Регл. автоматическая рассылка при изменении цены, процента КПП или КПП номенклатуры");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Регл. автоматическая рассылка при изменении цены, процента КПП или КПП номенклатуры [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "Регл. автоматическая рассылка при изменении цены, процента КПП или КПП номенклатуры [" + Версия + "]", "ВыполнитьРассылку();", "ВызовСерверногоМетода");
	
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(Индентификатор) Экспорт
	Выполнить(Индентификатор);	
КонецПроцедуры


