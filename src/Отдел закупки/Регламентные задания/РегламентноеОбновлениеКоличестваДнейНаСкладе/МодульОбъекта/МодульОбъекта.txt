
#Область ПрограммныйИнтерфейс

Процедура РасчетКоличестваДнейНаСкладе() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДнейНаСкладе();
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ТекущаяДата()));
	
	ГлобальныеНастройки = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиОбработокМодификацииКонфигурации", , , "ДополнительныеНастройкиОбработокМодификацииКонфигурации");	
	Если НЕ ТипЗнч(ГлобальныеНастройки) = Тип("Структура") Тогда
		ТекстИсключение = НСтр("ru = 'Настройки библиотеки внешних обработок не найдены!" + Символы.ПС + "Задать настройки можно по адресу: ""Нормативно справочная информация""->""Дополнительные обработки""->""Настройки внешних обработок""'");
		ОповеститьОбОшибкеВSlack(ТекстИсключение);
		ВызватьИсключение ТекстИсключение;	
	КонецЕсли;
	
	Если ГлобальныеНастройки.Свойство("СвойствоДнейНаСкладе") Тогда
		Запрос.УстановитьПараметр("Свойство_Дней", ГлобальныеНастройки.СвойствоДнейНаСкладе);		
	Иначе
		ТекстИсключение = НСтр("ru = 'ВНИМАНИЕ! Не задано значение свойства: ""СвойствоДнейНаСкладе""!" + Символы.ПС + "Задать настройки можно по адресу: ""Нормативно справочная информация""->""Дополнительные обработки""->""Настройки внешних обработок""'");
		ОповеститьОбОшибкеВSlack(ТекстИсключение);	
		ВызватьИсключение ТекстИсключение;
	КонецЕсли;
		
	Если ГлобальныеНастройки.Свойство("СвойствоПартияНаСкладе") Тогда
     	Запрос.УстановитьПараметр("Свойство_Партий", ГлобальныеНастройки.СвойствоПартияНаСкладе);
	Иначе
		ТекстИсключение = НСтр("ru = 'ВНИМАНИЕ! Не задано значение свойства: ""СвойствоПартияНаСкладе""!" + Символы.ПС + "Задать настройки можно по адресу: ""Нормативно справочная информация""->""Дополнительные обработки""->""Настройки внешних обработок""'");
		ОповеститьОбОшибкеВSlack(ТекстИсключение);
		ВызватьИсключение ТекстИсключение;
	КонецЕсли;
		
	РезультатПакета = Запрос.ВыполнитьПакет();	

	НаборЗаписей = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Свойство.Установить(ГлобальныеНастройки.СвойствоДнейНаСкладе);
	НаборЗаписей.Загрузить(РезультатПакета[РезультатПакета.ВГраница()].Выгрузить());
	НаборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Свойство.Установить(ГлобальныеНастройки.СвойствоПартияНаСкладе);
	НаборЗаписей.Загрузить(РезультатПакета[РезультатПакета.ВГраница() - 4].Выгрузить());
	НаборЗаписей.Записать();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДнейНаСкладах();
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ТекущаяДата()));
	НаборЗаписей = РегистрыСведений.АМ_ДнейНаСкладе.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	НаборЗаписей.Записать();
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеФункцииИПроцедуры

Процедура ОповеститьОбОшибкеВSlack(ТекстИсключение)
		
	МассивПрикреплений = Новый Массив;
	СтруктураПрикреплений = git_Slack.ПолучитьСтруктуруПрикреплений();
	СтруктураПрикреплений.Вставить("fallback",  "Ошибка");
	СтруктураПрикреплений.Вставить("text",      "Регл. обновление свойства номенклатуры: ""Дней на складе"", ""Партия на складе""");
	СтруктураПрикреплений.Вставить("pretext",   ТекстИсключение);
	СтруктураПрикреплений.Вставить("color",     "danger");
	МассивПрикреплений.Добавить(СтруктураПрикреплений);

	СтруктураДанных = git_Slack.ПолучитьПустуюСтруктуруДанных();
	СтруктураДанных.Вставить("username",    "Base (yt11)");
	СтруктураДанных.Вставить("icon_emoji",  ":trollface:");
	СтруктураДанных.Вставить("channel",     "#general");
	СтруктураДанных.Вставить("attachments", МассивПрикреплений);
	git_Slack.ОтправитьДанные("ktchat.slack.com", "x2VEjiOJKl2UnSA5t2DinjEt", СтруктураДанных);
	
КонецПроцедуры // ОповеститьОбОшибкеВSlack()
	
Функция ПолучитьТекстЗапросаДнейНаСкладе()
	
	ТекстЗапроса = "
		|ВЫБРАТЬ   
		|	Период,
		|	Номенклатура,
		|	КоличествоНачальныйОстаток 	КАК НачальныйОстаток,
		|	КоличествоКонечныйОстаток 	КАК КонечныйОстаток,
		|
		|	ВЫБОР 
		|		КОГДА КоличествоПриход > 0
		|		ТОГДА КоличествоПриход
		|		ИНАЧЕ 	ВЫБОР
		|					КОГДА КоличествоРасход < 0 
		|					ТОГДА -КоличествоРасход
		|					ИНАЧЕ 0
		|				КОНЕЦ 
		|	КОНЕЦ КАК ПриходТовара,
		|	ВЫБОР 
		|		КОГДА КоличествоРасход > 0
		|		ТОГДА КоличествоРасход
		|		ИНАЧЕ ВЫБОР
		|					КОГДА КоличествоПриход < 0 
		|					ТОГДА -КоличествоПриход
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|	КОНЕЦ КАК РасходТовара
		|	
		|ПОМЕСТИТЬ ОстаткиПоДням
		|ИЗ
		| 	РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(, &КонецДня, Регистратор, , )
		|ГДЕ
		|	ТипЗначения(Регистратор) <> Тип(Документ.ПеремещениеТоваров)
		|И	ТипЗначения(Регистратор) <> Тип(Документ.ПередачаТоваровМеждуОрганизациями)
		|;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура,
		|	Сумма(ПриходТовара) КАК ПриходТовара
		|	
		|ПОМЕСТИТЬ ВсегоЗакуплено
		|ИЗ
		|	ОстаткиПоДням
		|
		|СГРУППИРОВАТЬ ПО
		|	Номенклатура
		|;			
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура,
		|	Период	
		|
		|ПОМЕСТИТЬ ОкончаниеОстатков
		|ИЗ
		|	ОстаткиПоДням	
		|
		|ГДЕ
		| 	КонечныйОстаток = 0
		|;
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОстаткиПоДням.Номенклатура,
		|	ОстаткиПоДням.Период									КАК ПериодПоявления,
		|	Минимум(ЕСТЬNULL(ОкончаниеОстатков.Период, &КонецДня))  КАК ПериодИсчезновения
		|
		|ПОМЕСТИТЬ ПериодНаличияОстатков
		|ИЗ
		|	ОстаткиПоДням КАК ОстаткиПоДням	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ОкончаниеОстатков КАК ОкончаниеОстатков
		|ПО ОкончаниеОстатков.Номенклатура = ОстаткиПоДням.Номенклатура
		|И	ОкончаниеОстатков.Период	  >= ОстаткиПоДням.Период
		|
		|ГДЕ
		| 	ОстаткиПоДням.КонечныйОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО 
		|	ОстаткиПоДням.Номенклатура, 
		|	ОстаткиПоДням.Период
		|;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОкончаниеОстатков;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура,
		|	Минимум(ПериодПоявления)	КАК ПерваяДата,
		|	Максимум(ПериодИсчезновения)КАК ПоследняяДата
		|	
		|ПОМЕСТИТЬ ОпорныеТочки
		|ИЗ
		|	ПериодНаличияОстатков
		|	
		|СГРУППИРОВАТЬ ПО
		|	Номенклатура
		|;		
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МинПериод.Номенклатура,
		|
		|   Минимум(МинПериод.ПериодПоявления) КАК ПериодПоявления,
		|   МинПериод.ПериодИсчезновения,
		|
		|	ОпорныеТочки.ПерваяДата		КАК ПерваяДата,
		|   ОпорныеТочки.ПоследняяДата	КАК ПоследняяДата
		|
		|ПОМЕСТИТЬ ДиапазонНаличия
		|ИЗ
		| 	ПериодНаличияОстатков КАК МинПериод 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ОпорныеТочки КАК ОпорныеТочки
		|ПО ОпорныеТочки.Номенклатура = МинПериод.Номенклатура  
		|
		|СГРУППИРОВАТЬ ПО 
		|	МинПериод.Номенклатура,
		|	МинПериод.ПериодИсчезновения,
		|   ОпорныеТочки.ПерваяДата,
		|   ОпорныеТочки.ПоследняяДата
		|;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПериодНаличияОстатков;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОпорныеТочки;	
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		| 	ОстаткиПоДням.Период,
		| 	Минимум(СледДвижение.Период) КАК СледДвижение,
		| 	
		|	ОстаткиПоДням.Номенклатура,
		|	ОстаткиПоДням.НачальныйОстаток,
		|	ОстаткиПоДням.КонечныйОстаток,
		|	
		|	ДиапазонНаличия.ПерваяДата,
		|	ДиапазонНаличия.ПоследняяДата
		|	
		|ПОМЕСТИТЬ ТабНаличия
		|ИЗ
		|	ОстаткиПоДням КАК ОстаткиПоДням
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоДням КАК СледДвижение
		|ПО СледДвижение.Номенклатура = ОстаткиПоДням.Номенклатура
		|И  СледДвижение.Период		  > ОстаткиПоДням.Период 
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ДиапазонНаличия КАК ДиапазонНаличия
		|ПО ДиапазонНаличия.Номенклатура = ОстаткиПоДням.Номенклатура
		|И  (ОстаткиПоДням.Период >= ДиапазонНаличия.ПериодПоявления 
		|И   ОстаткиПоДням.Период <= ДиапазонНаличия.ПериодИсчезновения)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоДням.Период,
		|	ОстаткиПоДням.Номенклатура,
		|	ОстаткиПоДням.НачальныйОстаток,
		|	ОстаткиПоДням.КонечныйОстаток,	
		|	ДиапазонНаличия.ПерваяДата,
		|	ДиапазонНаличия.ПоследняяДата
		|;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ 
		|	ОстаткиПоДням.Период, 
		|	ОстаткиПоДням.Номенклатура, 
		|	ОстаткиПоДням.ПриходТовара,
		|
		|   СУММА(ЗакупкиНаростающие.ПриходТовара) - ОстаткиПоДням.ПриходТовара КАК СуммаДо,
		|	СУММА(ЗакупкиНаростающие.ПриходТовара) 								КАК СуммаПосле
		|
		|ПОМЕСТИТЬ ЗакупкиНаростающие 
		|ИЗ 
		|	ОстаткиПоДням
		|	
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПоДням КАК ЗакупкиНаростающие						
		|ПО ОстаткиПоДням.Номенклатура  = ЗакупкиНаростающие.Номенклатура
		|И  ОстаткиПоДням.Период 	   >= ЗакупкиНаростающие.Период
		|И	ОстаткиПоДням.ПриходТовара <> 0
		|
		|СГРУППИРОВАТЬ ПО 
		|	ОстаткиПоДням.Период, 
		|	ОстаткиПоДням.Номенклатура,
		|	ОстаткиПоДням.ПриходТовара
		|
		|;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗакупкиНаростающие.Номенклатура КАК Объект,
		|	&Свойство_Партий 				КАК Свойство,
		|	ВЫБОР
		|		КОГДА СуммаПосле > Расход 
		|		ТОГДА РАЗНОСТЬДАТ(ЗакупкиНаростающие.Период, &КонецДня, День)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Значение
		| 
		|ИЗ
		|	ЗакупкиНаростающие
		|	
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|						Номенклатура,
		|						Максимум(Период) 	КАК Период,
		|						Сумма(РасходТовара) КАК Расход
		|					ИЗ
		|						ОстаткиПоДням
		|					
		|					ГДЕ
		|						Период <> &КонецДня		
		|					СГРУППИРОВАТЬ ПО 
		|						Номенклатура) КАК ВлПродано
		|ПО ВлПродано.Номенклатура = ЗакупкиНаростающие.Номенклатура
		|И  ВлПродано.Расход	  >= ЗакупкиНаростающие.СуммаДо
		|И  ВлПродано.Расход	  <	 ЗакупкиНаростающие.СуммаПосле
		|;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиПоДням;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДиапазонНаличия;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЗакупкиНаростающие;
		/////////////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабНаличия.Номенклатура КАК Объект,
		|	&Свойство_Дней 			КАК Свойство,
		|	ВЫБОР
		|		КОГДА ВсегоЗакуплено.ПриходТовара = 0
		|		ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(Сумма(ВЫБОР
		|				КОГДА ТабНаличия.Период = ТабНаличия.ПерваяДата
		|				ТОГДА 	ВЫБОР 
		|							КОГДА ТабНаличия.НачальныйОстаток = 0
		|							ТОГДА ТабНаличия.КонечныйОстаток  * РАЗНОСТЬДАТ(ТабНаличия.Период, ТабНаличия.СледДвижение, День)
		|							ИНАЧЕ ТабНаличия.НачальныйОстаток * РАЗНОСТЬДАТ(ТабНаличия.Период, ТабНаличия.СледДвижение, День)
		|						КОНЕЦ 
		|				КОГДА ТабНаличия.Период = ТабНаличия.ПоследняяДата
		|				ТОГДА 	ВЫБОР
		|							КОГДА ТабНаличия.НачальныйОстаток = 0
		|							ТОГДА ТабНаличия.КонечныйОстаток  
		|							ИНАЧЕ ТабНаличия.НачальныйОстаток
		|						КОНЕЦ 
		|				КОГДА ТабНаличия.НачальныйОстаток = 0 
		|				ТОГДА ТабНаличия.КонечныйОстаток  * РАЗНОСТЬДАТ(ТабНаличия.Период, ТабНаличия.СледДвижение, День)
		|				КОГДА ТабНаличия.КонечныйОстаток  = 0 
		|				ТОГДА ТабНаличия.НачальныйОстаток 
		|				ИНАЧЕ ТабНаличия.КонечныйОстаток * РАЗНОСТЬДАТ(ТабНаличия.Период, ТабНаличия.СледДвижение, День)	
		|		КОНЕЦ) / ВсегоЗакуплено.ПриходТовара КАК Число(5, 1)) 
		|	КОНЕЦ КАК Значение 
		|		 	
		|ИЗ
		|	ТабНаличия
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ВсегоЗакуплено 
		|ПО ВсегоЗакуплено.Номенклатура = ТабНаличия.Номенклатура
		|		
		|СГРУППИРОВАТЬ ПО
		|	ТабНаличия.Номенклатура,
		|	ВсегоЗакуплено.ПриходТовара
		|;";
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПолучитьТекстЗапросаДнейНаСкладах()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ТоварыОрганизацийОстаткиИОбороты.Период,
		|	АУН.КлючАналитики КАК АналитикаУчетаНоменклатуры,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоНачальныйОстаток КАК НачальныйОстаток,
		|	ТоварыОрганизацийОстаткиИОбороты.КоличествоКонечныйОстаток КАК КонечныйОстаток,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизацийОстаткиИОбороты.КоличествоПриход > 0
		|			ТОГДА ТоварыОрганизацийОстаткиИОбороты.КоличествоПриход
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТоварыОрганизацийОстаткиИОбороты.КоличествоРасход < 0
		|					ТОГДА -ТоварыОрганизацийОстаткиИОбороты.КоличествоРасход
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК ПриходТовара,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизацийОстаткиИОбороты.КоличествоРасход > 0
		|			ТОГДА ТоварыОрганизацийОстаткиИОбороты.КоличествоРасход
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ТоварыОрганизацийОстаткиИОбороты.КоличествоПриход < 0
		|					ТОГДА -ТоварыОрганизацийОстаткиИОбороты.КоличествоПриход
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК РасходТовара
		|ПОМЕСТИТЬ ОстаткиПоДням
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(, &КонецДня, Регистратор, , ) КАК ТоварыОрганизацийОстаткиИОбороты
		|	
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО	АУН.Номенклатура = ТоварыОрганизацийОстаткиИОбороты.Номенклатура
		|И	АУН.Характеристика = ТоварыОрганизацийОстаткиИОбороты.Характеристика
		|И	АУН.Склад = ТоварыОрганизацийОстаткиИОбороты.Склад
		|
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ТоварыОрганизацийОстаткиИОбороты.Регистратор) <> ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ОстаткиПоДням.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СУММА(ОстаткиПоДням.ПриходТовара) КАК ПриходТовара
		|ПОМЕСТИТЬ ВсегоЗакуплено
		|ИЗ
		|	ОстаткиПоДням КАК ОстаткиПоДням
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоДням.АналитикаУчетаНоменклатуры
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ОстаткиПоДням.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры, 
		|	ОстаткиПоДням.Период КАК Период
		|ПОМЕСТИТЬ ОкончаниеОстатков
		|ИЗ
		|	ОстаткиПоДням КАК ОстаткиПоДням
		|ГДЕ
		|	ОстаткиПоДням.КонечныйОстаток = 0
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ОстаткиПоДням.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ОстаткиПоДням.Период КАК ПериодПоявления,
		|	МИНИМУМ(ЕСТЬNULL(ОкончаниеОстатков.Период, &КонецДня)) КАК ПериодИсчезновения
		|ПОМЕСТИТЬ ПериодНаличияОстатков
		|ИЗ
		|	ОстаткиПоДням КАК ОстаткиПоДням
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ ОкончаниеОстатков КАК ОкончаниеОстатков
		|ПО 	ОкончаниеОстатков.АналитикаУчетаНоменклатуры = ОстаткиПоДням.АналитикаУчетаНоменклатуры
		|И 	ОкончаниеОстатков.Период >= ОстаткиПоДням.Период
		|
		|ГДЕ
		|	ОстаткиПоДням.КонечныйОстаток <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоДням.АналитикаУчетаНоменклатуры,
		|	ОстаткиПоДням.Период
		|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОкончаниеОстатков;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ПериодНаличияОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	МИНИМУМ(ПериодНаличияОстатков.ПериодПоявления) КАК ПерваяДата,
		|	МАКСИМУМ(ПериодНаличияОстатков.ПериодИсчезновения) КАК ПоследняяДата
		|ПОМЕСТИТЬ ОпорныеТочки
		|ИЗ
		|	ПериодНаличияОстатков КАК ПериодНаличияОстатков
		|
		|СГРУППИРОВАТЬ ПО
		|	ПериодНаличияОстатков.АналитикаУчетаНоменклатуры
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	МинПериод.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	МИНИМУМ(МинПериод.ПериодПоявления) КАК ПериодПоявления,
		|	МинПериод.ПериодИсчезновения,
		|	ОпорныеТочки.ПерваяДата КАК ПерваяДата,
		|	ОпорныеТочки.ПоследняяДата КАК ПоследняяДата
		|ПОМЕСТИТЬ ДиапазонНаличия
		|ИЗ
		|	ПериодНаличияОстатков КАК МинПериод
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ ОпорныеТочки КАК ОпорныеТочки
		|ПО 	ОпорныеТочки.АналитикаУчетаНоменклатуры = МинПериод.АналитикаУчетаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	МинПериод.АналитикаУчетаНоменклатуры,
		|	МинПериод.ПериодИсчезновения,
		|	ОпорныеТочки.ПерваяДата,
		|	ОпорныеТочки.ПоследняяДата
		|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПериодНаличияОстатков;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОпорныеТочки;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ОстаткиПоДням.Период,
		|	МИНИМУМ(СледДвижение.Период) КАК СледДвижение,
		|	ОстаткиПоДням.АналитикаУчетаНоменклатуры,
		|	ОстаткиПоДням.НачальныйОстаток,
		|	ОстаткиПоДням.КонечныйОстаток,
		|	ДиапазонНаличия.ПерваяДата,
		|	ДиапазонНаличия.ПоследняяДата
		|ПОМЕСТИТЬ ТабНаличия
		|ИЗ
		|	ОстаткиПоДням КАК ОстаткиПоДням
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоДням КАК СледДвижение
		|ПО 	СледДвижение.АналитикаУчетаНоменклатуры = ОстаткиПоДням.АналитикаУчетаНоменклатуры
		|И 	СледДвижение.Период > ОстаткиПоДням.Период
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ ДиапазонНаличия КАК ДиапазонНаличия
		|ПО 	ДиапазонНаличия.АналитикаУчетаНоменклатуры = ОстаткиПоДням.АналитикаУчетаНоменклатуры
		|И 	ОстаткиПоДням.Период >= ДиапазонНаличия.ПериодПоявления
		|И 	ОстаткиПоДням.Период <= ДиапазонНаличия.ПериодИсчезновения
		|
		|СГРУППИРОВАТЬ ПО
		|	ОстаткиПоДням.Период,
		|	ОстаткиПоДням.АналитикаУчетаНоменклатуры,
		|	ОстаткиПоДням.НачальныйОстаток,
		|	ОстаткиПоДням.КонечныйОстаток,
		|	ДиапазонНаличия.ПерваяДата,
		|	ДиапазонНаличия.ПоследняяДата
		|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОстаткиПоДням;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДиапазонНаличия;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ТабНаличия.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВЫБОР
		|		КОГДА ВсегоЗакуплено.ПриходТовара = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(
		|				СУММА(	ВЫБОР
		|							КОГДА ТабНаличия.Период = ТабНаличия.ПерваяДата
		|							ТОГДА 	ВЫБОР
		|										КОГДА ТабНаличия.НачальныйОстаток = 0
		|											ТОГДА ТабНаличия.КонечныйОстаток * РАЗНОСТЬДАТ(ТабНаличия.Период, ТабНаличия.СледДвижение, ДЕНЬ)
		|										ИНАЧЕ ТабНаличия.НачальныйОстаток * РАЗНОСТЬДАТ(ТабНаличия.Период, ТабНаличия.СледДвижение, ДЕНЬ)
		|									КОНЕЦ
		|							КОГДА ТабНаличия.Период = ТабНаличия.ПоследняяДата
		|							ТОГДА 	ВЫБОР
		|										КОГДА ТабНаличия.НачальныйОстаток = 0
		|											ТОГДА ТабНаличия.КонечныйОстаток
		|										ИНАЧЕ ТабНаличия.НачальныйОстаток
		|									КОНЕЦ
		|							КОГДА ТабНаличия.НачальныйОстаток = 0
		|							ТОГДА ТабНаличия.КонечныйОстаток * РАЗНОСТЬДАТ(ТабНаличия.Период, ТабНаличия.СледДвижение, ДЕНЬ)
		|							КОГДА ТабНаличия.КонечныйОстаток = 0
		|							ТОГДА ТабНаличия.НачальныйОстаток
		|							ИНАЧЕ ТабНаличия.КонечныйОстаток * РАЗНОСТЬДАТ(ТабНаличия.Период, ТабНаличия.СледДвижение, ДЕНЬ)
		|						КОНЕЦ) / ВсегоЗакуплено.ПриходТовара КАК ЧИСЛО(5, 1))
		|	КОНЕЦ КАК КоличествоДней
		|ИЗ
		|	ТабНаличия КАК ТабНаличия
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ ВсегоЗакуплено КАК ВсегоЗакуплено
		|ПО 	ВсегоЗакуплено.АналитикаУчетаНоменклатуры = ТабНаличия.АналитикаУчетаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабНаличия.АналитикаУчетаНоменклатуры,
		|	ВсегоЗакуплено.ПриходТовара
		|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТабНаличия;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВсегоЗакуплено;
		|";
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	//Версия обработки 
	Версия = "1.0.10";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Регл. обновление свойства номенклатуры:""Дней на складе"" [" + Версия + "]");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Регл. обновление свойства номенклатуры:""Дней на складе"" [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "Регл. обновление свойства номенклатуры:""Дней на складе"" [" + Версия + "]", "РасчетКоличестваДнейНаСкладе();", "ВызовСерверногоМетода");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(ИдентификаторКоманды) Экспорт
	Выполнить(ИдентификаторКоманды);	
КонецПроцедуры

#КонецОбласти

