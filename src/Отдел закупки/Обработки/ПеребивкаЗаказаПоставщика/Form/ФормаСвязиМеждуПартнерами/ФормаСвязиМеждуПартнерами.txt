#Область  ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Партнер.Пустая()  Тогда
		Партнер =  Параметры.Партнер;
	КонецЕсли;
	ВидСвязи = Справочники.ВидыСвязейМеждуПартнерами.ПолучитьСсылку(Новый УникальныйИдентификатор("91ad72ea-c09d-11e3-80c2-001e676b0174"));
	Если Партнер<>Неопределено Тогда
		ЗаполнитьСписокСвязей();
	КонецЕсли; 
КонецПроцедуры

//Обновляет таблицу СписокСвязей после добавления новой записи
//
// Параметры:
//  ИмяСобытия  - Строка -  Имя события,идентификации сообщений 
//
//	Параметр 	-          Параметр сообщения, не передаются
//
//	Источник    -		   Источник события
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если  ИмяСобытия="ОбновитьСписокСвязейЧерезОповестить" Тогда
		ОбновитьНаКлиенте();
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	ЗаполнитьСписокСвязей();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСвязей
&НаКлиенте
Процедура СписокСвязейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ 			= Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокСвязанПередНачаломИзменения(Элемент, Отказ)
	Отказ=Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокСвязейПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область  ОбработчикиКомандФормы
				
&НаКлиенте
Процедура Удалить(Команда)
	Режим = РежимДиалогаВопрос.ДаНет;
	ТД	  = Элементы.СписокСвязей.ТекущиеДанные;
	Ответ = Вопрос(НСтр("ru = 'Вы дествительно хотите удалить соотвествие?';"
	+ " en = 'Do you want to continue?'"), Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет ИЛИ ТД=Неопределено Тогда
		Возврат;
	Иначе
		УдалитьВиделенноеСоотвествие(ТД.Партнер);
	КонецЕсли;
	ОбновитьНаКлиенте();
КонецПроцедуры // Записать()

&НаКлиенте
Процедура Добавить(Команда)
	Если Партнер<>Неопределено ИЛИ  ВидСвязи<>Неопределено Тогда
		ПараметриФормы	=  Новый Структура;
		ПараметриФормы.Вставить("ПервыйПартнер",Партнер);
		ПараметриФормы.Вставить("ВидСвязи",ВидСвязи);
		ОткрытьФорму("ВнешняяОбработка.ПеребивкаЗаказаПоставщика.Форма.ФормаЗаписи",ПараметриФормы,ЭтаФорма);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаКлиенте();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
//Заполняет или обновляет таблицу СписокСвязей
//
// Параметры:
//  Нет
//
&НаСервере
Процедура ЗаполнитьСписокСвязей()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.СформироватьСписокСвязей(ЭтаФорма);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры  //ЗаполнитьСписокСвязей

//Обновляет таблицу СписокСвязей
//
// Параметры:
//  Нет
//
&НаКлиенте
Процедура ОбновитьНаКлиенте()
	Если Партнер<>Неопределено Тогда
		ЗаполнитьСписокСвязей();
	КонецЕсли; 
КонецПроцедуры

// Удаляем запись в регистр сведеней  СвязиМеждуПартнерами
//
// Параметры:
//  ПартнерСоотвествия - Справочник.Партнеры - ВторойПартнер записи в регистре  СвязиМеждуПартнерами
&НаСервере
Процедура УдалитьВиделенноеСоотвествие(ПартнерСоотвествия)
	Если ПартнерСоотвествия=Неопределено ИЛИ ПартнерСоотвествия=Неопределено ИЛИ ВидСвязи=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Запись	= РегистрыСведений.СвязиМеждуПартнерами.СоздатьНаборЗаписей();
	Запись.Отбор.ПервыйПартнер.Установить(Партнер);
	Запись.Отбор.ВторойПартнер.Установить(ПартнерСоотвествия);
	Запись.Отбор.ВидСвязи.Установить(ВидСвязи);
	Запись.Прочитать();
	Если Запись.Количество() <> 0 тогда 
		Запись.Очистить(); 
		Запись.Записать();
	КонецЕсли;
	
КонецПроцедуры // УдалитьВиделенноеСоотвествие()

#КонецОбласти

