#Область  ОбработчикиСобытийФормы
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ Параметры.Партнер.Пустая()  Тогда
		Партнер =  Параметры.Партнер;
	КонецЕсли;
	ВидСвязи = Справочники.ВидыСвязейМеждуПартнерами.ПолучитьСсылку(Новый УникальныйИдентификатор("1628a7d5-be32-11e3-985c-0007e90c5769"));
	Если Партнер<>Неопределено Тогда
	  ЗаполнитьСписокСвязей();
	КонецЕсли; 
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	ЗаполнитьСписокСвязей();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокСвязей
&НаКлиенте
Процедура СписокСвязейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ 			= Истина;
КонецПроцедуры
	
&НаКлиенте
Процедура СписокСвязанПередНачаломИзменения(Элемент, Отказ)
	Отказ=Истина;
КонецПроцедуры

&НаКлиенте
Процедура СписокСвязейПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область  ОбработчикиКомандФормы
	
&НаКлиенте
Процедура Удалить(Команда)
	Режим = РежимДиалогаВопрос.ДаНет;
	ТД	  = Элементы.СписокСвязей.ТекущиеДанные;
	Ответ = Вопрос(НСтр("ru = 'Вы дествительно хотите удалить соотвествие?';"
	     + " en = 'Do you want to continue?'"), Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет ИЛИ ТД=Неопределено Тогда
	    Возврат;
	Иначе
		УдалитьВиделенноеСоотвествие(ТД.Партнер);
	КонецЕсли;
	ОбновитьНаКлиенте();
КонецПроцедуры // Записать()

&НаКлиенте
Процедура Добавить(Команда)
	Если Партнер<>Неопределено ИЛИ  ВидСвязи<>Неопределено Тогда
	   	ПараметриФормы	=  Новый Структура;
		ПараметриФормы.Вставить("ПервыйПартнер",Партнер);
		ПараметриФормы.Вставить("ВидСвязи",ВидСвязи);
		ОткрытьФорму("ВнешняяОбработка.ПеребивкаЗаказаПоставщика.Форма.ФормаЗаписи",ПараметриФормы,ЭтаФорма);
		
		ОбновитьНаКлиенте();
		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаКлиенте();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокСвязей()
	УстановитьПривилегированныйРежим(Истина);
	Запрос 				= Новый Запрос;
	Запрос.Текст    	= ПолучитьТекстЗапросаСоотвествыйПартнера();
	Запрос.УстановитьПараметр("Партнер",	Партнер); 
	Запрос.УстановитьПараметр("ВидСвязи",	ВидСвязи);
	РезультатЗапроса	= Запрос.Выполнить();
	СписокСвязей.Загрузить(РезультатЗапроса.Выгрузить());
КонецПроцедуры  //ЗаполнитьСписокСвязей
&НаСервере
// ПолучитьТекстЗапросаСоотвествыйПартнера
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//   ТаблицаЗначений   - Список партнеров сооствествующие обраному поставщику
//
Функция ПолучитьТекстЗапросаСоотвествыйПартнера()
ТекстЗапроса="ВЫБРАТЬ
             |	ВторойПартнер.Код 		КАК КодПартнера,
             |	ВторойПартнер  			КАК Партнер
             |ИЗ
             |	РегистрСведений.СвязиМеждуПартнерами 
             |ГДЕ
             |	ПервыйПартнер = &Партнер
             |	И ВидСвязи = &ВидСвязи";
Возврат ТекстЗапроса;
КонецФункции // Получи()

// Записуваем табличную часть Партнерев в соотвествие с поставщиком в регистр  СвязиМеждуПартнерами
//
// Параметры:
//  Нет
//
&НаСервере
Процедура ЗаписатьСоотвесвиеВРегистр()
	Если СписокСвязей.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	
	РегистрСвед = РегистрыСведений.СвязиМеждуПартнерами;
	
КонецПроцедуры // ЗаписатьСоотвесвиеВРегистр()


&НаКлиенте
Процедура ОбновитьНаКлиенте()
	Если Партнер<>Неопределено Тогда
	  ЗаполнитьСписокСвязей();
	КонецЕсли; 
КонецПроцедуры

// Удаляем запись в регистр сведеней  СвязиМеждуПартнерами
//
// Параметры:
//  ПартнерСоотвествия - Справочник.Партнеры - ВторойПартнер записи в регистре  СвязиМеждуПартнерами
&НаСервере
Процедура УдалитьВиделенноеСоотвествие(ПартнерСоотвествия)
	Если ПартнерСоотвествия=Неопределено ИЛИ ПартнерСоотвествия=Неопределено ИЛИ ВидСвязи=Неопределено Тогда
		Возврат;
	КонецЕсли;
	Запись	= РегистрыСведений.СвязиМеждуПартнерами.СоздатьНаборЗаписей();
	Запись.Отбор.ПервыйПартнер.Установить(Партнер);
	Запись.Отбор.ВторойПартнер.Установить(ПартнерСоотвествия);
	Запись.Отбор.ВидСвязи.Установить(ВидСвязи);
	Запись.Прочитать();
	Если Запись.Количество() <> 0 тогда 
		Запись.Очистить(); 
		Запись.Записать();
	КонецЕсли;
	
	
КонецПроцедуры // УдалитьВиделенноеСоотвествие()

#КонецОбласти

