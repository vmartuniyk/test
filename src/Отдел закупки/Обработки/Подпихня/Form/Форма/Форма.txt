
#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВыполнятьРасчетыВФоне 	= НЕ СтандартныеПодсистемыВызовСервера.ПараметрыРаботыКлиента().ИнформационнаяБазаФайловая;
	ОбъектСсылка 			= git_ПереопределениеОбработчиковСервер.ПолучитьСсылкуНаВнешнийОбъект("Подпихня");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьАналоги(Команда)
	ЗаписатьАналогиПодпихнюНаСервере(ИСТИНА,ЛОЖЬ);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьПодпихню(Команда)
	ЗаписатьАналогиПодпихнюНаСервере(ЛОЖЬ,ИСТИНА); 
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьАналогиПодпихню(Команда)
	ЗаписатьАналогиПодпихнюНаСервере(ИСТИНА,ИСТИНА); 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаписатьАналогиПодпихнюНаСервере(ЗаписатьАналогиНоменклатуры,ЗаписатьПодпихню)
	
	УстановитьПривилегированныйРежим(Истина);	
	
	СтруктураЗаписей = ПолучитьСтруктуруЗаписей(ЗаписатьАналогиНоменклатуры,ЗаписатьПодпихню);
	
	Если СтруктураЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыКоманды 		= Новый Структура;   
	ПараметрыКоманды.Вставить("ДополнительнаяОбработкаСсылка", ОбъектСсылка);
	ПараметрыКоманды.Вставить("СтруктураЗаписей", СтруктураЗаписей);
	ПараметрыКоманды.Вставить("ИдентификаторКоманды", "ЗаписатьАналогиИПодпихнюВРегистры");
	ПараметрыКоманды.Вставить("СопровождающийТекст", НСтр("ru = 'Выполняется запись анаалогов /подпихни.'"));

	Если ВыполнятьРасчетыВФоне Тогда
		ЗаданиеПараметры = Новый Массив;
		ЗаданиеПараметры.Добавить(ПараметрыКоманды);
		Задание = ФоновыеЗадания.Выполнить("ДополнительныеОтчетыИОбработки.ВыполнитьКоманду", ЗаданиеПараметры, , ПараметрыКоманды.СопровождающийТекст); 
	Иначе
		//РеквизитФормыВЗначение("Объект").ЗаписатьАналогиИПодпихнюВРегистры(СтруктураЗаписей);
		ВыполнитьКомандуНапрямую("ЗаписатьАналогиИПодпихнюВРегистры", ПараметрыКоманды);
	КонецЕсли;
	
КонецПроцедуры // ЗаписатьАналогиПодпихнюНаСервере()

&НаСервере
Функция ПолучитьСтруктуруЗаписей(ЗаписатьАналогиНоменклатуры,ЗаписатьПодпихню)
	
	СтрЗаписей = Новый Структура;
	
	Если ЗаписатьАналогиНоменклатуры = ИСТИНА Тогда
		СтрЗаписей.Вставить("АналогиНоменклатуры"	,АналогиНоменклатуры.Выгрузить());
	КонецЕсли;
	
	Если ЗаписатьПодпихню = ИСТИНА Тогда
		СтрЗаписей.Вставить("Подпихня"				,Подпихня.Выгрузить());
	КонецЕсли;

	Возврат СтрЗаписей; 	

КонецФункции // ПолучитьСтруктуруЗаписей()


#Область ФоноваяОбработка

&НаСервере
Функция ВыполнитьКомандуНапрямую(ИдентификаторКоманды, ПараметрыКоманды)
    Возврат ДополнительныеОтчетыИОбработки.ВыполнитьКомандуИзФормыВнешнегоОбъекта(ИдентификаторКоманды, ПараметрыКоманды, ЭтаФорма);
КонецФункции

#КонецОбласти 

#КонецОбласти