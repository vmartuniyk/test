
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВидРасшифровки = Параметры.ВидРасшифровки;
	ЗагрузитьТаблицуИсключений(Параметры.АдресТаблицыНоменклатуры, Параметры.ВидРасшифровки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаИсключений

&НаКлиенте
Процедура ТаблицаИсключенийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсключенийПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	РезультатОчистки = ОчиститьИсключенияАналоговПодпихни();
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьТаблицуИсключений(АдресТаблицыНоменклатуры, ВидРасшифровки)

	ТаблицаНоменклатуры = ПолучитьИзВременногоХранилища(АдресТаблицыНоменклатуры);
	
	Если ТипЗнч(ТаблицаНоменклатуры) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос 			= Новый Запрос;
	Запрос.Текст    = ТекстЗапросаТаблицаИсключений(ВидРасшифровки);
	
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", ТаблицаНоменклатуры);
	
	ТаблицаИсключений.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры // ЗагрузитьТаблицуИсключений()

&НаСервере
Функция ТекстЗапросаТаблицаИсключений(ВидРасшифровки)

	ТекстЗапроса = "ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ СписокНоменклатуры
	               |ИЗ
	               |	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	%1 				КАК Исключение,
	               |	Номенклатура	КАК Номенклатура,
	               |	Ответственный   КАК Ответственный
	               |ИЗ
	               |	%2
	               |ГДЕ
	               |	Номенклатура В
	               |			(ВЫБРАТЬ
	               |				Номенклатура
	               |			ИЗ
	               |				СписокНоменклатуры)";
				   
	Если ВидРасшифровки = "АналогиНоменклатуры" Тогда
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, "АналогНоменклатуры", "РегистрСведений.ПД_ИсключениеАналогов");
	Иначе
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, "Подпихня", "РегистрСведений.ПД_ИсключениеПодпихни");
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаТаблицаИсключений()


&НаСервере
Функция ОчиститьИсключенияАналоговПодпихни()

	УстановитьПривилегированныйРежим(Истина);
	
	Возврат РеквизитФормыВЗначение("Объект").УдалитьИсключенияАналоговИПодпихни(ТаблицаИсключений.Выгрузить(), ВидРасшифровки);

КонецФункции // ОчиститьИсключенияАналоговПодпихни()
 

#КонецОбласти