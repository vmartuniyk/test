
#Область ИнтерфейсАвтоматическихТестов
	
&НаКлиенте
Перем ЮнитТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СписокТестов = Новый Массив;
	СписокТестов.Добавить("Тест_ПроверитьЗаполнение");
	СписокТестов.Добавить("Тест_ДополнительныеРеквизитыФормы");
	
	Возврат СписокТестов;
	
КонецФункции
 
&НаКлиенте
Процедура Тест_ПроверитьЗаполнение() Экспорт
	ЮнитТест.ПроверитьЗаполненность(ТранзитныйСклад);
	ЮнитТест.ПроверитьЗаполненность(ФорматМагазина);
	ЮнитТест.ПроверитьЗаполненность(ГруппаРозничныхСкладов);
КонецПроцедуры


&НаКлиенте
Процедура Тест_ДополнительныеРеквизитыФормы() Экспорт
	
	ИдентификаторТранзитногоСклада = Тест_ПолучитьИдентификаторСклада(ТранзитныйСклад);
	МассивСкладов				   = Тест_ПолучитьМассивРозничныхСкладов();
	
	ЮнитТест.ПроверитьТип(ЭтаФорма["ДеревоРаспределения"], Тип("ДанныеФормыДерево"), );
	
	Элемент = Элементы.Найти("группа_"+ИдентификаторТранзитногоСклада);
	ЮнитТест.ПроверитьТип(Элемент, Тип("ГруппаФормы"), );
	
	Элемент = Элементы.Найти("ожид_"+ИдентификаторТранзитногоСклада);
	ЮнитТест.ПроверитьТип(Элемент, Тип("ПолеФормы"), );
	
	Элемент = Элементы.Найти("остат_"+ИдентификаторТранзитногоСклада);
	ЮнитТест.ПроверитьТип(Элемент, Тип("ПолеФормы"), );
	
	Для каждого РозничныйСклад Из МассивСкладов Цикл
		
		ИдентификаторСклада = Тест_ПолучитьИдентификаторСклада(РозничныйСклад);
		
		Элемент = Элементы.Найти("группа_"+ИдентификаторСклада);
		ЮнитТест.ПроверитьТип(Элемент, Тип("ГруппаФормы"), );
		
		Элемент = Элементы.Найти("квота_"+ИдентификаторСклада);
		ЮнитТест.ПроверитьТип(Элемент, Тип("ПолеФормы"), );
		
		Элемент = Элементы.Найти("ожид_"+ИдентификаторСклада);
		ЮнитТест.ПроверитьТип(Элемент, Тип("ПолеФормы"), );
		
		Элемент = Элементы.Найти("остат_"+ИдентификаторСклада);
		ЮнитТест.ПроверитьТип(Элемент, Тип("ПолеФормы"), );
	
	КонецЦикла; 
	
КонецПроцедуры // Тест_ДополнительныеРеквизитыИЭлементыФормы()

&НаСервере
Функция Тест_ПолучитьИдентификаторСклада(Склад)
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьСтрокуИдентификатораСсылки(Склад);
КонецФункции // Тест_ПолучитьИдентификаторТранзитногоСклада()

&НаСервере
Функция Тест_ПолучитьМассивРозничныхСкладов()
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьСкладыИзГруппы(ГруппаРозничныхСкладов);
КонецФункции // Тест_ПолучитьМассивРозничныхСкладов()
 
 

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);	
	
	ИнициализироватьДанныеФормы();
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	
	МассивСкладов    			   = ОбъектОбработки.ПолучитьСкладыИзГруппы(ГруппаРозничныхСкладов);
	ИдентификаторТранзитногоСклада = ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ТранзитныйСклад);
	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
	СоздатьДополнительныеРеквизитыФормы(МассивСкладов, ИдентификаторТранзитногоСклада);
	СоздатьДополнительныеЭлементыФормы(МассивСкладов, ИдентификаторТранзитногоСклада);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область Инициализация_формы

// Выполняет начальное заполнение реквизитов формы.
//
&НаСервере
Процедура ИнициализироватьДанныеФормы()
	ТранзитныйСклад 	   		= РеквизитФормыВЗначение("Объект").ПолучитьТранзитныйСклад();
	ФорматМагазина  	  		= Справочники.ФорматыМагазинов.ПолучитьСсылку(Новый УникальныйИдентификатор("4a369284-a06e-11e3-80c2-001e676b0174")); // Базовый формат магазина
	ГруппаРозничныхСкладов 		= Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("754b0405-dd64-11e1-9d4d-001e673c80fc")); // Группа справочника Склады - Склади Роздріб
КонецПроцедуры // ИнициализироватьДанныеФормы()

// Процедура создает дополнительные реквизиты формы для дерева распределения.
//
// Параметры:
//  МассивСкладов - Массив - cодержит структуры со свойствами:
//   * Склад - СправочникСсылка.Склады - ссылка на розничный склад.
//  ИдентификаторТранзитногоСклада - Строка - строковой идентиифкатор склада, используется как имя реквизита дерева распределения.
//
&НаСервере
Процедура СоздатьДополнительныеРеквизитыФормы(МассивСкладов, ИдентификаторТранзитногоСклада)

	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");
	МассивРеквизитов 			   = Новый Массив;
	МассивТипов					   = Новый Массив;
	
	МассивТипов.Добавить(Тип("СправочникСсылка.Номенклатура"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ВидыНоменклатуры"));
	МассивТипов.Добавить(Тип("СправочникСсылка.ТоварныеКатегории"));
	
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ДеревоРаспределения", Новый ОписаниеТипов("ДеревоЗначений")));	
	МассивРеквизитов.Добавить(Новый РеквизитФормы("Номенклатура", Новый ОписаниеТипов(МассивТипов), "ДеревоРаспределения", "Номенклатура"));
	
	МассивРеквизитов.Добавить(Новый РеквизитФормы("ожид_"+ИдентификаторТранзитногоСклада, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "ДеревоРаспределения", "Ож."));
	МассивРеквизитов.Добавить(Новый РеквизитФормы("остат_"+ИдентификаторТранзитногоСклада, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "ДеревоРаспределения", "Ост."));
	
	Для каждого РозничныйСклад Из МассивСкладов Цикл
		ИдентификаторСклада = ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(РозничныйСклад);
		МассивРеквизитов.Добавить(Новый РеквизитФормы("квота_"+ИдентификаторСклада, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "ДеревоРаспределения", "Квота"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("ожид_"+ИдентификаторСклада, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "ДеревоРаспределения", "Ож."));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("остат_"+ИдентификаторСклада, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "ДеревоРаспределения", "Ост."));
	КонецЦикла; 
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
КонецПроцедуры // СоздатьДополнительныеРеквизитыИЭлементыФормы()

// Процедура создает дополнительные элементы формы для дерева распределения.
//
// Параметры:
//  МассивСкладов - Массив - cодержит структуры со свойствами:
//   * Склад - СправочникСсылка.Склады - ссылка на розничный склад.
//  ИдентификаторТранзитногоСклада - Строка - строковой идентиифкатор склада, используется как имя реквизита дерева распределения.
//
&НаСервере
Процедура СоздатьДополнительныеЭлементыФормы(МассивСкладов, ИдентификаторТранзитногоСклада)
	
	ПараметрыЭлемента = Новый Структура;
	ПараметрыЭлемента.Вставить("Имя", "ДеревоРаспределения");	
	ПараметрыЭлемента.Вставить("ПутьКДанным", "ДеревоРаспределения");
	ПараметрыЭлемента.Вставить("ПоложениеКоманднойПанели", ПоложениеКоманднойПанелиЭлементаФормы.Нет);
	ПараметрыЭлемента.Вставить("Подвал", Ложь);
	ПараметрыЭлемента.Вставить("Шапка", Истина);
	ПараметрыЭлемента.Вставить("ЦветФона", Новый Цвет(255, 255, 255));
	ПараметрыЭлемента.Вставить("ЦветТекста", Новый Цвет(0, 0, 0));
	ПараметрыЭлемента.Вставить("ЦветРамки", Новый Цвет(0, 0, 0));
	ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ТаблицаФормы"));
	ПараметрыЭлемента.Вставить("АвтоКонтекстноеМеню", Ложь);
	ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВПодвале", ГоризонтальноеПоложениеЭлемента.Лево);
	ПараметрыЭлемента.Вставить("КартинкаСтрок", БиблиотекаКартинок.ЭлементПапка);
	ЭлементДеревоРаспределения = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента);
	
	ПараметрыЭлемента = Новый Структура;
	ПараметрыЭлемента.Вставить("Имя", "Номенклатура");	
	ПараметрыЭлемента.Вставить("ПутьКДанным", "ДеревоРаспределения.Номенклатура");
	ПараметрыЭлемента.Вставить("ЦветФона", Новый Цвет(220, 255, 255));
	ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
	ПараметрыЭлемента.Вставить("Заголовок", "Номенклатура");
	ПараметрыЭлемента.Вставить("ТолькоПросмотр", Истина);
	ПараметрыЭлемента.Вставить("Ширина", 60);
	ПараметрыЭлемента.Вставить("ФиксацияВТаблице", ФиксацияВТаблице.Лево);
	git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ЭлементДеревоРаспределения);
	
	
	// Транзитный склад
	
	ПараметрыЭлемента = СтруктураПараметровГруппыКолонок("группа_"+ИдентификаторТранзитногоСклада, ТранзитныйСклад.Наименование, ФиксацияВТаблице.Лево);
	ГруппаКолонок = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ЭлементДеревоРаспределения);
	
	ПараметрыЭлемента = СтруктураПараметровКолонки("ожид_"+ИдентификаторТранзитногоСклада, Новый Цвет(204, 255, 204));
	git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
	
	ПараметрыЭлемента = СтруктураПараметровКолонки("остат_"+ИдентификаторТранзитногоСклада, Новый Цвет(204, 255, 204));
	git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект"); 
	
	Для каждого РозничныйСклад Из МассивСкладов Цикл
		
		ИдентификаторСклада = ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(РозничныйСклад);
		
		ПараметрыЭлемента = СтруктураПараметровГруппыКолонок("группа_"+ИдентификаторСклада, РозничныйСклад, ФиксацияВТаблице.Нет);
		ГруппаКолонок 	  = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ЭлементДеревоРаспределения);
		
		ПараметрыЭлемента = СтруктураПараметровКолонки("квота_"+ИдентификаторСклада, Новый Цвет(204, 255, 204));
		git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		
		ПараметрыЭлемента = СтруктураПараметровКолонки("ожид_"+ИдентификаторСклада, Новый Цвет(204, 255, 204));
		git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		
		ПараметрыЭлемента = СтруктураПараметровКолонки("остат_"+ИдентификаторСклада, Новый Цвет(204, 255, 204));
		git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
КонецПроцедуры // СоздатьДополнительныеЭлементыФормы()

// Возвращает заполненную структуру для создания группы колонок дерева распределения.
// 
// Параметры:
//  ИмяЭлемента - Строка - наименование элемента формы.
//  ЗаголовокЭлемента - Строка - заголовок элемента формы.
//  ФиксацияВТаблице - ФиксацияВТаблице - фиксация элемента в таблице.
//
// Возвращаемое значение:
//  Структура - структура параметров нового элемента формы.
//
&НаСервере
Функция СтруктураПараметровГруппыКолонок(ИмяЭлемента, ЗаголовокЭлемента, ФиксацияВТаблице)

	ПараметрыЭлемента = Новый Структура;
	ПараметрыЭлемента.Вставить("Имя", ИмяЭлемента);
	ПараметрыЭлемента.Вставить("Вид", ВидГруппыФормы.ГруппаКолонок);
	ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
	ПараметрыЭлемента.Вставить("Группировка", ГруппировкаКолонок.Горизонтальная);
	ПараметрыЭлемента.Вставить("ОтображатьВШапке", Истина);
	ПараметрыЭлемента.Вставить("Заголовок", ЗаголовокЭлемента);
	ПараметрыЭлемента.Вставить("ФиксацияВТаблице", ФиксацияВТаблице);
	ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
	
	Возврат ПараметрыЭлемента;

КонецФункции // ПолучитьСтруктуруПараметровГруппыКолонок()

// Возвращает заполненную структуру для создания колоноки дерева распределения.
//
// Параметры:
//  ИмяЭлемента - Строка - наименование элемента формы.
//  ЦветЭлемента - Цвет - цвет фона элемента.
//
// Возвращаемое значение:
//   Структура - структура параметров нового элемента формы.
//
&НаСервере
Функция СтруктураПараметровКолонки(ИмяЭлемента, ЦветЭлемента)

	ПараметрыЭлемента = Новый Структура;
	ПараметрыЭлемента.Вставить("Имя", ИмяЭлемента);                                        	
	ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
	ПараметрыЭлемента.Вставить("ПутьКДанным", "ДеревоРаспределения." + ИмяЭлемента);
	ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
	ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
	ПараметрыЭлемента.Вставить("ЦветФона", ЦветЭлемента);
	//ПараметрыЭлемента.Вставить("ОтображатьВШапке", Ложь);
	ПараметрыЭлемента.Вставить("Ширина", 6);
	ПараметрыЭлемента.Вставить("ТолькоПросмотр", Истина);
	ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
	ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
	
	Возврат ПараметрыЭлемента;

КонецФункции // СтруктураПараметровКолонки()
 

#КонецОбласти 

#КонецОбласти