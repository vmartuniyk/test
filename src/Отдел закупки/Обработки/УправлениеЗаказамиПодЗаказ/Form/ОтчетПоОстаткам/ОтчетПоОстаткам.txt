#Область ИнтерфейсАвтоматическихТестов

&НаКлиенте
Перем ЮнитТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СпиокТестов = Новый Массив;	
	Возврат СпиокТестов;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;	
	КонецЕсли;	
	
	Номенклатура = Параметры.Номенклатура;
	СформироватьОтчетНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	СформироватьОтчетНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат.Очистить();
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= ПолучитьТекстЗапроса();
	
	Если Не Номенклатура.Пустая() Тогда		
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);		
	КонецЕсли;
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	СписокНоменклатуры = РезультатПакета[РезультатПакета.ВГраница()].Выгрузить();
	ВывестиРезультатыЗапроса(СписокНоменклатуры);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстЗапроса()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Номенклатура,
	|	Номенклатура.НаименованиеПолное КАК НаименованиеПолное,
	|	Склад
	|ПОМЕСТИТЬ Cache_Номенклатура
	|ИЗ
	| 	РегистрНакопления.СвободныеОстатки.Остатки(," + ?(Номенклатура.Пустая(), "", "Номенклатура = &Номенклатура") + ")
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Номенклатура,
	|	Номенклатура.НаименованиеПолное,
	|	Склад
	|ИЗ
	| 	РегистрНакопления.ТоварыКПоступлению.Остатки(," + ?(Номенклатура.Пустая(), "", "Номенклатура = &Номенклатура") + ")
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Склад
	|;	
	
	|ВЫБРАТЬ
	|	СпрНоменклатура.Номенклатура,
	|	СпрНоменклатура.НаименованиеПолное,
	|	СпрНоменклатура.Склад,
	|	IsNull(Остатки.ВНаличииОстаток, 0) - IsNull(Остатки.ВРезервеОстаток, 0) КАК СвободныйОстаток,
	|	IsNull(Остатки.ВРезервеОстаток, 0) 										КАК Резерв,
	|	IsNull(Остатки.ВНаличииОстаток, 0) 										КАК Всего,
	|   IsNull(Перемещения.КПоступлениюОстаток, 0)                              КАК ВПеремещениях,
	|   IsNull(ЗаказыПоставщику.КПоступлениюОстаток, 0)                         КАК ВЗаказахПоставщику,
	|   IsNull(Остатки.ВНаличииОстаток, 0) 
	| - IsNull(Остатки.ВРезервеОстаток, 0)
	| + IsNull(Перемещения.КПоступлениюОстаток, 0)
	| + IsNull(ЗаказыПоставщику.КПоступлениюОстаток, 0)							КАК ПрогнозОстаток
	|ИЗ
	|	Cache_Номенклатура КАК СпрНоменклатура
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(," + ?(Номенклатура.Пустая(), "", "Номенклатура = &Номенклатура") + ") КАК Остатки
	|ПО	Остатки.Номенклатура = СпрНоменклатура.Номенклатура
	|И	Остатки.Склад 		 = СпрНоменклатура.Склад
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению.Остатки(, ТипЗначения(ДокументПоступления) <> Тип(Документ.ЗаказПоставщику)
	|												" + ?(Номенклатура.Пустая(), "", " И Номенклатура = &Номенклатура") + ") КАК Перемещения
	|ПО	Перемещения.Номенклатура = СпрНоменклатура.Номенклатура
	|И	Перемещения.Склад 		 = СпрНоменклатура.Склад
    |
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению.Остатки(, ТипЗначения(ДокументПоступления) = Тип(Документ.ЗаказПоставщику)
	|												 " + ?(Номенклатура.Пустая(), "", " И Номенклатура = &Номенклатура") + ") КАК ЗаказыПоставщику
	|ПО	ЗаказыПоставщику.Номенклатура = СпрНоменклатура.Номенклатура
	|И	ЗаказыПоставщику.Склад 		  = СпрНоменклатура.Склад
	|
	|УПОРЯДОЧИТЬ ПО 
	|	СпрНоменклатура.Номенклатура.Наименование, СпрНоменклатура.Склад.Наименование
	|;";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура ВывестиРезультатыЗапроса(СписокНоменклатуры)
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("СписокНоменклатуры", СписокНоменклатуры);
	
	ОбъектОбработки 		= РеквизитФормыВЗначение("Объект");
	СхемаКомпоновкиДанных   = ОбъектОбработки.ПолучитьМакет("СКД_ОстаткиТоваров");
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
	Настройки 					= СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных;
	ДанныеРасшифровки			= Новый ДанныеРасшифровкиКомпоновкиДанных;
	МакетКомпоновки				= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанны    = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанны.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода				= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанны);
	
КонецПроцедуры