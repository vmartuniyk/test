
#Область ИнтерфейсАвтоматическихТестов

&НаКлиенте
Перем ЮнитТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СписокТестов = Новый Массив;	
	Возврат СписокТестов;
	
КонецФункции

#КонецОбласти


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;	
	КонецЕсли;

	Номенклатура = Параметры.Номенклатура;
	
	СформироватьОтчетНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	СформироватьОтчетНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат.Очистить();
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= СформироватьТексЗапроса();
	
	Если НЕ Номенклатура.Пустая() Тогда
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	КонецЕсли;
	
	СписокНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	ВывестиРезультатыЗапроса(СписокНоменклатуры);
	
КонецПроцедуры

&НаСервере
Функция СформироватьТексЗапроса()
	ТекстЗапроса ="ВЫБРАТЬ
	                |	ТоварыКПоступлениюОстатки.ДокументПоступления КАК ДокументПоступления,
	                |	ТоварыКПоступлениюОстатки.Номенклатура КАК Номенклатура,
	                |	ТоварыКПоступлениюОстатки.Номенклатура.Код КАК Код,
	                |	ТоварыКПоступлениюОстатки.Склад КАК Склад,
	                |	ЗаказПоставщикуТовары.КоличествоУпаковок КАК КПоступлению,
	                |	ТоварыКПоступлениюОстатки.ДокументПоступления.Менеджер КАК Менеджер,
	                |	ЗаказПоставщикуТовары.Назначение   КАК Назначение
	                |ИЗ
	                |	РегистрНакопления.ТоварыКПоступлению.Остатки(
	                |			,
	                |			ДокументПоступления ССЫЛКА Документ.ЗаказПоставщику
	                |				" + ?(Номенклатура.Пустая(), " ", "И Номенклатура = &Номенклатура") + ") КАК ТоварыКПоступлениюОстатки
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	                |		ПО ТоварыКПоступлениюОстатки.ДокументПоступления = ЗаказПоставщикуТовары.Ссылка
	                |			И ТоварыКПоступлениюОстатки.Номенклатура = ЗаказПоставщикуТовары.Номенклатура
					|  ГДЕ
					|      ЗаказПоставщикуТовары.Назначение = Значение(Справочник.Назначения.ПустаяСсылка)
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Менеджер,
	                |	КПоступлению УБЫВ" ;
		
   Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура ВывестиРезультатыЗапроса(СписокНоменклатуры)
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("СписокНоменклатуры", СписокНоменклатуры);
	
	ОбъектОбработки 		= РеквизитФормыВЗначение("Объект");
	СхемаКомпоновкиДанных   = ОбъектОбработки.ПолучитьМакет("СКД_ОжидаемыеТовары");
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
	Настройки 					= СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных;
	ДанныеРасшифровки			= Новый ДанныеРасшифровкиКомпоновкиДанных;
	МакетКомпоновки				= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанны    = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанны.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода				= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанны);
	
КонецПроцедуры