

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьУправлениеНаСервере();
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область ОбработчикСобытийСтраницыУправление

&НаКлиенте
Процедура УправлениеАссортиментнойМатрицейПередРазворачиванием(Элемент, Строка, Отказ)
	ОбновитьДеревоУправленияНаСервере(Строка);
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийСтраницыНастройки
	
&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаНастройки Тогда
		ОбновитьМагазиныПодУправлениемНаСервере();
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаУправление Тогда
		ОбновитьУправлениеНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПодУправлениемПриИзменении(Элемент)
	
	Отказ = Ложь;
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		ВыполнитьЗаписьИзмененийВРегистр_АМ_МагазиныПодУправлением("МагазиныПодУправлением", Элемент.ТекущиеДанные.ПолучитьИдентификатор(), Отказ);	
		Если Отказ = Ложь Тогда
			Состояние(НСтр("ru = 'Данные удачно записаны'"), 100, , БиблиотекаКартинок.УстановитьСтатусЗаявкиВыполнена);	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#Область ОбработчикиКомандФормы



#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ТекущиеДанныеОпределены(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ТекущиеДанныеОпределены() 


&НаСервере
Процедура ОбновитьУправлениеНаСервере()
	
	ДеревоЗначений = РеквизитФормыВЗначение("УправлениеАссортиментнойМатрицей", Тип("ДеревоЗначений"));
	СтрокиДерева = ДеревоЗначений.Строки;
	СтрокиДерева.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаОбновитьУправлениеАссортиментнойМатрицей();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокиДерева.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Строки.Добавить();
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоЗначений, "УправлениеАссортиментнойМатрицей");
	
КонецПроцедуры // ОбновитьУправлениеНаСервере()

&НаСервере
Процедура ОбновитьДеревоУправленияНаСервере(Идентификатор)
	
	СтрокаДерева = УправлениеАссортиментнойМатрицей.НайтиПоИдентификатору(Идентификатор);
	СтрокаЭлементы = СтрокаДерева.ПолучитьЭлементы();
	СтрокаЭлементы.Очистить();
	
	Склад = СтрокаДерева.Склад;
	ВидНоменклатуры = СтрокаДерева.ВидНоменклатуры;
	ТоварнаяКатегория = СтрокаДерева.ТоварнаяКатегория;
	
	Запрос = Новый Запрос;
	Если ЗначениеЗаполнено(Склад) И НЕ ЗначениеЗаполнено(ВидНоменклатуры) И НЕ ЗначениеЗаполнено(ТоварнаяКатегория) Тогда
		Запрос.Текст = ПолучитьТекстЗапросаОбновитьДеревоУправленияПоСкладу();
	ИначеЕсли ЗначениеЗаполнено(Склад) И ЗначениеЗаполнено(ВидНоменклатуры) И НЕ ЗначениеЗаполнено(ТоварнаяКатегория) Тогда
		Запрос.Текст = ПолучитьТекстЗапросаОбновитьДеревоУправленияПоВидуНоменклатуры();
	ИначеЕсли ЗначениеЗаполнено(Склад) И ЗначениеЗаполнено(ВидНоменклатуры) И ЗначениеЗаполнено(ТоварнаяКатегория) Тогда
		Запрос.Текст = ПолучитьТекстЗапросаОбновитьДеревоДетальныеЗаписи();	
	Иначе
		Возврат;	
	КонецЕсли;
	Запрос.УстановитьПараметр("Месяц", НачалоДня(ТекущаяДата() - 86400 * 31));
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ТоварнаяКатегория);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ДанныеДерева = "<Товарная категория не задана>" И Выборка.ТКА = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если ПустаяСтрока(Выборка.ДанныеРодителя) Тогда
			НоваяСтрока.ДанныеДерева = Выборка.ДанныеДерева;	
		Иначе
			НоваяСтрока.ДанныеДерева = Выборка.ДанныеРодителя + " / " + Выборка.ДанныеДерева;
		КонецЕсли;
		
		Если НЕ (ЗначениеЗаполнено(Склад) И ЗначениеЗаполнено(ВидНоменклатуры) И ЗначениеЗаполнено(ТоварнаяКатегория)) Тогда
			НоваяСтрока.ПолучитьЭлементы().Добавить();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ОбновитьДеревоУправленияНаСервере()

&НаСервере
Процедура ОбновитьМагазиныПодУправлениемНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаМагазиныПодУправлением();
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() = Ложь Тогда
		МагазиныПодУправлением.Загрузить(РезультатЗапроса.Выгрузить());	
	КонецЕсли;
	
КонецПроцедуры // ОбновитьМагазиныПодУправлениемНаСервере()

&НаСервере
Процедура ВыполнитьЗаписьИзмененийВРегистр_АМ_МагазиныПодУправлением(ИмяТаблицы, Идентификатор, Отказ)
	
	РезультатПоиска = ЭтаФорма[ИмяТаблицы].НайтиПоИдентификатору(Идентификатор);
	Если РезультатПоиска <> Неопределено Тогда
		ПериодЗаписи = ТекущаяДатаСеанса();
		НаборЗаписей = РегистрыСведений.АМ_МагазиныПодУправлением.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ПериодЗаписи);
		НаборЗаписей.Отбор.Склад.Установить(РезультатПоиска.Склад);
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, РезультатПоиска);
			НоваяЗапись.Период = ПериодЗаписи;
		Попытка
			НаборЗаписей.Записать();
			РегистрыСведений.АМ_МагазиныПодУправлением.ПересчитатьИтоги();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неудача при попытке записи значения'"), , , , Отказ);	
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьЗаписьИзмененийВРегистр_АМ_МагазиныПодУправлением()

	
	
	
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОбновитьУправлениеАссортиментнойМатрицей()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПРЕДСТАВЛЕНИЕ(МагазиныПодУправлением.Склад) КАК ДанныеДерева,
		|	МагазиныПодУправлением.Склад 				КАК Склад
		|ПОМЕСТИТЬ КешДанныхДляВывода 
		|ИЗ
		|	РегистрСведений.АМ_МагазиныПодУправлением.СрезПоследних КАК МагазиныПодУправлением
		|
		|ГДЕ
		|	МагазиныПодУправлением.ИспользуетсяУправление = Истина
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.ДанныеДерева	КАК ДанныеДерева,
		|   КешДанныхДляВывода.Склад		КАК Склад,
		|
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) КАК ТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Склад В (ВЫБРАТЬ Склад ИЗ КешДанныхДляВывода)) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Склад = КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ДанныеДерева
		|
		|УПОРЯДОЧИТЬ ПО
		|	КешДанныхДляВывода.ДанныеДерева Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаОбновитьУправлениеАссортиментнойМатрицей()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОбновитьДеревоУправленияПоСкладу()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ВидыНоменклатуры.Ссылка)	КАК ДанныеДерева,
		|	ПРЕДСТАВЛЕНИЕ(ВидыНоменклатуры.Родитель)КАК ДанныеРодителя, 	
		|	&Склад								   	КАК Склад,
		|	ВидыНоменклатуры.Ссылка				   	КАК ВидНоменклатуры,
		|	&ТоварнаяКатегория						КАК ТоварнаяКатегория
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|
		|ГДЕ
		| 	ВидыНоменклатуры.ЭтоГруппа = Ложь	
		|И	ВидыНоменклатуры.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.Склад			КАК Склад,
		|   КешДанныхДляВывода.ВидНоменклатуры	КАК ВидНоменклатуры,
		|
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) КАК ТКА
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Склад = &Склад) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Номенклатура.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|И	ТоварыОрганизацийОстатки.Склад 						  = КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|	КешДанныхДляВывода.ДанныеРодителя		КАК ДанныеРодителя,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 			КАК ПосадочныеМеста,
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ОтклонениеПроцентПМ, 0) 		КАК ОтклонениеПроцентПМ,
		|
		|	РасчетТКА.ТКА КАК ТКА		
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры, 
		|																			ТоварнаяКатегория 
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК АМ_УправлениеАссортиментнойМатрицей
		|ПО	КешДанныхДляВывода.Склад 			 = АМ_УправлениеАссортиментнойМатрицей.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = АМ_УправлениеАссортиментнойМатрицей.Склад
		|И  КешДанныхДляВывода.ТоварнаяКатегория = АМ_УправлениеАссортиментнойМатрицей.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО	РасчетТКА.Склад 		  = КешДанныхДляВывода.Склад
		|И	РасчетТКА.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|
		|УПОРЯДОЧИТЬ ПО
		|	КешДанныхДляВывода.ДанныеРодителя Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаОбновитьДеревоУправленияПоСкладу()
 
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОбновитьДеревоУправленияПоВидуНоменклатуры()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ТоварныеКатегории.Ссылка)		КАК ДанныеДерева,
		|	ПРЕДСТАВЛЕНИЕ(ТоварныеКатегории.Родитель)	КАК ДанныеРодителя,
		|	&Склад								   		КАК Склад,
		|	&ВидНоменклатуры				   			КАК ВидНоменклатуры,
		|	ТоварныеКатегории.Ссылка					КАК ТоварнаяКатегория
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|
		|ГДЕ
		|	ТоварныеКатегории.Владелец = &ВидНоменклатуры
		|И 	ТоварныеКатегории.ЭтоГруппа = Ложь	
		|И	ТоварныеКатегории.ПометкаУдаления = Ложь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""<Товарная категория не задана>"",
		|	"""",
		|	&Склад,
		|	&ВидНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.Склад				КАК Склад,
		|   КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) КАК ТКА
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Номенклатура.ВидНоменклатуры = &ВидНоменклатуры И Склад = &Склад) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Номенклатура.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	ТоварыОрганизацийОстатки.Номенклатура.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	ТоварыОрганизацийОстатки.Склад 						  	= КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|	КешДанныхДляВывода.ДанныеРодителя		КАК ДанныеРодителя,	
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 			КАК ПосадочныеМеста,
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ОтклонениеПроцентПМ, 0) 		КАК ОтклонениеПроцентПМ,
		|
		|	РасчетТКА.ТКА КАК ТКА
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры, 
		|																			ТоварнаяКатегория 
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК АМ_УправлениеАссортиментнойМатрицей
		|ПО	КешДанныхДляВывода.Склад 			 = АМ_УправлениеАссортиментнойМатрицей.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = АМ_УправлениеАссортиментнойМатрицей.Склад
		|И  КешДанныхДляВывода.ТоварнаяКатегория = АМ_УправлениеАссортиментнойМатрицей.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО	РасчетТКА.Склад 		  	= КешДанныхДляВывода.Склад
		|И	РасчетТКА.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|
		|УПОРЯДОЧИТЬ ПО
		|	КешДанныхДляВывода.ДанныеДерева Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаОбновитьДеревоУправленияПоВидуНоменклатуры()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОбновитьДеревоДетальныеЗаписи()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(СпрНоменклатура.Ссылка)		КАК ДанныеДерева,
		|	""""										КАК ДанныеРодителя,
		|	СпрНоменклатура.Ссылка				   		КАК Номенклатура,
		|	&Склад								   		КАК Склад,
		|	СпрНоменклатура.ВидНоменклатуры				КАК ВидНоменклатуры,
		|	СпрНоменклатура.ТоварнаяКатегория			КАК ТоварнаяКатегория
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|
		|ГДЕ
		|	СпрНоменклатура.ВидНоменклатуры = &ВидНоменклатуры
		|И	СпрНоменклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|И 	СпрНоменклатура.ЭтоГруппа = Ложь	
		|И	СпрНоменклатура.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Склад	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|	КешДанныхДляВывода.ДанныеРодителя		КАК ДанныеРодителя,
		|	КешДанныхДляВывода.Номенклатура			КАК Номенклатура,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(&Месяц, , , ,  
		|											(Номенклатура, Склад) В (	ВЫБРАТЬ 
		|																			Номенклатура, 
		|																			Склад 
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК ТоварыОрганизацийОбороты
		|ПО	КешДанныхДляВывода.Номенклатура	= ТоварыОрганизацийОбороты.Номенклатура
		|И 	КешДанныхДляВывода.Склад	 	= ТоварыОрганизацийОбороты.Склад
		|
		|УПОРЯДОЧИТЬ ПО
		|	КешДанныхДляВывода.ДанныеДерева Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаОбновитьДеревоДетальныеЗаписи()


&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаМагазиныПодУправлением()

	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склады.Склад КАК Склад,
		|	МагазиныПодУправлением.ИспользуетсяУправление КАК ИспользуетсяУправление
		|ИЗ
		|	РегистрСведений.Модуль_ДоступныеСклады КАК Склады
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_МагазиныПодУправлением.СрезПоследних КАК МагазиныПодУправлением
		|ПО	МагазиныПодУправлением.Склад = Склады.Склад
		|
		|ГДЕ
		|	Основной = Истина
		|УПОРЯДОЧИТЬ ПО
		|	Склады.Склад.Наименование Возр	
		|";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаМагазиныПодУправлением()



 

#КонецОбласти



