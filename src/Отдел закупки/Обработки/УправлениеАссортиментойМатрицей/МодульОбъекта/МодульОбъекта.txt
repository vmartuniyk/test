
#Область ПрограммныйИнтерфейс

Процедура ВыполнитьКоманду(ИдентификаторКоманды, ПараметрыКоманды) Экспорт
	
	Перем РезультатВыполнения, ОповещениеФорм, МассивДанных;
	
	Если ИдентификаторКоманды = "ПереместитьТоварыВМатрицу();" 
	 ИЛИ ИдентификаторКоманды = "ПереместитьТоварыИзМатрицы();" Тогда
		Выполнить(ИдентификаторКоманды);
		Возврат;
	КонецЕсли;
	
	Если ИдентификаторКоманды = "ОбновитьПродажиПоФорматамВФоне" Тогда
		
		ТекстЗапроса = ПолучитьТекстЗапросаАналитическихДанных();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", "Склады.Ссылка КАК ФорматМагазина, 
													  | Склады.Ссылка КАК ДанныеДерева, ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%2", "Склады.Ссылка");
		
	ИначеЕсли ИдентификаторКоманды = "ОбновитьПродажиПоМагазинамВФоне" Тогда
		
		ТекстЗапроса = ПолучитьТекстЗапросаАналитическихДанных();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", "Склады.Склад КАК Склад, 
													  | Склады.Склад КАК ДанныеДерева, ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%2", "Склады.Склад");
		
	ИначеЕсли ИдентификаторКоманды = "ОбновитьТоварыКОтъездуВФоне" Тогда

		ТекстЗапроса = ПолучитьТекстЗапросаАналитикаТоварыКОтъезду();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", "Номенклатура.ВидНоменклатуры = &ВидНоменклатуры И Склад = &Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%2", "Склад = &Склад И ВидНоменклатуры = &ВидНоменклатуры");
		
	ИначеЕсли  ИдентификаторКоманды = "ОбновитьТоварыКПриездуВФоне" Тогда

		ТекстЗапроса = ПолучитьТекстЗапросаАналитикаТоварыКПриезду();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", "Склад = &Склад И ВидНоменклатуры = &ВидНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%2", "И ВидыНоменклатуры.Ссылка = &ВидНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%3", "Номенклатура.ВидНоменклатуры = &ВидНоменклатуры И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ПосадочныхМестПоНоменклатуре) И Склад = &Склад");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%4", "Номенклатура.ВидНоменклатуры = &ВидНоменклатуры И");
	
	ИначеЕсли ИдентификаторКоманды = "ОбновитьТоварыВРезервахВФоне" Тогда

		ТекстЗапроса = ПолучитьТекстЗапросаАналитикаТоварыВРезервах();

	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Склад", 				ПараметрыКоманды.Склад);
	Запрос.УстановитьПараметр("ВидНоменклатуры", 	ПараметрыКоманды.ВидНоменклатуры);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", 	ПараметрыКоманды.ТоварнаяКатегория);
	Запрос.УстановитьПараметр("Производитель", 		ПараметрыКоманды.Производитель);
	Запрос.УстановитьПараметр("Номенклатура", 		ПараметрыКоманды.Номенклатура);
	Запрос.УстановитьПараметр("КонецПериода", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("НачалоПериодаНеделя", НачалоДня(ТекущаяДатаСеанса()) - 7 * 86400);
	Запрос.УстановитьПараметр("НачалоПериода2Недели", НачалоДня(ТекущаяДатаСеанса()) - 14 * 86400);
	Запрос.УстановитьПараметр("НачалоПериодаМесяц", НачалоДня(ТекущаяДатаСеанса()) - 31 * 86400);
	Запрос.УстановитьПараметр("НачалоПериодаКвартал", НачалоДня(ТекущаяДатаСеанса()) - 91 * 86400);
		
	Если ПараметрыКоманды.Свойство("РезультатВыполнения", РезультатВыполнения) Тогда
		
		Если РезультатВыполнения.Свойство("ОповещениеФорм", ОповещениеФорм) Тогда

			ОповещениеФорм.ИмяСобытия = ИдентификаторКоманды;
			ОповещениеФорм.Использование = Истина;
			Если ПараметрыКоманды.Свойство("ДополнительнаяОбработкаСсылка") Тогда
				ОповещениеФорм.Свойство("Источник", ПараметрыКоманды.ДополнительнаяОбработкаСсылка);
			КонецЕсли;
			
			
			Если ИдентификаторКоманды = "ОбновитьТоварыКПриездуВФоне" Тогда
				УстановитьПривилегированныйРежим(Истина);
				РезультатПакета = Запрос.ВыполнитьПакет();
				Выгрузка = РезультатПакета[25].Выгрузить();
				УстановитьПривилегированныйРежим(Ложь);
			Иначе
				Выгрузка = Запрос.Выполнить().Выгрузить();
			КонецЕсли;
				
				
			КлючиСтруктуры = "";
			Для Каждого Колонка Из Выгрузка.Колонки Цикл
				КлючиСтруктуры = КлючиСтруктуры + Колонка.Имя + ",";
			КонецЦикла;
			КлючиСтруктуры = Лев(КлючиСтруктуры, СтрДлина(КлючиСтруктуры) - 1);
			
			
			МассивДанных = Новый Массив;
			Для каждого СтрокаВыгрузки Из Выгрузка Цикл
				СтруктураЗаписи = Новый Структура(КлючиСтруктуры);
				ЗаполнитьЗначенияСвойств(СтруктураЗаписи, СтрокаВыгрузки);
				МассивДанных.Добавить(СтруктураЗаписи);
			КонецЦикла;
			
			
			Если ИдентификаторКоманды = "ОбновитьТоварыКОтъездуВФоне" Тогда
				ЗаполнитьМассивДанныхТоваровКОтъездуПоАртикулам(Запрос, КлючиСтруктуры, МассивДанных);
			КонецЕсли;
			
			Если ИдентификаторКоманды = "ОбновитьТоварыКПриездуВФоне" Тогда
				ЗаполнитьМассивДанныхТоваровКПриездуПоАртикулам(РезультатПакета, МассивДанных, КлючиСтруктуры);
			КонецЕсли;
				
			ОповещениеФорм.Параметр = МассивДанных;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьКоманду()

Процедура ПереместитьТоварыВМатрицу()
	
	АвторизированныйПользователь = ПараметрыСеанса.ТекущийПользователь;
		
	ЗапросСкладов = Новый Запрос;
	ЗапросСкладов.Текст = ПолучитьТекстЗапросаСкладыДляПеремещенияТоваров();
	ЗапросСкладов.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	ВыгрузкаСклады = ЗапросСкладов.Выполнить().Выгрузить();
		
	Для каждого СтрокаВыгрузки Из ВыгрузкаСклады Цикл
				
		Если СтрокаВыгрузки.АвтоПеремещениеПоГлубине = Истина Тогда
			ВыполнитьПеремещениеТоваровВМатрицу(СтрокаВыгрузки, АвторизированныйПользователь);
		КонецЕсли;
		
		Если СтрокаВыгрузки.АвтоПеремещениеЗаказПодЗаказ = Истина Тогда
			// нет реализации
		КонецЕсли;

	КонецЦикла; 
	
КонецПроцедуры // ПереместитьТоварыВМатрицу()

Процедура ПереместитьТоварыИзМатрицы()
	
	АвторизированныйПользователь = ПараметрыСеанса.ТекущийПользователь;
		
	ЗапросСкладов = Новый Запрос;
	ЗапросСкладов.Текст = ПолучитьТекстЗапросаСкладыДляПеремещенияТоваров();
	ЗапросСкладов.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	ВыгрузкаСклады = ЗапросСкладов.Выполнить().Выгрузить();
		
	Для каждого СтрокаВыгрузки Из ВыгрузкаСклады Цикл
		
		Если СтрокаВыгрузки.АвтоПеремещениеСоСклада = Истина Тогда
			ВыполнитьПеремещениеТоваровИзМатрицы(СтрокаВыгрузки, АвторизированныйПользователь);
		КонецЕсли;

	КонецЦикла; 
	
КонецПроцедуры // ПереместитьТоварыИзМатрицы()


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьМассивДанныхТоваровКОтъездуПоАртикулам(Запрос, КлючиСтруктуры, МассивДанных, ПоВсейНоменклатуре = Ложь)
	
	Если ПоВсейНоменклатуре = Ложь Тогда
		Запрос.Текст = ПолучитьТекстЗапросаАналитикаТоварыКОтъездуПоАртикулам();
	Иначе
		Запрос.Текст = ПолучитьТекстЗапросаПеремещенияТоваровИзМатрицыПоДереву();	
	КонецЕсли;
	РезультатПакета = Запрос.ВыполнитьПакет();
	
	ВыгрузкаПоВидамНоменклатуры = РезультатПакета[19].Выгрузить();
	ПараметрыОтбораПоВиду = Новый Структура("Склад, ВидНоменклатуры, ПосадочныеМеста", , , 0);
	
	ВыгрузкаПоТоварнымКатегориям = РезультатПакета[20].Выгрузить();
	ВыгрузкаПоТоварнымКатегориям.Индексы.Добавить("Склад, ВидНоменклатуры");
	ПараметрыОтбораПоТоварнойКатегории = Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, ПосадочныеМеста", , , , 0);	
	
	ВыгрузкаПоПроизводителям = РезультатПакета[21].Выгрузить();
	ВыгрузкаПоПроизводителям.Индексы.Добавить("Склад, ВидНоменклатуры, ТоварнаяКатегория");
	ПараметрыОтбораПоПроизводителю = Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, ПосадочныеМеста", , , , , 0);
	
	ВыгрузкаПоНоменклатуре = РезультатПакета[22].Выгрузить();
	ВыгрузкаПоНоменклатуре.Индексы.Добавить("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель");
	ПараметрыОтбораПоНоменклатуре_ТК = Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, ПосадочныеМеста, КоличествоАртикулов", , , , 0, 1);
	ПараметрыОтбораПоНоменклатуре_ПР = Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, ПосадочныеМеста, КоличествоАртикулов", , , , , 0, 1);
	
	ЗаполнитьМассивДанныхТоваровКОтъездуПоАртикуламПоДереву(ВыгрузкаПоВидамНоменклатуры,
															ВыгрузкаПоТоварнымКатегориям,
															ВыгрузкаПоНоменклатуре,
															ПараметрыОтбораПоВиду,
															ПараметрыОтбораПоНоменклатуре_ТК,
															КлючиСтруктуры,
															МассивДанных);
															
	ЗаполнитьМассивДанныхТоваровКОтъездуПоАртикуламПоДереву(ВыгрузкаПоТоварнымКатегориям,
															ВыгрузкаПоПроизводителям,
															ВыгрузкаПоНоменклатуре,
															ПараметрыОтбораПоТоварнойКатегории,
															ПараметрыОтбораПоНоменклатуре_ПР,
															КлючиСтруктуры,
															МассивДанных);
															
	ЗаполнитьМассивДанныхТоваровКОтъездуПоАртикуламПоДереву(ВыгрузкаПоПроизводителям,
															ВыгрузкаПоНоменклатуре,
															ВыгрузкаПоНоменклатуре,
															ПараметрыОтбораПоПроизводителю,
															ПараметрыОтбораПоНоменклатуре_ПР,
															КлючиСтруктуры,
															МассивДанных);

КонецПроцедуры // ЗаполнитьМассивДанныхТоваровКОтъездуПоАртикулам()

Процедура ЗаполнитьМассивДанныхТоваровКОтъездуПоАртикуламПоДереву(ВыгрузкаРодитель,  
																ВыгрузкаПодчиненные, 
																ВыгрузкаДетальныеЗаписи, 
																ПараметрыОтбораРодитель,
																ПараметрыОтбораДетальныеЗаписи,
																КлючиСтруктуры,
																МассивДанных)
																
	Для Каждого СтрокаРодитель ИЗ ВыгрузкаРодитель Цикл
		
		Если СтрокаРодитель.ПосадочныеМеста = 0 Тогда
			Продолжить;
		КонецЕсли;
		 
		ПереборПосадочныхМест = СтрокаРодитель.КоличествоАртикулов - СтрокаРодитель.ПосадочныеМеста - СтрокаРодитель.ОтклонениеКоличествоПМ; 
		Если ПереборПосадочныхМест > 0 Тогда
			
			ЗаполнитьЗначенияСвойств(ПараметрыОтбораРодитель, СтрокаРодитель, , "ПосадочныеМеста");
			РезультатПоискаПодчиненные = ВыгрузкаПодчиненные.НайтиСтроки(ПараметрыОтбораРодитель);
			Для каждого СтрокаПодчиненные Из РезультатПоискаПодчиненные Цикл
						
				ЗаполнитьЗначенияСвойств(ПараметрыОтбораДетальныеЗаписи, СтрокаПодчиненные, , "ПосадочныеМеста, КоличествоАртикулов");	
				РезультатПоискаПоДетальнымЗаписям = ВыгрузкаДетальныеЗаписи.НайтиСтроки(ПараметрыОтбораДетальныеЗаписи);
				Для Каждого СтрокаДетальныеЗаписи ИЗ РезультатПоискаПоДетальнымЗаписям Цикл
					
					ПереборПосадочныхМест = ПереборПосадочныхМест - 1;
					Если ПереборПосадочныхМест < 0 Тогда
						Прервать;	
					КонецЕсли;
					
					СтруктураЗаписи = Новый Структура(КлючиСтруктуры);
					ЗаполнитьЗначенияСвойств(СтруктураЗаписи, СтрокаДетальныеЗаписи);
					МассивДанных.Вставить(0, СтруктураЗаписи);
					
				КонецЦикла;
				
			КонецЦикла; 
			
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры // ЗаполнитьМассивДанныхТоваровКОтъездуПоАртикуламПоДереву()

Процедура ЗаполнитьМассивДанныхТоваровКПриездуПоАртикулам(РезультатПакета, МассивДанных, КлючиСтруктуры)
	
	ВыгрузкаПоВидамНоменклатуры = РезультатПакета[19].Выгрузить();
	ПараметрыОтбораПоВиду = Новый Структура("Склад, ВидНоменклатуры, ПосадочныеМеста", , , 0);
	
	ВыгрузкаПоТоварнымКатегориям = РезультатПакета[20].Выгрузить();
	ВыгрузкаПоТоварнымКатегориям.Индексы.Добавить("Склад, ВидНоменклатуры");
	ПараметрыОтбораПоТоварнойКатегории = Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, ПосадочныеМеста", , , , 0);	
	
	ВыгрузкаПоПроизводителям = РезультатПакета[21].Выгрузить();
	ВыгрузкаПоПроизводителям.Индексы.Добавить("Склад, ВидНоменклатуры, ТоварнаяКатегория");
	ПараметрыОтбораПоПроизводителю = Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, ПосадочныеМеста", , , , , 0);
	
	ВыгрузкаПоНоменклатуре = РезультатПакета[23].Выгрузить();
	ВыгрузкаПоНоменклатуре.Индексы.Добавить("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель");
	ПараметрыОтбораПоНоменклатуре_ТК = Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, ПосадочныеМеста, КоличествоАртикулов", , , , 0, 0);
	ПараметрыОтбораПоНоменклатуре_ПР = Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, ПосадочныеМеста, КоличествоАртикулов", , , , , 0, 0);
	
	ЗаполнитьМассивДанныхТоваровКПриездуПоАртикуламПоДереву(ВыгрузкаПоВидамНоменклатуры,
															ВыгрузкаПоТоварнымКатегориям,
															ВыгрузкаПоНоменклатуре,
															ПараметрыОтбораПоВиду,
															ПараметрыОтбораПоНоменклатуре_ТК,
															КлючиСтруктуры,
															МассивДанных);
															
	ЗаполнитьМассивДанныхТоваровКПриездуПоАртикуламПоДереву(ВыгрузкаПоТоварнымКатегориям,
															ВыгрузкаПоПроизводителям,
															ВыгрузкаПоНоменклатуре,
															ПараметрыОтбораПоТоварнойКатегории,
															ПараметрыОтбораПоНоменклатуре_ПР,
															КлючиСтруктуры,
															МассивДанных,
															Истина);
															
	ЗаполнитьМассивДанныхТоваровКПриездуПоАртикуламПоДереву(ВыгрузкаПоПроизводителям,
															ВыгрузкаПоНоменклатуре,
															ВыгрузкаПоНоменклатуре,
															ПараметрыОтбораПоПроизводителю,
															ПараметрыОтбораПоНоменклатуре_ПР,
															КлючиСтруктуры,
															МассивДанных,
															Истина);
																													
	// Это сделано для того что бы понять, на передан массив или таблица значений															
	ЭтоТипМассиваДанных = ТипЗнч(МассивДанных) = Тип("Массив");	
	Для Каждого СтрокаНоменклатуры ИЗ ВыгрузкаПоНоменклатуре Цикл
		
		Если СтрокаНоменклатуры.ПосадочныеМеста = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаНоменклатуры.КоличествоАртикулов = 0 Тогда
			
			СтруктураЗаписи = ПолучитьСтруктуруЗаписи(ЭтоТипМассиваДанных, МассивДанных, КлючиСтруктуры);
			ЗаполнитьЗначенияСвойств(СтруктураЗаписи, СтрокаНоменклатуры);
			СтруктураЗаписи.МинимальныйЗапас = СтрокаНоменклатуры.МинимальныйЗапас;
			СтруктураЗаписи.МаксимальныйЗапас = СтрокаНоменклатуры.МаксимальныйЗапас;
			СтруктураЗаписи.КоличествоКПоставке = СтрокаНоменклатуры.МаксимальныйЗапас;
			Если СтрокаНоменклатуры.ЕстьНаРаспределительныхСкладах >= СтрокаНоменклатуры.МаксимальныйЗапас Тогда
				СтруктураЗаписи.ДанныеДерева = "Готово для перемещения";
			Иначе
				СтруктураЗаписи.ДанныеДерева = "Нужно заказать у поставщика";	
			КонецЕсли;
			
			ДобавитьЭлементВМассивДанных(ЭтоТипМассиваДанных, МассивДанных, СтруктураЗаписи);
			
		КонецЕсли;
		
	КонецЦикла;															
	
КонецПроцедуры // ЗаполнитьМассивДанныхТоваровКПриездуПоАртикулам() 

Процедура ЗаполнитьМассивДанныхТоваровКПриездуПоАртикуламПоДереву(ВыгрузкаРодитель,  
																ВыгрузкаПодчиненные, 
																ВыгрузкаДетальныеЗаписи, 
																ПараметрыОтбораРодитель,
																ПараметрыОтбораДетальныеЗаписи,
																КлючиСтруктуры,
																МассивДанных,
																ЗапасИзРодителя = Ложь)
	// Это сделано для того что бы понять, на передан массив или таблица значений															
	ЭтоТипМассиваДанных = ТипЗнч(МассивДанных) = Тип("Массив");
	
	Для Каждого СтрокаРодитель ИЗ ВыгрузкаРодитель Цикл
		
		Если СтрокаРодитель.ПосадочныеМеста = 0 Тогда
			Продолжить;
		КонецЕсли;
		 
		НераспределенныеПосадочныеМеста = Мин(СтрокаРодитель.ПосадочныеМеста - СтрокаРодитель.ПодчиненныеПосадочныеМеста, СтрокаРодитель.ПосадочныеМеста - СтрокаРодитель.КоличествоАртикулов); 
		Если НераспределенныеПосадочныеМеста > 0 Тогда
			
			ЗаполнитьЗначенияСвойств(ПараметрыОтбораРодитель, СтрокаРодитель, , "ПосадочныеМеста");
			РезультатПоискаПодчиненные = ВыгрузкаПодчиненные.НайтиСтроки(ПараметрыОтбораРодитель);
			
			// Для исключения загрузки дополнительного количества по Виду Номенклатуры
			Если ЗапасИзРодителя = Ложь Тогда
				Для каждого СтрокаПодчиненные Из РезультатПоискаПодчиненные Цикл
					НераспределенныеПосадочныеМеста = НераспределенныеПосадочныеМеста - СтрокаПодчиненные.КоличествоАртикулов;	
				КонецЦикла;
			КонецЕсли;
			
			
			// Обходим товары по наличию на распределительных складах
			Для каждого СтрокаПодчиненные Из РезультатПоискаПодчиненные Цикл
				
				//МинимальныйЗапас = ?(ЗапасИзРодителя, СтрокаРодитель.МинимальныйЗапас, СтрокаПодчиненные.МинимальныйЗапас);   // Брать из детальных записей
				//МаксимальныйЗапас = ?(ЗапасИзРодителя, СтрокаРодитель.МаксимальныйЗапас, СтрокаПодчиненные.МаксимальныйЗапас);// Брать из детальных записей
				//Если МаксимальныйЗапас > 0 Тогда
				    
					ЗаполнитьЗначенияСвойств(ПараметрыОтбораДетальныеЗаписи, СтрокаПодчиненные, , "ПосадочныеМеста, КоличествоАртикулов");	
					РезультатПоискаПоДетальнымЗаписям = ВыгрузкаДетальныеЗаписи.НайтиСтроки(ПараметрыОтбораДетальныеЗаписи);
					Для Каждого СтрокаДетальныеЗаписи ИЗ РезультатПоискаПоДетальнымЗаписям Цикл
						
						Если СтрокаДетальныеЗаписи.ЕстьНаРаспределительныхСкладах = 0 Тогда
						// И 	 СтрокаДетальныеЗаписи.ЕстьВозможностьЗаказа = Дата(1, 1, 1) Тогда
							Продолжить; 
						КонецЕсли;
						
						НераспределенныеПосадочныеМеста = НераспределенныеПосадочныеМеста - 1;
						Если НераспределенныеПосадочныеМеста < 0 Тогда
							Прервать;	
						КонецЕсли;
						
						СтруктураЗаписи = ПолучитьСтруктуруЗаписи(ЭтоТипМассиваДанных, МассивДанных, КлючиСтруктуры);
						ЗаполнитьЗначенияСвойств(СтруктураЗаписи, СтрокаДетальныеЗаписи);
						СтруктураЗаписи.МинимальныйЗапас = СтрокаДетальныеЗаписи.МинимальныйЗапас;
						СтруктураЗаписи.МаксимальныйЗапас = СтрокаДетальныеЗаписи.МаксимальныйЗапас;
						СтруктураЗаписи.КоличествоКПоставке = СтрокаДетальныеЗаписи.МаксимальныйЗапас;
						
						Если СтрокаДетальныеЗаписи.ЕстьНаРаспределительныхСкладах >= СтрокаДетальныеЗаписи.МаксимальныйЗапас Тогда
							СтруктураЗаписи.ДанныеДерева = "Готово для перемещения";
						Иначе
							СтруктураЗаписи.ДанныеДерева = "Нужно заказать у поставщика";	
						КонецЕсли;
						
						ВставитьЭлементВМассивДанных(ЭтоТипМассиваДанных, МассивДанных, СтруктураЗаписи);
						
					КонецЦикла;
					
				//КонецЕсли;
				
			КонецЦикла;
			
			
			// Обходим товары по актуальности на распределительных складах
			Для каждого СтрокаПодчиненные Из РезультатПоискаПодчиненные Цикл
				
				//МинимальныйЗапас = ?(ЗапасИзРодителя, СтрокаРодитель.МинимальныйЗапас, СтрокаПодчиненные.МинимальныйЗапас);
				//МаксимальныйЗапас = ?(ЗапасИзРодителя, СтрокаРодитель.МаксимальныйЗапас, СтрокаПодчиненные.МаксимальныйЗапас);
				//Если МаксимальныйЗапас > 0 Тогда
				    
					ЗаполнитьЗначенияСвойств(ПараметрыОтбораДетальныеЗаписи, СтрокаПодчиненные, , "ПосадочныеМеста, КоличествоАртикулов");	
					РезультатПоискаПоДетальнымЗаписям = ВыгрузкаДетальныеЗаписи.НайтиСтроки(ПараметрыОтбораДетальныеЗаписи);
					Для Каждого СтрокаДетальныеЗаписи ИЗ РезультатПоискаПоДетальнымЗаписям Цикл
						
						Если СтрокаДетальныеЗаписи.ЕстьНаРаспределительныхСкладах <> 0
						 ИЛИ СтрокаДетальныеЗаписи.ЕстьВозможностьЗаказа = Дата(1, 1, 1) Тогда
							Продолжить; 
						КонецЕсли;
						
						НераспределенныеПосадочныеМеста = НераспределенныеПосадочныеМеста - 1;
						Если НераспределенныеПосадочныеМеста < 0 Тогда
							Прервать;	
						КонецЕсли;
						
	
						СтруктураЗаписи = ПолучитьСтруктуруЗаписи(ЭтоТипМассиваДанных, МассивДанных, КлючиСтруктуры);						
						ЗаполнитьЗначенияСвойств(СтруктураЗаписи, СтрокаДетальныеЗаписи);
						СтруктураЗаписи.МинимальныйЗапас = СтрокаДетальныеЗаписи.МинимальныйЗапас;
						СтруктураЗаписи.МаксимальныйЗапас = СтрокаДетальныеЗаписи.МаксимальныйЗапас;
						СтруктураЗаписи.КоличествоКПоставке = СтрокаДетальныеЗаписи.МаксимальныйЗапас;
						
						Если СтрокаДетальныеЗаписи.ЕстьНаРаспределительныхСкладах >= СтрокаДетальныеЗаписи.МаксимальныйЗапас Тогда
							СтруктураЗаписи.ДанныеДерева = "Готово для перемещения";
						Иначе
							СтруктураЗаписи.ДанныеДерева = "Нужно заказать у поставщика";	
						КонецЕсли;
						
						ВставитьЭлементВМассивДанных(ЭтоТипМассиваДанных, МассивДанных, СтруктураЗаписи);
						
					КонецЦикла;
					
				//КонецЕсли;
				
			КонецЦикла;
			
			Если НераспределенныеПосадочныеМеста > 0 Тогда
				СтруктураЗаписи = ПолучитьСтруктуруЗаписи(ЭтоТипМассиваДанных, МассивДанных, КлючиСтруктуры);
				ЗаполнитьЗначенияСвойств(СтруктураЗаписи, СтрокаРодитель);
				СтруктураЗаписи.ДанныеДерева = "Недостаточно артикулов на складе\под заказ для заполнению матрицы (" + НераспределенныеПосадочныеМеста + ")";
				ДобавитьЭлементВМассивДанных(ЭтоТипМассиваДанных, МассивДанных, СтруктураЗаписи);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры // ЗаполнитьМассивДанныхТоваровКПриездуПоАртикуламПоДереву()

Процедура ВставитьЭлементВМассивДанных(ЭтоТипМассиваДанных, МассивДанных, СтруктураЗаписи)
	
	Если ЭтоТипМассиваДанных Тогда
		МассивДанных.Вставить(0, СтруктураЗаписи);
	КонецЕсли;
	
КонецПроцедуры // ВставитьЭлементВМассивДанных

Процедура ДобавитьЭлементВМассивДанных(ЭтоТипМассиваДанных, МассивДанных, СтруктураЗаписи)
	
	Если ЭтоТипМассиваДанных Тогда
		МассивДанных.Добавить(СтруктураЗаписи);
	КонецЕсли;
	
КонецПроцедуры // ДобавитьЭлементВМассивДанных

Функция ПолучитьСтруктуруЗаписи(ЭтоТипМассиваДанных, МассивДанных, КлючиСтруктуры)
	
	Если ЭтоТипМассиваДанных Тогда
		СтруктураЗаписи = Новый Структура(КлючиСтруктуры);
	Иначе
		СтруктураЗаписи = МассивДанных.Добавить();		
	КонецЕсли;
	
	Возврат СтруктураЗаписи;
	
КонецФункции // ПолучитьСтруктуруЗаписи()





Функция ПолучитьТекстЗапросаАналитическихДанных()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ
		|	АналитикаУчетаНоменклатуры.Ссылка КАК АналитикаУчетаНоменклатуры,
		|	АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	АналитикаУчетаНоменклатуры.Склад КАК Склад
		|ПОМЕСТИТЬ КешАналитикаУчетаНоменклатуры
		|ИЗ
		|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ГДЕ
		|	АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры = &ВидНоменклатуры
		|И	ВЫБОР
		|		КОГДА &ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|			ТОГДА Истина
		|		ИНАЧЕ АналитикаУчетаНоменклатуры.Номенклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|	КОНЕЦ
		|И	ВЫБОР
		|		КОГДА &Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|			ТОГДА Истина
		|		ИНАЧЕ АналитикаУчетаНоменклатуры.Номенклатура.Производитель = &Производитель
		|	КОНЕЦ
		|И	ВЫБОР
		|		КОГДА &Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА Истина
		|		ИНАЧЕ АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура
		|	КОНЕЦ			
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1. Продажи по неделям
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АналитикаУчетаНоменклатуры.Склад 						КАК Склад,
		|	СУММА(КоличествоОборот) 								КАК ПродажиНеделя,
		|	КОЛИЧЕСТВО(АналитикаУчетаНоменклатуры.Номенклатура) 	КАК ПродажиНеделяПоАртикулам
		|ПОМЕСТИТЬ ПродажиПоНеделям
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериодаНеделя, &КонецПериода, , АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие))
		|
		|СГРУППИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры.Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2. Продажи по неделям "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склад							КАК Склад,
		|	Сумма(НаличиеПодЗаказРасход)   	КАК ПродажиНеделяПодЗаказ
		|ПОМЕСТИТЬ ПродажиПоНеделямПодЗаказ
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериодаНеделя, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры))
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3. Продажи по 2-х неделям
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АналитикаУчетаНоменклатуры.Склад 						КАК Склад,
		|	СУММА(КоличествоОборот) 								КАК Продажи2Недели,
		|	КОЛИЧЕСТВО(АналитикаУчетаНоменклатуры.Номенклатура) 	КАК Продажи2НеделиПоАртикулам
		|ПОМЕСТИТЬ Продажи2ПоНеделям
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериода2Недели, &КонецПериода, , АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие))
		|
		|СГРУППИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры.Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4. Продажи по 2-х неделям "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склад							КАК Склад,
		|	Сумма(НаличиеПодЗаказРасход)   	КАК Продажи2НеделиПодЗаказ
		|ПОМЕСТИТЬ ПродажиПо2НеделямПодЗаказ
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериода2Недели, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры))
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5. Продажи за месяц
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АналитикаУчетаНоменклатуры.Склад 						КАК Склад,
		|	СУММА(КоличествоОборот) 							КАК ПродажиМесяц,
		|	КОЛИЧЕСТВО(АналитикаУчетаНоменклатуры.Номенклатура) КАК ПродажиМесяцПоАртикулам
		|ПОМЕСТИТЬ ПродажиЗаМесяц
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериодаМесяц, &КонецПериода, ,  АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие))
		|
		|СГРУППИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры.Склад	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6. Продажи за месяц "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склад							КАК Склад,
		|	Сумма(НаличиеПодЗаказРасход)   	КАК ПродажиМесяцПодЗаказ
		|ПОМЕСТИТЬ ПродажиЗаМесяцПодЗаказ
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериодаМесяц, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры))
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7. Продажи за квартал
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АналитикаУчетаНоменклатуры.Склад 					КАК Склад,
		|	СУММА(КоличествоОборот) 							КАК ПродажиКвартал,
		|	КОЛИЧЕСТВО(АналитикаУчетаНоменклатуры.Номенклатура) КАК ПродажиКварталПоАртикулам
		|ПОМЕСТИТЬ ПродажиЗаКвартал
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериодаКвартал, &КонецПериода, ,  АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие))
		|
		|СГРУППИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры.Склад	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8. Продажи за квартал "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склад							КАК Склад,
		|	Сумма(НаличиеПодЗаказРасход)   	КАК ПродажиКварталПодЗаказ
		|ПОМЕСТИТЬ ПродажиЗаКварталПодЗаказ
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериодаКвартал, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры))
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 9.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	%1
		|	СУММА(ОстаткиНаСкладе.ВНаличииОстаток) КАК НаСкладе,
		|
		|	СУММА(ПродажиПоНеделям.ПродажиНеделя) КАК ПродажиНеделя,
		|	СУММА(ПродажиПоНеделям.ПродажиНеделяПоАртикулам) КАК ПродажиНеделяПоАртикулам,
		|	СУММА(ПродажиПоНеделямПодЗаказ.ПродажиНеделяПодЗаказ) КАК ПродажиНеделяПодЗаказ,
		|	ВЫБОР
		|		КОГДА СУММА(ОстаткиНаСкладе.ВНаличииОстаток) > 0
		|		ТОГДА СУММА(ПродажиПоНеделям.ПродажиНеделя) * 4 / СУММА(ОстаткиНаСкладе.ВНаличииОстаток)
		|		ИНАЧЕ ""—""
		|	КОНЕЦ КАК ПродажиНеделяОборачиваемость,
		|	ВЫБОР
		|		КОГДА СУММА(Продажи2ПоНеделям.Продажи2Недели) > 0
		|		ТОГДА (СУММА(ПродажиПоНеделям.ПродажиНеделя) * 2 / СУММА(Продажи2ПоНеделям.Продажи2Недели) - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПродажиНеделяРост,
		|
		|
		|	СУММА(Продажи2ПоНеделям.Продажи2Недели) КАК Продажи2Недели,
		|	СУММА(Продажи2ПоНеделям.Продажи2НеделиПоАртикулам) КАК Продажи2НеделиПоАртикулам,
		|	СУММА(ПродажиПо2НеделямПодЗаказ.Продажи2НеделиПодЗаказ) КАК Продажи2НеделиПодЗаказ,
		|	ВЫБОР
		|		КОГДА СУММА(ОстаткиНаСкладе.ВНаличииОстаток) > 0
		|		ТОГДА СУММА(Продажи2ПоНеделям.Продажи2Недели) * 2 / СУММА(ОстаткиНаСкладе.ВНаличииОстаток)
		|		ИНАЧЕ ""—""
		|	КОНЕЦ КАК Продажи2НеделиОборачиваемость,
		|	ВЫБОР
		|		КОГДА СУММА(ПродажиЗаМесяц.ПродажиМесяц) > 0
		|		ТОГДА (СУММА(Продажи2ПоНеделям.Продажи2Недели) * 2 / СУММА(ПродажиЗаМесяц.ПродажиМесяц) - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Продажи2НеделиРост,
		|
		|
		|	СУММА(ПродажиЗаМесяц.ПродажиМесяц) КАК ПродажиМесяц,
		|	СУММА(ПродажиЗаМесяц.ПродажиМесяцПоАртикулам) КАК ПродажиМесяцПоАртикулам,
		|	СУММА(ПродажиЗаМесяцПодЗаказ.ПродажиМесяцПодЗаказ) КАК ПродажиМесяцПодЗаказ,
		|	ВЫБОР
		|		КОГДА СУММА(ОстаткиНаСкладе.ВНаличииОстаток) > 0
		|		ТОГДА СУММА(ПродажиЗаМесяц.ПродажиМесяц) / СУММА(ОстаткиНаСкладе.ВНаличииОстаток)
		|		ИНАЧЕ ""—""
		|	КОНЕЦ КАК ПродажиМесяцОборачиваемость,
		|	ВЫБОР
		|		КОГДА СУММА(ПродажиЗаКвартал.ПродажиКвартал) > 0
		|		ТОГДА (СУММА(ПродажиЗаМесяц.ПродажиМесяц) * 3 / СУММА(ПродажиЗаКвартал.ПродажиКвартал) - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПродажиМесяцРост,
		|
		|
		|	СУММА(ПродажиЗаКвартал.ПродажиКвартал) КАК ПродажиКвартал,
		|	СУММА(ПродажиЗаКвартал.ПродажиКварталПоАртикулам) КАК ПродажиКварталПоАртикулам,
		|	СУММА(ПродажиЗаКварталПодЗаказ.ПродажиКварталПодЗаказ) КАК ПродажиКварталПодЗаказ,
		|	ВЫБОР
		|		КОГДА СУММА(ОстаткиНаСкладе.ВНаличииОстаток) > 0
		|		ТОГДА СУММА(ПродажиЗаКвартал.ПродажиКвартал) / 3 / СУММА(ОстаткиНаСкладе.ВНаличииОстаток)
		|		ИНАЧЕ ""—""
		|	КОНЕЦ КАК ПродажиКварталОборачиваемость
		|
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК Склады
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(, (Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры)) КАК ОстаткиНаСкладе
		|ПО ОстаткиНаСкладе.Склад = Склады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоНеделям КАК ПродажиПоНеделям
		|ПО ПродажиПоНеделям.Склад = Склады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоНеделямПодЗаказ КАК ПродажиПоНеделямПодЗаказ
		|ПО ПродажиПоНеделямПодЗаказ.Склад = Склады.Склад
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ Продажи2ПоНеделям КАК Продажи2ПоНеделям
		|ПО Продажи2ПоНеделям.Склад = Склады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПо2НеделямПодЗаказ КАК ПродажиПо2НеделямПодЗаказ
		|ПО ПродажиПо2НеделямПодЗаказ.Склад = Склады.Склад
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаМесяц КАК ПродажиЗаМесяц
		|ПО ПродажиЗаМесяц.Склад = Склады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаМесяцПодЗаказ КАК ПродажиЗаМесяцПодЗаказ
		|ПО ПродажиЗаМесяцПодЗаказ.Склад = Склады.Склад
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаКвартал КАК ПродажиЗаКвартал
		|ПО ПродажиЗаКвартал.Склад = Склады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаКварталПодЗаказ КАК ПродажиЗаКварталПодЗаказ
		|ПО ПродажиЗаКварталПодЗаказ.Склад = Склады.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	%2	
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПродажиКвартал Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешАналитикаУчетаНоменклатуры;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиПоНеделям;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиПоНеделямПодЗаказ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Продажи2ПоНеделям;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиПо2НеделямПодЗаказ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаМесяц;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаМесяцПодЗаказ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаКвартал;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаКварталПодЗаказ;
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаАналитическихДанных()

Функция ПолучитьТекстЗапросаАналитикаТоварыКОтъезду()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0. Получаем свободные остатки по магазину
		|ВЫБРАТЬ
		|	СвободныеОстатки.Номенклатура КАК Номенклатура,
		|	СвободныеОстатки.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СвободныеОстатки.Номенклатура.Производитель КАК Производитель,
		|	СвободныеОстатки.Характеристика КАК Характеристика,
		|	СвободныеОстатки.Склад			КАК Склад,
		|	СвободныеОстатки.ВНаличииОстаток 
		|  - СвободныеОстатки.ВРезервеОстаток КАК СвободныйОстаток
		|ПОМЕСТИТЬ КешСвободныхОстатков
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(, %1 ) КАК СвободныеОстатки
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1. Товары без заполненной товарной категории
		|ВЫБРАТЬ
		|	КешСвободныхОстатков.Склад				КАК Склад,
		|	КешСвободныхОстатков.ВидНоменклатуры	КАК ВидНоменклатуры,
		|	КешСвободныхОстатков.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	КешСвободныхОстатков.Производитель		КАК Производитель,
		|	КешСвободныхОстатков.Номенклатура		КАК Номенклатура,
		|	КешСвободныхОстатков.Характеристика		КАК Характеристика,
		|	КешСвободныхОстатков.СвободныйОстаток	КАК СвободныйОстаток,
		|	""Товарная категория не заполнена!""	КАК	ПричинаОтъезда
		|ПОМЕСТИТЬ КешТкПустая
		|ИЗ
		|	КешСвободныхОстатков КАК КешСвободныхОстатков
		|ГДЕ
		|	КешСвободныхОстатков.ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|И	КешСвободныхОстатков.Производитель	  <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2. Товары без заполненного производителя
		|ВЫБРАТЬ
		|	КешСвободныхОстатков.Склад				КАК Склад,
		|	КешСвободныхОстатков.ВидНоменклатуры	КАК ВидНоменклатуры,
		|	КешСвободныхОстатков.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	КешСвободныхОстатков.Производитель		КАК Производитель,
		|	КешСвободныхОстатков.Номенклатура		КАК Номенклатура,
		|	КешСвободныхОстатков.Характеристика		КАК Характеристика,
		|	КешСвободныхОстатков.СвободныйОстаток	КАК СвободныйОстаток,
		|	""Производитель не заполнен!""			КАК	ПричинаОтъезда
		|ПОМЕСТИТЬ КешПрПустая
		|ИЗ
		|	КешСвободныхОстатков КАК КешСвободныхОстатков
		|ГДЕ
		|	КешСвободныхОстатков.ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|И	КешСвободныхОстатков.Производитель	    = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3. Товары без заполненного производителя и товарной категории
		|ВЫБРАТЬ
		|	КешСвободныхОстатков.Склад				КАК Склад,
		|	КешСвободныхОстатков.ВидНоменклатуры	КАК ВидНоменклатуры,
		|	КешСвободныхОстатков.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	КешСвободныхОстатков.Производитель		КАК Производитель,
		|	КешСвободныхОстатков.Номенклатура		КАК Номенклатура,
		|	КешСвободныхОстатков.Характеристика		КАК Характеристика,
		|	КешСвободныхОстатков.СвободныйОстаток	КАК СвободныйОстаток,
		|	""Производитель и товарная категория не заполнены!"" КАК ПричинаОтъезда
		|ПОМЕСТИТЬ КешТкПрПустая
		|ИЗ
		|	КешСвободныхОстатков КАК КешСвободныхОстатков
		|ГДЕ
		|	КешСвободныхОстатков.ТоварнаяКатегория  = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|И	КешСвободныхОстатков.Производитель	    = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4. Исключенный ассортимент магазина
		|ВЫБРАТЬ
		|	УАМ.Склад,
		|	УАМ.ВидНоменклатуры,
		|	УАМ.ТоварнаяКатегория,
		|	УАМ.Производитель,
		|	УАМ.Номенклатура,
		|	УАМ.Исключено
		|ПОМЕСТИТЬ НастройкиИсключеноИзАссортимента
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, %2 ) КАК УАМ
		|ГДЕ
		|	УАМ.Исключено = Истина
		|И	УАМ.КонтрольМатрицейОтключен = Ложь
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5. Контроль отключен по управлению ассортиментом
		|ВЫБРАТЬ
		|	УАМ.Склад,
		|	УАМ.ВидНоменклатуры,
		|	УАМ.ТоварнаяКатегория,
		|	УАМ.Производитель,
		|	УАМ.Номенклатура,
		|	УАМ.КонтрольМатрицейОтключен
		|ПОМЕСТИТЬ НастройкиОтключенКонтроль
		|ИЗ                                                                            
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, %2 ) КАК УАМ
		|ГДЕ
		|	УАМ.КонтрольМатрицейОтключен = Истина	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.
		|ВЫБРАТЬ
		|	КешСвободныхОстатков.Склад				КАК Склад,
		|	КешСвободныхОстатков.ВидНоменклатуры	КАК ВидНоменклатуры,
		|	КешСвободныхОстатков.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	КешСвободныхОстатков.Производитель		КАК Производитель,
		|	КешСвободныхОстатков.Номенклатура		КАК Номенклатура,
		|	КешСвободныхОстатков.Характеристика		КАК Характеристика,
		|	КешСвободныхОстатков.СвободныйОстаток	КАК СвободныйОстаток,
		|	""Товар исключен из матрицы магазина!"" КАК ПричинаОтъезда		
		|ПОМЕСТИТЬ КешИсключеноИзАссортимента	
		|ИЗ
		|	КешСвободныхОстатков КАК КешСвободныхОстатков
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиИсключеноИзАссортимента КАК ИсключеноПоВидуНоменклатуры
		|ПО	ИсключеноПоВидуНоменклатуры.Склад 				= КешСвободныхОстатков.Склад 
		|И	ИсключеноПоВидуНоменклатуры.ВидНоменклатуры 	= КешСвободныхОстатков.ВидНоменклатуры
		|И	ИсключеноПоВидуНоменклатуры.ТоварнаяКатегория 	= ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|И	ИсключеноПоВидуНоменклатуры.Производитель 		= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|И	ИсключеноПоВидуНоменклатуры.Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиИсключеноИзАссортимента КАК ИсключеноПоТоварнойКатегории
		|ПО	ИсключеноПоТоварнойКатегории.Склад 				= КешСвободныхОстатков.Склад 
		|И	ИсключеноПоТоварнойКатегории.ВидНоменклатуры 	= КешСвободныхОстатков.ВидНоменклатуры
		|И	ИсключеноПоТоварнойКатегории.ТоварнаяКатегория 	= КешСвободныхОстатков.ТоварнаяКатегория
		|И	ИсключеноПоТоварнойКатегории.Производитель 		= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|И	ИсключеноПоТоварнойКатегории.Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиИсключеноИзАссортимента КАК ИсключеноПоПроизводителю
		|ПО	ИсключеноПоПроизводителю.Склад 				= КешСвободныхОстатков.Склад 
		|И	ИсключеноПоПроизводителю.ВидНоменклатуры 	= КешСвободныхОстатков.ВидНоменклатуры
		|И	ИсключеноПоПроизводителю.ТоварнаяКатегория 	= КешСвободныхОстатков.ТоварнаяКатегория
		|И	ИсключеноПоПроизводителю.Производитель 		= КешСвободныхОстатков.Производитель
		|И	ИсключеноПоПроизводителю.Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиИсключеноИзАссортимента КАК ИсключеноПоНоменклатуре
		|ПО	ИсключеноПоНоменклатуре.Склад 				= КешСвободныхОстатков.Склад 
		|И	ИсключеноПоНоменклатуре.ВидНоменклатуры 	= КешСвободныхОстатков.ВидНоменклатуры
		|И	ИсключеноПоНоменклатуре.ТоварнаяКатегория 	= КешСвободныхОстатков.ТоварнаяКатегория
		|И	ИсключеноПоНоменклатуре.Производитель 		= КешСвободныхОстатков.Производитель
		|И	ИсключеноПоНоменклатуре.Номенклатура 		= КешСвободныхОстатков.Номенклатура
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиОтключенКонтроль КАК ОтключеноПоВидуНоменклатуры
		|ПО	ОтключеноПоВидуНоменклатуры.Склад 				= КешСвободныхОстатков.Склад 
		|И	ОтключеноПоВидуНоменклатуры.ВидНоменклатуры 	= КешСвободныхОстатков.ВидНоменклатуры
		|И	ОтключеноПоВидуНоменклатуры.ТоварнаяКатегория 	= ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|И	ОтключеноПоВидуНоменклатуры.Производитель 		= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|И	ОтключеноПоВидуНоменклатуры.Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиОтключенКонтроль КАК ОтключеноПоТоварнойКатегории
		|ПО	ОтключеноПоТоварнойКатегории.Склад 				= КешСвободныхОстатков.Склад 
		|И	ОтключеноПоТоварнойКатегории.ВидНоменклатуры 	= КешСвободныхОстатков.ВидНоменклатуры
		|И	ОтключеноПоТоварнойКатегории.ТоварнаяКатегория 	= КешСвободныхОстатков.ТоварнаяКатегория
		|И	ОтключеноПоТоварнойКатегории.Производитель 		= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|И	ОтключеноПоТоварнойКатегории.Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиОтключенКонтроль КАК ОтключеноПоПроизводителю
		|ПО	ОтключеноПоПроизводителю.Склад 				= КешСвободныхОстатков.Склад 
		|И	ОтключеноПоПроизводителю.ВидНоменклатуры 	= КешСвободныхОстатков.ВидНоменклатуры
		|И	ОтключеноПоПроизводителю.ТоварнаяКатегория 	= КешСвободныхОстатков.ТоварнаяКатегория
		|И	ОтключеноПоПроизводителю.Производитель 		= КешСвободныхОстатков.Производитель
		|И	ОтключеноПоПроизводителю.Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиОтключенКонтроль КАК ОтключеноПоНоменклатуре
		|ПО	ОтключеноПоНоменклатуре.Склад 				= КешСвободныхОстатков.Склад 
		|И	ОтключеноПоНоменклатуре.ВидНоменклатуры 	= КешСвободныхОстатков.ВидНоменклатуры
		|И	ОтключеноПоНоменклатуре.ТоварнаяКатегория 	= КешСвободныхОстатков.ТоварнаяКатегория
		|И	ОтключеноПоНоменклатуре.Производитель 		= КешСвободныхОстатков.Производитель
		|И	ОтключеноПоНоменклатуре.Номенклатура 		= КешСвободныхОстатков.Номенклатура
		|   
		|ГДЕ
		|	КешСвободныхОстатков.ТоварнаяКатегория  <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|И	КешСвободныхОстатков.Производитель	    <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|И 	ВЫБОР
		|		КОГДА IsNull(ОтключеноПоВидуНоменклатуры.КонтрольМатрицейОтключен, ЛОЖЬ) = ИСТИНА
		|			ТОГДА ЛОЖЬ
		|		КОГДА IsNull(ОтключеноПоТоварнойКатегории.КонтрольМатрицейОтключен, ЛОЖЬ) = ИСТИНА
		|			ТОГДА ЛОЖЬ
		|		КОГДА IsNull(ОтключеноПоПроизводителю.КонтрольМатрицейОтключен, ЛОЖЬ) = ИСТИНА
		|			ТОГДА ЛОЖЬ
		|		КОГДА IsNull(ОтключеноПоНоменклатуре.КонтрольМатрицейОтключен, ЛОЖЬ) = ИСТИНА
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|И	ВЫБОР
		|		КОГДА IsNull(ИсключеноПоВидуНоменклатуры.Исключено, ЛОЖЬ) = ИСТИНА
		|			ТОГДА ИСТИНА
		|		КОГДА IsNull(ИсключеноПоТоварнойКатегории.Исключено, ЛОЖЬ) = ИСТИНА
		|			ТОГДА ИСТИНА
		|		КОГДА IsNull(ИсключеноПоПроизводителю.Исключено, ЛОЖЬ) = ИСТИНА
		|			ТОГДА ИСТИНА
		|		КОГДА IsNull(ИсключеноПоНоменклатуре.Исключено, ЛОЖЬ) = ИСТИНА
		|			ТОГДА ИСТИНА		
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НастройкиОтключенКонтроль;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НастройкиИсключеноИзАссортимента;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7.
		|ВЫБРАТЬ
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура,
		|	МинимальныйЗапас,
		|	МаксимальныйЗапас,	
		|	Исключено,
		|	КонтрольМатрицейОтключен
		|ПОМЕСТИТЬ НастройкиПерегрузАссортимента
		|ИЗ                                                                           
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, %2 )	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8.
		|ВЫБРАТЬ
		|	КешСвободныхОстатков.Склад				КАК Склад,
		|	КешСвободныхОстатков.ВидНоменклатуры	КАК ВидНоменклатуры,
		|	КешСвободныхОстатков.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	КешСвободныхОстатков.Производитель		КАК Производитель,
		|	КешСвободныхОстатков.Номенклатура		КАК Номенклатура,
		|	КешСвободныхОстатков.Характеристика		КАК Характеристика,
		|	КешСвободныхОстатков.СвободныйОстаток	КАК СвободныйОстаток,
		|	ВЫБОР
		|		КОГДА IsNull(НеВАссортиментеПоНоменклатуре.МинимальныйЗапас, 0) <> 0
		|		  ИЛИ IsNull(НеВАссортиментеПоНоменклатуре.МаксимальныйЗапас, 0)<> 0		
		|			ТОГДА НеВАссортиментеПоНоменклатуре.МинимальныйЗапас
		|		КОГДА IsNull(НеВАссортиментеПоПроизводителю.МинимальныйЗапас, 0) <> 0
		|		  ИЛИ IsNull(НеВАссортиментеПоПроизводителю.МаксимальныйЗапас, 0)<> 0
		|			ТОГДА НеВАссортиментеПоПроизводителю.МинимальныйЗапас
		|		КОГДА IsNull(НеВАссортиментеПоТоварнойКатегории.МинимальныйЗапас, 0) <> 0
		|		  ИЛИ IsNull(НеВАссортиментеПоТоварнойКатегории.МаксимальныйЗапас, 0)<> 0
		|			ТОГДА НеВАссортиментеПоТоварнойКатегории.МинимальныйЗапас
		|		КОГДА IsNull(НеВАссортиментеПоВидуНоменклатуры.МинимальныйЗапас, 0) <> 0
		|		  ИЛИ IsNull(НеВАссортиментеПоВидуНоменклатуры.МаксимальныйЗапас, 0)<> 0
		|			ТОГДА НеВАссортиментеПоВидуНоменклатуры.МинимальныйЗапас
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ КАК МинимальныйЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(НеВАссортиментеПоНоменклатуре.МинимальныйЗапас, 0) <> 0
		|		  ИЛИ IsNull(НеВАссортиментеПоНоменклатуре.МаксимальныйЗапас, 0)<> 0
		|			ТОГДА НеВАссортиментеПоНоменклатуре.МаксимальныйЗапас
		|		КОГДА IsNull(НеВАссортиментеПоПроизводителю.МинимальныйЗапас, 0) <> 0
		|		  ИЛИ IsNull(НеВАссортиментеПоПроизводителю.МаксимальныйЗапас, 0)<> 0
		|			ТОГДА НеВАссортиментеПоПроизводителю.МаксимальныйЗапас
		|		КОГДА IsNull(НеВАссортиментеПоТоварнойКатегории.МинимальныйЗапас, 0) <> 0
		|		  ИЛИ IsNull(НеВАссортиментеПоТоварнойКатегории.МаксимальныйЗапас, 0)<> 0
		|			ТОГДА НеВАссортиментеПоТоварнойКатегории.МаксимальныйЗапас
		|		КОГДА IsNull(НеВАссортиментеПоВидуНоменклатуры.МинимальныйЗапас, 0) <> 0
		|		  ИЛИ IsNull(НеВАссортиментеПоВидуНоменклатуры.МаксимальныйЗапас, 0)<> 0
		|			ТОГДА НеВАссортиментеПоВидуНоменклатуры.МаксимальныйЗапас
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ КАК МаксимальныйЗапас,
		|	""Товара больше чем мин.\макс. запас в матрице магазина!"" КАК ПричинаОтъезда	
		| 		 
		|ПОМЕСТИТЬ КешПерегрузАссортимента	
		|ИЗ
		|	КешСвободныхОстатков КАК КешСвободныхОстатков
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПерегрузАссортимента КАК НеВАссортиментеПоВидуНоменклатуры
		|ПО	НеВАссортиментеПоВидуНоменклатуры.Склад = КешСвободныхОстатков.Склад 
		|И	НеВАссортиментеПоВидуНоменклатуры.ВидНоменклатуры = КешСвободныхОстатков.ВидНоменклатуры
		|И	НеВАссортиментеПоВидуНоменклатуры.ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|И	НеВАссортиментеПоВидуНоменклатуры.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|И	НеВАссортиментеПоВидуНоменклатуры.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПерегрузАссортимента КАК НеВАссортиментеПоТоварнойКатегории
		|ПО	НеВАссортиментеПоТоварнойКатегории.Склад = КешСвободныхОстатков.Склад 
		|И	НеВАссортиментеПоТоварнойКатегории.ВидНоменклатуры = КешСвободныхОстатков.ВидНоменклатуры 
		|И	НеВАссортиментеПоТоварнойКатегории.ТоварнаяКатегория = КешСвободныхОстатков.ТоварнаяКатегория
		|И	НеВАссортиментеПоТоварнойКатегории.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|И	НеВАссортиментеПоТоварнойКатегории.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПерегрузАссортимента КАК НеВАссортиментеПоПроизводителю
		|ПО	НеВАссортиментеПоПроизводителю.Склад = КешСвободныхОстатков.Склад 
		|И	НеВАссортиментеПоПроизводителю.ВидНоменклатуры = КешСвободныхОстатков.ВидНоменклатуры 
		|И	НеВАссортиментеПоПроизводителю.ТоварнаяКатегория = КешСвободныхОстатков.ТоварнаяКатегория
		|И	НеВАссортиментеПоПроизводителю.Производитель = КешСвободныхОстатков.Производитель
		|И	НеВАссортиментеПоПроизводителю.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПерегрузАссортимента КАК НеВАссортиментеПоНоменклатуре
		|ПО	НеВАссортиментеПоНоменклатуре.Склад = КешСвободныхОстатков.Склад 
		|И	НеВАссортиментеПоНоменклатуре.ВидНоменклатуры = КешСвободныхОстатков.ВидНоменклатуры 
		|И	НеВАссортиментеПоНоменклатуре.ТоварнаяКатегория = КешСвободныхОстатков.ТоварнаяКатегория
		|И	НеВАссортиментеПоНоменклатуре.Производитель = КешСвободныхОстатков.Производитель
		|И	НеВАссортиментеПоНоменклатуре.Номенклатура = КешСвободныхОстатков.Номенклатура
		|    
		|ГДЕ
		|	КешСвободныхОстатков.ТоварнаяКатегория  <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|И	КешСвободныхОстатков.Производитель	    <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|И	ВЫБОР
		|		КОГДА IsNull(НеВАссортиментеПоНоменклатуре.Исключено, ЛОЖЬ) <> ЛОЖЬ
		|			ТОГДА НеВАссортиментеПоНоменклатуре.Исключено
		|		КОГДА IsNull(НеВАссортиментеПоПроизводителю.Исключено, ЛОЖЬ) <> ЛОЖЬ
		|			ТОГДА НеВАссортиментеПоПроизводителю.Исключено
		|		КОГДА IsNull(НеВАссортиментеПоТоварнойКатегории.Исключено, ЛОЖЬ) <> ЛОЖЬ
		|			ТОГДА НеВАссортиментеПоТоварнойКатегории.Исключено
		|		КОГДА IsNull(НеВАссортиментеПоВидуНоменклатуры.Исключено, ЛОЖЬ) <> ЛОЖЬ
		|			ТОГДА НеВАссортиментеПоВидуНоменклатуры.Исключено
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ = ЛОЖЬ
		|И	ВЫБОР
		|		КОГДА IsNull(НеВАссортиментеПоНоменклатуре.КонтрольМатрицейОтключен, ЛОЖЬ) <> ЛОЖЬ
		|			ТОГДА НеВАссортиментеПоНоменклатуре.КонтрольМатрицейОтключен
		|		КОГДА IsNull(НеВАссортиментеПоПроизводителю.КонтрольМатрицейОтключен, ЛОЖЬ) <> ЛОЖЬ
		|			ТОГДА НеВАссортиментеПоПроизводителю.КонтрольМатрицейОтключен
		|		КОГДА IsNull(НеВАссортиментеПоТоварнойКатегории.КонтрольМатрицейОтключен, ЛОЖЬ) <> ЛОЖЬ
		|			ТОГДА НеВАссортиментеПоТоварнойКатегории.КонтрольМатрицейОтключен
		|		КОГДА IsNull(НеВАссортиментеПоВидуНоменклатуры.КонтрольМатрицейОтключен, ЛОЖЬ) <> ЛОЖЬ
		|			ТОГДА НеВАссортиментеПоВидуНоменклатуры.КонтрольМатрицейОтключен
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ = ЛОЖЬ
		|	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НастройкиПерегрузАссортимента; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 10.
		|ВЫБРАТЬ
		|	КешПерегрузАссортимента.Склад				КАК Склад,
		|	КешПерегрузАссортимента.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешПерегрузАссортимента.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	КешПерегрузАссортимента.Производитель		КАК Производитель,
		|	КешПерегрузАссортимента.Номенклатура		КАК Номенклатура,
		|	КешПерегрузАссортимента.Характеристика		КАК Характеристика,
		|	ВЫБОР
		|		КОГДА КешПерегрузАссортимента.МаксимальныйЗапас = 0
		|			ТОГДА КешПерегрузАссортимента.СвободныйОстаток - КешПерегрузАссортимента.МинимальныйЗапас
		|		ИНАЧЕ КешПерегрузАссортимента.СвободныйОстаток - КешПерегрузАссортимента.МаксимальныйЗапас
		|	КОНЕЦ КАК Количество,
		|	КешПерегрузАссортимента.ПричинаОтъезда		КАК ПричинаОтъезда
		|ИЗ
		|	КешПерегрузАссортимента КАК КешПерегрузАссортимента
		|ГДЕ
		|	(КешПерегрузАссортимента.МаксимальныйЗапас <> 0
		|  И КешПерегрузАссортимента.СвободныйОстаток > КешПерегрузАссортимента.МаксимальныйЗапас)
		|ИЛИ		
		|  	(КешПерегрузАссортимента.МаксимальныйЗапас = 0
		|  И КешПерегрузАссортимента.СвободныйОстаток > КешПерегрузАссортимента.МинимальныйЗапас)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИсключеноИзАссортимента.Склад,
		|	ИсключеноИзАссортимента.ВидНоменклатуры,
		|	ИсключеноИзАссортимента.ТоварнаяКатегория,
		|	ИсключеноИзАссортимента.Производитель,
		|	ИсключеноИзАссортимента.Номенклатура,
		|	ИсключеноИзАссортимента.Характеристика,
		|	ИсключеноИзАссортимента.СвободныйОстаток,
		|	ИсключеноИзАссортимента.ПричинаОтъезда
		|ИЗ
		|	КешИсключеноИзАссортимента КАК ИсключеноИзАссортимента	
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КешТкПустая.Склад,
		|	КешТкПустая.ВидНоменклатуры,
		|	КешТкПустая.ТоварнаяКатегория,
		|	КешТкПустая.Производитель,
		|	КешТкПустая.Номенклатура,
		|	КешТкПустая.Характеристика,
		|	КешТкПустая.СвободныйОстаток,
		|	КешТкПустая.ПричинаОтъезда
		|ИЗ
		|	КешТкПустая КАК КешТкПустая	
		|
		|ОБЪЕДИНИТЬ ВСЕ 
		|
		|ВЫБРАТЬ
		|	КешПрПустая.Склад,
		|	КешПрПустая.ВидНоменклатуры,
		|	КешПрПустая.ТоварнаяКатегория,
		|	КешПрПустая.Производитель,
		|	КешПрПустая.Номенклатура,
		|	КешПрПустая.Характеристика,
		|	КешПрПустая.СвободныйОстаток,
		|	КешПрПустая.ПричинаОтъезда
		|ИЗ
		|	КешПрПустая КАК КешПрПустая	
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КешТкПрПустая.Склад,
		|	КешТкПрПустая.ВидНоменклатуры,
		|	КешТкПрПустая.ТоварнаяКатегория,
		|	КешТкПрПустая.Производитель,
		|	КешТкПрПустая.Номенклатура,
		|	КешТкПрПустая.Характеристика,
		|	КешТкПрПустая.СвободныйОстаток,
		|	КешТкПрПустая.ПричинаОтъезда
		|ИЗ
		|	КешТкПрПустая КАК КешТкПрПустая
		|	
		|УПОРЯДОЧИТЬ ПО
		|	ВидНоменклатуры Возр		
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешТкПустая; 
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешПрПустая;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешТкПрПустая;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешСвободныхОстатков;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешПерегрузАссортимента;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешИсключеноИзАссортимента;
		|";
	Возврат ТекстЗапроса

КонецФункции // ПолучитьТекстЗапросаАналитикаТоварыКОтъезду()

Функция ПолучитьТекстЗапросаАналитикаТоварыКОтъездуПоАртикулам()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0. Кеш матрицы 
		|ВЫБРАТЬ
		|	Склад КАК Склад,
		|	ВидНоменклатуры КАК ВидНоменклатуры, 
		|	ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Производитель КАК Производитель,
		|	Номенклатура КАК Номенклатура,
		|	
		|	НомерПоПорядку КАК НомерПоПорядку,
		|	
		|	ПосадочныеМеста КАК ПосадочныеМеста,
		|	ОтклонениеКоличествоПМ КАК ОтклонениеКоличествоПМ,
		|	
		|	МинимальныйЗапас КАК МинимальныйЗапас,
		|	СтраховойЗапас КАК СтраховойЗапас,
		|	МаксимальныйЗапас КАК МаксимальныйЗапас,
		|
		|	Исключено КАК Исключено,	
		|	КонтрольМатрицейОтключен КАК КонтрольМатрицейОтключен 
		|	
		|ПОМЕСТИТЬ КешМатрицы
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, Склад = &Склад И ВидНоменклатуры = &ВидНоменклатуры)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1. Данные по видам номенклатуры
		|ВЫБРАТЬ
		|	&Склад КАК Склад,
		|	ВидыНоменклатуры.Ссылка	КАК ВидНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка) КАК ТоварнаяКатегория
		|ПОМЕСТИТЬ КешДанныхПоВидуНоменклатуры
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|
		|ГДЕ
		| 	ВидыНоменклатуры.ЭтоГруппа = Ложь	
		|И	ВидыНоменклатуры.ПометкаУдаления = Ложь
		|И	ВидыНоменклатуры.Ссылка = &ВидНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2. Посадочных мест по виду номенклатуры, отсекаем то что продакт исключил из управления
		|ВЫБРАТЬ
		|	КешДанных.Склад КАК Склад,
		|	КешДанных.ВидНоменклатуры КАК ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	
		|	IsNull(КешМатрицы.ПосадочныеМеста, 0) КАК ПосадочныеМеста
		|		
		|ПОМЕСТИТЬ ПосадочныхМестПоВидуНоменклатуры
		|ИЗ
		|	КешДанныхПоВидуНоменклатуры КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО	КешМатрицы.Склад = КешДанных.Склад
		|И	КешМатрицы.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И	КешМатрицы.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|
		|ГДЕ
		|	IsNull(КешМатрицы.Исключено, Ложь) = Ложь
		|И	IsNull(КешМатрицы.КонтрольМатрицейОтключен, Ложь) = Ложь	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3. Данные по видам товарным категориям, переносим отсечение на подчиненную группу
		|ВЫБРАТЬ
		|	КешДанныхПоВидуНоменклатуры.Склад КАК Склад,
		|	КешДанныхПоВидуНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
		|	ТоварныеКатегории.Ссылка КАК ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка) КАК Производитель
		|	
		|ПОМЕСТИТЬ КешДанныхПоТоварнымКатегориям
		|ИЗ
		|	ПосадочныхМестПоВидуНоменклатуры КАК КешДанныхПоВидуНоменклатуры 	
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|ПО	ТоварныеКатегории.Владелец = КешДанныхПоВидуНоменклатуры.ВидНоменклатуры
		|И	ТоварныеКатегории.ЭтоГруппа = Ложь	
		|И	ТоварныеКатегории.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория, 
		|	Производитель		
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4. Посадочных мест по товарной категории, отсекаем то что продакт исключил из управления
		|ВЫБРАТЬ
		|	КешДанных.Склад КАК Склад,
		|	КешДанных.ВидНоменклатуры КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель КАК Производитель,
		|	
		|	IsNull(ПосадочныеМеста, 0) КАК ПосадочныеМеста,
		|	IsNull(ОтклонениеКоличествоПМ, 0) КАК ОтклонениеКоличествоПМ,
		|	
		|	IsNull(НомерПоПорядку, 0) КАК НомерПоПорядку
		|		
		|ПОМЕСТИТЬ ПосадочныхМестПоТоварнойКатегории
		|ИЗ
		|	КешДанныхПоТоварнымКатегориям КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО	КешМатрицы.Склад = КешДанных.Склад
		|И	КешМатрицы.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И	КешМатрицы.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И	КешМатрицы.Производитель = КешДанных.Производитель
		|
		|ГДЕ
		|	IsNull(КешМатрицы.Исключено, Ложь) = Ложь
		|И	IsNull(КешМатрицы.КонтрольМатрицейОтключен, Ложь) = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5. Данные по производителям, переносим отсечение на подчиненную группу 
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КешДанныхПоТоварнымКатегориям.Склад	КАК Склад,
		|	КешДанныхПоТоварнымКатегориям.ВидНоменклатуры КАК ВидНоменклатуры,
		|	КешДанныхПоТоварнымКатегориям.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СпрНоменклатура.Производитель КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхПоПроизводителям
		|ИЗ
		|	ПосадочныхМестПоТоварнойКатегории КАК КешДанныхПоТоварнымКатегориям
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|ПО СпрНоменклатура.ВидНоменклатуры = КешДанныхПоТоварнымКатегориям.ВидНоменклатуры
		|И	СпрНоменклатура.ТоварнаяКатегория = КешДанныхПоТоварнымКатегориям.ТоварнаяКатегория
		|И	СпрНоменклатура.Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория, 
		|	Производитель,
		|	Номенклатура	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6. Посадочных мест по производителю, отсекаем то что продакт исключил из управления
		|ВЫБРАТЬ
		|	КешДанных.Склад КАК Склад,
		|	КешДанных.ВидНоменклатуры КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель КАК Производитель,
		|	КешДанных.Номенклатура КАК Номенклатура,
		|	
		|	IsNull(ПосадочныеМеста, 0) КАК ПосадочныеМеста,
		|	IsNull(ОтклонениеКоличествоПМ, 0) КАК ОтклонениеКоличествоПМ,
		|	
		|	IsNull(НомерПоПорядку, 0) КАК НомерПоПорядку
		|	
		|ПОМЕСТИТЬ ПосадочныхМестПоПроизводителю
		|ИЗ
		|	КешДанныхПоПроизводителям КАК КешДанных	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО	КешМатрицы.Склад = КешДанных.Склад
		|И	КешМатрицы.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И	КешМатрицы.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И	КешМатрицы.Производитель = КешДанных.Производитель
		|И	КешМатрицы.Номенклатура = КешДанных.Номенклатура
		|
		|ГДЕ
		|	IsNull(КешМатрицы.Исключено, Ложь) = Ложь
		|И	IsNull(КешМатрицы.КонтрольМатрицейОтключен, Ложь) = Ложь
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7. Посадочных мест по товарной категории, отсекаем то что продакт исключил из управления
		|ВЫБРАТЬ 	
		|	КешДанныхПоПроизводителям.Склад	КАК Склад,
		|	КешДанныхПоПроизводителям.ВидНоменклатуры КАК ВидНоменклатуры,
		|	КешДанныхПоПроизводителям.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|	КешДанныхПоПроизводителям.Производитель	КАК Производитель,
		|	СпрНоменклатура.Ссылка КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхПоНоменклатуре
		|ИЗ
		|	ПосадочныхМестПоПроизводителю КАК КешДанныхПоПроизводителям
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|ПО СпрНоменклатура.ВидНоменклатуры = КешДанныхПоПроизводителям.ВидНоменклатуры
		|И	СпрНоменклатура.ТоварнаяКатегория = КешДанныхПоПроизводителям.ТоварнаяКатегория
		|И	СпрНоменклатура.Производитель = КешДанныхПоПроизводителям.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория, 
		|	Производитель,
		|	Номенклатура	
		|;    
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8. Посадочных мест по номенклатуре
		|ВЫБРАТЬ
		|	КешДанных.Склад КАК Склад,
		|	КешДанных.ВидНоменклатуры КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель КАК Производитель,
		|	КешДанных.Номенклатура КАК Номенклатура,
		|	
		|	IsNull(ПосадочныеМеста, 0) КАК ПосадочныеМеста,
		|	0 КАК ОтклонениеКоличествоПМ,
		|	
		|	IsNull(НомерПоПорядку, 0) КАК НомерПоПорядку
		| 	
		|ПОМЕСТИТЬ ПосадочныхМестПоНоменклатуре
		|ИЗ
		|	КешДанныхПоНоменклатуре КАК КешДанных	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО	КешМатрицы.Склад = КешДанных.Склад
		|И	КешМатрицы.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И	КешМатрицы.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И	КешМатрицы.Производитель = КешДанных.Производитель
		|И	КешМатрицы.Номенклатура = КешДанных.Номенклатура
		|
		|ГДЕ
		|	IsNull(КешМатрицы.Исключено, Ложь) = Ложь
		|И	IsNull(КешМатрицы.КонтрольМатрицейОтключен, Ложь) = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешМатрицы;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоВидуНоменклатуры;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоТоварнымКатегориям;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоПроизводителям;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоНоменклатуре;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 14.
		|ВЫБРАТЬ
		|	СвободныеОстатки.Склад КАК Склад,
		|   СвободныеОстатки.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|  	КОЛИЧЕСТВО(СвободныеОстатки.Номенклатура) КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА_ТК
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(, Номенклатура.ВидНоменклатуры = &ВидНоменклатуры И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ПосадочныхМестПоНоменклатуре) И Склад = &Склад) КАК СвободныеОстатки
		|
		|ГДЕ
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	СвободныеОстатки.Склад,
		|	СвободныеОстатки.Номенклатура.ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 15.
		|ВЫБРАТЬ
		|	СвободныеОстатки.Склад КАК Склад,
		|   СвободныеОстатки.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СвободныеОстатки.Номенклатура.Производитель	КАК Производитель,
		|  	КОЛИЧЕСТВО(СвободныеОстатки.Номенклатура) КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА_ПР
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(, Номенклатура.ВидНоменклатуры = &ВидНоменклатуры И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ПосадочныхМестПоНоменклатуре) И Склад = &Склад) КАК СвободныеОстатки
		|
		|ГДЕ
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток > 0
		|	
		|СГРУППИРОВАТЬ ПО
		|	СвободныеОстатки.Склад,
		|	СвободныеОстатки.Номенклатура.ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория,
		|	СвободныеОстатки.Номенклатура.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория, 
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 16.
		|ВЫБРАТЬ
		|	СвободныеОстатки.Склад КАК Склад,
		|   СвободныеОстатки.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СвободныеОстатки.Номенклатура.Производитель	КАК Производитель,
		|	СвободныеОстатки.Номенклатура КАК Номенклатура,
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток КАК Количество,
		|  	КОЛИЧЕСТВО(СвободныеОстатки.Номенклатура) КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА_НМ
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(, Номенклатура.ВидНоменклатуры = &ВидНоменклатуры И Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ПосадочныхМестПоНоменклатуре) И Склад = &Склад) КАК СвободныеОстатки
		|ГДЕ
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток > 0 
		|		
		|СГРУППИРОВАТЬ ПО
		|	СвободныеОстатки.Склад,
		|	СвободныеОстатки.Номенклатура,
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток 
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория, 
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 17.
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладе_ТК	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПосадочныхМестПоТоварнойКатегории КАК КешДанныхДляВывода
		|ПО	КешДанныхДляВывода.Склад = АУН.Склад
		|И  КешДанныхДляВывода.ВидНоменклатуры = АУН.Номенклатура.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = АУН.Номенклатура.ТоварнаяКатегория
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 18.
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	АУН.Номенклатура.Производитель КАК Производитель,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладе_ПР	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПосадочныхМестПоПроизводителю КАК КешДанныхДляВывода
		|ПО	КешДанныхДляВывода.Склад = АУН.Склад
		|И  КешДанныхДляВывода.ВидНоменклатуры = АУН.Номенклатура.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = АУН.Номенклатура.ТоварнаяКатегория
		|И  КешДанныхДляВывода.Производитель = АУН.Номенклатура.Производитель
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория,
		|	АУН.Номенклатура.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 19.
		|ВЫБРАТЬ
		|	КешДанных.Склад КАК Склад,
		|	КешДанных.ВидНоменклатуры КАК ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,	
		|	КешДанных.ПосадочныеМеста КАК ПосадочныеМеста,
		|	
		|	СУММА(ПодчиненныйКешДанных.ПосадочныеМеста) КАК ПодчиненныеПосадочныеМеста,
		|	СУММА(ПодчиненныйКешДанных.ОтклонениеКоличествоПМ) КАК ОтклонениеКоличествоПМ,
		|	
		|	СУММА(IsNull(РасчетТКА.КоличествоАртикулов, 0)) КАК КоличествоАртикулов	
		|ИЗ
		|	ПосадочныхМестПоВидуНоменклатуры КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоТоварнойКатегории КАК ПодчиненныйКешДанных
		|ПО	ПодчиненныйКешДанных.Склад = КешДанных.Склад
		|И	ПодчиненныйКешДанных.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_ТК КАК РасчетТКА
		|ПО	РасчетТКА.Склад = ПодчиненныйКешДанных.Склад
		|И	РасчетТКА.ВидНоменклатуры = ПодчиненныйКешДанных.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = ПодчиненныйКешДанных.ТоварнаяКатегория	
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанных.Склад,
		|	КешДанных.ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория,
		|	КешДанных.ПосадочныеМеста		
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 20.
		|ВЫБРАТЬ
		|	КешДанных.Склад КАК Склад,
		|	КешДанных.ВидНоменклатуры КАК ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,	
		|	КешДанных.ПосадочныеМеста КАК ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ КАК ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку КАК НомерПоПорядку,
		|	
		|	СУММА(ПодчиненныйКешДанных.ПосадочныеМеста) КАК ПодчиненныеПосадочныеМеста,
		|	СУММА(ПодчиненныйКешДанных.ОтклонениеКоличествоПМ) КАК ПодчиненныеОтклонения,
		|	
		|	СУММА(IsNull(РасчетТКА.КоличествоАртикулов, 0)) КАК КоличествоАртикулов,
		|	IsNull(ДнейНаСкладе.ДНС, 0) КАК ДНС
		|ИЗ
		|	ПосадочныхМестПоТоварнойКатегории КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоПроизводителю КАК ПодчиненныйКешДанных
		|ПО	ПодчиненныйКешДанных.Склад = КешДанных.Склад
		|И	ПодчиненныйКешДанных.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И	ПодчиненныйКешДанных.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_ПР КАК РасчетТКА
		|ПО	РасчетТКА.Склад = ПодчиненныйКешДанных.Склад
		|И	РасчетТКА.ВидНоменклатуры = ПодчиненныйКешДанных.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = ПодчиненныйКешДанных.ТоварнаяКатегория
		|И	РасчетТКА.Производитель = ПодчиненныйКешДанных.Производитель
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДнейНаСкладе_ТК КАК ДнейНаСкладе
		|ПО ДнейНаСкладе.Склад = КешДанных.Склад
		|И	ДнейНаСкладе.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И	ДнейНаСкладе.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанных.Склад,
		|	КешДанных.ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория,
		|	КешДанных.ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку,
		|	IsNull(ДнейНаСкладе.ДНС, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР 
		|		КОГДА КешДанных.НомерПоПорядку = 0 
		|		ТОГДА 99999
		|		ИНАЧЕ КешДанных.НомерПоПорядку
		|	КОНЕЦ УБЫВ, IsNull(ДнейНаСкладе.ДНС, 0) УБЫВ
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 21.
		|ВЫБРАТЬ
		|	КешДанных.Склад КАК Склад,
		|	КешДанных.ВидНоменклатуры КАК ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель КАК Производитель,	
		|	КешДанных.ПосадочныеМеста КАК ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ КАК ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку КАК НомерПоПорядку,
		|	
		|	СУММА(ПодчиненныйКешДанных.ПосадочныеМеста) КАК ПодчиненныеПосадочныеМеста,
		|	СУММА(ПодчиненныйКешДанных.ОтклонениеКоличествоПМ) КАК ПодчиненныеОтклонения,
		|	
		|	СУММА(IsNull(РасчетТКА.КоличествоАртикулов, 0)) КАК КоличествоАртикулов,
		|	IsNull(ДнейНаСкладе.ДНС, 0) КАК ДНС
		|ИЗ
		|	ПосадочныхМестПоПроизводителю КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоНоменклатуре КАК ПодчиненныйКешДанных
		|ПО	ПодчиненныйКешДанных.Склад = КешДанных.Склад
		|И	ПодчиненныйКешДанных.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И	ПодчиненныйКешДанных.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И	ПодчиненныйКешДанных.Производитель = КешДанных.Производитель
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_НМ КАК РасчетТКА
		|ПО	РасчетТКА.Склад = ПодчиненныйКешДанных.Склад
		|И	РасчетТКА.ВидНоменклатуры = ПодчиненныйКешДанных.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = ПодчиненныйКешДанных.ТоварнаяКатегория
		|И	РасчетТКА.Производитель = ПодчиненныйКешДанных.Производитель
		|И  РасчетТКА.Номенклатура = ПодчиненныйКешДанных.Номенклатура
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДнейНаСкладе_ПР КАК ДнейНаСкладе
		|ПО ДнейНаСкладе.Склад = КешДанных.Склад
		|И	ДнейНаСкладе.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И	ДнейНаСкладе.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И	ДнейНаСкладе.Производитель = КешДанных.Производитель	
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанных.Склад,
		|	КешДанных.ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория,
		|	КешДанных.Производитель,
		|	КешДанных.ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку,
		|	IsNull(ДнейНаСкладе.ДНС, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР 
		|		КОГДА КешДанных.НомерПоПорядку = 0 
		|		ТОГДА 99999
		|		ИНАЧЕ КешДанных.НомерПоПорядку
		|	КОНЕЦ УБЫВ, IsNull(ДнейНаСкладе.ДНС, 0) УБЫВ
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 22.
		|ВЫБРАТЬ
		|	КешДанных.Склад КАК Склад,
		|	КешДанных.ВидНоменклатуры КАК ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель КАК Производитель,
		|	КешДанных.Номенклатура КАК Номенклатура,	
		|	КешДанных.ПосадочныеМеста КАК ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ КАК ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку КАК НомерПоПорядку,
		|	
		|	IsNull(РасчетТКА.Количество, 0) КАК Количество,
		|	""Артикулов больше чем задано в матрице магазина!"" КАК ПричинаОтъезда,
		|	IsNull(РасчетТКА.КоличествоАртикулов, 0) КАК КоличествоАртикулов,
		|	IsNull(ДнейНаСкладе.КоличествоДней, 0) КАК ДНС
		|
		|ИЗ
		|	ПосадочныхМестПоНоменклатуре КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_НМ КАК РасчетТКА
		|ПО	РасчетТКА.Склад = КешДанных.Склад
		|И	РасчетТКА.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И	РасчетТКА.Производитель = КешДанных.Производитель
		|И  РасчетТКА.Номенклатура = КешДанных.Номенклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|ПО	ДнейНаСкладе.АналитикаУчетаНоменклатуры.Номенклатура = КешДанных.Номенклатура
		|И  ДнейНаСкладе.АналитикаУчетаНоменклатуры.Склад = КешДанных.Склад
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР 
		|		КОГДА КешДанных.НомерПоПорядку = 0 
		|		ТОГДА 99999
		|		ИНАЧЕ КешДанных.НомерПоПорядку
		|	КОНЕЦ УБЫВ, IsNull(ДнейНаСкладе.КоличествоДней, 0) УБЫВ				
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА_ТК;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА_ПР;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА_НМ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДнейНаСкладе_ТК;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДнейНаСкладе_ПР;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПосадочныхМестПоВидуНоменклатуры;
		//////////////////////////////////////////////////////////////////////////////////////////// 
		|УНИЧТОЖИТЬ ПосадочныхМестПоТоварнойКатегории;
		//////////////////////////////////////////////////////////////////////////////////////////// 
		|УНИЧТОЖИТЬ ПосадочныхМестПоПроизводителю;
		//////////////////////////////////////////////////////////////////////////////////////////// 
		|УНИЧТОЖИТЬ ПосадочныхМестПоНоменклатуре;
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаАналитикаТоварыКОтъездуПоАртикулам() 

Функция ПолучитьТекстЗапросаАналитикаТоварыКПриезду()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////
		// 0. Получаем настройки матрицы
		|ВЫБРАТЬ
		|	Склад 				КАК Склад,
		|	ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	Производитель 		КАК Производитель,
		|	Номенклатура 		КАК Номенклатура,
		|
		|	НомерПоПорядку 			КАК НомерПоПорядку,
		|	ПосадочныеМеста 		КАК ПосадочныеМеста,
		|	ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|
		|	МинимальныйЗапас 	КАК МинимальныйЗапас,
		|	СтраховойЗапас 		КАК СтраховойЗапас,
		|	МаксимальныйЗапас 	КАК МаксимальныйЗапас,
		|
		|	Исключено 					КАК Исключено,
		|	КонтрольМатрицейОтключен 	КАК КонтрольМатрицейОтключен
		|ПОМЕСТИТЬ КешМатрицы
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, %1) 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 1. Формируем список видов номенклатуры и формируем пары "Склад" - "Вид номенклатуры"
		|ВЫБРАТЬ
		|	&Склад 												КАК Склад,
		|	ВидыНоменклатуры.Ссылка 							КАК ВидНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка) КАК ТоварнаяКатегория
		|ПОМЕСТИТЬ КешДанныхПоВидуНоменклатуры
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|ГДЕ
		|	ВидыНоменклатуры.ЭтоГруппа = ЛОЖЬ
		|И 	ВидыНоменклатуры.ПометкаУдаления = ЛОЖЬ
		|%2
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 2. Получаем количество посадочных мест по виду номенклатуры
		|ВЫБРАТЬ
		|	КешДанных.Склад 						КАК Склад,
		|	КешДанных.ВидНоменклатуры 				КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория 			КАК ТоварнаяКатегория,
		|
		|	IsNull(КешМатрицы.ПосадочныеМеста, 0) 	КАК ПосадочныеМеста,
		|	IsNull(КешМатрицы.МинимальныйЗапас, 0) 	КАК МинимальныйЗапас,
		|	IsNull(КешМатрицы.СтраховойЗапас, 0) 	КАК СтраховойЗапас,
		|	IsNull(КешМатрицы.МаксимальныйЗапас, 0) КАК МаксимальныйЗапас
		|
		|ПОМЕСТИТЬ ПосадочныхМестПоВидуНоменклатуры
		|ИЗ
		|	КешДанныхПоВидуНоменклатуры КАК КешДанных
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО	КешМатрицы.Склад = КешДанных.Склад
		|И 	КешМатрицы.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И 	КешМатрицы.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|
		|ГДЕ
		|	ЕСТЬNULL(КешМатрицы.Исключено, ЛОЖЬ) = ЛОЖЬ
		|И 	ЕСТЬNULL(КешМатрицы.КонтрольМатрицейОтключен, ЛОЖЬ) = ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 3. Формируем список товарных категорий
		|ВЫБРАТЬ
		|	КешДанныхПоВидуНоменклатуры.Склад 				КАК Склад,
		|	КешДанныхПоВидуНоменклатуры.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	ТоварныеКатегории.Ссылка 						КАК ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка) КАК Производитель
		|ПОМЕСТИТЬ КешДанныхПоТоварнымКатегориям
		|ИЗ
		|	ПосадочныхМестПоВидуНоменклатуры КАК КешДанныхПоВидуНоменклатуры
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|ПО ТоварныеКатегории.Владелец = КешДанныхПоВидуНоменклатуры.ВидНоменклатуры
		|И 	ТоварныеКатегории.ЭтоГруппа = ЛОЖЬ
		|И 	ТоварныеКатегории.ПометкаУдаления = ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 4. Получаем количество посадочных мест по товарным категориям
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель 	КАК Производитель,
		|
		|	ЕСТЬNULL(КешМатрицы.ПосадочныеМеста, 0) 		КАК ПосадочныеМеста,
		|	ЕСТЬNULL(КешМатрицы.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|	ЕСТЬNULL(КешМатрицы.НомерПоПорядку, 0) 			КАК НомерПоПорядку,
		|
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицы.МинимальныйЗапас, 0) 	<> 0
		|		  ИЛИ IsNull(КешМатрицы.СтраховойЗапас, 0) 		<> 0
		|		  ИЛИ IsNull(КешМатрицы.МаксимальныйЗапас, 0) 	<> 0
		|		ТОГДА КешМатрицы.МинимальныйЗапас 
		|		ИНАЧЕ IsNull(ПосадочныхМестПоВидуНоменклатуры.МинимальныйЗапас, 0) 
		|	КОНЕЦ КАК МинимальныйЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицы.МинимальныйЗапас, 0) 	<> 0
		|		  ИЛИ IsNull(КешМатрицы.СтраховойЗапас, 0) 		<> 0
		|		  ИЛИ IsNull(КешМатрицы.МаксимальныйЗапас, 0) 	<> 0
		|		ТОГДА КешМатрицы.СтраховойЗапас 
		|		ИНАЧЕ IsNull(ПосадочныхМестПоВидуНоменклатуры.СтраховойЗапас, 0) 
		|	КОНЕЦ КАК СтраховойЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицы.МинимальныйЗапас, 0) 	<> 0
		|		  ИЛИ IsNull(КешМатрицы.СтраховойЗапас, 0) 		<> 0
		|		  ИЛИ IsNull(КешМатрицы.МаксимальныйЗапас, 0) 	<> 0
		|		ТОГДА КешМатрицы.МаксимальныйЗапас 
		|		ИНАЧЕ IsNull(ПосадочныхМестПоВидуНоменклатуры.МаксимальныйЗапас, 0) 
		|	КОНЕЦ КАК МаксимальныйЗапас
		|
		|ПОМЕСТИТЬ ПосадочныхМестПоТоварнойКатегории
		|ИЗ
		|	КешДанныхПоТоварнымКатегориям КАК КешДанных
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО КешМатрицы.Склад = КешДанных.Склад
		|И  КешМатрицы.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И  КешМатрицы.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И  КешМатрицы.Производитель = КешДанных.Производитель
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоВидуНоменклатуры КАК ПосадочныхМестПоВидуНоменклатуры
		|ПО ПосадочныхМестПоВидуНоменклатуры.Склад 			= КешДанных.Склад
		|И 	ПосадочныхМестПоВидуНоменклатуры.ВидНоменклатуры= КешДанных.ВидНоменклатуры
		|
		|ГДЕ
		|	ЕСТЬNULL(КешМатрицы.Исключено, ЛОЖЬ) = ЛОЖЬ
		|И 	ЕСТЬNULL(КешМатрицы.КонтрольМатрицейОтключен, ЛОЖЬ) = ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 5. Формируем список производителей
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КешДанныхПоТоварнымКатегориям.Склад 			КАК Склад,
		|	КешДанныхПоТоварнымКатегориям.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанныхПоТоварнымКатегориям.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СпрНоменклатура.Производитель 					КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 	КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхПоПроизводителям
		|ИЗ
		|	ПосадочныхМестПоТоварнойКатегории КАК КешДанныхПоТоварнымКатегориям
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|ПО СпрНоменклатура.ВидНоменклатуры = КешДанныхПоТоварнымКатегориям.ВидНоменклатуры
		|И 	СпрНоменклатура.ТоварнаяКатегория = КешДанныхПоТоварнымКатегориям.ТоварнаяКатегория
		|И 	СпрНоменклатура.Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 6. Получаем количество посадочных мест по производителям
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель 	КАК Производитель,
		|	КешДанных.Номенклатура 		КАК Номенклатура,
		|
		|	ЕСТЬNULL(КешМатрицы.ПосадочныеМеста, 0) 		КАК ПосадочныеМеста,
		|	ЕСТЬNULL(КешМатрицы.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|	ЕСТЬNULL(КешМатрицы.НомерПоПорядку, 0) 			КАК НомерПоПорядку,
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицы.МинимальныйЗапас, 0) 	<> 0
		|		  ИЛИ IsNull(КешМатрицы.СтраховойЗапас, 0) 		<> 0
		|		  ИЛИ IsNull(КешМатрицы.МаксимальныйЗапас, 0) 	<> 0
		|		ТОГДА КешМатрицы.МинимальныйЗапас 
		|		ИНАЧЕ IsNull(ПосадочныхМестПоТоварнойКатегории.МинимальныйЗапас, 0) 
		|	КОНЕЦ КАК МинимальныйЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицы.МинимальныйЗапас, 0) 	<> 0
		|		  ИЛИ IsNull(КешМатрицы.СтраховойЗапас, 0) 		<> 0
		|		  ИЛИ IsNull(КешМатрицы.МаксимальныйЗапас, 0) 	<> 0
		|		ТОГДА КешМатрицы.СтраховойЗапас 
		|		ИНАЧЕ IsNull(ПосадочныхМестПоТоварнойКатегории.СтраховойЗапас, 0) 
		|	КОНЕЦ КАК СтраховойЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицы.МинимальныйЗапас, 0) 	<> 0
		|		  ИЛИ IsNull(КешМатрицы.СтраховойЗапас, 0) 		<> 0
		|		  ИЛИ IsNull(КешМатрицы.МаксимальныйЗапас, 0) 	<> 0
		|		ТОГДА КешМатрицы.МаксимальныйЗапас 
		|		ИНАЧЕ IsNull(ПосадочныхМестПоТоварнойКатегории.МаксимальныйЗапас, 0) 
		|	КОНЕЦ КАК МаксимальныйЗапас
		|
		|ПОМЕСТИТЬ ПосадочныхМестПоПроизводителю
		|ИЗ
		|	КешДанныхПоПроизводителям КАК КешДанных
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО КешМатрицы.Склад = КешДанных.Склад
		|И 	КешМатрицы.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И 	КешМатрицы.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И 	КешМатрицы.Производитель = КешДанных.Производитель
		|И 	КешМатрицы.Номенклатура = КешДанных.Номенклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоТоварнойКатегории КАК ПосадочныхМестПоТоварнойКатегории
		|ПО ПосадочныхМестПоТоварнойКатегории.Склад 			= КешДанных.Склад
		|И 	ПосадочныхМестПоТоварнойКатегории.ВидНоменклатуры 	= КешДанных.ВидНоменклатуры
		|И 	ПосадочныхМестПоТоварнойКатегории.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|
		|ГДЕ
		|	ЕСТЬNULL(КешМатрицы.Исключено, ЛОЖЬ) = ЛОЖЬ
		|И 	ЕСТЬNULL(КешМатрицы.КонтрольМатрицейОтключен, ЛОЖЬ) = ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 7. Формируем список номенклатуры
		|ВЫБРАТЬ
		|	КешДанныхПоПроизводителям.Склад 			КАК Склад,
		|	КешДанныхПоПроизводителям.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанныхПоПроизводителям.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанныхПоПроизводителям.Производитель 	КАК Производитель,
		|	СпрНоменклатура.Ссылка						КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхПоНоменклатуре
		|ИЗ
		|	ПосадочныхМестПоПроизводителю КАК КешДанныхПоПроизводителям
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|ПО СпрНоменклатура.ВидНоменклатуры = КешДанныхПоПроизводителям.ВидНоменклатуры
		|И 	СпрНоменклатура.ТоварнаяКатегория = КешДанныхПоПроизводителям.ТоварнаяКатегория
		|И 	СпрНоменклатура.Производитель = КешДанныхПоПроизводителям.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 8. Получаем количество посадочных мест по номенклатуре
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель 	КАК Производитель,
		|	КешДанных.Номенклатура 		КАК Номенклатура,
		|
		|	ЕСТЬNULL(КешМатрицы.ПосадочныеМеста, 0) КАК ПосадочныеМеста,
		|	0 										КАК ОтклонениеКоличествоПМ,
		|	ЕСТЬNULL(КешМатрицы.НомерПоПорядку, 0) 	КАК НомерПоПорядку,
		|
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицы.МинимальныйЗапас, 0) 	<> 0
		|		  ИЛИ IsNull(КешМатрицы.СтраховойЗапас, 0) 		<> 0
		|		  ИЛИ IsNull(КешМатрицы.МаксимальныйЗапас, 0) 	<> 0
		|		ТОГДА КешМатрицы.МинимальныйЗапас 
		|		ИНАЧЕ IsNull(ПосадочныхМестПоПроизводителю.МинимальныйЗапас, 0) 
		|	КОНЕЦ КАК МинимальныйЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицы.МинимальныйЗапас, 0) 	<> 0
		|		  ИЛИ IsNull(КешМатрицы.СтраховойЗапас, 0) 		<> 0
		|		  ИЛИ IsNull(КешМатрицы.МаксимальныйЗапас, 0) 	<> 0
		|		ТОГДА КешМатрицы.СтраховойЗапас 
		|		ИНАЧЕ IsNull(ПосадочныхМестПоПроизводителю.СтраховойЗапас, 0) 
		|	КОНЕЦ КАК СтраховойЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицы.МинимальныйЗапас, 0) 	<> 0
		|		  ИЛИ IsNull(КешМатрицы.СтраховойЗапас, 0) 		<> 0
		|		  ИЛИ IsNull(КешМатрицы.МаксимальныйЗапас, 0) 	<> 0
		|		ТОГДА КешМатрицы.МаксимальныйЗапас 
		|		ИНАЧЕ IsNull(ПосадочныхМестПоПроизводителю.МаксимальныйЗапас, 0) 
		|	КОНЕЦ КАК МаксимальныйЗапас
		|
		|ПОМЕСТИТЬ ПосадочныхМестПоНоменклатуре
		|ИЗ
		|	КешДанныхПоНоменклатуре КАК КешДанных
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО КешМатрицы.Склад = КешДанных.Склад
		|И 	КешМатрицы.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И 	КешМатрицы.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И 	КешМатрицы.Производитель = КешДанных.Производитель
		|И 	КешМатрицы.Номенклатура = КешДанных.Номенклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоПроизводителю КАК ПосадочныхМестПоПроизводителю
		|ПО 	ПосадочныхМестПоПроизводителю.Склад 			= КешДанных.Склад
		|И 	ПосадочныхМестПоПроизводителю.ВидНоменклатуры 	= КешДанных.ВидНоменклатуры
		|И 	ПосадочныхМестПоПроизводителю.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И 	ПосадочныхМестПоПроизводителю.Производитель 	= КешДанных.Производитель
		|			
		|ГДЕ
		|	ЕСТЬNULL(КешМатрицы.Исключено, ЛОЖЬ) = ЛОЖЬ
		|И 	ЕСТЬNULL(КешМатрицы.КонтрольМатрицейОтключен, ЛОЖЬ) = ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоВидуНоменклатуры;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоТоварнымКатегориям;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоПроизводителям;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоНоменклатуре;
		////////////////////////////////////////////////////////////////////////////////
		// 13. Таблица для расчета количества артикулов на магазине
		|ВЫБРАТЬ
		|   СвободныеОстатки.Склад		  КАК Склад,
		| 	СвободныеОстатки.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ТаблицаДляРасчетаТКА
		|ИЗ
		|  	РегистрНакопления.СвободныеОстатки.Остатки(, %3) КАК СвободныеОстатки
		|ГДЕ
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток > 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|  	ТоварыКПоступлению.Склад		КАК Склад,	
		|	ТоварыКПоступлению.Номенклатура КАК Номенклатура
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(, %3) КАК ТоварыКПоступлению
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КТС_ТоварыКПоступлениюПодОбеспечение.Остатки(, %3) КАК ТоварыПодОбеспечение
		|ПО	ТоварыПодОбеспечение.Номенклатура = ТоварыКПоступлению.Номенклатура
		|И	ТоварыПодОбеспечение.Склад 		  = ТоварыКПоступлению.Склад
		|
		|ГДЕ
		|	IsNull(ТоварыКПоступлению.КПоступлениюОстаток, 0) - IsNull(ТоварыПодОбеспечение.КПоступлениюОстаток, 0) > 0 	
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 14. Расчитываем количество артикулов по товарным категориям
		|ВЫБРАТЬ
		|	ВлЗапрос.Склад 							КАК Склад,
		|	ВлЗапрос.Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	ВлЗапрос.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КОЛИЧЕСТВО(ВлЗапрос.Номенклатура) 		КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА_ТК
		|ИЗ
		|	ТаблицаДляРасчетаТКА КАК ВлЗапрос 	
		|
		|СГРУППИРОВАТЬ ПО
		|	ВлЗапрос.Склад,
		|	ВлЗапрос.Номенклатура.ВидНоменклатуры,
		|	ВлЗапрос.Номенклатура.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 15. Расчитываем количество артикулов по производителям 
		|ВЫБРАТЬ
		|	ВлЗапрос.Склад 							КАК Склад,
		|	ВлЗапрос.Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	ВлЗапрос.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	ВлЗапрос.Номенклатура.Производитель 	КАК Производитель,
		|	КОЛИЧЕСТВО(ВлЗапрос.Номенклатура) 		КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА_ПР
		|ИЗ
		|	ТаблицаДляРасчетаТКА КАК ВлЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВлЗапрос.Склад,
		|	ВлЗапрос.Номенклатура.ВидНоменклатуры,
		|	ВлЗапрос.Номенклатура.ТоварнаяКатегория,
		|	ВлЗапрос.Номенклатура.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 16. Расчитываем количество артикулов и остатков по номенклатуре 
		|ВЫБРАТЬ
		|	МестаПоНоменклатуре.Склад 				КАК Склад,
		|	МестаПоНоменклатуре.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	МестаПоНоменклатуре.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	МестаПоНоменклатуре.Производитель 		КАК Производитель,
		|	МестаПоНоменклатуре.Номенклатура 		КАК Номенклатура,
		|	IsNull(СвободныеОстатки.ВНаличииОстаток, 0) 
		| - IsNull(СвободныеОстатки.ВРезервеОстаток, 0)
		| + IsNull(ТоварыКПоступлению.КПоступлениюОстаток, 0) 
		| - IsNull(ТоварыПодОбеспечение.КПоступлениюОстаток, 0) КАК Количество,
		|	1 													КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА_НМ
		|ИЗ
		|	ПосадочныхМестПоНоменклатуре КАК МестаПоНоменклатуре
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(, %3) КАК СвободныеОстатки
		|ПО	СвободныеОстатки.Номенклатура = МестаПоНоменклатуре.Номенклатура
		|И	СвободныеОстатки.Склад = МестаПоНоменклатуре.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению.Остатки(, %3) КАК ТоварыКПоступлению
		|ПО	ТоварыКПоступлению.Номенклатура = МестаПоНоменклатуре.Номенклатура
		|И	ТоварыКПоступлению.Склад = МестаПоНоменклатуре.Склад	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КТС_ТоварыКПоступлениюПодОбеспечение.Остатки(, %3) КАК ТоварыПодОбеспечение
		|ПО	ТоварыПодОбеспечение.Номенклатура = МестаПоНоменклатуре.Номенклатура
		|И	ТоварыПодОбеспечение.Склад = МестаПоНоменклатуре.Склад
		|
		|ГДЕ
		|	IsNull(СвободныеОстатки.ВНаличииОстаток, 0) 
		| - IsNull(СвободныеОстатки.ВРезервеОстаток, 0)
		| + IsNull(ТоварыКПоступлению.КПоступлениюОстаток, 0) 
		| - IsNull(ТоварыПодОбеспечение.КПоступлениюОстаток, 0) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 17. Дней на складе по товарным категориям
		|ВЫБРАТЬ
		|	АУН.Склад 							КАК Склад,
		|	АУН.Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней)КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладе_ТК
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПосадочныхМестПоТоварнойКатегории КАК КешДанныхДляВывода
		|ПО КешДанныхДляВывода.Склад = АУН.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры = АУН.Номенклатура.ВидНоменклатуры
		|И 	КешДанныхДляВывода.ТоварнаяКатегория = АУН.Номенклатура.ТоварнаяКатегория
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 18. Дней на складе по производителям
		|ВЫБРАТЬ
		|	АУН.Склад 							КАК Склад,
		|	АУН.Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	АУН.Номенклатура.Производитель 		КАК Производитель,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней)КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладе_ПР
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО (АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры)
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПосадочныхМестПоПроизводителю КАК КешДанныхДляВывода
		|ПО КешДанныхДляВывода.Склад = АУН.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры = АУН.Номенклатура.ВидНоменклатуры
		|И 	КешДанныхДляВывода.ТоварнаяКатегория = АУН.Номенклатура.ТоварнаяКатегория
		|И 	КешДанныхДляВывода.Производитель = АУН.Номенклатура.Производитель
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория,
		|	АУН.Номенклатура.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 19. Данные для расчета товаров к приезду по видам номенклатуры
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.ПосадочныеМеста 	КАК ПосадочныеМеста,
		|	IsNull(СУММА(ПодчиненныйКешДанных.ПосадочныеМеста), 0) 			КАК ПодчиненныеПосадочныеМеста,
		|	IsNull(СУММА(ПодчиненныйКешДанных.ОтклонениеКоличествоПМ), 0) 	КАК ОтклонениеКоличествоПМ,
		|	СУММА(IsNull(РасчетТКА.КоличествоАртикулов, 0)) 	КАК КоличествоАртикулов
		|ИЗ
		|	ПосадочныхМестПоВидуНоменклатуры КАК КешДанных
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоТоварнойКатегории КАК ПодчиненныйКешДанных
		|ПО ПодчиненныйКешДанных.Склад = КешДанных.Склад
		|И 	ПодчиненныйКешДанных.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_ТК КАК РасчетТКА
		|ПО РасчетТКА.Склад = ПодчиненныйКешДанных.Склад
		|И 	РасчетТКА.ВидНоменклатуры = ПодчиненныйКешДанных.ВидНоменклатуры
		|И 	РасчетТКА.ТоварнаяКатегория = ПодчиненныйКешДанных.ТоварнаяКатегория
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанных.Склад,
		|	КешДанных.ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория,
		|	КешДанных.ПосадочныеМеста
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 20. Данные для расчета товаров к приезду по товарным категориям 
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	
		|	КешДанных.ПосадочныеМеста 		 КАК ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ КАК ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку 		 КАК НомерПоПорядку,
		
		|	КешДанных.МинимальныйЗапас 	КАК МинимальныйЗапас,
		|	КешДанных.СтраховойЗапас 	КАК СтраховойЗапас,
		|	КешДанных.МаксимальныйЗапас КАК МаксимальныйЗапас,
		|
		|	IsNull(СУММА(ПодчиненныйКешДанных.ПосадочныеМеста), 0) 			КАК ПодчиненныеПосадочныеМеста,
		|	IsNull(СУММА(ПодчиненныйКешДанных.ОтклонениеКоличествоПМ), 0) 	КАК ПодчиненныеОтклонения,
		|	СУММА(IsNull(РасчетТКА.КоличествоАртикулов, 0)) 				КАК КоличествоАртикулов,
		|	IsNull(ДнейНаСкладе.ДНС, 0) 									КАК ДНС
		|ИЗ
		|	ПосадочныхМестПоТоварнойКатегории КАК КешДанных
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоПроизводителю КАК ПодчиненныйКешДанных
		|ПО ПодчиненныйКешДанных.Склад = КешДанных.Склад
		|И 	ПодчиненныйКешДанных.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И 	ПодчиненныйКешДанных.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|			
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_ПР КАК РасчетТКА
		|ПО РасчетТКА.Склад = ПодчиненныйКешДанных.Склад
		|И 	РасчетТКА.ВидНоменклатуры = ПодчиненныйКешДанных.ВидНоменклатуры
		|И 	РасчетТКА.ТоварнаяКатегория = ПодчиненныйКешДанных.ТоварнаяКатегория
		|И 	РасчетТКА.Производитель = ПодчиненныйКешДанных.Производитель
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ ДнейНаСкладе_ТК КАК ДнейНаСкладе
		|ПО ДнейНаСкладе.Склад = КешДанных.Склад
		|И 	ДнейНаСкладе.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И 	ДнейНаСкладе.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанных.Склад,
		|	КешДанных.ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория,
		|	КешДанных.ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку,
		|	КешДанных.МинимальныйЗапас,
		|	КешДанных.СтраховойЗапас,
		|	КешДанных.МаксимальныйЗапас,
		|	ЕСТЬNULL(ДнейНаСкладе.ДНС, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР
		|		КОГДА КешДанных.НомерПоПорядку = 0
		|			ТОГДА 99999
		|		ИНАЧЕ КешДанных.НомерПоПорядку
		|	КОНЕЦ Возр,
		|	ЕСТЬNULL(ДнейНаСкладе.ДНС, 0) ВОЗР
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 21. Данные для расчета товаров к приезду по производителям
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель 	КАК Производитель,
		|
		|	КешДанных.ПосадочныеМеста 		 КАК ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ КАК ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку 		 КАК НомерПоПорядку,
		|
		|	КешДанных.МинимальныйЗапас 	КАК МинимальныйЗапас,
		|	КешДанных.СтраховойЗапас 	КАК СтраховойЗапас,
		|	КешДанных.МаксимальныйЗапас КАК МаксимальныйЗапас,
		|
		|	IsNull(СУММА(ПодчиненныйКешДанных.ПосадочныеМеста), 0)			КАК ПодчиненныеПосадочныеМеста,
		|	IsNull(СУММА(ПодчиненныйКешДанных.ОтклонениеКоличествоПМ), 0) 	КАК ПодчиненныеОтклонения,
		|	СУММА(ЕСТЬNULL(РасчетТКА.КоличествоАртикулов, 0)) 				КАК КоличествоАртикулов,
		|	IsNull(ДнейНаСкладе.ДНС, 0) 									КАК ДНС
		|ИЗ
		|	ПосадочныхМестПоПроизводителю КАК КешДанных
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоНоменклатуре КАК ПодчиненныйКешДанных
		|ПО ПодчиненныйКешДанных.Склад = КешДанных.Склад
		|И 	ПодчиненныйКешДанных.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И 	ПодчиненныйКешДанных.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И 	ПодчиненныйКешДанных.Производитель = КешДанных.Производитель
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_НМ КАК РасчетТКА
		|ПО РасчетТКА.Склад = ПодчиненныйКешДанных.Склад
		|И 	РасчетТКА.ВидНоменклатуры = ПодчиненныйКешДанных.ВидНоменклатуры
		|И 	РасчетТКА.ТоварнаяКатегория = ПодчиненныйКешДанных.ТоварнаяКатегория
		|И 	РасчетТКА.Производитель = ПодчиненныйКешДанных.Производитель
		|И 	РасчетТКА.Номенклатура = ПодчиненныйКешДанных.Номенклатура
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ ДнейНаСкладе_ПР КАК ДнейНаСкладе
		|ПО ДнейНаСкладе.Склад = КешДанных.Склад
		|И 	ДнейНаСкладе.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И 	ДнейНаСкладе.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И 	ДнейНаСкладе.Производитель = КешДанных.Производитель
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанных.Склад,
		|	КешДанных.ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория,
		|	КешДанных.Производитель,
		|	КешДанных.ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку,
		|	КешДанных.МинимальныйЗапас,
		|	КешДанных.СтраховойЗапас,
		|	КешДанных.МаксимальныйЗапас,
		|	ЕСТЬNULL(ДнейНаСкладе.ДНС, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР
		|		КОГДА КешДанных.НомерПоПорядку = 0
		|			ТОГДА 99999
		|		ИНАЧЕ КешДанных.НомерПоПорядку
		|	КОНЕЦ Возр,
		|	ЕСТЬNULL(ДнейНаСкладе.ДНС, 0) Возр
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 22. Доступные остатки на складах пополнения
		|ВЫБРАТЬ
		//|	Склад КАК Склад, 
		|	Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	Номенклатура.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	Номенклатура.Производитель 		КАК Производитель,
		|	Номенклатура 					КАК Номенклатура,
		|	Характеристика 					КАК Характеристика,
		|	СвободныеОстатки.ВНаличииОстаток 
		| - СвободныеОстатки.ВРезервеОстаток КАК СвободныйОстаток
		|ПОМЕСТИТЬ ДоступныеОстатки
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(, %4
		|				 Склад В (	ВЫБРАТЬ 
		|								Склады.СкладПополнения	
		|							ИЗ 
		|								Справочник.АМ_ФорматыМагазинов.Склады КАК Склады							
		|							ГДЕ
		|								Склады.Склад = &Склад	
		|							)
		|												) КАК СвободныеОстатки
		|ГДЕ
		|	СвободныеОстатки.ВНаличииОстаток 
		| - СвободныеОстатки.ВРезервеОстаток > 0
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 23. Данные для расчета товаров к приезду по номенклатуре
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель 	КАК Производитель,
		|	КешДанных.Номенклатура 		КАК Номенклатура,
		|
		|	КешДанных.ПосадочныеМеста 		 КАК ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ КАК ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку 		 КАК НомерПоПорядку,
		|
		|	КешДанных.МинимальныйЗапас 	КАК МинимальныйЗапас,
		|	КешДанных.СтраховойЗапас 	КАК СтраховойЗапас,
		|	КешДанных.МаксимальныйЗапас КАК МаксимальныйЗапас,
		|
		|	0 КАК ПодчиненныеПосадочныеМеста,
		|	ЕСТЬNULL(РасчетТКА.Количество, 0) 					КАК Количество,
		|	ЕСТЬNULL(РасчетТКА.КоличествоАртикулов, 0) 			КАК КоличествоАртикулов,
		|	ЕСТЬNULL(ДнейНаСкладе.КоличествоДней, 0) 			КАК ДНС,
		|	IsNull(ДоступныеОстатки.СвободныйОстаток, 0) 		КАК ЕстьНаРаспределительныхСкладах,
		|	IsNull(Актуальность.ДатаПоставки, ДАТАВРЕМЯ(1,1,1)) КАК ЕстьВозможностьЗаказа
		|ИЗ
		|	ПосадочныхМестПоНоменклатуре КАК КешДанных
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_НМ КАК РасчетТКА
		|ПО РасчетТКА.Склад = КешДанных.Склад
		|И 	РасчетТКА.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И 	РасчетТКА.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И 	РасчетТКА.Производитель = КешДанных.Производитель
		|И 	РасчетТКА.Номенклатура = КешДанных.Номенклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ALPS_АктуальностьНоменклатуры.СрезПоследних(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ПосадочныхМестПоНоменклатуре)) КАК Актуальность
		|ПО	Актуальность.Номенклатура = КешДанных.Номенклатура
		|И	Актуальность.Актуально = Истина
		|И	Актуальность.ГарантияДоставки = Истина
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ДоступныеОстатки КАК ДоступныеОстатки
		|ПО	ДоступныеОстатки.Номенклатура = КешДанных.Номенклатура
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|ПО ДнейНаСкладе.АналитикаУчетаНоменклатуры.Номенклатура = КешДанных.Номенклатура
		|И 	ДнейНаСкладе.АналитикаУчетаНоменклатуры.Склад = КешДанных.Склад
		|
		|УПОРЯДОЧИТЬ ПО
		|	IsNull(ДоступныеОстатки.СвободныйОстаток, 0) УБЫВ,
		|	ВЫБОР
		|		КОГДА КешДанных.НомерПоПорядку = 0
		|			ТОГДА 99999
		|		ИНАЧЕ КешДанных.НомерПоПорядку
		|	КОНЕЦ ВОЗР,
		|	IsNull(Актуальность.ДатаПоставки, ДАТАВРЕМЯ(3999,1,1)) ВОЗР,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ДнейНаСкладе.КоличествоДней, 0) = 0
		|		ТОГДА 9999
		|		ИНАЧЕ ЕСТЬNULL(ДнейНаСкладе.КоличествоДней, 0)
		|	КОНЕЦ ВОЗР
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 24. Данные для расчета к приезду товаров по мин. макс. запасу
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель 	КАК Производитель,
		|	КешДанных.Номенклатура 		КАК Номенклатура,
		|
		|	КешДанных.ПосадочныеМеста 		 КАК ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ КАК ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку 		 КАК НомерПоПорядку,
		|
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицыПоНоменклатуре.МинимальныйЗапас, 0) <> 0
		|			ТОГДА КешМатрицыПоНоменклатуре.МинимальныйЗапас
		|		КОГДА IsNull(КешМатрицыПоПроизводителю.МинимальныйЗапас, 0) <> 0
		|			ТОГДА КешМатрицыПоПроизводителю.МинимальныйЗапас
		|		КОГДА IsNull(КешМатрицыПоТоварнойКатегории.МинимальныйЗапас, 0) <> 0
		|			ТОГДА КешМатрицыПоТоварнойКатегории.МинимальныйЗапас
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ КАК МинимальныйЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(КешМатрицыПоНоменклатуре.МаксимальныйЗапас, 0) <> 0
		|			ТОГДА КешМатрицыПоНоменклатуре.МаксимальныйЗапас
		|		КОГДА IsNull(КешМатрицыПоПроизводителю.МаксимальныйЗапас, 0) <> 0
		|			ТОГДА КешМатрицыПоПроизводителю.МаксимальныйЗапас
		|		КОГДА IsNull(КешМатрицыПоТоварнойКатегории.МаксимальныйЗапас, 0) <> 0
		|			ТОГДА КешМатрицыПоТоварнойКатегории.МаксимальныйЗапас
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ КАК МаксимальныйЗапас,
		|
		|	ЕСТЬNULL(РасчетТКА.Количество, 0) 					КАК Количество,
		|	ЕСТЬNULL(РасчетТКА.КоличествоАртикулов, 0) 			КАК КоличествоАртикулов,
		|	IsNull(Актуальность.ДатаПоставки, ДАТАВРЕМЯ(1,1,1)) КАК ЕстьВозможностьЗаказа
		|ПОМЕСТИТЬ КЗаказуПоМинМакс	
		|ИЗ
		|	ПосадочныхМестПоНоменклатуре КАК КешДанных
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасчетТКА_НМ КАК РасчетТКА
		|ПО РасчетТКА.Склад = КешДанных.Склад
		|И 	РасчетТКА.ВидНоменклатуры = КешДанных.ВидНоменклатуры
		|И 	РасчетТКА.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И 	РасчетТКА.Производитель = КешДанных.Производитель
		|И 	РасчетТКА.Номенклатура = КешДанных.Номенклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицыПоТоварнойКатегории
		|ПО	КешМатрицыПоТоварнойКатегории.Склад = КешДанных.Склад 
		|И	КешМатрицыПоТоварнойКатегории.ВидНоменклатуры = КешДанных.ВидНоменклатуры 
		|И	КешМатрицыПоТоварнойКатегории.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И	КешМатрицыПоТоварнойКатегории.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|И	КешМатрицыПоТоварнойКатегории.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицыПоПроизводителю
		|ПО	КешМатрицыПоПроизводителю.Склад = КешДанных.Склад 
		|И	КешМатрицыПоПроизводителю.ВидНоменклатуры = КешДанных.ВидНоменклатуры 
		|И	КешМатрицыПоПроизводителю.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И	КешМатрицыПоПроизводителю.Производитель = КешДанных.Производитель
		|И	КешМатрицыПоПроизводителю.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицыПоНоменклатуре
		|ПО	КешМатрицыПоНоменклатуре.Склад = КешДанных.Склад 
		|И	КешМатрицыПоНоменклатуре.ВидНоменклатуры = КешДанных.ВидНоменклатуры 
		|И	КешМатрицыПоНоменклатуре.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И	КешМатрицыПоНоменклатуре.Производитель = КешДанных.Производитель
		|И	КешМатрицыПоНоменклатуре.Номенклатура = КешДанных.Номенклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ALPS_АктуальностьНоменклатуры.СрезПоследних(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ПосадочныхМестПоНоменклатуре)) КАК Актуальность
		|ПО	Актуальность.Номенклатура = КешДанных.Номенклатура
		|И	Актуальность.Актуально = Истина
		|И	Актуальность.ГарантияДоставки = Истина
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 25. Номенклатура к приезду по мин. макс. запасу
		|ВЫБРАТЬ
		|	КЗаказуПоМинМакс.Склад 				КАК Склад,
		|	КЗаказуПоМинМакс.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КЗаказуПоМинМакс.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	КЗаказуПоМинМакс.Производитель 		КАК Производитель,
		|	КЗаказуПоМинМакс.Номенклатура 		КАК Номенклатура,
		|
		|	КЗаказуПоМинМакс.МинимальныйЗапас 	КАК МинимальныйЗапас,
		|	КЗаказуПоМинМакс.МаксимальныйЗапас 	КАК МаксимальныйЗапас,
		|
		|	КЗаказуПоМинМакс.Количество					 КАК ТекущийЗапас,
		|	КЗаказуПоМинМакс.МаксимальныйЗапас 
		| - КЗаказуПоМинМакс.Количество 				 КАК КоличествоКПоставке,
		|	IsNull(ДоступныеОстатки.СвободныйОстаток, 0) КАК ЕстьНаРаспределительныхСкладах,
		|	КЗаказуПоМинМакс.ЕстьВозможностьЗаказа 		 КАК ЕстьВозможностьЗаказа,
		|	ВЫБОР
		|		КОГДА IsNull(ДоступныеОстатки.СвободныйОстаток, 0) >= КЗаказуПоМинМакс.МаксимальныйЗапас - КЗаказуПоМинМакс.Количество
		|		ТОГДА ""Готово для перемещения""
		|		ИНАЧЕ ""Нужно заказать у поставщика""
		|	КОНЕЦ КАК ДанныеДерева	
		|ИЗ
		|	КЗаказуПоМинМакс КАК КЗаказуПоМинМакс
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ДоступныеОстатки КАК ДоступныеОстатки
		|ПО	ДоступныеОстатки.Номенклатура = КЗаказуПоМинМакс.Номенклатура
		|
		|ГДЕ
		|	КЗаказуПоМинМакс.Количество	< КЗаказуПоМинМакс.МаксимальныйЗапас
		|И	КЗаказуПоМинМакс.Количество <= КЗаказуПоМинМакс.МинимальныйЗапас	
		|
		|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешМатрицы;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДоступныеОстатки;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КЗаказуПоМинМакс;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаДляРасчетаТКА;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА_ТК;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА_ПР;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА_НМ;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДнейНаСкладе_ТК;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДнейНаСкладе_ПР;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПосадочныхМестПоВидуНоменклатуры;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПосадочныхМестПоТоварнойКатегории;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПосадочныхМестПоПроизводителю;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПосадочныхМестПоНоменклатуре;
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаАналитикаТоварыКПриезду()

Функция ПолучитьТекстЗапросаАналитикаТоварыВРезервах()
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗаказКлиента КАК Заказ,
		|	ЗаказКлиента.Дата КАК Дата,
		|	Номенклатура КАК Номенклатура,
		|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,	
		|	Номенклатура.Производитель КАК Производитель,
		|	СуммаОстаток КАК Сумма,
		|	ЗаказаноОстаток КАК Заказано,
		|	КОформлениюОстаток КАК ВРезерве
		|ИЗ                                             
		|	РегистрНакопления.ЗаказыКлиентов.Остатки(, Склад = &Склад)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЗаказНаВнутреннееПотребление,
		|	ЗаказНаВнутреннееПотребление.Дата,
		|	Номенклатура,
		|	Номенклатура.ВидНоменклатуры,
		|	Номенклатура.ТоварнаяКатегория,	
		|	Номенклатура.Производитель,
		|	0,
		|	ЗаказаноОстаток,
		|	КОформлениюОстаток
		|ИЗ                                             
		|	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(, Склад = &Склад)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЗаказНаПеремещение,
		|	ЗаказНаПеремещение.Дата,
		|	Номенклатура,
		|	Номенклатура.ВидНоменклатуры,
		|	Номенклатура.ТоварнаяКатегория,	
		|	Номенклатура.Производитель,
		|	0,
		|	ЗаказаноОстаток,
		|	КОформлениюОстаток
		|ИЗ                                             
		|	РегистрНакопления.ЗаказыНаПеремещение.Остатки(, ЗаказНаПеремещение.СкладОтправитель = &Склад)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЗаказНаСборку,
		|	ЗаказНаСборку.Дата,
		|	Номенклатура,
		|	Номенклатура.ВидНоменклатуры,
		|	Номенклатура.ТоварнаяКатегория,	
		|	Номенклатура.Производитель,
		|	0,
		|	ЗаказаноОстаток,
		|	КОформлениюОстаток
		|ИЗ                                             
		|	РегистрНакопления.ЗаказыНаСборку.Остатки(, ЗаказНаСборку.Склад = &Склад)
		|
		|УПОРЯДОЧИТЬ ПО 
		|	Дата Возр	
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаАналитикаТоварыВРезервах()



Процедура ВыполнитьПеремещениеТоваровВМатрицу(ДанныеШапки, АвторизированныйПользователь)
	
	ТекстЗапроса = ПолучитьТекстЗапросаАналитикаТоварыКПриезду();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", "Склад = &Склад");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%2", "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%3", "Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ ПосадочныхМестПоНоменклатуре) И Склад = &Склад");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%4", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Склад", ДанныеШапки.Склад);
	РезультатПакета = Запрос.ВыполнитьПакет();
	Выгрузка = РезультатПакета[25].Выгрузить();
	
	ЗаполнитьМассивДанныхТоваровКПриездуПоАртикулам(РезультатПакета, Выгрузка, Неопределено);

	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаКешированияТоваровКПриезду();
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ТаблицаКПриезду", Выгрузка);
	ВыгрузкаКПриезду = Запрос.Выполнить().Выгрузить();
		
	Если НЕ ДанныеШапки.СкладПополнения.Пустая() Тогда
			
		Запрос = Новый Запрос;
		Запрос.Текст = ПолучитьТекстЗапросаСвободныхОстатковПоСкладу();
		Запрос.УстановитьПараметр("СкладПополнения", ДанныеШапки.СкладПополнения);
		Запрос.УстановитьПараметр("ТаблицаКПриезду", ВыгрузкаКПриезду);
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() = Ложь Тогда
			
			ВыборкаОстатков = РезультатЗапроса.Выбрать();
			
		    ПараметрыОбъекта = git_Templates.ПолучитьШаблонЗаказНаПеремещение();
			ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ДанныеШапки);
			ПараметрыОбъекта.СкладПолучатель = ДанныеШапки.Склад;
			ПараметрыОбъекта.СкладОтправитель = ДанныеШапки.СкладПополнения;
			ПараметрыОбъекта.Ответственный = АвторизированныйПользователь;
			ПараметрыОбъекта.Вставить("Комментарий", "Автоматическое перемещение под матрицу"); 
			
			КодСтроки = 0;
			Пока ВыборкаОстатков.Следующий() Цикл
				
				РезультатПоиска = ВыгрузкаКПриезду.Найти(ВыборкаОстатков.Номенклатура, "Номенклатура");
				Если РезультатПоиска <> Неопределено Тогда
					КодСтроки = КодСтроки + 1;
					НоваяСтрока = ПараметрыОбъекта.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, РезультатПоиска);
					НоваяСтрока.КодСтроки = КодСтроки;
					Если РезультатПоиска.Количество <= ВыборкаОстатков.Доступно Тогда
						ВыгрузкаКПриезду.Удалить(РезультатПоиска);
					Иначе
						НоваяСтрока.Количество = ВыборкаОстатков.Доступно; 
						НоваяСтрока.КоличествоУпаковок = ВыборкаОстатков.Доступно;
						РезультатПоиска.Количество = РезультатПоиска.Количество - ВыборкаОстатков.Доступно;
						РезультатПоиска.КоличествоУпаковок = РезультатПоиска.КоличествоУпаковок - ВыборкаОстатков.Доступно;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			ПараметрыОбъекта.МаксимальныйКодСтроки = КодСтроки;
			Если КодСтроки = 0 Тогда
				Возврат;	
			КонецЕсли;
			
			СтруктураОшибок = Новый Структура; 
			ЗаказНаПеремещение = git_Objcon.СоздатьДокумент("ЗаказНаПеремещение", ПараметрыОбъекта, СтруктураОшибок);
			//Для каждого СтрокаТовара Из ЗаказНаПеремещение.Товары Цикл
			//	Если СтрокаТовара.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ПодЗаказ Тогда
			//		ЗаказНаПеремещение.Товары.Удалить(СтрокаТовара);		
			//	КонецЕсли;
			//КонецЦикла;
			
			ИмяСобытияЖурналаРегистрации = НСтр("ru = 'Автоматический контроль товаров матрицей'");
			Если СтруктураОшибок.Количество() = 0 Тогда
				
				Попытка
					ЗаказНаПеремещение.Записать(РежимЗаписиДокумента.Проведение);
					ПеремещениеТоваров = Документы.ПеремещениеТоваров.СоздатьДокумент();
					ПеремещениеТоваров.Заполнить(ЗаказНаПеремещение.Ссылка);
					ПеремещениеТоваров.Ответственный = АвторизированныйПользователь;
					ПеремещениеТоваров.Подразделение = Справочники.СтруктураПредприятия.ПолучитьСсылку(Новый УникальныйИдентификатор("2ae9d40c-85c1-11e3-a390-001e673c80fc"));;
					ПеремещениеТоваров.Комментарий = "Автоматическое перемещение под матрицу";
					ПеремещениеТоваров.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					СтруктураОшибок.Вставить("ОшибкаДвиженийМатрицы", НСтр("ru = 'Не удалось доставить товар в матрицу!'") + ОписаниеОшибки());
					ВыполнитьОповещениеОбОшибках(ЗаказНаПеремещение, ИмяСобытияЖурналаРегистрации, СтруктураОшибок, Истина);	
				КонецПопытки;
				
			Иначе
				ВыполнитьОповещениеОбОшибках(ЗаказНаПеремещение, ИмяСобытияЖурналаРегистрации, СтруктураОшибок, Истина);
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЕсли;
		 	
КонецПроцедуры // ВыполнитьПеремещениеТоваровВМатрицу()

Процедура ВыполнитьПеремещениеТоваровИзМатрицы(ДанныеШапки, АвторизированныйПользователь)
	
	ТекстЗапроса = ПолучитьТекстЗапросаАналитикаТоварыКОтъезду();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", "Склад = &Склад");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%2", "Склад = &Склад");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Склад", ДанныеШапки.Склад);		
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Выгрузка.Индексы.Добавить("Номенклатура");
	
	КлючиСтруктуры = "";
	Для Каждого Колонка Из Выгрузка.Колонки Цикл
		КлючиСтруктуры = КлючиСтруктуры + Колонка.Имя + ",";
	КонецЦикла;
	КлючиСтруктуры = Лев(КлючиСтруктуры, СтрДлина(КлючиСтруктуры) - 1);
	
	МассивДанных = Новый Массив;
	ЗаполнитьМассивДанныхТоваровКОтъездуПоАртикулам(Запрос, КлючиСтруктуры, МассивДанных, Истина);
	
	ПараметрыОтбора = Новый Структура("Номенклатура");
	Для каждого СтруктураЗаписи Из МассивДанных Цикл
		
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, СтруктураЗаписи);
		РезультатПоиска = Выгрузка.НайтиСтроки(ПараметрыОтбора);
		Если РезультатПоиска.Количество() Тогда
			РезультатПоиска[0].Количество = Макс(СтруктураЗаписи.Количество, РезультатПоиска[0].Количество);
		Иначе
			ЗаполнитьЗначенияСвойств(Выгрузка.Добавить(), СтруктураЗаписи);
		КонецЕсли;
		
	КонецЦикла;
			
	Если Выгрузка.Количество() Тогда
		
		ПараметрыОбъекта = git_Templates.ПолучитьШаблонЗаказНаПеремещение();
		ЗаполнитьЗначенияСвойств(ПараметрыОбъекта, ДанныеШапки);
		ПараметрыОбъекта.СкладОтправитель = ДанныеШапки.Склад;
		ПараметрыОбъекта.СкладПолучатель = ДанныеШапки.СкладПополнения;
		ПараметрыОбъекта.Ответственный = АвторизированныйПользователь;
		
		КодСтроки = 0;
		Для Каждого Строка Из Выгрузка Цикл
			КодСтроки = КодСтроки + 1;
			НоваяСтрока = ПараметрыОбъекта.Товары.Добавить();
			НоваяСтрока.КодСтроки	 		= КодСтроки;
			НоваяСтрока.Номенклатура 		= Строка.Номенклатура;
			НоваяСтрока.Упаковка            = Строка.Номенклатура.ЕдиницаИзмерения;
			НоваяСтрока.Количество		 	= Строка.Количество;
			НоваяСтрока.КоличествоУпаковок 	= Строка.Количество;
			НоваяСтрока.ВариантОбеспечения	= Перечисления.ВариантыОбеспечения.СоСклада;
			НоваяСтрока.НачалоОтгрузки		= ТекущаяДата();
			НоваяСтрока.ОкончаниеПоступления= ТекущаяДата();
		КонецЦикла;
		
		ПараметрыОбъекта.МаксимальныйКодСтроки = КодСтроки;
		
		СтруктураОшибок = Новый Структура; 
		ЗаказНаПеремещениеИзМатрицы = git_Objcon.СоздатьДокумент("ЗаказНаПеремещение", ПараметрыОбъекта, СтруктураОшибок);
		//Для каждого СтрокаТовара Из ЗаказНаПеремещениеИзМатрицы.Товары Цикл
		//	Если СтрокаТовара.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ПодЗаказ Тогда
		//		ЗаказНаПеремещениеИзМатрицы.Товары.Удалить(СтрокаТовара);		
		//	КонецЕсли;
		//КонецЦикла;
		
		
		ИмяСобытияЖурналаРегистрации = НСтр("ru = 'Автоматический контроль товаров матрицей'");
		Если СтруктураОшибок.Количество() = 0 Тогда
			
			НачатьТранзакцию();
			
			Попытка
				
				ЗаказНаПеремещениеИзМатрицы.Записать(РежимЗаписиДокумента.Проведение);
				
				НавигационнаяСсылка = "e1c://server/gamlet/yt11#" + ПолучитьНавигационнуюСсылку(ЗаказНаПеремещениеИзМатрицы.Ссылка);
				ТекстПисьма = НСтр("ru = 'Товар из документа ""Заказ на перемещение"" должен быть собран и отправлен на склад
								|Ссылка: %НавигационнаяСсылка%
								|
								|При возникновении спрорных вопросов их нужно задавать продакт-менеджеру по товарной группе.'");
				ТекстПисьма = СтрЗаменить(ТекстПисьма, "%НавигационнаяСсылка%", НавигационнаяСсылка);
				
				ЭПИсходящее = Документы.ЭлектронноеПисьмоИсходящее.СоздатьДокумент();
				ЭПИсходящее.Дата 			= ТекущаяДатаСеанса();	
				ЭПИсходящее.Автор 			= АвторизированныйПользователь;
				ЭПИсходящее.Важность 		= Перечисления.ВариантыВажностиВзаимодействия.Высокая;
				ЭПИсходящее.СтатусПисьма	= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Исходящее;
				ЭПИсходящее.Ответственный 	= АвторизированныйПользователь;
				ЭПИсходящее.Тема 		= НСтр("ru = 'Автоматическое управление ассортиментом'");
				ЭПИсходящее.Комментарий = НСтр("ru = 'Автоматическое управление ассортиментом, автоматическое перемещение товаров из матрицы'"); 
				ЭПИсходящее.Текст 		= ТекстПисьма;
				ЭПИсходящее.ОтправительПредставление= НСтр("ru = 'Mr. Smith'"); 
				ЭПИсходящее.СписокПолучателейПисьма	= ДанныеШапки.АдресЭП;
				ЭПИсходящее.УчетнаяЗапись			= РаботаСПочтовымиСообщениями.ПолучитьСистемнуюУчетнуюЗапись();
				ЭПИсходящее.ТипТекста				= Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст;
				ЭПИсходящее.УдалятьПослеОтправки	= Истина;
				
				НовыйПолучатель = ЭПИсходящее.ПолучателиПисьма.Добавить();
				НовыйПолучатель.Адрес = ДанныеШапки.АдресЭП;
				НовыйПолучатель.Представление = ДанныеШапки.АдресЭП;
				НовыйПолучатель.Контакт = АвторизированныйПользователь;
				
				ЭПИсходящее.Записать(РежимЗаписиДокумента.Запись);

				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				СтруктураОшибок.Вставить("ОшибкаДвиженийМатрицы", НСтр("ru = 'Не удалось доставить товар в матрицу!'") + ОписаниеОшибки());
				ВыполнитьОповещениеОбОшибках(ЗаказНаПеремещениеИзМатрицы, ИмяСобытияЖурналаРегистрации, СтруктураОшибок, Истина);
				
			КонецПопытки;
		Иначе
			ВыполнитьОповещениеОбОшибках(ЗаказНаПеремещениеИзМатрицы, ИмяСобытияЖурналаРегистрации, СтруктураОшибок, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры // ВыполнитьПеремещениеТоваровИзМатрицы()
	


Функция ПолучитьТекстЗапросаКешированияТоваровКПриезду()
	
	ТекстЗапроса =  "
		////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ
		|	ТаблицаКПриезду.Номенклатура КАК Номенклатура,
		|	ТаблицаКПриезду.КоличествоКПоставке КАК Количество,
		|	ТаблицаКПриезду.ЕстьНаРаспределительныхСкладах КАК НаСкладах
		|ПОМЕСТИТЬ ТаблицаКПриезду
		|ИЗ
		|	&ТаблицаКПриезду КАК ТаблицаКПриезду
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ
		|	ТаблицаКПриезду.Номенклатура КАК Номенклатура,
		|	ТаблицаКПриезду.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|   ТаблицаКПриезду.Количество КАК Количество,
		|   ТаблицаКПриезду.Количество КАК КоличествоУпаковок,
		|	ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.СоСклада) КАК ВариантОбеспечения,
		|	&ТекущаяДата КАК НачалоОтгрузки,
		|   &ТекущаяДата КАК ОкончаниеПоступления
		|ИЗ
		|	ТаблицаКПриезду КАК ТаблицаКПриезду	
		|ГДЕ
		|	ТаблицаКПриезду.НаСкладах > 0
		|И	ТаблицаКПриезду.Количество > 0
		|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаКПриезду;
		////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаКешированияТоваровКПриезду()

Функция ПолучитьТекстЗапросаСвободныхОстатковПоСкладу()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ
		|	ТаблицаКПриезду.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ТаблицаКПриезду
		|ИЗ
		|	&ТаблицаКПриезду КАК ТаблицаКПриезду
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ 
		|	Номенклатура КАК Номенклатура,
		|	Склад КАК СкладОтправитель,
		|	ВНаличииОстаток - ВРезервеОстаток КАК Доступно
		|ИЗ 
		|	РегистрНакопления.СвободныеОстатки.Остатки(, Номенклатура В(ВЫБРАТЬ 
		|																	Номенклатура 
		|																ИЗ 
		|																	ТаблицаКПриезду) И Склад = &СкладПополнения)
		|ГДЕ
		|	ВНаличииОстаток - ВРезервеОстаток > 0
		|;";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаСвободныхОстатковПоСкладу()

Функция ПолучитьТекстЗапросаСкладыДляПеремещенияТоваров()
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ФорматыМагазинов.Ссылка				КАК ФорматМагазина,
		|	ФорматыМагазинов.Склад 				КАК Склад,
		|	ФорматыМагазинов.СкладПополнения 	КАК СкладПополнения,
		|	Модуль_ДоступныеСклады.Организация 	КАК Организация,
		|	ФорматыМагазинов.Склад.Подразделение КАК Подразделение,
		|
		|	ФорматыМагазинов.АвтоПеремещениеПоГлубине 	  КАК АвтоПеремещениеПоГлубине,
		|	ФорматыМагазинов.АвтоПеремещениеСоСклада 	  КАК АвтоПеремещениеСоСклада,
		|	ФорматыМагазинов.АвтоПеремещениеЗаказПодЗаказ КАК АвтоПеремещениеЗаказПодЗаказ,
		|
		|	КИ.АдресЭП КАК АдресЭП 
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК ФорматыМагазинов
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.КонтактнаяИнформация КАК КИ
		|ПО	КИ.Ссылка 	= ФорматыМагазинов.Склад
		|И	КИ.Тип 		= &Тип
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Модуль_ДоступныеСклады КАК Модуль_ДоступныеСклады
		|ПО	Модуль_ДоступныеСклады.Склад = ФорматыМагазинов.Склад
		|
		|ГДЕ
		|	ФорматыМагазинов.Ссылка.Активен = ИСТИНА
		|И 	ФорматыМагазинов.Ссылка.ПометкаУдаления = ЛОЖЬ
		|И 	ФорматыМагазинов.ИспользуетсяУправление = ИСТИНА
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаСкладыДляПеремещенияТоваров()



Функция ПолучитьТекстЗапросаПеремещенияТоваровИзМатрицыПоДереву()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0. Кеш матрицы 
		|ВЫБРАТЬ
		|	Склад 				КАК Склад,
		|	ВидНоменклатуры 	КАК ВидНоменклатуры, 
		|	ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	Производитель 		КАК Производитель,
		|	Номенклатура 		КАК Номенклатура,
		|	
		|	НомерПоПорядку 			КАК НомерПоПорядку,
		|	ПосадочныеМеста 		КАК ПосадочныеМеста,
		|	ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|	
		|	МинимальныйЗапас 	КАК МинимальныйЗапас,
		|	СтраховойЗапас 		КАК СтраховойЗапас,
		|	МаксимальныйЗапас 	КАК МаксимальныйЗапас,
		|
		|	Исключено 					КАК Исключено,	
		|	КонтрольМатрицейОтключен 	КАК КонтрольМатрицейОтключен 
		|	
		|ПОМЕСТИТЬ КешМатрицы
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, Склад = &Склад)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1. Данные по видам номенклатуры
		|ВЫБРАТЬ
		|	&Склад 												КАК Склад,
		|	ВидыНоменклатуры.Ссылка								КАК ВидНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка) КАК ТоварнаяКатегория
		|ПОМЕСТИТЬ КешДанныхПоВидуНоменклатуры
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|
		|ГДЕ
		| 	ВидыНоменклатуры.ЭтоГруппа = Ложь	
		|И	ВидыНоменклатуры.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2. Посадочных мест по виду номенклатуры, отсекаем то что продакт исключил из управления
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	
		|	IsNull(КешМатрицы.ПосадочныеМеста, 0) КАК ПосадочныеМеста
		|		
		|ПОМЕСТИТЬ ПосадочныхМестПоВидуНоменклатуры
		|ИЗ
		|	КешДанныхПоВидуНоменклатуры КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО	КешМатрицы.Склад 			= КешДанных.Склад
		|И	КешМатрицы.ВидНоменклатуры 	= КешДанных.ВидНоменклатуры
		|И	КешМатрицы.ТоварнаяКатегория= КешДанных.ТоварнаяКатегория
		|
		|ГДЕ
		|	IsNull(КешМатрицы.Исключено, Ложь) = Ложь
		|И	IsNull(КешМатрицы.КонтрольМатрицейОтключен, Ложь) = Ложь	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3. Данные по видам товарным категориям, переносим отсечение на подчиненную группу
		|ВЫБРАТЬ
		|	КешДанныхПоВидуНоменклатуры.Склад 				КАК Склад,
		|	КешДанныхПоВидуНоменклатуры.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	ТоварныеКатегории.Ссылка 						КАК ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка) КАК Производитель
		|	
		|ПОМЕСТИТЬ КешДанныхПоТоварнымКатегориям
		|ИЗ
		|	ПосадочныхМестПоВидуНоменклатуры КАК КешДанныхПоВидуНоменклатуры 	
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|ПО	ТоварныеКатегории.Владелец 			= КешДанныхПоВидуНоменклатуры.ВидНоменклатуры
		|И	ТоварныеКатегории.ЭтоГруппа 		= Ложь	
		|И	ТоварныеКатегории.ПометкаУдаления 	= Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория, 
		|	Производитель		
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4. Посадочных мест по товарной категории, отсекаем то что продакт исключил из управления
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель 	КАК Производитель,
		|	
		|	IsNull(ПосадочныеМеста, 0) 			КАК ПосадочныеМеста,
		|	IsNull(ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|	IsNull(НомерПоПорядку, 0) 			КАК НомерПоПорядку
		|		
		|ПОМЕСТИТЬ ПосадочныхМестПоТоварнойКатегории
		|ИЗ
		|	КешДанныхПоТоварнымКатегориям КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО	КешМатрицы.Склад 				= КешДанных.Склад
		|И	КешМатрицы.ВидНоменклатуры 		= КешДанных.ВидНоменклатуры
		|И	КешМатрицы.ТоварнаяКатегория 	= КешДанных.ТоварнаяКатегория
		|И	КешМатрицы.Производитель 		= КешДанных.Производитель
		|
		|ГДЕ
		|	IsNull(КешМатрицы.Исключено, Ложь) = Ложь
		|И	IsNull(КешМатрицы.КонтрольМатрицейОтключен, Ложь) = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5. Данные по производителям, переносим отсечение на подчиненную группу 
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КешДанныхПоТоварнымКатегориям.Склад				КАК Склад,
		|	КешДанныхПоТоварнымКатегориям.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанныхПоТоварнымКатегориям.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СпрНоменклатура.Производитель 					КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 	КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхПоПроизводителям
		|ИЗ
		|	ПосадочныхМестПоТоварнойКатегории КАК КешДанныхПоТоварнымКатегориям
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|ПО СпрНоменклатура.ВидНоменклатуры 	= КешДанныхПоТоварнымКатегориям.ВидНоменклатуры
		|И	СпрНоменклатура.ТоварнаяКатегория 	= КешДанныхПоТоварнымКатегориям.ТоварнаяКатегория
		|И	СпрНоменклатура.Производитель 	   <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория, 
		|	Производитель,
		|	Номенклатура	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6. Посадочных мест по производителю, отсекаем то что продакт исключил из управления
		|ВЫБРАТЬ
		|	КешДанных.Склад КАК Склад,
		|	КешДанных.ВидНоменклатуры КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель КАК Производитель,
		|	КешДанных.Номенклатура КАК Номенклатура,
		|	
		|	IsNull(ПосадочныеМеста, 0) КАК ПосадочныеМеста,
		|	IsNull(ОтклонениеКоличествоПМ, 0) КАК ОтклонениеКоличествоПМ,
		|	IsNull(НомерПоПорядку, 0) КАК НомерПоПорядку
		|	
		|ПОМЕСТИТЬ ПосадочныхМестПоПроизводителю
		|ИЗ
		|	КешДанныхПоПроизводителям КАК КешДанных	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО	КешМатрицы.Склад			 	= КешДанных.Склад
		|И	КешМатрицы.ВидНоменклатуры 		= КешДанных.ВидНоменклатуры
		|И	КешМатрицы.ТоварнаяКатегория 	= КешДанных.ТоварнаяКатегория
		|И	КешМатрицы.Производитель 		= КешДанных.Производитель
		|И	КешМатрицы.Номенклатура		 	= КешДанных.Номенклатура
		|
		|ГДЕ
		|	IsNull(КешМатрицы.Исключено, Ложь) 					= Ложь
		|И	IsNull(КешМатрицы.КонтрольМатрицейОтключен, Ложь) 	= Ложь
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7. Посадочных мест по товарной категории, отсекаем то что продакт исключил из управления
		|ВЫБРАТЬ 	
		|	КешДанныхПоПроизводителям.Склад				КАК Склад,
		|	КешДанныхПоПроизводителям.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанныхПоПроизводителям.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|	КешДанныхПоПроизводителям.Производитель		КАК Производитель,
		|	СпрНоменклатура.Ссылка 						КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхПоНоменклатуре
		|ИЗ
		|	ПосадочныхМестПоПроизводителю КАК КешДанныхПоПроизводителям
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|ПО СпрНоменклатура.ВидНоменклатуры 	= КешДанныхПоПроизводителям.ВидНоменклатуры
		|И	СпрНоменклатура.ТоварнаяКатегория 	= КешДанныхПоПроизводителям.ТоварнаяКатегория
		|И	СпрНоменклатура.Производитель 		= КешДанныхПоПроизводителям.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория, 
		|	Производитель,
		|	Номенклатура	
		|;    
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8. Посадочных мест по номенклатуре
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель 	КАК Производитель,
		|	КешДанных.Номенклатура 		КАК Номенклатура,
		|	
		|	IsNull(ПосадочныеМеста, 0) 	КАК ПосадочныеМеста,
		|	0 							КАК ОтклонениеКоличествоПМ,
		|	IsNull(НомерПоПорядку, 0) 	КАК НомерПоПорядку
		| 	
		|ПОМЕСТИТЬ ПосадочныхМестПоНоменклатуре
		|ИЗ
		|	КешДанныхПоНоменклатуре КАК КешДанных	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешМатрицы КАК КешМатрицы
		|ПО	КешМатрицы.Склад 				= КешДанных.Склад
		|И	КешМатрицы.ВидНоменклатуры 		= КешДанных.ВидНоменклатуры
		|И	КешМатрицы.ТоварнаяКатегория 	= КешДанных.ТоварнаяКатегория
		|И	КешМатрицы.Производитель 		= КешДанных.Производитель
		|И	КешМатрицы.Номенклатура			= КешДанных.Номенклатура
		|
		|ГДЕ
		|	IsNull(КешМатрицы.Исключено, Ложь) 					= Ложь
		|И	IsNull(КешМатрицы.КонтрольМатрицейОтключен, Ложь) 	= Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешМатрицы;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоВидуНоменклатуры;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоТоварнымКатегориям;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоПроизводителям;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхПоНоменклатуре;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 14.
		|ВЫБРАТЬ
		|	СвободныеОстатки.Склад 							КАК Склад,
		|   СвободныеОстатки.Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|  	КОЛИЧЕСТВО(СвободныеОстатки.Номенклатура) 		КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА_ТК
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(, Склад = &Склад) КАК СвободныеОстатки
		|
		|ГДЕ
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	СвободныеОстатки.Склад,
		|	СвободныеОстатки.Номенклатура.ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 15.
		|ВЫБРАТЬ
		|	СвободныеОстатки.Склад 							КАК Склад,
		|   СвободныеОстатки.Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СвободныеОстатки.Номенклатура.Производитель		КАК Производитель,
		|  	КОЛИЧЕСТВО(СвободныеОстатки.Номенклатура) 		КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА_ПР
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(, Склад = &Склад) КАК СвободныеОстатки
		|
		|ГДЕ
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток > 0
		|	
		|СГРУППИРОВАТЬ ПО
		|	СвободныеОстатки.Склад,
		|	СвободныеОстатки.Номенклатура.ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория,
		|	СвободныеОстатки.Номенклатура.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория, 
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 16.
		|ВЫБРАТЬ
		|	СвободныеОстатки.Склад 							КАК Склад,
		|   СвободныеОстатки.Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	СвободныеОстатки.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СвободныеОстатки.Номенклатура.Производитель		КАК Производитель,
		|	СвободныеОстатки.Номенклатура 					КАК Номенклатура,
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток КАК Количество,
		|  	КОЛИЧЕСТВО(СвободныеОстатки.Номенклатура) 		КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА_НМ
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(, Склад = &Склад) КАК СвободныеОстатки
		|ГДЕ
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток > 0 
		|		
		|СГРУППИРОВАТЬ ПО
		|	СвободныеОстатки.Склад,
		|	СвободныеОстатки.Номенклатура,
		|	СвободныеОстатки.ВНаличииОстаток - СвободныеОстатки.ВРезервеОстаток 
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, 
		|	ВидНоменклатуры, 
		|	ТоварнаяКатегория, 
		|	Производитель,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 17.
		|ВЫБРАТЬ
		|	АУН.Склад 								КАК Склад,
		|	АУН.Номенклатура.ВидНоменклатуры 		КАК ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория 		КАК ТоварнаяКатегория,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) 	КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладе_ТК	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПосадочныхМестПоТоварнойКатегории КАК КешДанныхДляВывода
		|ПО	КешДанныхДляВывода.Склад 				= АУН.Склад
		|И  КешДанныхДляВывода.ВидНоменклатуры 		= АУН.Номенклатура.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория 	= АУН.Номенклатура.ТоварнаяКатегория
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 18.
		|ВЫБРАТЬ
		|	АУН.Склад 								КАК Склад,
		|	АУН.Номенклатура.ВидНоменклатуры 		КАК ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория 		КАК ТоварнаяКатегория,
		|	АУН.Номенклатура.Производитель 			КАК Производитель,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) 	КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладе_ПР	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПосадочныхМестПоПроизводителю КАК КешДанныхДляВывода
		|ПО	КешДанныхДляВывода.Склад 				= АУН.Склад
		|И  КешДанныхДляВывода.ВидНоменклатуры 		= АУН.Номенклатура.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория 	= АУН.Номенклатура.ТоварнаяКатегория
		|И  КешДанныхДляВывода.Производитель 		= АУН.Номенклатура.Производитель
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория,
		|	АУН.Номенклатура.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 19.
		|ВЫБРАТЬ
		|	КешДанных.Склад 				КАК Склад,
		|	КешДанных.ВидНоменклатуры 		КАК ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|
		|	КешДанных.ПосадочныеМеста 		КАК ПосадочныеМеста,
		|	
		|	СУММА(IsNull(ПодчиненныйКешДанных.ПосадочныеМеста, 0)) 			КАК ПодчиненныеПосадочныеМеста,
		|	СУММА(IsNull(ПодчиненныйКешДанных.ОтклонениеКоличествоПМ, 0)) 	КАК ОтклонениеКоличествоПМ,
		|	СУММА(IsNull(РасчетТКА.КоличествоАртикулов, 0)) 				КАК КоличествоАртикулов	
		|ИЗ
		|	ПосадочныхМестПоВидуНоменклатуры КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоТоварнойКатегории КАК ПодчиненныйКешДанных
		|ПО	ПодчиненныйКешДанных.Склад 				= КешДанных.Склад
		|И	ПодчиненныйКешДанных.ВидНоменклатуры 	= КешДанных.ВидНоменклатуры
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_ТК КАК РасчетТКА
		|ПО	РасчетТКА.Склад 			= ПодчиненныйКешДанных.Склад
		|И	РасчетТКА.ВидНоменклатуры 	= ПодчиненныйКешДанных.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = ПодчиненныйКешДанных.ТоварнаяКатегория	
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанных.Склад,
		|	КешДанных.ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория,
		|	КешДанных.ПосадочныеМеста		
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 20.
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|
		|	КешДанных.ПосадочныеМеста 			КАК ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку 			КАК НомерПоПорядку,
		|	
		|	СУММА(IsNull(ПодчиненныйКешДанных.ПосадочныеМеста, 0)) 			КАК ПодчиненныеПосадочныеМеста,
		|	СУММА(IsNull(ПодчиненныйКешДанных.ОтклонениеКоличествоПМ, 0)) 	КАК ПодчиненныеОтклонения,
		|	СУММА(IsNull(РасчетТКА.КоличествоАртикулов, 0)) 				КАК КоличествоАртикулов,
		|	IsNull(ДнейНаСкладе.ДНС, 0) КАК ДНС
		|ИЗ
		|	ПосадочныхМестПоТоварнойКатегории КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоПроизводителю КАК ПодчиненныйКешДанных
		|ПО	ПодчиненныйКешДанных.Склад 				= КешДанных.Склад
		|И	ПодчиненныйКешДанных.ВидНоменклатуры 	= КешДанных.ВидНоменклатуры
		|И	ПодчиненныйКешДанных.ТоварнаяКатегория 	= КешДанных.ТоварнаяКатегория
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_ПР КАК РасчетТКА
		|ПО	РасчетТКА.Склад 			= ПодчиненныйКешДанных.Склад
		|И	РасчетТКА.ВидНоменклатуры 	= ПодчиненныйКешДанных.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = ПодчиненныйКешДанных.ТоварнаяКатегория
		|И	РасчетТКА.Производитель 	= ПодчиненныйКешДанных.Производитель
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДнейНаСкладе_ТК КАК ДнейНаСкладе
		|ПО ДнейНаСкладе.Склад 				= КешДанных.Склад
		|И	ДнейНаСкладе.ВидНоменклатуры 	= КешДанных.ВидНоменклатуры
		|И	ДнейНаСкладе.ТоварнаяКатегория 	= КешДанных.ТоварнаяКатегория
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанных.Склад,
		|	КешДанных.ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория,
		|	КешДанных.ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку,
		|	IsNull(ДнейНаСкладе.ДНС, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР 
		|		КОГДА КешДанных.НомерПоПорядку = 0 
		|		ТОГДА 99999
		|		ИНАЧЕ КешДанных.НомерПоПорядку
		|	КОНЕЦ УБЫВ, IsNull(ДнейНаСкладе.ДНС, 0) УБЫВ
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 21.
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель 	КАК Производитель,
		|
		|	КешДанных.ПосадочныеМеста 			КАК ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку 			КАК НомерПоПорядку,
		|	
		|	СУММА(IsNull(ПодчиненныйКешДанных.ПосадочныеМеста, 0)) 			КАК ПодчиненныеПосадочныеМеста,
		|	СУММА(IsNull(ПодчиненныйКешДанных.ОтклонениеКоличествоПМ, 0)) 	КАК ПодчиненныеОтклонения,	
		|	СУММА(IsNull(РасчетТКА.КоличествоАртикулов, 0)) 				КАК КоличествоАртикулов,
		|	IsNull(ДнейНаСкладе.ДНС, 0) КАК ДНС
		|ИЗ
		|	ПосадочныхМестПоПроизводителю КАК КешДанных
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныхМестПоНоменклатуре КАК ПодчиненныйКешДанных
		|ПО	ПодчиненныйКешДанных.Склад 				= КешДанных.Склад
		|И	ПодчиненныйКешДанных.ВидНоменклатуры 	= КешДанных.ВидНоменклатуры
		|И	ПодчиненныйКешДанных.ТоварнаяКатегория 	= КешДанных.ТоварнаяКатегория
		|И	ПодчиненныйКешДанных.Производитель 		= КешДанных.Производитель
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА_НМ КАК РасчетТКА
		|ПО	РасчетТКА.Склад = ПодчиненныйКешДанных.Склад
		|И	РасчетТКА.ВидНоменклатуры 	= ПодчиненныйКешДанных.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = ПодчиненныйКешДанных.ТоварнаяКатегория
		|И	РасчетТКА.Производитель 	= ПодчиненныйКешДанных.Производитель
		|И  РасчетТКА.Номенклатура 		= ПодчиненныйКешДанных.Номенклатура
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДнейНаСкладе_ПР КАК ДнейНаСкладе
		|ПО ДнейНаСкладе.Склад 				= КешДанных.Склад
		|И	ДнейНаСкладе.ВидНоменклатуры 	= КешДанных.ВидНоменклатуры
		|И	ДнейНаСкладе.ТоварнаяКатегория 	= КешДанных.ТоварнаяКатегория
		|И	ДнейНаСкладе.Производитель 		= КешДанных.Производитель	
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанных.Склад,
		|	КешДанных.ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория,
		|	КешДанных.Производитель,
		|	КешДанных.ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку,
		|	IsNull(ДнейНаСкладе.ДНС, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР 
		|		КОГДА КешДанных.НомерПоПорядку = 0 
		|		ТОГДА 99999
		|		ИНАЧЕ КешДанных.НомерПоПорядку
		|	КОНЕЦ УБЫВ, IsNull(ДнейНаСкладе.ДНС, 0) УБЫВ
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 22.
		|ВЫБРАТЬ
		|	КешДанных.Склад 			КАК Склад,
		|	КешДанных.ВидНоменклатуры 	КАК ВидНоменклатуры, 
		|	КешДанных.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КешДанных.Производитель 	КАК Производитель,
		|	КешДанных.Номенклатура 		КАК Номенклатура,	
		|	КешДанных.ПосадочныеМеста 	КАК ПосадочныеМеста,
		|	КешДанных.ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|	КешДанных.НомерПоПорядку 			КАК НомерПоПорядку,
		|	
		|	IsNull(РасчетТКА.Количество, 0) 	КАК Количество,
		|	""Артикулов больше чем задано в матрице магазина!"" КАК ПричинаОтъезда,
		|	IsNull(РасчетТКА.КоличествоАртикулов, 0) 			КАК КоличествоАртикулов,
		|	IsNull(ДнейНаСкладе.КоличествоДней, 0) 				КАК ДНС
		|
		|ИЗ
		|	ПосадочныхМестПоНоменклатуре КАК КешДанных
		|	
		//|ЛЕВОЕ 
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасчетТКА_НМ КАК РасчетТКА
		|ПО	РасчетТКА.Склад 			= КешДанных.Склад
		|И	РасчетТКА.ВидНоменклатуры 	= КешДанных.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = КешДанных.ТоварнаяКатегория
		|И	РасчетТКА.Производитель 	= КешДанных.Производитель
		|И  РасчетТКА.Номенклатура 		= КешДанных.Номенклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|ПО	ДнейНаСкладе.АналитикаУчетаНоменклатуры.Номенклатура = КешДанных.Номенклатура
		|И  ДнейНаСкладе.АналитикаУчетаНоменклатуры.Склад 		 = КешДанных.Склад
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР 
		|		КОГДА КешДанных.НомерПоПорядку = 0 
		|		ТОГДА 99999
		|		ИНАЧЕ КешДанных.НомерПоПорядку
		|	КОНЕЦ УБЫВ, IsNull(ДнейНаСкладе.КоличествоДней, 0) УБЫВ				
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА_ТК;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА_ПР;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА_НМ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДнейНаСкладе_ТК;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДнейНаСкладе_ПР;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПосадочныхМестПоВидуНоменклатуры;
		//////////////////////////////////////////////////////////////////////////////////////////// 
		|УНИЧТОЖИТЬ ПосадочныхМестПоТоварнойКатегории;
		//////////////////////////////////////////////////////////////////////////////////////////// 
		|УНИЧТОЖИТЬ ПосадочныхМестПоПроизводителю;
		//////////////////////////////////////////////////////////////////////////////////////////// 
		|УНИЧТОЖИТЬ ПосадочныхМестПоНоменклатуре;
		|";
	Возврат ТекстЗапроса;	
		
КонецФункции // ПолучитьТекстЗапросаПеремещенияТоваровИзМатрицыПоДереву()



Процедура ВыполнитьОповещениеОбОшибках(Объект, ИмяСобытия, СтруктураОшибок, Оповестить)
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.ЗаказНаПеремещение") Тогда
		Объект.Статус = Перечисления.СтатусыВнутреннихЗаказов.КОбеспечению;
	КонецЕсли;
	Объект.Записать(РежимЗаписиДокумента.Запись);
	СтруктураОшибок.Вставить(Строка(ТипЗнч(Объект)) + " (управление матрицей) :", "e1c://server/gamlet/yt11#" + ПолучитьНавигационнуюСсылку(Объект.Ссылка));
	git_Objcon.ЗафиксироватьОшибкиВЖР(ИмяСобытия, СтруктураОшибок, Оповестить);
	
КонецПроцедуры // ВыполнитьОповещениеОбОшибках()

#КонецОбласти

#Область  СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "1.0.27";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "УправлениеАссортиментнымиМатрицами");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);
	ПараметрыРегистрации.Вставить("ВерсияБСП", "2.1.3.50");
    ПараметрыРегистрации.Вставить("Информация", "Управление ассортиментными матрицами [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "УправлениеАссортиментнымиМатрицами [" + Версия + "]", "УАМ", "ОткрытиеФормы", Ложь, "УАМ");
	ДобавитьКоманду(ТаблицаКоманд, "ОбновитьПродажиПоФорматамВФоне", 	"ОбновитьПродажиПоФорматамВФоне", 	"ВызовСерверногоМетода");
	ДобавитьКоманду(ТаблицаКоманд, "ОбновитьПродажиПоМагазинамВФоне", 	"ОбновитьПродажиПоМагазинамВФоне", 	"ВызовСерверногоМетода");
	ДобавитьКоманду(ТаблицаКоманд, "ОбновитьТоварыКОтъездуВФоне", 		"ОбновитьТоварыКОтъездуВФоне", 		"ВызовСерверногоМетода");
	ДобавитьКоманду(ТаблицаКоманд, "ОбновитьТоварыКПриездуВФоне", 		"ОбновитьТоварыКПриездуВФоне", 		"ВызовСерверногоМетода");
	ДобавитьКоманду(ТаблицаКоманд, "ОбновитьТоварыВРезервахВФоне", 		"ОбновитьТоварыВРезервахВФоне", 	"ВызовСерверногоМетода");
	ДобавитьКоманду(ТаблицаКоманд, "Регл. перемещение товаров в матрицу [" + Версия + "]", "ПереместитьТоварыВМатрицу();", "ВызовСерверногоМетода");
	ДобавитьКоманду(ТаблицаКоманд, "Регл. перемещение товаров из матрицы [" + Версия + "]", "ПереместитьТоварыИзМатрицы();", "ВызовСерверногоМетода");
	
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

#КонецОбласти
