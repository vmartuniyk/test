

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьУправлениеНаСервере();
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область ОбработчикСобытийСтраницыУправление

&НаКлиенте
Процедура УправлениеАссортиментнойМатрицейПриИзменении(Элемент)
	
	Отказ = Ложь;
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		РодительДанных = ТекущиеДанные.ПолучитьРодителя();
		
		ЭлементыПоРодителю = РодительДанных.ПолучитьЭлементы(); 
		СуммаПосадочныхМест = 0;
		Для каждого Строка Из ЭлементыПоРодителю Цикл
			СуммаПосадочныхМест = СуммаПосадочныхМест + Строка.ПосадочныеМеста;	
		КонецЦикла; 
		
		
		
		
		
	
		//ТекущийЭлементДерева = Элемент.ТекущийЭлемент;
		Если Элемент.ТекущийЭлемент = Элементы.УправлениеАссортиментнойМатрицейПосадочныеМеста
		  И	 РодительДанных.ВидНоменклатуры <> ПредопределенноеЗначение("Справочник.ВидыНоменклатуры.ПустаяСсылка") Тогда
			ТекущиеДанные.ПосадочныеМестаПроцент = ТекущиеДанные.ПосадочныеМеста / РодительДанных.ПосадочныеМеста * 100;
			РодительДанных.ДанныеДереваЗаполненость = "(" + Строка(Окр(СуммаПосадочныхМест / РодительДанных.ПосадочныеМеста * 100)) + "%)"
		КонецЕсли;

		ВыполнитьЗаписьИзмененийВРегистр_АМ_УправлениеАссортиментнойМатрицей("УправлениеАссортиментнойМатрицей", Элемент.ТекущиеДанные.ПолучитьИдентификатор(), Отказ);	
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеАссортиментнойМатрицейПередРазворачиванием(Элемент, Строка, Отказ)
	ОбновитьДеревоУправленияНаСервере(Строка);
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийСтраницыНастройки
	
&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаНастройки Тогда
		ОбновитьМагазиныПодУправлениемНаСервере();
	ИначеЕсли ТекущаяСтраница = Элементы.СтраницаУправление Тогда
		ОбновитьУправлениеНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПодУправлениемПриИзменении(Элемент)
	
	Отказ = Ложь;
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		ВыполнитьЗаписьИзмененийВРегистр_АМ_МагазиныПодУправлением("МагазиныПодУправлением", Элемент.ТекущиеДанные.ПолучитьИдентификатор(), Отказ);	
		Если Отказ = Ложь Тогда
			Состояние(НСтр("ru = 'Данные удачно записаны'"), 100, , БиблиотекаКартинок.УстановитьСтатусЗаявкиВыполнена);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#Область ОбработчикиКомандФормы



#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ТекущиеДанныеОпределены(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ТекущиеДанныеОпределены() 


&НаСервере
Процедура ОбновитьУправлениеНаСервере()
	
	ДеревоЗначений = РеквизитФормыВЗначение("УправлениеАссортиментнойМатрицей", Тип("ДеревоЗначений"));
	СтрокиДерева = ДеревоЗначений.Строки;
	СтрокиДерева.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаОбновитьУправлениеАссортиментнойМатрицей();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = СтрокиДерева.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Строки.Добавить();
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоЗначений, "УправлениеАссортиментнойМатрицей");
	
КонецПроцедуры // ОбновитьУправлениеНаСервере()

&НаСервере
Процедура ОбновитьДеревоУправленияНаСервере(Идентификатор)
	
	СтрокаДерева = УправлениеАссортиментнойМатрицей.НайтиПоИдентификатору(Идентификатор);
	ПараметрСклад 			  = СтрокаДерева.Склад;
	ПараметрВидНоменклатуры   = СтрокаДерева.ВидНоменклатуры;
	ПараметрТоварнаяКатегория = СтрокаДерева.ТоварнаяКатегория;
	
	СтрокаЭлементы = СтрокаДерева.ПолучитьЭлементы();
	СтрокаЭлементы.Очистить();
	
	
	УровеньВложенности = 0;
	Пока СтрокаДерева.ПолучитьРодителя() <> Неопределено Цикл
		СтрокаДерева = СтрокаДерева.ПолучитьРодителя();
		УровеньВложенности = УровеньВложенности + 1;			
	КонецЦикла;
	
	// Получаем уровень вложености "Склад"
	Если УровеньВложенности = 0 Тогда 
		ТекстЗапроса = ПолучитьТекстЗапросаОбновитьДеревоУправленияПоСкладу();
	// Получаем уровень вложености "ВидНоменклатуры"
	ИначеЕсли УровеньВложенности = 1 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаОбновитьДеревоУправленияПоВидуНоменклатуры();
	// Получаем уровень вложености "ТоварнаяКатегория"
	ИначеЕсли УровеньВложенности = 2 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаОбновитьДеревоДетальныеЗаписи();	
	Иначе
		Возврат;	
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Месяц", НачалоДня(ТекущаяДата() - 86400 * 31 * 3));
	Запрос.УстановитьПараметр("Склад", ПараметрСклад);
	Запрос.УстановитьПараметр("ВидНоменклатуры", ПараметрВидНоменклатуры);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ПараметрТоварнаяКатегория);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ДанныеДерева = "<Товарная категория не задана>" И Выборка.ТКА = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		Если ПустаяСтрока(Выборка.ДанныеРодителя) Тогда
			НоваяСтрока.ДанныеДерева = Выборка.ДанныеДерева;	
		Иначе
			НоваяСтрока.ДанныеДерева = Выборка.ДанныеРодителя + " / " + Выборка.ДанныеДерева;
		КонецЕсли;
		
		// Для подсчета процентов правильности заполнености Виды <-> ТК 
		Если ПараметрВидНоменклатуры.Пустая() Тогда
			Если Выборка.ДанныеДереваЗаполненость = 0 Тогда
				НоваяСтрока.ДанныеДереваЗаполненость = "(???%)";	
			Иначе
				НоваяСтрока.ДанныеДереваЗаполненость = "(" + Строка(Окр(Выборка.ДанныеДереваЗаполненость / НоваяСтрока.ПосадочныеМеста * 100)) + "%)";
			КонецЕсли;
		КонецЕсли;
		
		Если УровеньВложенности <> 2 Тогда
			НоваяСтрока.ПолучитьЭлементы().Добавить();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ОбновитьДеревоУправленияНаСервере()

&НаСервере
Процедура ОбновитьМагазиныПодУправлениемНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаМагазиныПодУправлением();
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() = Ложь Тогда
		МагазиныПодУправлением.Загрузить(РезультатЗапроса.Выгрузить());	
	КонецЕсли;
	
КонецПроцедуры // ОбновитьМагазиныПодУправлениемНаСервере()

&НаСервере
Процедура ВыполнитьЗаписьИзмененийВРегистр_АМ_МагазиныПодУправлением(ИмяТаблицы, Идентификатор, Отказ)
	
	РезультатПоиска = ЭтаФорма[ИмяТаблицы].НайтиПоИдентификатору(Идентификатор);
	Если РезультатПоиска <> Неопределено Тогда
		ПериодЗаписи = ТекущаяДатаСеанса();
		НаборЗаписей = РегистрыСведений.АМ_МагазиныПодУправлением.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ПериодЗаписи);
		НаборЗаписей.Отбор.Склад.Установить(РезультатПоиска.Склад);
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, РезультатПоиска);
			НоваяЗапись.Период = ПериодЗаписи;
		Попытка
			НаборЗаписей.Записать();
			РегистрыСведений.АМ_МагазиныПодУправлением.ПересчитатьИтоги();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неудача при попытке записи значения'"), , , , Отказ);	
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьЗаписьИзмененийВРегистр_АМ_МагазиныПодУправлением()

&НаСервере
Процедура ВыполнитьЗаписьИзмененийВРегистр_АМ_УправлениеАссортиментнойМатрицей(ИмяТаблицы, Идентификатор, Отказ)	
	
	РезультатПоиска = ЭтаФорма[ИмяТаблицы].НайтиПоИдентификатору(Идентификатор);
	Если РезультатПоиска <> Неопределено Тогда
		ПериодЗаписи = ТекущаяДатаСеанса();
		НаборЗаписей = РегистрыСведений.АМ_УправлениеАссортиментнойМатрицей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ПериодЗаписи);
		НаборЗаписей.Отбор.Склад.Установить(РезультатПоиска.Склад);
		НаборЗаписей.Отбор.ВидНоменклатуры.Установить(РезультатПоиска.ВидНоменклатуры);
		НаборЗаписей.Отбор.ТоварнаяКатегория.Установить(РезультатПоиска.ТоварнаяКатегория);
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, РезультатПоиска);
			НоваяЗапись.Период = ПериодЗаписи;
		Попытка
			НаборЗаписей.Записать();
			РегистрыСведений.АМ_УправлениеАссортиментнойМатрицей.ПересчитатьИтоги();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неудача при попытке записи значения'"), , , , Отказ);	
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры
	
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОбновитьУправлениеАссортиментнойМатрицей()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПРЕДСТАВЛЕНИЕ(МагазиныПодУправлением.Склад) КАК ДанныеДерева,
		|	МагазиныПодУправлением.Склад 				КАК Склад
		|ПОМЕСТИТЬ КешДанныхДляВывода 
		|ИЗ
		|	РегистрСведений.АМ_МагазиныПодУправлением.СрезПоследних КАК МагазиныПодУправлением
		|
		|ГДЕ
		|	МагазиныПодУправлением.ИспользуетсяУправление = Истина
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.ДанныеДерева	КАК ДанныеДерева,
		|   КешДанныхДляВывода.Склад		КАК Склад,
		|
		|	СРЕДНЕЕ(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ГлубинаОстаткаФактСреднее,
		|   0													КАК ГлубинаОстаткаФактМаксимальное,
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) 	КАК ТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Склад В (ВЫБРАТЬ Склад ИЗ КешДанныхДляВывода)) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Склад = КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ДанныеДерева
		|
		|УПОРЯДОЧИТЬ ПО
		|	КешДанныхДляВывода.ДанныеДерева Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаОбновитьУправлениеАссортиментнойМатрицей()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОбновитьДеревоУправленияПоСкладу()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ВидыНоменклатуры.Ссылка)	КАК ДанныеДерева,
		|	ПРЕДСТАВЛЕНИЕ(ВидыНоменклатуры.Родитель)КАК ДанныеРодителя, 	
		|	&Склад								   	КАК Склад,
		|	ВидыНоменклатуры.Ссылка				   	КАК ВидНоменклатуры,
		|	&ТоварнаяКатегория						КАК ТоварнаяКатегория
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|
		|ГДЕ
		| 	ВидыНоменклатуры.ЭтоГруппа = Ложь	
		|И	ВидыНоменклатуры.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.Склад			КАК Склад,
		|   КешДанныхДляВывода.ВидНоменклатуры	КАК ВидНоменклатуры,
		|
		|	СРЕДНЕЕ(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ГлубинаОстаткаФактСреднее,
		|   МАКСИМУМ(ТоварыОрганизацийОстатки.КоличествоОстаток)КАК ГлубинаОстаткаФактМаксимальное,
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) 	КАК ТКА
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Склад = &Склад) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Номенклатура.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|И	ТоварыОрганизацийОстатки.Склад 						  = КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	АМ_УправлениеАссортиментнойМатрицей.Склад 				КАК Склад,	
		|	АМ_УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 			КАК ПосадочныеМеста,
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ГлубинаОстатка, 0)			КАК ГлубинаОстатка
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры, 
		|																			ТоварнаяКатегория 
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК АМ_УправлениеАссортиментнойМатрицей	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	АМ_УАМ.Склад 								КАК Склад,	
		|	АМ_УАМ.ВидНоменклатуры 						КАК ВидНоменклатуры,
		|	СУММА(IsNull(АМ_УАМ.ПосадочныеМеста, 0)) 	КАК ДанныеДереваЗаполненость
		|ПОМЕСТИТЬ АМ_УАМ_ДанныеДереваЗаполненость
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры) В (	ВЫБРАТЬ 
		|															Склад, 
		|															ВидНоменклатуры
		|														ИЗ 
		|															КешДанныхДляВывода)
		|						И ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|СГРУППИРОВАТЬ ПО
		|	АМ_УАМ.Склад,	
		|   АМ_УАМ.ВидНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.ДанныеДерева							 			КАК ДанныеДерева,
		|	IsNull(АМ_УАМ_ДанныеДереваЗаполненость.ДанныеДереваЗаполненость, 0) КАК ДанныеДереваЗаполненость,
		|
		|	КешДанныхДляВывода.ДанныеРодителя		КАК ДанныеРодителя,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|
		|	УправлениеАссортиментнойМатрицей.ПосадочныеМеста 			КАК ПосадочныеМеста,
		|	УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|	УправлениеАссортиментнойМатрицей.ГлубинаОстатка				КАК ГлубинаОстатка,
		|
		|   РасчетТКА.ГлубинаОстаткаФактСреднее  				КАК ГлубинаОстаткаФактСреднее,
		|   РасчетТКА.ГлубинаОстаткаФактМаксимальное  			КАК ГлубинаОстаткаФактМаксимальное,
		|
		|	РасчетТКА.ТКА КАК ТКА		
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей
		|ПО	КешДанныхДляВывода.Склад 			 = УправлениеАссортиментнойМатрицей.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = УправлениеАссортиментнойМатрицей.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = УправлениеАссортиментнойМатрицей.ТоварнаяКатегория
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УАМ_ДанныеДереваЗаполненость КАК АМ_УАМ_ДанныеДереваЗаполненость
		|ПО	КешДанныхДляВывода.Склад 			 = АМ_УАМ_ДанныеДереваЗаполненость.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = АМ_УАМ_ДанныеДереваЗаполненость.ВидНоменклатуры
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО	РасчетТКА.Склад 		  = КешДанныхДляВывода.Склад
		|И	РасчетТКА.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|
		|УПОРЯДОЧИТЬ ПО
		|	КешДанныхДляВывода.ДанныеРодителя Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УАМ_ДанныеДереваЗаполненость;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаОбновитьДеревоУправленияПоСкладу()
 
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОбновитьДеревоУправленияПоВидуНоменклатуры()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ТоварныеКатегории.Ссылка)		КАК ДанныеДерева,
		|	ПРЕДСТАВЛЕНИЕ(ТоварныеКатегории.Родитель)	КАК ДанныеРодителя,
		|	&Склад								   		КАК Склад,
		|	&ВидНоменклатуры				   			КАК ВидНоменклатуры,
		|	ТоварныеКатегории.Ссылка					КАК ТоварнаяКатегория
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|
		|ГДЕ
		|	ТоварныеКатегории.Владелец = &ВидНоменклатуры
		|И 	ТоварныеКатегории.ЭтоГруппа = Ложь	
		|И	ТоварныеКатегории.ПометкаУдаления = Ложь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""<Товарная категория не задана>"",
		|	"""",
		|	&Склад,
		|	&ВидНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.Склад				КАК Склад,
		|   КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|
		|	СРЕДНЕЕ(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ГлубинаОстаткаФактСреднее,
		|   МАКСИМУМ(ТоварыОрганизацийОстатки.КоличествоОстаток)КАК ГлубинаОстаткаФактМаксимальное,
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) 	КАК ТКА
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Номенклатура.ВидНоменклатуры = &ВидНоменклатуры И Склад = &Склад) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Номенклатура.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	ТоварыОрганизацийОстатки.Номенклатура.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	ТоварыОрганизацийОстатки.Склад 						  	= КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	АМ_УправлениеАссортиментнойМатрицей.Склад 				КАК Склад,	
		|	АМ_УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 			КАК ПосадочныеМеста,
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|	IsNull(АМ_УправлениеАссортиментнойМатрицей.ГлубинаОстатка, 0)			КАК ГлубинаОстатка
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры, 
		|																			ТоварнаяКатегория 
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК АМ_УправлениеАссортиментнойМатрицей	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|	КешДанныхДляВывода.ДанныеРодителя		КАК ДанныеРодителя,	
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|
		|	УправлениеАссортиментнойМатрицей.ПосадочныеМеста 			КАК ПосадочныеМеста,
		|	ВЫРАЗИТЬ(УправлениеАссортиментнойМатрицей.ПосадочныеМеста / УправлениеАссортиментнойМатрицей_Родитель.ПосадочныеМеста * 100 КАК Число(3, 0))КАК ПосадочныеМестаПроцент,
		|	УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ 		КАК ОтклонениеКоличествоПМ,
		//|	АМ_УправлениеАссортиментнойМатрицей.ОтклонениеПроцентПМ 		КАК ОтклонениеПроцентПМ,
		|	УправлениеАссортиментнойМатрицей.ГлубинаОстатка  КАК ГлубинаОстатка,
		|
		|   РасчетТКА.ГлубинаОстаткаФактСреднее  				КАК ГлубинаОстаткаФактСреднее,
		|   РасчетТКА.ГлубинаОстаткаФактМаксимальное  			КАК ГлубинаОстаткаФактМаксимальное,
		|
		|	РасчетТКА.ТКА КАК ТКА
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей
		|ПО	КешДанныхДляВывода.Склад 			 = УправлениеАссортиментнойМатрицей.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = УправлениеАссортиментнойМатрицей.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = УправлениеАссортиментнойМатрицей.ТоварнаяКатегория
		|И	КешДанныхДляВывода.ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей_Родитель
		|ПО	УправлениеАссортиментнойМатрицей.Склад 			 = УправлениеАссортиментнойМатрицей_Родитель.Склад
		|И 	УправлениеАссортиментнойМатрицей.ВидНоменклатуры = УправлениеАссортиментнойМатрицей_Родитель.ВидНоменклатуры
		|И	УправлениеАссортиментнойМатрицей_Родитель.ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО	РасчетТКА.Склад 		  	= КешДанныхДляВывода.Склад
		|И	РасчетТКА.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|
		//|УПОРЯДОЧИТЬ ПО
		//|	КешДанныхДляВывода.ДанныеДерева Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаОбновитьДеревоУправленияПоВидуНоменклатуры()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОбновитьДеревоДетальныеЗаписи()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(СпрНоменклатура.Ссылка)		КАК ДанныеДерева,
		|	""""										КАК ДанныеРодителя,
		|	СпрНоменклатура.Ссылка				   		КАК Номенклатура,
		|	&Склад								   		КАК Склад,
		|	СпрНоменклатура.ВидНоменклатуры				КАК ВидНоменклатуры,
		|	СпрНоменклатура.ТоварнаяКатегория			КАК ТоварнаяКатегория
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|
		|ГДЕ
		|	СпрНоменклатура.ВидНоменклатуры = &ВидНоменклатуры
		|И	СпрНоменклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|И 	СпрНоменклатура.ЭтоГруппа = Ложь	
		|И	СпрНоменклатура.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Склад	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|	КешДанныхДляВывода.ДанныеРодителя		КАК ДанныеРодителя,
		|	КешДанныхДляВывода.Номенклатура			КАК Номенклатура,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|
		|	ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток КАК ГлубинаОстаткаФактСреднее,
		|	ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток КАК ГлубинаОстаткаФактМаксимальное,
		|   ВЫБОР
		|		КОГДА ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток <> 0
		|			ТОГДА 1
		|		КОГДА ТоварыОрганизацийОбороты.КоличествоПриход <> 0 ИЛИ ТоварыОрганизацийОбороты.КоличествоРасход <> 0
		|			ТОГДА 0
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(&Месяц, , , ,  
		|											(Номенклатура, Склад) В (	ВЫБРАТЬ 
		|																			Номенклатура, 
		|																			Склад 
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК ТоварыОрганизацийОбороты
		|ПО	КешДанныхДляВывода.Номенклатура	= ТоварыОрганизацийОбороты.Номенклатура
		|И 	КешДанныхДляВывода.Склад	 	= ТоварыОрганизацийОбороты.Склад
		|
		|УПОРЯДОЧИТЬ ПО
		|	КешДанныхДляВывода.Номенклатура.Наименование Возр
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаОбновитьДеревоДетальныеЗаписи()


&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаМагазиныПодУправлением()

	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склады.Склад КАК Склад,
		|	МагазиныПодУправлением.ИспользуетсяУправление КАК ИспользуетсяУправление
		|ИЗ
		|	РегистрСведений.Модуль_ДоступныеСклады КАК Склады
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_МагазиныПодУправлением.СрезПоследних КАК МагазиныПодУправлением
		|ПО	МагазиныПодУправлением.Склад = Склады.Склад
		|
		|ГДЕ
		|	Основной = Истина
		|УПОРЯДОЧИТЬ ПО
		|	Склады.Склад.Наименование Возр	
		|";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаМагазиныПодУправлением()




 

#КонецОбласти



