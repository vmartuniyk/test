

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//ОбновитьУправлениеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОбновитьУправлениеНаСервере();
	
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#Область ОбработчикиСобытийСтраницыУправлениеМатрицей

&НаКлиенте
Процедура ГруппаВидаНоменклатурыПриИзменении(Элемент)
	ОбновитьУправлениеНаСервере();
	ДеревоФорматыМагазиновПриАктивизацииСтроки(Элементы.ДеревоФорматыМагазинов);
КонецПроцедуры



&НаКлиенте
Процедура ДеревоФорматыМагазиновПриАктивизацииСтроки(Элемент)
	
	АссортиментнаяМатрица.ПолучитьЭлементы().Очистить();
	
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		
		ТекущаяСтрока = Элемент.ТекущаяСтрока;
		Если ТекущаяСтрока <> Неопределено Тогда
			ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей(ТекущаяСтрока);	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура АссортиментнаяМатрицаПриИзменении(Элемент)
	
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		ВыполнитьЗаписьИзмененийВРегистр_АМ_УправлениеАссортиментнойМатрицей("АссортиментнаяМатрица", Элемент.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяМатрицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "АссортиментнаяМатрицаДанныеДерева" Тогда
		
		Если ТекущиеДанныеОпределены(Элемент) Тогда
			ТекущиеДанные = Элемент.ТекущиеДанные;
			Если ТекущиеДанные.Номенклатура.Пустая() = Ложь Тогда
				Свойство = "Номенклатура";
			ИначеЕсли ТекущиеДанные.Производитель.Пустая() = Ложь Тогда
				Свойство = "Производитель";
			ИначеЕсли ТекущиеДанные.ТоварнаяКатегория.Пустая() = Ложь Тогда
				Свойство = "ТоварнаяКатегория";
			ИначеЕсли ТекущиеДанные.ВидНоменклатуры.Пустая() = Ложь Тогда
				Свойство = "ВидНоменклатуры";
			Иначе
				Возврат;
			КонецЕсли;
			
			ОткрытьЗначение(ТекущиеДанные[Свойство]);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // АссортиментнаяМатрицаВыбор()

&НаКлиенте
Процедура АссортиментнаяМатрицаПриАктивизацииСтроки(Элемент)
	
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		ОбновитьАналитическиеДанные(Элемент.ТекущаяСтрока);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяМатрицаПередРазворачиванием(Элемент, Строка, Отказ)
	
	РазвернутьПодчиненуюГруппуАссортиментнойМатрицы(Строка);
	
КонецПроцедуры // РазвернутьПодчиненуюГруппуАссортиментнойМатрицы()

&НаКлиенте
Процедура АссортиментнаяМатрицаИсключеноПриИзменении(Элемент)
	
	Если ТекущиеДанныеОпределены(Элементы.АссортиментнаяМатрица) Тогда
		
		ТекущиеДанные = Элементы.АссортиментнаяМатрица.ТекущиеДанные;
		Если ТекущиеДанные.Исключено = 2 Тогда
			ТекущиеДанные.Исключено = 0;
		ИначеЕсли ТекущиеДанные.Исключено = 0 Тогда
			ТекущиеДанные.Исключено = 1;	
		КонецЕсли;
		
		Если ТекущиеДанные.Исключено = 1 Тогда
			РодительСтрокиДерева = ТекущиеДанные.ПолучитьРодителя();
			Пока РодительСтрокиДерева <> Неопределено Цикл
				РодительСтрокиДерева.Исключено = 2;
				РодительСтрокиДерева = РодительСтрокиДерева.ПолучитьРодителя();
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяМатрицаПосадочныеМестаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	АМ = Элементы.АссортиментнаяМатрица;
	Если ТекущиеДанныеОпределены(АМ) Тогда	
		
		ТекущиеДанные = АМ.ТекущиеДанные;
		РодительДанных = ТекущиеДанные.ПолучитьРодителя();

		Если РодительДанных <> Неопределено Тогда
			
			СуммаМест = 0;
			ЭлементыПоРодителю = РодительДанных.ПолучитьЭлементы();
			Для Каждого ЭлементыРодителя Из ЭлементыПоРодителю Цикл
				СуммаМест = СуммаМест + ЭлементыРодителя.ПосадочныеМеста;
			КонецЦикла;
			
			НовоеЗначение = ?(Текст = "—", 0, Число(Текст));
			Если РодительДанных.ПосадочныеМеста < СуммаМест + НовоеЗначение - ТекущиеДанные.ПосадочныеМеста Тогда
				СтандартнаяОбработка = Ложь;
				Текст = ТекущиеДанные.ПосадочныеМеста;
				ТекстСообщения = НСтр("ru = 'Посадочных мест не может быть больше у подчиненных элементов чем у родительской группы!'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Иначе
				ТекущиеДанные.ПосадочныеМеста = НовоеЗначение; 
				ВыполнитьДополнительнуюОбработкуСтрокиДерева(ТекущиеДанные, РодительДанных);	
			КонецЕсли;
				
		КонецЕсли;	
		
	КонецЕсли;
		
КонецПроцедуры



&НаКлиенте
Процедура СтраницыАналитикиПриСменеСтраницы(Элемент, ТекущаяСтраница)
	АссортиментнаяМатрицаПриАктивизацииСтроки(Элементы.АссортиментнаяМатрица);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьСкрытьДеревоФорматовМагазинов(Команда)
	Элементы.ГруппаФорматыМагазинов.Видимость = НЕ Элементы.ГруппаФорматыМагазинов.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДанныеВИрокезе(Команда)
	
	Если ТекущиеДанныеОпределены(Элементы.АссортиментнаяМатрица) Тогда
		
		СписокНоменклатуры = Новый СписокЗначений;
		Для Каждого ИдентификаторВыделения ИЗ Элементы.АссортиментнаяМатрица.ВыделенныеСтроки Цикл
			РезультатПоиска = АссортиментнаяМатрица.НайтиПоИдентификатору(ИдентификаторВыделения);
			Если НЕ РезультатПоиска.Номенклатура.Пустая() Тогда
				СписокНоменклатуры.Добавить(РезультатПоиска.Номенклатура);	
			КонецЕсли;
		КонецЦикла;
		
		Если СписокНоменклатуры.Количество() > 0 Тогда
			СтрокаИмяФормы = "ВнешняяОбработка.%ИмяФормы%.Форма.Форма";
			СтрокаИмяФормы = СтрЗаменить(СтрокаИмяФормы, "%ИмяФормы%", git_ПереопределениеОбработчиковКлиент.ПолучитьИмяВнешнегоОбъекта("Ирокез"));	
			ОткрытьФорму(СтрокаИмяФормы, Новый Структура("МассивНоменклатуры", СписокНоменклатуры));
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры



//&НаКлиенте
//Процедура ПереместитьТовар(Команда)
//	
//	// Костыль
//	МассивВыделенныхСтрок = Элементы.УправлениеАссортиментнойМатрицей.ВыделенныеСтроки;
//	ФормаДокумента = ПолучитьФорму("Документ.ПеремещениеТоваров.Форма.ФормаДокумента");
//	
//	Товары = ФормаДокумента.Объект.Товары;
//	Для каждого ЭлементМассива Из МассивВыделенныхСтрок Цикл
//		РезультатПоиска = УправлениеАссортиментнойМатрицей.НайтиПоИдентификатору(ЭлементМассива);
//		ФормаДокумента.Объект.СкладОтправитель = РезультатПоиска.Склад; 
//		НоваяСтрока = Товары.Добавить();		
//		НоваяСтрока.Номенклатура = РезультатПоиска.Номенклатура;
//		НоваяСтрока.Количество = РезультатПоиска.ГлубинаОстаткаФактМаксимальное - РезультатПоиска.ГлубинаОстатка;
//	    НоваяСтрока.КоличествоУпаковок = РезультатПоиска.ГлубинаОстаткаФактМаксимальное - РезультатПоиска.ГлубинаОстатка;
//	КонецЦикла;
//	
//	ОткрытьФорму(ФормаДокумента);
//	
//КонецПроцедуры // ПереместитьТовар()

//&НаКлиенте
//Процедура ПерестроитьДеревоУправления(Команда)
//	
//	Идентификатор = Неопределено;
//	
//	Элемент = Элементы.УправлениеАссортиментнойМатрицей;
//	Если ТекущиеДанныеОпределены(Элемент) Тогда
//		Идентификатор = Элемент.ТекущиеДанные.ПолучитьИдентификатор();
//	КонецЕсли;
//	
//	ПерестроитьДеревоУправленияНаСервере(Идентификатор);
//	
//КонецПроцедуры // ПерестроитьДеревоУправления()

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ТекущиеДанныеОпределены(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ТекущиеДанныеОпределены() 

&НаКлиентеНаСервереБезКонтекста
Процедура ВыполнитьДополнительнуюОбработкуСтрокиДерева(НоваяСтрока, СтрокаДерева)
	
		Если СтрокаДерева.ПосадочныеМеста <> 0 Тогда
			НоваяСтрока.ПосадочныеМестаПроцент = Строка(Окр(НоваяСтрока.ПосадочныеМеста / СтрокаДерева.ПосадочныеМеста * 100)) + "%";
		Иначе
			НоваяСтрока.ПосадочныеМестаПроцент = "0%";	
		КонецЕсли;
		
		Если НоваяСтрока.ПосадочныеМеста <> 0 Тогда
			НоваяСтрока.ОтклонениеПроцентПМ = Строка(Окр(НоваяСтрока.ОтклонениеКоличествоПМ / НоваяСтрока.ПосадочныеМеста * 100)) + "%";
		Иначе
			НоваяСтрока.ОтклонениеПроцентПМ = "0%";	
		КонецЕсли;
	
КонецПроцедуры // ВыполнитьДополнительнуюОбработкуСтрокиДерева()


&НаСервере
Процедура ОбновитьУправлениеНаСервере()

	Перем тмпСклад, тмпФорматМагазина, Идентификатор;
	
	ТекущаяСтрока = Элементы.ДеревоФорматыМагазинов.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		РезультатПоиска = ДеревоФорматыМагазинов.НайтиПоИдентификатору(ТекущаяСтрока);
		тмпСклад = РезультатПоиска.Склад;
		тмпФорматМагазина = РезультатПоиска.ФорматМагазина;
	КонецЕсли;
	 
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДеревоФорматовМагазина();
	Запрос.УстановитьПараметр("ГруппаВидаНоменклатуры", ГруппаВидаНоменклатуры);
	ВыгрузкаДерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для каждого СтрокаВерхнегоУровня Из ВыгрузкаДерево.Строки Цикл
		СтрокаВерхнегоУровня.ДанныеДерева = Строка(СтрокаВерхнегоУровня.ФорматМагазина);
		Если СтрокаВерхнегоУровня.ПосадочныеМеста = 0 И СтрокаВерхнегоУровня.КоличествоАртикулов = 0 Тогда 
			СтрокаВерхнегоУровня.Состояние = 0;
		ИначеЕсли СтрокаВерхнегоУровня.ПосадочныеМеста = 0 И СтрокаВерхнегоУровня.КоличествоАртикулов > 0 Тогда
			СтрокаВерхнегоУровня.Состояние = 3;
		ИначеЕсли СтрокаВерхнегоУровня.ПосадочныеМеста < СтрокаВерхнегоУровня.КоличествоАртикулов Тогда
			СтрокаВерхнегоУровня.Состояние = 1;
		Иначе
			СтрокаВерхнегоУровня.Состояние = 2;	
		КонецЕсли;
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(ВыгрузкаДерево, "ДеревоФорматыМагазинов");
	
	
	
	Если тмпФорматМагазина <> Неопределено Тогда
		
		Для каждого СтрокаДерева Из ДеревоФорматыМагазинов.ПолучитьЭлементы() Цикл
			
			Если СтрокаДерева.ФорматМагазина = тмпФорматМагазина Тогда
				
				Идентификатор = СтрокаДерева.ПолучитьИдентификатор();
				Если тмпСклад.Пустая() = Ложь Тогда
					
					Для каждого СтрокаДерева Из СтрокаДерева.ПолучитьЭлементы() Цикл
						
						Если СтрокаДерева.Склад = тмпСклад Тогда
							Идентификатор = СтрокаДерева.ПолучитьИдентификатор();
							Прервать;
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				Элементы.ДеревоФорматыМагазинов.ТекущаяСтрока = Идентификатор;
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьУправлениеНаСервере()

&НаСервере
Процедура ОбновитьАналитическиеДанные(Идентификатор)

	СтрокаДерева = АссортиментнаяМатрица.НайтиПоИдентификатору(Идентификатор);
	ПараметрСклад = СтрокаДерева.Склад;
	ПараметрВидНоменклатуры = СтрокаДерева.ВидНоменклатуры;	
	ПараметрТоварнаяКатегория = СтрокаДерева.ТоварнаяКатегория;
	ПараметрПроизводитель = СтрокаДерева.Производитель;
	ПараметрНоменклатура = СтрокаДерева.Номенклатура;
	
	
	ТекстЗапроса = ПолучитьТекстЗапросаАналитическихДанных();	
	
	СтраницыАналитики = Элементы.СтраницыАналитики;
	Если СтраницыАналитики.ТекущаяСтраница = Элементы.СтраницаПоФорматамМагазинов Тогда
	
		СтрокаЭлементы = АналитикаПоФорматамМагазинов.ПолучитьЭлементы();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", "Склады.Ссылка КАК ФорматМагазина, ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%2", "Склады.Ссылка");
		
	ИначеЕсли СтраницыАналитики.ТекущаяСтраница = Элементы.СтраницаПоМагазинам Тогда
		
		СтрокаЭлементы = АналитикаПоМагазинам.ПолучитьЭлементы();
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", "Склады.Склад КАК Склад, ");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%2", "Склады.Склад");	
		
	КонецЕсли;
	
	СтрокаЭлементы.Очистить();
	ПродажиНеделя = 0;
	Продажи2Недели = 0;
	ПродажиМесяц = 0;
	ПродажиКвартал = 0;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Склад", ПараметрСклад);
	Запрос.УстановитьПараметр("ВидНоменклатуры", ПараметрВидНоменклатуры);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ПараметрТоварнаяКатегория);
	Запрос.УстановитьПараметр("Производитель", ПараметрПроизводитель);
	Запрос.УстановитьПараметр("Номенклатура", ПараметрНоменклатура);
	Запрос.УстановитьПараметр("КонецПериода", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("НачалоПериодаНеделя", НачалоДня(ТекущаяДатаСеанса()) - 7 * 86400);
	Запрос.УстановитьПараметр("НачалоПериода2Недели", НачалоДня(ТекущаяДатаСеанса()) - 14 * 86400);
	Запрос.УстановитьПараметр("НачалоПериодаМесяц", НачалоДня(ТекущаяДатаСеанса()) - 31 * 86400);
	Запрос.УстановитьПараметр("НачалоПериодаКвартал", НачалоДня(ТекущаяДатаСеанса()) - 91 * 86400);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		ПродажиНеделя 	= ПродажиНеделя 	+ НоваяСтрока.ПродажиНеделя;
		Продажи2Недели 	= Продажи2Недели 	+ НоваяСтрока.Продажи2Недели;
		ПродажиМесяц 	= ПродажиМесяц 		+ НоваяСтрока.ПродажиМесяц;
		ПродажиКвартал 	= ПродажиКвартал 	+ НоваяСтрока.ПродажиКвартал;
		
	КонецЦикла;
	
	Для каждого СтрокаЭлемент Из СтрокаЭлементы Цикл
		
		Если ПродажиНеделя <> 0 Тогда
			СтрокаЭлемент.ПродажиПроцентНеделя = Строка(Окр(СтрокаЭлемент.ПродажиНеделя / ПродажиНеделя * 100)) + "%";
		КонецЕсли;
		
		Если Продажи2Недели <> 0 Тогда
			СтрокаЭлемент.ПродажиПроцент2Недели = Строка(Окр(СтрокаЭлемент.Продажи2Недели / Продажи2Недели * 100)) + "%";
		КонецЕсли;
		
		Если ПродажиМесяц <> 0 Тогда
			СтрокаЭлемент.ПродажиПроцентМесяц = Строка(Окр(СтрокаЭлемент.ПродажиМесяц / ПродажиМесяц * 100)) + "%";
		КонецЕсли;
		
		Если ПродажиКвартал <> 0 Тогда
			СтрокаЭлемент.ПродажиПроцентКвартал = Строка(Окр(СтрокаЭлемент.ПродажиКвартал / ПродажиКвартал * 100)) + "%";
		КонецЕсли;
		
	
	КонецЦикла; 
	

КонецПроцедуры // ОбновитьАналитическиеДанные()
 
&НаСервере
Процедура ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей(Идентификатор)
	
	СтрокаДерева = ДеревоФорматыМагазинов.НайтиПоИдентификатору(Идентификатор);
	СтрокаЭлементы = АссортиментнаяМатрица.ПолучитьЭлементы();
	
	Запрос = ВыполнитьКешированиеСкладовПоДеревуФорматов(СтрокаДерева);	
	
	Если АналитическийПросмотр = Ложь Тогда
		
		Запрос.Текст = ПолучитьТекстЗапросаАссортиментнойМатрицыКорень();
		Запрос.УстановитьПараметр("ТоварнаяКатегория", Справочники.ТоварныеКатегории.ПустаяСсылка());
		Запрос.УстановитьПараметр("ГруппаВидаНоменклатуры", ГруппаВидаНоменклатуры);	
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = СтрокаЭлементы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если ПустаяСтрока(Выборка.ДанныеРодителя) Тогда
				НоваяСтрока.ДанныеДерева = Выборка.ДанныеДерева;	
			Иначе
				НоваяСтрока.ДанныеДерева = Выборка.ДанныеРодителя + " / " + Выборка.ДанныеДерева;
			КонецЕсли;
						
			ВыполнитьДополнительнуюОбработкуСтрокиДерева(НоваяСтрока, СтрокаДерева);
			
			НоваяСтрока.ПолучитьЭлементы().Добавить();
			
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц.Закрыть();
		
КонецПроцедуры // ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей()

&НаСервере
Процедура РазвернутьПодчиненуюГруппуАссортиментнойМатрицы(Идентификатор)
	
	СтрокаДерева = АссортиментнаяМатрица.НайтиПоИдентификатору(Идентификатор);
	ПараметрСклад 			  = СтрокаДерева.Склад;
	ПараметрПроизводитель	  = СтрокаДерева.Производитель;
	ПараметрВидНоменклатуры   = СтрокаДерева.ВидНоменклатуры;	
	ПараметрТоварнаяКатегория = СтрокаДерева.ТоварнаяКатегория;
	
	
	СтрокаЭлементы = СтрокаДерева.ПолучитьЭлементы();
	СтрокаЭлементы.Очистить();
	
	
	УровеньВложенности = 0;
	Пока СтрокаДерева.ПолучитьРодителя() <> Неопределено Цикл
		СтрокаДерева = СтрокаДерева.ПолучитьРодителя();
		УровеньВложенности = УровеньВложенности + 1;			
	КонецЦикла;
	
	// Получаем уровень вложености "Склад"
	Если УровеньВложенности = 0 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаАссортиментнойМатрицыПоВидуНоменклатуры();
	// Получаем уровень вложености "ТоварнаяКатегория"
	ИначеЕсли УровеньВложенности = 1 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории();		
	// Получаем уровень вложености "Производители"
	ИначеЕсли УровеньВложенности = 2 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи();	
	Иначе
		Возврат;	
	КонецЕсли;
	
	
	//УстановитьПривилегированныйРежим(Истина);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Склад", ПараметрСклад);
	Запрос.УстановитьПараметр("Производитель", ПараметрПроизводитель);
	Запрос.УстановитьПараметр("ВидНоменклатуры", ПараметрВидНоменклатуры);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ПараметрТоварнаяКатегория);
	Запрос.УстановитьПараметр("ГруппаВидаНоменклатуры", ГруппаВидаНоменклатуры);
	Запрос.УстановитьПараметр("КонецПериода", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("НачалоПериодаМесяц", НачалоДня(ТекущаяДатаСеанса()) - 31 * 86400);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ДанныеДерева = "<Производитель не задан>" И Выборка.КоличествоАртикулов = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.ДанныеДерева = "<Товарная категория не задана>" И Выборка.КоличествоАртикулов = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		ВыполнитьДополнительнуюОбработкуСтрокиДерева(НоваяСтрока, НоваяСтрока.ПолучитьРодителя());
				
		Если УровеньВложенности <> 2 Тогда
			НоваяСтрока.ПолучитьЭлементы().Добавить();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // РазвернутьПодчиненуюГруппуАссортиментнойМатрицы()


&НаСервере
Процедура ВыполнитьЗаписьИзмененийВРегистр_АМ_УправлениеАссортиментнойМатрицей(ИмяТаблицы, Идентификатор)	
	
	РезультатПоиска = ЭтаФорма[ИмяТаблицы].НайтиПоИдентификатору(Идентификатор);
	Если РезультатПоиска <> Неопределено Тогда
		ПериодЗаписи = ТекущаяДатаСеанса();
		НаборЗаписей = РегистрыСведений.АМ_УправлениеАссортиментнойМатрицей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ПериодЗаписи);
		НаборЗаписей.Отбор.Склад.Установить(РезультатПоиска.Склад);
		НаборЗаписей.Отбор.ВидНоменклатуры.Установить(РезультатПоиска.ВидНоменклатуры);
		НаборЗаписей.Отбор.ТоварнаяКатегория.Установить(РезультатПоиска.ТоварнаяКатегория);
		НаборЗаписей.Отбор.Производитель.Установить(РезультатПоиска.Производитель);
		НаборЗаписей.Отбор.Номенклатура.Установить(РезультатПоиска.Номенклатура);
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, РезультатПоиска);
			НоваяЗапись.Период = ПериодЗаписи;
			НоваяЗапись.Исключено = ?(РезультатПоиска.Исключено = 2, 0, РезультатПоиска.Исключено);
		Попытка
			НаборЗаписей.Записать();
			РегистрыСведений.АМ_УправлениеАссортиментнойМатрицей.ПересчитатьИтоги();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неудача при попытке записи значения'"));	
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры



&НаСервере
Функция ВыполнитьКешированиеСкладовПоДеревуФорматов(СтрокаДерева)
	
	УстановитьПривилегированныйРежим(Истина);
		
	Склад 		   = СтрокаДерева.Склад;
	ФорматМагазина = СтрокаДерева.ФорматМагазина;
	
	// Блокировка изменения матрицы, если просмотр идет по формату магазина
  	АналитическийПросмотр = Склад.Пустая();
	
	// Кеширование списка складов
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ПолучитьТекстЗапросаКешаСкладов();
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ФорматМагазина", ФорматМагазина);
	Запрос.Выполнить();
	
	Возврат Запрос; 
	
КонецФункции // ВыполнитьКешированиеСкладовПоДеревуФорматов()



&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаДеревоФорматовМагазина()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	Ссылка	
		|ПОМЕСТИТЬ КешВидовНоменклатуры
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|ГДЕ
		|	ЭтоГруппа = Ложь
		|И	ВидыНоменклатуры.Ссылка В ИЕРАРХИИ(&ГруппаВидаНоменклатуры)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	Склад					КАК Склад,
		|	СУММА(ПосадочныеМеста)	КАК ПосадочныеМеста 
		|ПОМЕСТИТЬ КешПоСкладамПоПосадочнымМестам
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|																	ВидНоменклатуры  	В (ВЫБРАТЬ Ссылка ИЗ КешВидовНоменклатуры)
		|																И 	ТоварнаяКатегория 	= ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|																И	Производитель  		= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																И	Номенклатура  		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																							) КАК АМ_УправлениеАссортиментнойМатрицей
		|СГРУППИРОВАТЬ ПО
		|	Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;	
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	Склад 					КАК Склад,
		|	КОЛИЧЕСТВО(Номенклатура)КАК КоличествоАртикулов
		|ПОМЕСТИТЬ КешПоСкладамПоКоличествуАртикулов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(, Номенклатура.ВидНоменклатуры В (ВЫБРАТЬ Ссылка ИЗ КешВидовНоменклатуры)) КАК ТоварыОрганизацийОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Склад
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА IsNull(КешПоСкладамПоПосадочнымМестам.ПосадочныеМеста, 0) = 0 
		|			И IsNull(КешПоСкладамПоКоличествуАртикулов.КоличествоАртикулов, 0) = 0
		|			ТОГДА 0
		|		КОГДА IsNull(КешПоСкладамПоПосадочнымМестам.ПосадочныеМеста, 0) = 0 
		|			И IsNull(КешПоСкладамПоКоличествуАртикулов.КоличествоАртикулов, 0) > 0
		|			ТОГДА 3
		|		КОГДА КешПоСкладамПоПосадочнымМестам.ПосадочныеМеста < КешПоСкладамПоКоличествуАртикулов.КоличествоАртикулов
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ															КАК Состояние,
		|	ПРЕДСТАВЛЕНИЕ(АМ_ФорматыМагазиновСклады.Склад)					КАК ДанныеДерева,
		|	АМ_ФорматыМагазинов.Ссылка										КАК ФорматМагазина,
		|	АМ_ФорматыМагазиновСклады.Склад									КАК Склад,
		|	АМ_ФорматыМагазиновСклады.ИспользуетсяУправление				КАК ПодУправлением,
		|	IsNull(КешПоСкладамПоПосадочнымМестам.ПосадочныеМеста, 0)	 	КАК ПосадочныеМеста,
		|	IsNull(КешПоСкладамПоКоличествуАртикулов.КоличествоАртикулов, 0)КАК КоличествоАртикулов,
		|	""""															КАК Пустышка
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов КАК АМ_ФорматыМагазинов
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АМ_ФорматыМагазинов.Склады КАК АМ_ФорматыМагазиновСклады
		|ПО 	АМ_ФорматыМагазиновСклады.Ссылка = АМ_ФорматыМагазинов.Ссылка
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешПоСкладамПоКоличествуАртикулов КАК КешПоСкладамПоКоличествуАртикулов
		|ПО	КешПоСкладамПоКоличествуАртикулов.Склад = АМ_ФорматыМагазиновСклады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешПоСкладамПоПосадочнымМестам КАК КешПоСкладамПоПосадочнымМестам
		|ПО	КешПоСкладамПоПосадочнымМестам.Склад = АМ_ФорматыМагазиновСклады.Склад
		|
		|ГДЕ
		|	АМ_ФорматыМагазинов.Активен = Истина
		|	
		|СГРУППИРОВАТЬ ПО
		|	АМ_ФорматыМагазинов.Ссылка,
		|	АМ_ФорматыМагазиновСклады.Склад,
		|	АМ_ФорматыМагазиновСклады.ИспользуетсяУправление,
		|	КешПоСкладамПоПосадочнымМестам.ПосадочныеМеста,
		|	КешПоСкладамПоКоличествуАртикулов.КоличествоАртикулов
		|	
		|ИТОГИ 
		|	СУММА(ПосадочныеМеста),
		|	СУММА(КоличествоАртикулов) 
		|ПО
		|	ФорматМагазина 	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешВидовНоменклатуры;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешПоСкладамПоПосадочнымМестам;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешПоСкладамПоКоличествуАртикулов;	
		|";
	Возврат ТекстЗапроса;		
		
КонецФункции // ПолучитьТекстЗапросаДеревоФорматовМагазина()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаКешаСкладов()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ФорматыМагазинов.Склад КАК Склад
		|
		|ПОМЕСТИТЬ КешСклады
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК ФорматыМагазинов
		|
		|ГДЕ
		|	ФорматыМагазинов.Ссылка = &ФорматМагазина 		
		|И  ФорматыМагазинов.ИспользуетсяУправление = Истина
		|И	ВЫБОР
		|		КОГДА &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			ТОГДА Истина
		|		ИНАЧЕ ФорматыМагазинов.Склад = &Склад
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад	
		|";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаКешаСкладов()
 
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыКорень()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ВидыНоменклатуры.Ссылка)	КАК ДанныеДерева,
		|	ПРЕДСТАВЛЕНИЕ(ВидыНоменклатуры.Родитель)КАК ДанныеРодителя, 	
		|	&Склад									КАК Склад,
		|	ВидыНоменклатуры.Ссылка				   	КАК ВидНоменклатуры,
		|	&ТоварнаяКатегория						КАК ТоварнаяКатегория
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|
		|ГДЕ
		| 	ВидыНоменклатуры.ЭтоГруппа = Ложь	
		|И	ВидыНоменклатуры.ПометкаУдаления = Ложь
		|И	ВЫБОР
		|		КОГДА &ГруппаВидаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВидыНоменклатуры.Ссылка В ИЕРАРХИИ(&ГруппаВидаНоменклатуры)
		|	КОНЕЦ 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.Склад			КАК Склад,
		|   КешДанныхДляВывода.ВидНоменклатуры	КАК ВидНоменклатуры,
		|
		|	СРЕДНЕЕ(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ГлубинаОстаткаФактСреднее,
		|   МАКСИМУМ(ТоварыОрганизацийОстатки.КоличествоОстаток)КАК ГлубинаОстаткаФактМаксимальное,
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) 	КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|                                                              
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Склад = &Склад) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Номенклатура.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|И	ТоварыОрганизацийОстатки.Склад 						  = КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АМ_УправлениеАссортиментнойМатрицей.Склад 				КАК Склад,	
		|	АМ_УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста 		КАК ПосадочныеМеста,
		|	АМ_УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.Исключено 				КАК Исключено
		|
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры, 
		|																			ТоварнаяКатегория 
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК АМ_УправлениеАссортиментнойМатрицей	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АМ_УАМ.Склад 								КАК Склад,	
		|	АМ_УАМ.ВидНоменклатуры 						КАК ВидНоменклатуры,
		|	СУММА(IsNull(АМ_УАМ.ПосадочныеМеста, 0)) 	КАК ПосадочныеМеста,
		|	СУММА(IsNull(АМ_УАМ.МинимальныйЗапас, 0))   КАК МинимальныйЗапас,
		|	СУММА(IsNull(АМ_УАМ.СтраховойЗапас, 0))     КАК СтраховойЗапас,
		|	СУММА(IsNull(АМ_УАМ.МаксимальныйЗапас, 0))  КАК МаксимальныйЗапас
		|
		|ПОМЕСТИТЬ АМ_УАМ_ДанныеДереваЗаполненость
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры) В (	ВЫБРАТЬ 
		|															Склад, 
		|															ВидНоменклатуры
		|														ИЗ 
		|															КешДанныхДляВывода)
		|						И ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|СГРУППИРОВАТЬ ПО
		|	АМ_УАМ.Склад,	
		|   АМ_УАМ.ВидНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	АМ_УАМ.Склад 								КАК Склад,	
		|	АМ_УАМ.ВидНоменклатуры 						КАК ВидНоменклатуры,
		|	АМ_УАМ.Исключено                            КАК Исключено
		|
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры) В (	ВЫБРАТЬ 
		|															Склад, 
		|															ВидНоменклатуры
		|														ИЗ 
		|															КешДанныхДляВывода)
		|						И ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|ГДЕ 
		|	АМ_УАМ.Исключено = Истина	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) = Истина
		|			ТОГДА 1
		|		КОГДА IsNull(КешИсключенияВПодчиненных.Исключено, Ложь) = Истина
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Исключено, 
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0 
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) = 0
		|			ТОГДА 0
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0 
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) > 0
		|			ТОГДА 3
		|		КОГДА УправлениеАссортиментнойМатрицей.ПосадочныеМеста < РасчетТКА.КоличествоАртикулов
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ									КАК Состояние,
		|
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|	КешДанныхДляВывода.ДанныеРодителя		КАК ДанныеРодителя,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|
		|	IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 		КАК ПосадочныеМеста,
		|	IsNull(УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|
		|	ВЫБОР
		|		КОГДА IsNull(АМ_УАМ_ДанныеДереваЗаполненость.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ АМ_УАМ_ДанныеДереваЗаполненость.МинимальныйЗапас / АМ_УАМ_ДанныеДереваЗаполненость.ПосадочныеМеста
		|	КОНЕЦ КАК МинимальныйЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(АМ_УАМ_ДанныеДереваЗаполненость.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ АМ_УАМ_ДанныеДереваЗаполненость.СтраховойЗапас / АМ_УАМ_ДанныеДереваЗаполненость.ПосадочныеМеста
		|	КОНЕЦ КАК СтраховойЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(АМ_УАМ_ДанныеДереваЗаполненость.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ АМ_УАМ_ДанныеДереваЗаполненость.МаксимальныйЗапас / АМ_УАМ_ДанныеДереваЗаполненость.ПосадочныеМеста
		|	КОНЕЦ КАК МаксимальныйЗапас,
		|
		|   РасчетТКА.ГлубинаОстаткаФактСреднее  		КАК ГлубинаОстаткаФактСреднее,
		|   РасчетТКА.ГлубинаОстаткаФактМаксимальное  	КАК ГлубинаОстаткаФактМаксимальное,
		|	РасчетТКА.КоличествоАртикулов 				КАК КоличествоАртикулов
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей
		|ПО	КешДанныхДляВывода.Склад 			 = УправлениеАссортиментнойМатрицей.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = УправлениеАссортиментнойМатрицей.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = УправлениеАссортиментнойМатрицей.ТоварнаяКатегория
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УАМ_ДанныеДереваЗаполненость КАК АМ_УАМ_ДанныеДереваЗаполненость
		|ПО	КешДанныхДляВывода.Склад 			 = АМ_УАМ_ДанныеДереваЗаполненость.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = АМ_УАМ_ДанныеДереваЗаполненость.ВидНоменклатуры
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО	РасчетТКА.Склад 		  = КешДанныхДляВывода.Склад
		|И	РасчетТКА.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных
		|ПО	КешИсключенияВПодчиненных.Склад 		  = КешДанныхДляВывода.Склад
		|И	КешИсключенияВПодчиненных.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|
		|УПОРЯДОЧИТЬ ПО
		|	КешДанныхДляВывода.ДанныеРодителя Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешИсключенияВПодчиненных;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УАМ_ДанныеДереваЗаполненость;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
			
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыКорень()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыПоВидуНоменклатуры()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ТоварныеКатегории.Ссылка)		КАК ДанныеДерева,
		|	&Склад								   		КАК Склад,
		|	&ВидНоменклатуры				   			КАК ВидНоменклатуры,
		|	ТоварныеКатегории.Ссылка					КАК ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка) КАК Производитель
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|
		|ГДЕ
		|	ТоварныеКатегории.Владелец = &ВидНоменклатуры
		|И 	ТоварныеКатегории.ЭтоГруппа = Ложь	
		|И	ТоварныеКатегории.ПометкаУдаления = Ложь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""<Товарная категория не задана>"",
		|	&Склад,
		|	&ВидНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.Склад				КАК Склад,
		|   КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|
		|	СРЕДНЕЕ(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ГлубинаОстаткаФактСреднее,
		|   МАКСИМУМ(ТоварыОрганизацийОстатки.КоличествоОстаток)КАК ГлубинаОстаткаФактМаксимальное,
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) 	КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Номенклатура.ВидНоменклатуры = &ВидНоменклатуры И Склад = &Склад) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Номенклатура.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	ТоварыОрганизацийОстатки.Номенклатура.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	ТоварыОрганизацийОстатки.Склад 						  	= КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АМ_УправлениеАссортиментнойМатрицей.Склад 				КАК Склад,	
		|	АМ_УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста			КАК ПосадочныеМеста,
		|	АМ_УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|	АМ_УправлениеАссортиментнойМатрицей.МинимальныйЗапас   		КАК МинимальныйЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.СтраховойЗапас     		КАК СтраховойЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.МаксимальныйЗапас  		КАК МаксимальныйЗапас,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.Исключено		  	КАК Исключено,
		|	АМ_УправлениеАссортиментнойМатрицей.НомерПоПорядку		КАК НомерПоПорядку
		|
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры, 
		|																			ТоварнаяКатегория,
		|																			Производитель
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК АМ_УправлениеАссортиментнойМатрицей	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Склад КАК Склад,	
		|	ВидНоменклатуры КАК ВидНоменклатуры,
		|	ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Исключено КАК Исключено
		|
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры,
		|					                                                        ТоварнаяКатегория
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|						И Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|ГДЕ 
		|	АМ_УАМ.Исключено = Истина	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ	
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) = Истина
		|			ТОГДА 1
		|		КОГДА IsNull(КешИсключенияВПодчиненных.Исключено, Ложь) = Истина
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Исключено,
		|	IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, 0) КАК НомерПоПорядку,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0 
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) = 0
		|			ТОГДА 0
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0 
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) > 0
		|			ТОГДА 3
		|		КОГДА УправлениеАссортиментнойМатрицей.ПосадочныеМеста < РасчетТКА.КоличествоАртикулов
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ									КАК Состояние,
		|
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|
		|	IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 		КАК ПосадочныеМеста,
		|	IsNull(УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.МинимальныйЗапас / УправлениеАссортиментнойМатрицей.ПосадочныеМеста
		|	КОНЕЦ КАК МинимальныйЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.СтраховойЗапас / УправлениеАссортиментнойМатрицей.ПосадочныеМеста
		|	КОНЕЦ КАК СтраховойЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.МаксимальныйЗапас / УправлениеАссортиментнойМатрицей.ПосадочныеМеста
		|	КОНЕЦ КАК МаксимальныйЗапас,
		|
		|   РасчетТКА.ГлубинаОстаткаФактСреднее  		КАК ГлубинаОстаткаФактСреднее,
		|   РасчетТКА.ГлубинаОстаткаФактМаксимальное  	КАК ГлубинаОстаткаФактМаксимальное,
		|	РасчетТКА.КоличествоАртикулов 				КАК КоличествоАртикулов
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей
		|ПО	КешДанныхДляВывода.Склад 			 = УправлениеАссортиментнойМатрицей.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = УправлениеАссортиментнойМатрицей.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = УправлениеАссортиментнойМатрицей.ТоварнаяКатегория
		|И	КешДанныхДляВывода.ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей_Родитель
		|ПО	УправлениеАссортиментнойМатрицей.Склад 			 = УправлениеАссортиментнойМатрицей_Родитель.Склад
		|И 	УправлениеАссортиментнойМатрицей.ВидНоменклатуры = УправлениеАссортиментнойМатрицей_Родитель.ВидНоменклатуры
		|И	УправлениеАссортиментнойМатрицей_Родитель.ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО	РасчетТКА.Склад 		  	= КешДанныхДляВывода.Склад
		|И	РасчетТКА.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных
		|ПО	КешИсключенияВПодчиненных.Склад 		  	= КешДанныхДляВывода.Склад
		|И	КешИсключенияВПодчиненных.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	КешИсключенияВПодчиненных.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, 0) = 0
		|		ТОГДА 99999 
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.НомерПоПорядку
		|	КОНЕЦ Возр	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешИсключенияВПодчиненных;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыПоВидуНоменклатуры()
 
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0. Кеш номенклатуры
		|ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка 			КАК Номенклатура,
		|	СпрНоменклатура.Производитель 	КАК Производитель
		|ПОМЕСТИТЬ СпрНоменклатура
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|ГДЕ
		|	СпрНоменклатура.ВидНоменклатуры = &ВидНоменклатуры
		|И	СпрНоменклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПРЕДСТАВЛЕНИЕ(Производитель.Ссылка)		КАК ДанныеДерева,
		|	&Склад								   	КАК Склад,
		|	&ВидНоменклатуры				   		КАК ВидНоменклатуры,
		|	&ТоварнаяКатегория						КАК ТоварнаяКатегория,
		|	Производители.Ссылка                    КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.Производители КАК Производители
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ СпрНоменклатура КАК СпрНоменклатура
		|ПО	СпрНоменклатура.Производитель = Производители.Ссылка
		|
		|ГДЕ
		|	Производители.ПометкаУдаления = Ложь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""<Производитель не задан>"",
		|	&Склад,
		|	&ВидНоменклатуры,
		|	&ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.Склад				КАК Склад,
		|   КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель	 	КАК Производитель,
		|
		|	СРЕДНЕЕ(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ГлубинаОстаткаФактСреднее,
		|   МАКСИМУМ(ТоварыОрганизацийОстатки.КоличествоОстаток)КАК ГлубинаОстаткаФактМаксимальное,
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) 	КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ СпрНоменклатура) И Склад = &Склад) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Номенклатура.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	ТоварыОрганизацийОстатки.Номенклатура.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	ТоварыОрганизацийОстатки.Номенклатура.Производитель	    = КешДанныхДляВывода.Производитель
		|И	ТоварыОрганизацийОстатки.Склад 						  	= КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АМ_УправлениеАссортиментнойМатрицей.Склад 				КАК Склад,	
		|	АМ_УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	АМ_УправлениеАссортиментнойМатрицей.Производитель		КАК Производитель,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста 		КАК ПосадочныеМеста,
		|	АМ_УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|	АМ_УправлениеАссортиментнойМатрицей.МинимальныйЗапас   		КАК МинимальныйЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.СтраховойЗапас     		КАК СтраховойЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.МаксимальныйЗапас  		КАК МаксимальныйЗапас,
		| 
		|	АМ_УправлениеАссортиментнойМатрицей.Исключено		  	КАК Исключено,
		|	АМ_УправлениеАссортиментнойМатрицей.НомерПоПорядку      КАК НомерПоПорядку
		|
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, 
		|						ВидНоменклатуры, 
		|						ТоварнаяКатегория, 
		|						Производитель,
		|						Номенклатура) В (	ВЫБРАТЬ 
		|												Склад, 
		|												ВидНоменклатуры, 
		|												ТоварнаяКатегория,
		|												Производитель,
		|												Номенклатура
		|											ИЗ 
		|												КешДанныхДляВывода)
		|										  ) КАК АМ_УправлениеАссортиментнойМатрицей	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Склад КАК Склад,	
		|	ВидНоменклатуры КАК ВидНоменклатуры,
		|	ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Производитель КАК Производитель,
		|	Исключено КАК Исключено
		|
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры,
		|					                                                        ТоварнаяКатегория,
		|																			Производитель
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|						И Производитель <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|ГДЕ 
		|	АМ_УАМ.Исключено = Истина	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) = Истина
		|			ТОГДА 1
		|		КОГДА IsNull(КешИсключенияВПодчиненных.Исключено, Ложь) = Истина
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Исключено,
		|	IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, 0) КАК НомерПоПорядку,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0 
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) = 0
		|			ТОГДА 0
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0 
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) > 0
		|			ТОГДА 3
		|		КОГДА УправлениеАссортиментнойМатрицей.ПосадочныеМеста < РасчетТКА.КоличествоАртикулов
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ									КАК Состояние,
		|
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель		КАК Производитель,
		|
		|	IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 		КАК ПосадочныеМеста,
		|	IsNull(УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.МинимальныйЗапас / УправлениеАссортиментнойМатрицей.ПосадочныеМеста
		|	КОНЕЦ КАК МинимальныйЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.СтраховойЗапас / УправлениеАссортиментнойМатрицей.ПосадочныеМеста
		|	КОНЕЦ КАК СтраховойЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.МаксимальныйЗапас / УправлениеАссортиментнойМатрицей.ПосадочныеМеста
		|	КОНЕЦ КАК МаксимальныйЗапас,
		|
		|   РасчетТКА.ГлубинаОстаткаФактСреднее  		КАК ГлубинаОстаткаФактСреднее,
		|   РасчетТКА.ГлубинаОстаткаФактМаксимальное  	КАК ГлубинаОстаткаФактМаксимальное,
		|	РасчетТКА.КоличествоАртикулов 				КАК КоличествоАртикулов
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей
		|ПО	КешДанныхДляВывода.Склад 			 = УправлениеАссортиментнойМатрицей.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = УправлениеАссортиментнойМатрицей.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = УправлениеАссортиментнойМатрицей.ТоварнаяКатегория
		|И  КешДанныхДляВывода.Производитель	 = УправлениеАссортиментнойМатрицей.Производитель
		|И	КешДанныхДляВывода.Производитель 	<> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей_Родитель
		|ПО	УправлениеАссортиментнойМатрицей.Склад 			 	= УправлениеАссортиментнойМатрицей_Родитель.Склад
		|И 	УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	= УправлениеАссортиментнойМатрицей_Родитель.ВидНоменклатуры
		|И 	УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	= УправлениеАссортиментнойМатрицей_Родитель.ТоварнаяКатегория
		|И	УправлениеАссортиментнойМатрицей_Родитель.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО	РасчетТКА.Склад 		  	= КешДанныхДляВывода.Склад
		|И	РасчетТКА.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	РасчетТКА.Производитель 	= КешДанныхДляВывода.Производитель
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных
		|ПО	КешИсключенияВПодчиненных.Склад 		  	= КешДанныхДляВывода.Склад
		|И	КешИсключенияВПодчиненных.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	КешИсключенияВПодчиненных.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	КешИсключенияВПодчиненных.Производитель 	= КешДанныхДляВывода.Производитель
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, 0) = 0
		|		ТОГДА 99999 
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.НомерПоПорядку
		|	КОНЕЦ Возр
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СпрНоменклатура;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешИсключенияВПодчиненных;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории()
 
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(СпрНоменклатура.Ссылка)		КАК ДанныеДерева,
		|	СпрНоменклатура.Ссылка				   		КАК Номенклатура,
		|	&Склад								   		КАК Склад,
		|	СпрНоменклатура.ВидНоменклатуры				КАК ВидНоменклатуры,
		|	СпрНоменклатура.ТоварнаяКатегория			КАК ТоварнаяКатегория,
		|	СпрНоменклатура.Производитель				КАК Производитель
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|
		|ГДЕ
		|	СпрНоменклатура.ВидНоменклатуры = &ВидНоменклатуры
		|И	СпрНоменклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|И	СпрНоменклатура.Производитель = &Производитель
		|И 	СпрНоменклатура.ЭтоГруппа = Ложь	
		|И	СпрНоменклатура.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Склад	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АМ_УправлениеАссортиментнойМатрицей.Склад 				КАК Склад,	
		|	АМ_УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	АМ_УправлениеАссортиментнойМатрицей.Производитель	 	КАК Производитель,
		|	АМ_УправлениеАссортиментнойМатрицей.Номенклатура	 	КАК Номенклатура,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста 	КАК ПосадочныеМеста,
		|	АМ_УправлениеАссортиментнойМатрицей.МинимальныйЗапас   	КАК МинимальныйЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.СтраховойЗапас     	КАК СтраховойЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.МаксимальныйЗапас  	КАК МаксимальныйЗапас,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.Исключено		  	КАК Исключено,
		|	АМ_УправлениеАссортиментнойМатрицей.НомерПоПорядку		КАК НомерПоПорядку
		|
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, Номенклатура) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры, 
		|																			ТоварнаяКатегория,
		|																			Производитель,
		|																			Номенклатура
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК АМ_УправлениеАссортиментнойМатрицей	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) КАК Исключено,
		|	IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, Ложь) КАК НомерПоПорядку,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 	= 0 
		|			И IsNull(ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток, 0)>= 0
		|			ТОГДА 0
		//|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0 
		//|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) > 0
		//|			ТОГДА 3
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 1 
		|			И IsNull(ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток, 0) = 0
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ									КАК Состояние,
		|
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель		КАК Производитель,
		|	КешДанныхДляВывода.Номенклатура			КАК Номенклатура,
		|
		|	IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) КАК ПосадочныеМеста,
		|
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.МинимальныйЗапас / УправлениеАссортиментнойМатрицей.ПосадочныеМеста
		|	КОНЕЦ КАК МинимальныйЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.СтраховойЗапас / УправлениеАссортиментнойМатрицей.ПосадочныеМеста
		|	КОНЕЦ КАК СтраховойЗапас,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.МаксимальныйЗапас / УправлениеАссортиментнойМатрицей.ПосадочныеМеста
		|	КОНЕЦ КАК МаксимальныйЗапас,
		|
		|   ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток КАК ГлубинаОстаткаФактСреднее,
		|   ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток КАК ГлубинаОстаткаФактМаксимальное,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток > 0 
		|			ТОГДА 1 
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоАртикулов
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(&НачалоПериодаМесяц, &КонецПериода, , ,  
		|											(Номенклатура, Склад) В (	ВЫБРАТЬ 
		|																			Номенклатура, 
		|																			Склад 
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК ТоварыОрганизацийОбороты
		|ПО	КешДанныхДляВывода.Номенклатура	= ТоварыОрганизацийОбороты.Номенклатура
		|И 	КешДанныхДляВывода.Склад	 	= ТоварыОрганизацийОбороты.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей
		|ПО	УправлениеАссортиментнойМатрицей.Склад 			 	= КешДанныхДляВывода.Склад
		|И 	УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	= КешДанныхДляВывода.ТоварнаяКатегория
		|И 	УправлениеАссортиментнойМатрицей.Производитель 		= КешДанныхДляВывода.Производитель
		|И	УправлениеАссортиментнойМатрицей.Номенклатура 		= КешДанныхДляВывода.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, 0) = 0
		|		ТОГДА 99999 
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.НомерПоПорядку
		|	КОНЕЦ Возр,
		|	КешДанныхДляВывода.Номенклатура.Наименование Возр
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи()
 
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаАналитическихДанных()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ
		|	АналитикаУчетаНоменклатуры.Ссылка КАК АналитикаУчетаНоменклатуры,
		|	АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
		|	АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	АналитикаУчетаНоменклатуры.Склад КАК Склад
		|ПОМЕСТИТЬ КешАналитикаУчетаНоменклатуры
		|ИЗ
		|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ГДЕ
		|	АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры = &ВидНоменклатуры
		|И	ВЫБОР
		|		КОГДА &ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|			ТОГДА Истина
		|		ИНАЧЕ АналитикаУчетаНоменклатуры.Номенклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|	КОНЕЦ
		|И	ВЫБОР
		|		КОГДА &Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|			ТОГДА Истина
		|		ИНАЧЕ АналитикаУчетаНоменклатуры.Номенклатура.Производитель = &Производитель
		|	КОНЕЦ
		|И	ВЫБОР
		|		КОГДА &Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА Истина
		|		ИНАЧЕ АналитикаУчетаНоменклатуры.Номенклатура = &Номенклатура
		|	КОНЕЦ			
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1. Продажи по неделям
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АналитикаУчетаНоменклатуры.Склад 						КАК Склад,
		|	СУММА(КоличествоОборот) 								КАК ПродажиНеделя,
		|	КОЛИЧЕСТВО(АналитикаУчетаНоменклатуры.Номенклатура) 	КАК ПродажиНеделяПоАртикулам
		|ПОМЕСТИТЬ ПродажиПоНеделям
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериодаНеделя, &КонецПериода, , АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие))
		|
		|СГРУППИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры.Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2. Продажи по неделям "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склад							КАК Склад,
		|	Сумма(НаличиеПодЗаказРасход)   	КАК ПродажиНеделяПодЗаказ
		|ПОМЕСТИТЬ ПродажиПоНеделямПодЗаказ
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериодаНеделя, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры))
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3. Продажи по 2-х неделям
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АналитикаУчетаНоменклатуры.Склад 						КАК Склад,
		|	СУММА(КоличествоОборот) 								КАК Продажи2Недели,
		|	КОЛИЧЕСТВО(АналитикаУчетаНоменклатуры.Номенклатура) 	КАК Продажи2НеделиПоАртикулам
		|ПОМЕСТИТЬ Продажи2ПоНеделям
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериода2Недели, &КонецПериода, , АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие))
		|
		|СГРУППИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры.Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4. Продажи по 2-х неделям "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склад							КАК Склад,
		|	Сумма(НаличиеПодЗаказРасход)   	КАК Продажи2НеделиПодЗаказ
		|ПОМЕСТИТЬ ПродажиПо2НеделямПодЗаказ
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериода2Недели, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры))
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5. Продажи за месяц
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АналитикаУчетаНоменклатуры.Склад 						КАК Склад,
		|	СУММА(КоличествоОборот) 							КАК ПродажиМесяц,
		|	КОЛИЧЕСТВО(АналитикаУчетаНоменклатуры.Номенклатура) КАК ПродажиМесяцПоАртикулам
		|ПОМЕСТИТЬ ПродажиЗаМесяц
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериодаМесяц, &КонецПериода, ,  АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие))
		|
		|СГРУППИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры.Склад	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6. Продажи за месяц "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склад							КАК Склад,
		|	Сумма(НаличиеПодЗаказРасход)   	КАК ПродажиМесяцПодЗаказ
		|ПОМЕСТИТЬ ПродажиЗаМесяцПодЗаказ
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериодаМесяц, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры))
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7. Продажи за квартал
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АналитикаУчетаНоменклатуры.Склад 					КАК Склад,
		|	СУММА(КоличествоОборот) 							КАК ПродажиКвартал,
		|	КОЛИЧЕСТВО(АналитикаУчетаНоменклатуры.Номенклатура) КАК ПродажиКварталПоАртикулам
		|ПОМЕСТИТЬ ПродажиЗаКвартал
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериодаКвартал, &КонецПериода, ,  АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие))
		|
		|СГРУППИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры.Склад	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8. Продажи за квартал "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склад							КАК Склад,
		|	Сумма(НаличиеПодЗаказРасход)   	КАК ПродажиКварталПодЗаказ
		|ПОМЕСТИТЬ ПродажиЗаКварталПодЗаказ
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериодаКвартал, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры))
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	Склад
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 9.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	%1
		|	СУММА(ОстаткиНаСкладе.ВНаличииОстаток) КАК НаСкладе,
		|
		|	СУММА(ПродажиПоНеделям.ПродажиНеделя) КАК ПродажиНеделя,
		|	СУММА(ПродажиПоНеделям.ПродажиНеделяПоАртикулам) КАК ПродажиНеделяПоАртикулам,
		|	СУММА(ПродажиПоНеделямПодЗаказ.ПродажиНеделяПодЗаказ) КАК ПродажиНеделяПодЗаказ,
		|
		|	СУММА(Продажи2ПоНеделям.Продажи2Недели) КАК Продажи2Недели,
		|	СУММА(Продажи2ПоНеделям.Продажи2НеделиПоАртикулам) КАК Продажи2НеделиПоАртикулам,
		|	СУММА(ПродажиПо2НеделямПодЗаказ.Продажи2НеделиПодЗаказ) КАК Продажи2НеделиПодЗаказ,
		|
		|	СУММА(ПродажиЗаМесяц.ПродажиМесяц) КАК ПродажиМесяц,
		|	СУММА(ПродажиЗаМесяц.ПродажиМесяцПоАртикулам) КАК ПродажиМесяцПоАртикулам,
		|	СУММА(ПродажиЗаМесяцПодЗаказ.ПродажиМесяцПодЗаказ) КАК ПродажиМесяцПодЗаказ,
		|
		|	СУММА(ПродажиЗаКвартал.ПродажиКвартал) КАК ПродажиКвартал,
		|	СУММА(ПродажиЗаКвартал.ПродажиКварталПоАртикулам) КАК ПродажиКварталПоАртикулам,
		|	СУММА(ПродажиЗаКварталПодЗаказ.ПродажиКварталПодЗаказ) КАК ПродажиКварталПодЗаказ
		|
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК Склады
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(, (Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры)) КАК ОстаткиНаСкладе
		|ПО ОстаткиНаСкладе.Склад = Склады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоНеделям КАК ПродажиПоНеделям
		|ПО ПродажиПоНеделям.Склад = Склады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоНеделямПодЗаказ КАК ПродажиПоНеделямПодЗаказ
		|ПО ПродажиПоНеделямПодЗаказ.Склад = Склады.Склад
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ Продажи2ПоНеделям КАК Продажи2ПоНеделям
		|ПО Продажи2ПоНеделям.Склад = Склады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПо2НеделямПодЗаказ КАК ПродажиПо2НеделямПодЗаказ
		|ПО ПродажиПо2НеделямПодЗаказ.Склад = Склады.Склад
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаМесяц КАК ПродажиЗаМесяц
		|ПО ПродажиЗаМесяц.Склад = Склады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаМесяцПодЗаказ КАК ПродажиЗаМесяцПодЗаказ
		|ПО ПродажиЗаМесяцПодЗаказ.Склад = Склады.Склад
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаКвартал КАК ПродажиЗаКвартал
		|ПО ПродажиЗаКвартал.Склад = Склады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаКварталПодЗаказ КАК ПродажиЗаКварталПодЗаказ
		|ПО ПродажиЗаКварталПодЗаказ.Склад = Склады.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	%2	
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПродажиКвартал Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешАналитикаУчетаНоменклатуры;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиПоНеделям;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиПоНеделямПодЗаказ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Продажи2ПоНеделям;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиПо2НеделямПодЗаказ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаМесяц;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаМесяцПодЗаказ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаКвартал;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаКварталПодЗаказ;
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаАналитическихДанных()




 


//&НаСервере
//Процедура ВыполнитьВостановлениеКурсораПриПерестройкиДерева(РезультатПоиска, Знач Свойство, Знач Значение)
//	
//	Если ЗначениеЗаполнено(Значение) Тогда
//		ЭлементыДерева = РезультатПоиска.ПолучитьЭлементы();
//		Для каждого ЭлементДерева Из ЭлементыДерева Цикл
//			Если ЭлементДерева[Свойство] = Значение Тогда
//				РезультатПоиска = ЭлементДерева;
//				//ОбновитьДеревоУправленияНаСервере(РезультатПоиска.ПолучитьИдентификатор());
//				Прервать;
//			КонецЕсли;
//		КонецЦикла; 
//	КонецЕсли;
//	
//КонецПроцедуры // ВыполнитьВостановлениеКурсораПриПерестройкиДерева()

#КонецОбласти



