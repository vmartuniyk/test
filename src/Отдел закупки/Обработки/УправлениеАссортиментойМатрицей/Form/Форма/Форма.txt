
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Параметры.Свойство("ДополнительнаяОбработкаСсылка", git_ПереопределениеОбработчиковСервер.ПолучитьСсылкуНаВнешнийОбъект("УправлениеАссортиментнымиМатрицами"));//ОбъектСсылка);
	ОбъектСсылка = git_ПереопределениеОбработчиковСервер.ПолучитьСсылкуНаВнешнийОбъект("УправлениеАссортиментнымиМатрицами"); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьПродажиПоФорматамВФоне" Тогда
		СтрокаЭлементы = АналитикаПоФорматамМагазинов.ПолучитьЭлементы();
	ИначеЕсли ИмяСобытия = "ОбновитьПродажиПоМагазинамВФоне" Тогда
		СтрокаЭлементы = АналитикаПоМагазинам.ПолучитьЭлементы();
	ИначеЕсли ИмяСобытия = "ОбновитьТоварыКОтъездуВФоне" Тогда
		СтрокаЭлементы = АналитикаТоварыКОтъезду.ПолучитьЭлементы();
	ИначеЕсли ИмяСобытия = "ОбновитьТоварыКПриездуВФоне" Тогда
		СтрокаЭлементы = АналитикаТоварыКПриезду.ПолучитьЭлементы();
	ИначеЕсли ИмяСобытия = "ОбновитьТоварыВРезервахВФоне" Тогда
		СтрокаЭлементы = АналитикаТоварыВРезервах.ПолучитьЭлементы();
	КонецЕсли;
		

	Если ИмяСобытия = "ОбновитьПродажиПоФорматамВФоне" 
	 ИЛИ ИмяСобытия = "ОбновитьПродажиПоМагазинамВФоне" Тогда
	 
		ПродажиНеделя = 0; Продажи2Недели = 0; ПродажиМесяц = 0; ПродажиКвартал = 0;
		СтрокаЭлементы.Очистить();
		Если ТипЗнч(Параметр) = Тип("Массив") Тогда
			
			Для каждого СтруктураЗаписи Из Параметр Цикл
			
				НоваяСтрока = СтрокаЭлементы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураЗаписи);
				
				ПродажиНеделя 	= ПродажиНеделя 	+ НоваяСтрока.ПродажиНеделя;
				Продажи2Недели 	= Продажи2Недели 	+ НоваяСтрока.Продажи2Недели;
				ПродажиМесяц 	= ПродажиМесяц 		+ НоваяСтрока.ПродажиМесяц;
				ПродажиКвартал 	= ПродажиКвартал 	+ НоваяСтрока.ПродажиКвартал;
	
				НоваяСтрока.ПолучитьЭлементы().Добавить();
				
			КонецЦикла; 
		
			Для каждого СтрокаЭлемент Из СтрокаЭлементы Цикл
								
				Если ПродажиНеделя <> 0 Тогда
					СтрокаЭлемент.ПродажиПроцентНеделя = Строка(Окр(СтрокаЭлемент.ПродажиНеделя / ПродажиНеделя * 100)) + "%";
				КонецЕсли;
				
				Если Продажи2Недели <> 0 Тогда
					СтрокаЭлемент.ПродажиПроцент2Недели = Строка(Окр(СтрокаЭлемент.Продажи2Недели / Продажи2Недели * 100)) + "%";
				КонецЕсли;
				
				Если ПродажиМесяц <> 0 Тогда
					СтрокаЭлемент.ПродажиПроцентМесяц = Строка(Окр(СтрокаЭлемент.ПродажиМесяц / ПродажиМесяц * 100)) + "%";
				КонецЕсли;
				
				Если ПродажиКвартал <> 0 Тогда
					СтрокаЭлемент.ПродажиПроцентКвартал = Строка(Окр(СтрокаЭлемент.ПродажиКвартал / ПродажиКвартал * 100)) + "%";
				КонецЕсли;
		 	
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ОбновитьТоварыКОтъездуВФоне"
		ИЛИ   ИмяСобытия = "ОбновитьТоварыВРезервахВФоне" Тогда
		
		СтрокаЭлементы.Очистить();	
		Если ТипЗнч(Параметр) = Тип("Массив") Тогда
			
			Для каждого СтруктураЗаписи Из Параметр Цикл
			
				НоваяСтрока = СтрокаЭлементы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураЗаписи);
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ОбновитьТоварыКПриездуВФоне" Тогда
		
		СтрокаЭлементы.Очистить();	
		Если ТипЗнч(Параметр) = Тип("Массив") Тогда
			
			Для каждого СтруктураЗаписи Из Параметр Цикл
			
				НоваяСтрока = СтрокаЭлементы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураЗаписи);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОбновитьУправлениеНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаОшибки Тогда
		ОбновитьСтраницуОшибок();	
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытийСтраницыУправлениеМатрицей

&НаКлиенте
Процедура ГруппаВидаНоменклатурыПриИзменении(Элемент)
	ОбновитьУправлениеНаСервере();
	ДеревоФорматыМагазиновПриАктивизацииСтроки(Элементы.ДеревоФорматыМагазинов);
КонецПроцедуры



&НаКлиенте
Процедура ДеревоФорматыМагазиновПриАктивизацииСтроки(Элемент)
	
	АссортиментнаяМатрица.ПолучитьЭлементы().Очистить();
	АналитикаПоМагазинам.ПолучитьЭлементы().Очистить();
	АналитикаПоФорматамМагазинов.ПолучитьЭлементы().Очистить();
	АналитикаТоварыКОтъезду.ПолучитьЭлементы().Очистить();
	АналитикаТоварыКПриезду.ПолучитьЭлементы().Очистить();
	АналитикаТоварыВРезервах.ПолучитьЭлементы().Очистить();
	
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей(Элемент.ТекущаяСтрока);	
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура АссортиментнаяМатрицаПриИзменении(Элемент)
	
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		ВыполнитьЗаписьИзмененийВРегистр_АМ_УправлениеАссортиментнойМатрицей("АссортиментнаяМатрица", Элемент.ТекущаяСтрока);
		
		ОбновитьПодвалАссортиментнойМатрицы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяМатрицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "АссортиментнаяМатрицаДанныеДерева" Тогда
		
		Если ТекущиеДанныеОпределены(Элемент) Тогда
			ТекущиеДанные = Элемент.ТекущиеДанные;
			Если ТекущиеДанные.Номенклатура.Пустая() = Ложь Тогда
				Свойство = "Номенклатура";
			ИначеЕсли ТекущиеДанные.Производитель.Пустая() = Ложь Тогда
				Свойство = "Производитель";
			ИначеЕсли ТекущиеДанные.ТоварнаяКатегория.Пустая() = Ложь Тогда
				Свойство = "ТоварнаяКатегория";
			ИначеЕсли ТекущиеДанные.ВидНоменклатуры.Пустая() = Ложь Тогда
				Свойство = "ВидНоменклатуры";
			Иначе
				Возврат;
			КонецЕсли;
			
			ПоказатьЗначение(, ТекущиеДанные[Свойство]);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // АссортиментнаяМатрицаВыбор()

&НаКлиенте
Процедура АссортиментнаяМатрицаПриАктивизацииСтроки(Элемент)
	
	Если ТекущиеДанныеОпределены(Элемент) Тогда
	
		СтрокаДерева = АссортиментнаяМатрица.НайтиПоИдентификатору(Элемент.ТекущаяСтрока);
		
		ПараметрыКоманды = Новый Структура;
		ПараметрыКоманды.Вставить("ДополнительнаяОбработкаСсылка", ОбъектСсылка);
		ПараметрыКоманды.Вставить("СопровождающийТекст", НСтр("ru = 'Выполняеться получение аналитических данных...'"));
		ПараметрыКоманды.Вставить("Склад", СтрокаДерева.Склад);
		ПараметрыКоманды.Вставить("ВидНоменклатуры", СтрокаДерева.ВидНоменклатуры);
		ПараметрыКоманды.Вставить("ТоварнаяКатегория", СтрокаДерева.ТоварнаяКатегория);
		ПараметрыКоманды.Вставить("Производитель", СтрокаДерева.Производитель);
		ПараметрыКоманды.Вставить("Номенклатура", СтрокаДерева.Номенклатура);

		ДанныеЗагружаються = 0;
		
		АналитикаПоМагазинам.ПолучитьЭлементы().Очистить();
		АналитикаПоФорматамМагазинов.ПолучитьЭлементы().Очистить();
		АналитикаТоварыКОтъезду.ПолучитьЭлементы().Очистить();
		АналитикаТоварыКПриезду.ПолучитьЭлементы().Очистить();
		АналитикаТоварыВРезервах.ПолучитьЭлементы().Очистить();
		
		АссортиментнаяМатрицаПриАктивизацииСтрокиСервер(ПараметрыКоманды);
		
		ПодключитьОбработчикОжидания("ВыполнитьПроверкуЗавершенияФоновогоЗаданияКлиент", 1, Ложь);
		
		ОбновитьПодвалАссортиментнойМатрицы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяМатрицаПередРазворачиванием(Элемент, Строка, Отказ)
	
	РазвернутьПодчиненнуюГруппуАссортиментнойМатрицы(Строка);
	
КонецПроцедуры // РазвернутьПодчиненуюГруппуАссортиментнойМатрицы()

&НаКлиенте
Процедура АссортиментнаяМатрицаИсключеноПриИзменении(Элемент)
	
	ОбработатьСостояниеТрехПозиционногоФлажкаДерева("АссортиментнаяМатрица", "Исключено");
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяМатрицаКонтрольМатрицейОтключенПриИзменении(Элемент)
	
	ОбработатьСостояниеТрехПозиционногоФлажкаДерева("АссортиментнаяМатрица", "КонтрольМатрицейОтключен");
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяМатрицаПосадочныеМестаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	АМ = Элементы.АссортиментнаяМатрица;
	Если ТекущиеДанныеОпределены(АМ) Тогда	
		
		ТекущиеДанные = АМ.ТекущиеДанные;
		РодительДанных = ТекущиеДанные.ПолучитьРодителя();

		Если РодительДанных <> Неопределено Тогда
			
			СуммаМест = 0;
			ЭлементыПоРодителю = РодительДанных.ПолучитьЭлементы();
			Для Каждого ЭлементыРодителя Из ЭлементыПоРодителю Цикл
				СуммаМест = СуммаМест + ЭлементыРодителя.ПосадочныеМеста;
			КонецЦикла;
			
			НовоеЗначение = ?(Текст = "—", 0, Число(Текст));
			Если РодительДанных.ПосадочныеМеста < СуммаМест + НовоеЗначение - ТекущиеДанные.ПосадочныеМеста Тогда
				СтандартнаяОбработка = Ложь;
				Текст = ТекущиеДанные.ПосадочныеМеста;
				ТекстСообщения = НСтр("ru = 'Посадочных мест не может быть больше у подчиненных элементов чем у родительской группы!'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Иначе
				ТекущиеДанные.ПосадочныеМеста = НовоеЗначение; 
				ВыполнитьДополнительнуюОбработкуСтрокиДерева(ТекущиеДанные, РодительДанных);	
			КонецЕсли;
				
		КонецЕсли;	
		
	КонецЕсли;
		
КонецПроцедуры



&НаКлиенте
Процедура АналитикаПоФорматамМагазиновПередРазворачиванием(Элемент, Строка, Отказ)
	
	Если ТекущиеДанныеОпределены(Элементы.АссортиментнаяМатрица) Тогда
		РазвернутьПодчиненнуюГруппуАналитики("АналитикаПоФорматамМагазинов", Строка, Элементы.АссортиментнаяМатрица.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаПоМагазинамПередРазворачиванием(Элемент, Строка, Отказ)
	
	Если ТекущиеДанныеОпределены(Элементы.АссортиментнаяМатрица) Тогда
		РазвернутьПодчиненнуюГруппуАналитики("АналитикаПоМагазинам", Строка, Элементы.АссортиментнаяМатрица.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаТоварыКОтъездуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначениеКолонки(Элемент, Поле);
		
КонецПроцедуры

&НаКлиенте
Процедура АналитикаТоварыКПриездуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначениеКолонки(Элемент, Поле);
	
КонецПроцедуры

&НаКлиенте
Процедура АналитикаТоварыВРезервахВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначениеКолонки(Элемент, Поле);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСтраницыОбщийЗаказ

&НаКлиенте
Процедура ОбщийЗаказВидыНоменклатурыПриАктивизацииСтроки(Элемент)
	ОбщийЗаказДетально.ПолучитьЭлементы().Очистить();
	ОбщийЗаказВидыНоменклатурыПриАктивизацииСтрокиСервер(Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры
	
#КонецОбласти 

#Область ОбработчикиСобытийСтраницыОшибки

&НаКлиенте
Процедура АналитикаОшибкиПоМатрицеПриИзменении(Элемент)
	ВыполнитьЗаписьИзмененийВРегистр_АМ_УправлениеАссортиментнойМатрицей("АналитикаОшибкиПоМатрице", Элемент.ТекущаяСтрока);
КонецПроцедуры

#КонецОбласти 

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоказатьСкрытьДеревоФорматовМагазинов(Команда)
	Элементы.ГруппаФорматыМагазинов.Видимость = НЕ Элементы.ГруппаФорматыМагазинов.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДанныеВИрокезе(Команда)
	
	Если Команда.Имя = "ИзменитьДанныеВИрокезе" Тогда
		ИмяДерева = "АссортиментнаяМатрица";	
	ИначеЕсли Команда.Имя = "ИзменитьДанныеВИрокезеТоварыКОтъезду" Тогда
		ИмяДерева = "АналитикаТоварыКОтъезду";
	ИначеЕсли Команда.Имя = "ИзменитьДанныеВИрокезеТоварыКПриезду" Тогда
		ИмяДерева = "АналитикаТоварыКПриезду";
	КонецЕсли;
	
	Если ТекущиеДанныеОпределены(Элементы[ИмяДерева]) Тогда
		
		СписокНоменклатуры = Новый СписокЗначений;
		Для Каждого ИдентификаторВыделения ИЗ Элементы[ИмяДерева].ВыделенныеСтроки Цикл
			РезультатПоиска = ЭтаФорма[ИмяДерева].НайтиПоИдентификатору(ИдентификаторВыделения);
			Если НЕ РезультатПоиска.Номенклатура.Пустая() Тогда
				СписокНоменклатуры.Добавить(РезультатПоиска.Номенклатура);	
			КонецЕсли;
		КонецЦикла;
		
		Если СписокНоменклатуры.Количество() > 0 Тогда
			СтрокаИмяФормы = "ВнешняяОбработка.%ИмяФормы%.Форма.Форма";
			СтрокаИмяФормы = СтрЗаменить(СтрокаИмяФормы, "%ИмяФормы%", git_ПереопределениеОбработчиковКлиент.ПолучитьИмяВнешнегоОбъекта("Ирокез"));	
			ОткрытьФорму(СтрокаИмяФормы, Новый Структура("МассивНоменклатуры", СписокНоменклатуры));
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры // ИзменитьДанныеВИрокезе


&НаСервере
Процедура АссортиментнаяМатрицаПриАктивизацииСтрокиСервер(ПараметрыКоманды)
	
	ВыполнитьКомандуОбработкиФоновымЗаданием("ОбновитьПродажиПоМагазинамВФоне", ПараметрыКоманды, АдресАналитикаПоМагазинам);
	ВыполнитьКомандуОбработкиФоновымЗаданием("ОбновитьПродажиПоФорматамВФоне", ПараметрыКоманды, АдресАналитикаПоФорматамМагазинов);
	ВыполнитьКомандуОбработкиФоновымЗаданием("ОбновитьТоварыВРезервахВФоне", ПараметрыКоманды, АдресАналитикаТоварыВРезерве);
	ВыполнитьКомандуОбработкиФоновымЗаданием("ОбновитьТоварыКОтъездуВФоне", ПараметрыКоманды, АдресАналитикаТоварыКОтъезду);
	ВыполнитьКомандуОбработкиФоновымЗаданием("ОбновитьТоварыКПриездуВФоне", ПараметрыКоманды, АдресАналитикаТоварыКПриезду);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуОбработкиФоновымЗаданием(ИдентификаторКоманды, ПараметрыКоманды, АдресХранилища)
	
	УстановитьПривилегированныйРежим(Истина);
	
	АдресХранилища = ПоместитьВоВременноеХранилище(, УникальныйИдентификатор);
	
 	Если СтандартныеПодсистемыВызовСервера.ПараметрыРаботыКлиента().ИнформационнаяБазаФайловая Тогда
		РезультатВыполнения = ВыполнитьКомандуНапрямую(ИдентификаторКоманды, ПараметрыКоманды);
		ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
    Иначе 
		ПараметрыКоманды.Вставить("ИдентификаторКоманды", ИдентификаторКоманды);
		ЗаданиеПараметры = Новый Массив;
	    ЗаданиеПараметры.Добавить(ПараметрыКоманды);
	    ЗаданиеПараметры.Добавить(АдресХранилища);
		ФоновыеЗадания.Выполнить("ДополнительныеОтчетыИОбработки.ВыполнитьКоманду", ЗаданиеПараметры, , "Обновить аналитику в фоне");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СоздатьПеремещение(Команда)
	
	МассивВыделенныхСтрок = Элементы.АналитикаТоварыКПриезду.ВыделенныеСтроки;
	ФормаДокумента = ПолучитьФорму("Документ.ПеремещениеТоваров.Форма.ФормаДокумента");
	
	Товары = ФормаДокумента.Объект.Товары;
	Для каждого ЭлементМассива Из МассивВыделенныхСтрок Цикл
		РезультатПоиска = АналитикаТоварыКПриезду.НайтиПоИдентификатору(ЭлементМассива);
		ФормаДокумента.Объект.СкладПолучатель = РезультатПоиска.Склад; 
		НоваяСтрока = Товары.Добавить();		
		НоваяСтрока.Номенклатура = РезультатПоиска.Номенклатура;
		НоваяСтрока.Количество = РезультатПоиска.КоличествоКПоставке;
	    НоваяСтрока.КоличествоУпаковок = РезультатПоиска.КоличествоКПоставке;
	КонецЦикла;
	
	ОткрытьФорму(ФормаДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОкноОшибок(Команда)
	ОбновитьСтраницуОшибок();
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзВсейМатрицы(Команда)
	
	АМ = Элементы.АссортиментнаяМатрица;
	Если ТекущиеДанныеОпределены(АМ) Тогда
		ИсключитьИзВсейМатрицыСервер(АМ.ТекущиеДанные.ПолучитьИдентификатор());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьПодвалАссортиментнойМатрицы()
	
	Если ТекущиеДанныеОпределены(Элементы.АссортиментнаяМатрица) Тогда
		
		СтрокаДерева = АссортиментнаяМатрица.НайтиПоИдентификатору(Элементы.АссортиментнаяМатрица.ТекущаяСтрока);
		СтрокаРодитель = СтрокаДерева.ПолучитьРодителя();
		Если СтрокаРодитель = Неопределено Тогда
			ЗаполненностьПосадочныхМест =  Строка(СтрокаДерева.ПосадочныеМеста) + "/" + Строка(СтрокаДерева.ПосадочныеМеста);
		Иначе
			
			СуммаМест = 0;
			Для Каждого Строки Из СтрокаРодитель.ПолучитьЭлементы() Цикл
				Если Строки.Исключено <> 1 И Строки.КонтрольМатрицейОтключен <> 1 Тогда 
					СуммаМест = СуммаМест + Строки.ПосадочныеМеста;
				КонецЕсли;
			КонецЦикла;
			
			ЗаполненностьПосадочныхМест = Строка(СуммаМест) + "/" + Строка(СтрокаРодитель.ПосадочныеМеста);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьПодвалАссортиментнойМатрицы()

&НаКлиенте
Процедура ОбработатьСостояниеТрехПозиционногоФлажкаДерева(ИмяДерева, ИмяПоля)
	
	Если ТекущиеДанныеОпределены(Элементы[ИмяДерева]) Тогда
		
		ТекущиеДанные = Элементы[ИмяДерева].ТекущиеДанные;
		Если ТекущиеДанные[ИмяПоля] = 2 Тогда
			ТекущиеДанные[ИмяПоля] = 0;
		ИначеЕсли ТекущиеДанные[ИмяПоля] = 0 Тогда
			ТекущиеДанные[ИмяПоля] = 1;
		КонецЕсли;
		
		Если ТекущиеДанные[ИмяПоля] = 1 Тогда
			
			ТекущиеДанные.ПосадочныеМеста = 0;
			ТекущиеДанные.ОтклонениеКоличествоПМ = 0;
			ТекущиеДанные.ОтклонениеПроцентПМ = "0%";
			ТекущиеДанные.МинимальныйЗапас = 0;
			ТекущиеДанные.СтраховойЗапас = 0;
			ТекущиеДанные.МаксимальныйЗапас = 0;
			
			РодительСтрокиДерева = ТекущиеДанные.ПолучитьРодителя();
			Пока РодительСтрокиДерева <> Неопределено Цикл
				РодительСтрокиДерева[ИмяПоля] = 2;
				РодительСтрокиДерева = РодительСтрокиДерева.ПолучитьРодителя();
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработатьСостояниеТрехПозиционногоФлажка()

&НаКлиенте
Процедура ПоказатьЗначениеКолонки(Элемент, Поле)
	
	ИмяКолонки = СтрЗаменить(Поле.Имя, Элемент.Имя, "");
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные[ИмяКолонки]);		
	КонецЕсли;
	
КонецПроцедуры // ПоказатьЗначениеКолонки()


&НаКлиенте
Функция ТекущиеДанныеОпределены(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ТекущиеДанныеОпределены() 

&НаКлиентеНаСервереБезКонтекста
Процедура ВыполнитьДополнительнуюОбработкуСтрокиДерева(НоваяСтрока, СтрокаДерева)
	
		Если СтрокаДерева.ПосадочныеМеста <> 0 Тогда
			НоваяСтрока.ПосадочныеМестаПроцент = Строка(Окр(НоваяСтрока.ПосадочныеМеста / СтрокаДерева.ПосадочныеМеста * 100)) + "%";
		Иначе
			НоваяСтрока.ПосадочныеМестаПроцент = "0%";	
		КонецЕсли;
		
		Если НоваяСтрока.ПосадочныеМеста <> 0 Тогда
			НоваяСтрока.ОтклонениеПроцентПМ = Строка(Окр(НоваяСтрока.ОтклонениеКоличествоПМ / НоваяСтрока.ПосадочныеМеста * 100)) + "%";
		Иначе
			НоваяСтрока.ОтклонениеПроцентПМ = "0%";	
		КонецЕсли;
	
КонецПроцедуры // ВыполнитьДополнительнуюОбработкуСтрокиДерева()


&НаКлиенте
Процедура ВыполнитьПроверкуЗавершенияФоновогоЗаданияКлиент()
	
	Перем ОповещениеФорм;
	
	СписокАдресов = Новый СписокЗначений;
	Если ПустаяСтрока(АдресАналитикаПоМагазинам) = Ложь Тогда
		СписокАдресов.Добавить(АдресАналитикаПоМагазинам, "АдресАналитикаПоМагазинам");
	КонецЕсли;
	
	Если ПустаяСтрока(АдресАналитикаПоФорматамМагазинов) = Ложь Тогда
		СписокАдресов.Добавить(АдресАналитикаПоФорматамМагазинов, "АдресАналитикаПоФорматамМагазинов");
	КонецЕсли;
	
	Если ПустаяСтрока(АдресАналитикаТоварыВРезерве) = Ложь Тогда
		СписокАдресов.Добавить(АдресАналитикаТоварыВРезерве, "АдресАналитикаТоварыВРезерве");
	КонецЕсли;
	
	Если ПустаяСтрока(АдресАналитикаТоварыКОтъезду) = Ложь Тогда
		СписокАдресов.Добавить(АдресАналитикаТоварыКОтъезду, "АдресАналитикаТоварыКОтъезду");
	КонецЕсли;
	
	Если ПустаяСтрока(АдресАналитикаТоварыКПриезду) = Ложь Тогда
		СписокАдресов.Добавить(АдресАналитикаТоварыКПриезду, "АдресАналитикаТоварыКПриезду");
	КонецЕсли;
	
	
	Если СписокАдресов.Количество() Тогда
		
		РезультатыВыполнения = ВыполнитьПроверкуЗавершенияФоновогоЗаданияСервер(СписокАдресов);
		Для Каждого Результат Из РезультатыВыполнения Цикл
			Значение = Результат.Значение;
			Представление = Результат.Представление;
			Если ТипЗнч(Значение) = Тип("Структура") Тогда
				Если Значение.Свойство("ОповещениеФорм", ОповещениеФорм) Тогда
					Если ТипЗнч(ОповещениеФорм) = Тип("Структура") Тогда
						Оповестить(ОповещениеФорм.ИмяСобытия, ОповещениеФорм.Параметр, ОповещениеФорм.Источник);
						ЭтаФорма[Представление] = "";
						ДанныеЗагружаються = ДанныеЗагружаються + 1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	
	Иначе
		
		ОтключитьОбработчикОжидания("ВыполнитьПроверкуЗавершенияФоновогоЗаданияКлиент");
		
	КонецЕсли;
	
КонецПроцедуры // ВыполнитьПроверкуЗавершенияФоновогоЗаданияКлиент()

&НаСервереБезКонтекста
Функция ВыполнитьПроверкуЗавершенияФоновогоЗаданияСервер(СписокАдресов)

	СписокРезультатов = Новый СписокЗначений;
	Для Каждого АдресХранилища Из СписокАдресов Цикл
		СписокРезультатов.Добавить(ПолучитьИзВременногоХранилища(АдресХранилища.Значение), АдресХранилища.Представление);
	КонецЦикла;
	Возврат СписокРезультатов;
	
КонецФункции // ВыполнитьПроверкуЗавершенияФоновогоЗаданияСервер()



&НаСервере
Процедура ОбновитьУправлениеНаСервере()

	Перем тмпСклад, тмпФорматМагазина, Идентификатор;
	
	ТекущаяСтрока = Элементы.ДеревоФорматыМагазинов.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		РезультатПоиска = ДеревоФорматыМагазинов.НайтиПоИдентификатору(ТекущаяСтрока);
		тмпСклад = РезультатПоиска.Склад;
		тмпФорматМагазина = РезультатПоиска.ФорматМагазина;
	КонецЕсли;
	 
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаДеревоФорматовМагазина();
	Запрос.УстановитьПараметр("ГруппаВидаНоменклатуры", ГруппаВидаНоменклатуры);
	ВыгрузкаДерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для каждого СтрокаВерхнегоУровня Из ВыгрузкаДерево.Строки Цикл
		СтрокаВерхнегоУровня.ДанныеДерева = Строка(СтрокаВерхнегоУровня.ФорматМагазина);
		Если СтрокаВерхнегоУровня.ПосадочныеМеста = 0 И СтрокаВерхнегоУровня.КоличествоАртикулов = 0 Тогда 
			СтрокаВерхнегоУровня.Состояние = 0;
		ИначеЕсли СтрокаВерхнегоУровня.ПосадочныеМеста = 0 И СтрокаВерхнегоУровня.КоличествоАртикулов > 0 Тогда
			СтрокаВерхнегоУровня.Состояние = 3;
		ИначеЕсли СтрокаВерхнегоУровня.ПосадочныеМеста < СтрокаВерхнегоУровня.КоличествоАртикулов Тогда
			СтрокаВерхнегоУровня.Состояние = 1;
		Иначе
			СтрокаВерхнегоУровня.Состояние = 2;	
		КонецЕсли;
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(ВыгрузкаДерево, "ДеревоФорматыМагазинов");
	
	
	
	Если тмпФорматМагазина <> Неопределено Тогда
		
		Для каждого СтрокаДерева Из ДеревоФорматыМагазинов.ПолучитьЭлементы() Цикл
			
			Если СтрокаДерева.ФорматМагазина = тмпФорматМагазина Тогда
				
				Идентификатор = СтрокаДерева.ПолучитьИдентификатор();
				Если тмпСклад.Пустая() = Ложь Тогда
					
					Для каждого СтрокаДерева Из СтрокаДерева.ПолучитьЭлементы() Цикл
						
						Если СтрокаДерева.Склад = тмпСклад Тогда
							Идентификатор = СтрокаДерева.ПолучитьИдентификатор();
							Прервать;
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				Элементы.ДеревоФорматыМагазинов.ТекущаяСтрока = Идентификатор;
				
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьУправлениеНаСервере()

&НаСервере
Процедура ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей(Идентификатор)
	
	СтрокаДерева = ДеревоФорматыМагазинов.НайтиПоИдентификатору(Идентификатор);
	СтрокаЭлементы = АссортиментнаяМатрица.ПолучитьЭлементы();
	
	Запрос = ВыполнитьКешированиеСкладовПоДеревуФорматов(СтрокаДерева);	
	Если АналитическийПросмотр = Ложь Тогда
		
		Запрос.Текст = ПолучитьТекстЗапросаАссортиментнойМатрицыКорень();
		Запрос.УстановитьПараметр("ГруппаВидаНоменклатуры", ГруппаВидаНоменклатуры);	
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = СтрокаЭлементы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если ПустаяСтрока(Выборка.ДанныеРодителя) Тогда
				НоваяСтрока.ДанныеДерева = Выборка.ДанныеДерева;	
			Иначе
				НоваяСтрока.ДанныеДерева = Выборка.ДанныеРодителя + " / " + Выборка.ДанныеДерева;
			КонецЕсли;
						
			ВыполнитьДополнительнуюОбработкуСтрокиДерева(НоваяСтрока, СтрокаДерева);
			
			НоваяСтрока.ПолучитьЭлементы().Добавить();
			
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц.Закрыть();
		
КонецПроцедуры // ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей()

&НаСервере
Процедура РазвернутьПодчиненнуюГруппуАссортиментнойМатрицы(Идентификатор)
	
	СтрокаДерева = АссортиментнаяМатрица.НайтиПоИдентификатору(Идентификатор);
	ПараметрСклад 			  = СтрокаДерева.Склад;
	ПараметрПроизводитель	  = СтрокаДерева.Производитель;
	ПараметрВидНоменклатуры   = СтрокаДерева.ВидНоменклатуры;	
	ПараметрТоварнаяКатегория = СтрокаДерева.ТоварнаяКатегория;
	
	
	СтрокаЭлементы = СтрокаДерева.ПолучитьЭлементы();
	СтрокаЭлементы.Очистить();
	
	
	УровеньВложенности = 0;
	Пока СтрокаДерева.ПолучитьРодителя() <> Неопределено Цикл
		СтрокаДерева = СтрокаДерева.ПолучитьРодителя();
		УровеньВложенности = УровеньВложенности + 1;			
	КонецЦикла;
	
	// Получаем уровень вложености "Склад"
	Если УровеньВложенности = 0 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаАссортиментнойМатрицыПоВидуНоменклатуры();
	// Получаем уровень вложености "ТоварнаяКатегория"
	ИначеЕсли УровеньВложенности = 1 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории();		
	// Получаем уровень вложености "Производители"
	ИначеЕсли УровеньВложенности = 2 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи();	
	Иначе
		Возврат;	
	КонецЕсли;
	
	
	//УстановитьПривилегированныйРежим(Истина);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Склад", ПараметрСклад);
	Запрос.УстановитьПараметр("Производитель", ПараметрПроизводитель);
	Запрос.УстановитьПараметр("ВидНоменклатуры", ПараметрВидНоменклатуры);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ПараметрТоварнаяКатегория);
	Запрос.УстановитьПараметр("ГруппаВидаНоменклатуры", ГруппаВидаНоменклатуры);
	Запрос.УстановитьПараметр("КонецПериода", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("НачалоПериодаМесяц", НачалоДня(ТекущаяДатаСеанса()) - 31 * 86400);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ДанныеДерева = "<Производитель не задан>" И Выборка.КоличествоАртикулов = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.ДанныеДерева = "<Товарная категория не задана>" И Выборка.КоличествоАртикулов = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		ВыполнитьДополнительнуюОбработкуСтрокиДерева(НоваяСтрока, НоваяСтрока.ПолучитьРодителя());
				
		Если УровеньВложенности <> 2 Тогда
			НоваяСтрока.ПолучитьЭлементы().Добавить();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // РазвернутьПодчиненуюГруппуАссортиментнойМатрицы()

&НаСервере
Процедура РазвернутьПодчиненнуюГруппуАналитики(ИмяТаблицы, Идентификатор, ИдентификаторАссМатр)

	СтрокаДерева = АссортиментнаяМатрица.НайтиПоИдентификатору(ИдентификаторАссМатр);
	ПараметрСклад 			  = СтрокаДерева.Склад;	
	ПараметрВидНоменклатуры   = СтрокаДерева.ВидНоменклатуры;	
	ПараметрТоварнаяКатегория = СтрокаДерева.ТоварнаяКатегория;
	ПараметрПроизводитель	  = СтрокаДерева.Производитель;
	ПараметрНоменклатура 	  = СтрокаДерева.Номенклатура;
	
	Если ПараметрНоменклатура.Пустая() = ЛОЖЬ Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаДерева = ЭтаФорма[ИмяТаблицы].НайтиПоИдентификатору(Идентификатор);
	СтрокаЭлементы = СтрокаДерева.ПолучитьЭлементы();
	СтрокаЭлементы.Очистить();
	
	ПродажиНеделя = 0; Продажи2Недели = 0; ПродажиМесяц = 0; ПродажиКвартал = 0;
	
	//УстановитьПривилегированныйРежим(Истина); 	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаПодчиненныхАналитическихДанных();
	Если 		ИмяТаблицы = "АналитикаПоМагазинам" Тогда
		Запрос.УстановитьПараметр("Склад", СтрокаДерева.Склад);
		Запрос.УстановитьПараметр("ФорматМагазина", Справочники.АМ_ФорматыМагазинов.ПустаяСсылка());	
	ИначеЕсли 	ИмяТаблицы = "АналитикаПоФорматамМагазинов" Тогда
		Запрос.УстановитьПараметр("Склад", Справочники.Склады.ПустаяСсылка());
		Запрос.УстановитьПараметр("ФорматМагазина", СтрокаДерева.ФорматМагазина);	
	КонецЕсли;
	Запрос.УстановитьПараметр("ВидНоменклатуры", ПараметрВидНоменклатуры);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ПараметрТоварнаяКатегория);
	Запрос.УстановитьПараметр("Производитель", ПараметрПроизводитель);
	Запрос.УстановитьПараметр("КонецПериода", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("НачалоПериодаНеделя", НачалоДня(ТекущаяДатаСеанса()) - 7 * 86400);
	Запрос.УстановитьПараметр("НачалоПериода2Недели", НачалоДня(ТекущаяДатаСеанса()) - 14 * 86400);
	Запрос.УстановитьПараметр("НачалоПериодаМесяц", НачалоДня(ТекущаяДатаСеанса()) - 31 * 86400);
	Запрос.УстановитьПараметр("НачалоПериодаКвартал", НачалоДня(ТекущаяДатаСеанса()) - 91 * 86400);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		ПродажиНеделя 	= ПродажиНеделя 	+ НоваяСтрока.ПродажиНеделя;
		Продажи2Недели 	= Продажи2Недели 	+ НоваяСтрока.Продажи2Недели;
		ПродажиМесяц 	= ПродажиМесяц 		+ НоваяСтрока.ПродажиМесяц;
		ПродажиКвартал 	= ПродажиКвартал 	+ НоваяСтрока.ПродажиКвартал;

	КонецЦикла;

	Для каждого СтрокаЭлемент Из СтрокаЭлементы Цикл
						
		Если ПродажиНеделя <> 0 Тогда
			СтрокаЭлемент.ПродажиПроцентНеделя = Строка(Окр(СтрокаЭлемент.ПродажиНеделя / ПродажиНеделя * 100)) + "%";
		КонецЕсли;
		
		Если Продажи2Недели <> 0 Тогда
			СтрокаЭлемент.ПродажиПроцент2Недели = Строка(Окр(СтрокаЭлемент.Продажи2Недели / Продажи2Недели * 100)) + "%";
		КонецЕсли;
		
		Если ПродажиМесяц <> 0 Тогда
			СтрокаЭлемент.ПродажиПроцентМесяц = Строка(Окр(СтрокаЭлемент.ПродажиМесяц / ПродажиМесяц * 100)) + "%";
		КонецЕсли;
		
		Если ПродажиКвартал <> 0 Тогда
			СтрокаЭлемент.ПродажиПроцентКвартал = Строка(Окр(СтрокаЭлемент.ПродажиКвартал / ПродажиКвартал * 100)) + "%";
		КонецЕсли;
 	
	КонецЦикла;

	
	
	
	//Запрос.УстановитьПараметр("КонецПериода", ТекущаяДатаСеанса());
	//Запрос.УстановитьПараметр("НачалоПериодаМесяц", НачалоДня(ТекущаяДатаСеанса()) - 31 * 86400);
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	
	//	Если Выборка.ДанныеДерева = "<Производитель не задан>" И Выборка.КоличествоАртикулов = 0 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	Если Выборка.ДанныеДерева = "<Товарная категория не задана>" И Выборка.КоличествоАртикулов = 0 Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	НоваяСтрока = СтрокаЭлементы.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	//	
	//	ВыполнитьДополнительнуюОбработкуСтрокиДерева(НоваяСтрока, НоваяСтрока.ПолучитьРодителя());
	//			
	//	Если УровеньВложенности <> 2 Тогда
	//		НоваяСтрока.ПолучитьЭлементы().Добавить();
	//	КонецЕсли;
	//	
	//КонецЦикла;	

КонецПроцедуры // РазвернутьПодчиненнуюГруппуАналитики()
 
&НаСервере
Процедура ИсключитьИзВсейМатрицыСервер(Идентификатор)
	
	РезультатПоиска = АссортиментнаяМатрица.НайтиПоИдентификатору(Идентификатор);
	Если РезультатПоиска <> Неопределено Тогда
		
		ПериодЗаписи = ТекущаяДатаСеанса();

		Запрос = Новый Запрос;
		Запрос.Текст = "
			|ВЫБРАТЬ
			|	&Период				КАК Период,
			|	Склады.Склад 		КАК Склад,
			|	&ВидНоменклатуры 	КАК ВидНоменклатуры,
			|	&ТоварнаяКатегория 	КАК ТоварнаяКатегория,
			|	&Производитель 		КАК Производитель,
			|	&Номенклатура 		КАК Номенклатура,
			|	
			|	IsNull(УАМ.НомерПоПорядку, 0) 	КАК НомерПоПорядку,
			|	0 								КАК ПосадочныеМеста,
			|	0 								КАК ОтклонениеКоличествоПМ,
			|	IsNull(УАМ.МинимальныйЗапас, 0) КАК МинимальныйЗапас,
			|	IsNull(УАМ.СтраховойЗапас, 0) 	КАК СтраховойЗапас,
			|	IsNull(УАМ.МаксимальныйЗапас, 0)КАК МаксимальныйЗапас,
			|	Истина 										КАК Исключено,
			|	IsNull(УАМ.КонтрольМатрицейОтключен, Ложь) 	КАК КонтрольМатрицейОтключен,
			|	
			|	&Ответственный КАК Ответственный					
			|ИЗ
			|	Справочник.АМ_ФорматыМагазинов.Склады КАК Склады
			|	
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, ВидНоменклатуры = &ВидНоменклатуры
			|																				И ТоварнаяКатегория = &ТоварнаяКатегория
			|																				И Производитель = &Производитель
			|																				И Номенклатура = &Номенклатура) КАК УАМ
			|ПО Склады.Склад = УАМ.Склад";
		Запрос.УстановитьПараметр("Период", ПериодЗаписи);
		Запрос.УстановитьПараметр("ВидНоменклатуры", РезультатПоиска.ВидНоменклатуры);
		Запрос.УстановитьПараметр("ТоварнаяКатегория", РезультатПоиска.ТоварнаяКатегория);
		Запрос.УстановитьПараметр("Производитель", РезультатПоиска.Производитель);
		Запрос.УстановитьПараметр("Номенклатура", РезультатПоиска.Номенклатура);
		Запрос.УстановитьПараметр("Ответственный", ПараметрыСеанса.ТекущийПользователь);
		
		НаборЗаписей = РегистрыСведений.АМ_УправлениеАссортиментнойМатрицей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ПериодЗаписи);
		НаборЗаписей.Отбор.ВидНоменклатуры.Установить(РезультатПоиска.ВидНоменклатуры);
		НаборЗаписей.Отбор.ТоварнаяКатегория.Установить(РезультатПоиска.ТоварнаяКатегория);
		НаборЗаписей.Отбор.Производитель.Установить(РезультатПоиска.Производитель);
		НаборЗаписей.Отбор.Номенклатура.Установить(РезультатПоиска.Номенклатура);
		
		НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неудача при попытке записи значения'"));	
		КонецПопытки;
		
		РезультатПоиска.ПосадочныеМеста = 0;
		РезультатПоиска.ОтклонениеКоличествоПМ = 0;
		РезультатПоиска.Исключено = 1;
		
	КонецЕсли;
		
КонецПроцедуры // ИсключитьИзВсейМатрицыСервер()



&НаСервере
Процедура ВыполнитьЗаписьИзмененийВРегистр_АМ_УправлениеАссортиментнойМатрицей(ИмяТаблицы, Идентификатор)	
	
	РезультатПоиска = ЭтаФорма[ИмяТаблицы].НайтиПоИдентификатору(Идентификатор);
	Если РезультатПоиска <> Неопределено Тогда
		ПериодЗаписи = ТекущаяДатаСеанса();
		НаборЗаписей = РегистрыСведений.АМ_УправлениеАссортиментнойМатрицей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ПериодЗаписи);
		НаборЗаписей.Отбор.Склад.Установить(РезультатПоиска.Склад);
		НаборЗаписей.Отбор.ВидНоменклатуры.Установить(РезультатПоиска.ВидНоменклатуры);
		НаборЗаписей.Отбор.ТоварнаяКатегория.Установить(РезультатПоиска.ТоварнаяКатегория);
		НаборЗаписей.Отбор.Производитель.Установить(РезультатПоиска.Производитель);
		НаборЗаписей.Отбор.Номенклатура.Установить(РезультатПоиска.Номенклатура);
		
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, РезультатПоиска);
			НоваяЗапись.Период = ПериодЗаписи;
			НоваяЗапись.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			Если ИмяТаблицы = "АссортиментнаяМатрица" Тогда
				НоваяЗапись.Исключено = ?(РезультатПоиска.Исключено = 2, 0, РезультатПоиска.Исключено);
				НоваяЗапись.КонтрольМатрицейОтключен = ?(РезультатПоиска.КонтрольМатрицейОтключен = 2, 0, РезультатПоиска.КонтрольМатрицейОтключен);
			КонецЕсли;
		
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неудача при попытке записи значения'"));	
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры




&НаСервере
Функция ВыполнитьКешированиеСкладовПоДеревуФорматов(СтрокаДерева)
	
	УстановитьПривилегированныйРежим(Истина);
		
	Склад 		   = СтрокаДерева.Склад;
	ФорматМагазина = СтрокаДерева.ФорматМагазина;
	
	// Блокировка изменения матрицы, если просмотр идет по формату магазина
  	АналитическийПросмотр = Склад.Пустая();
	
	// Кеширование списка складов
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = ПолучитьТекстЗапросаКешаСкладов();
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ФорматМагазина", ФорматМагазина);
	Запрос.Выполнить();
	
	Возврат Запрос; 
	
КонецФункции // ВыполнитьКешированиеСкладовПоДеревуФорматов()



&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаДеревоФорматовМагазина()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	Ссылка	
		|ПОМЕСТИТЬ КешВидовНоменклатуры
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|ГДЕ
		|	ЭтоГруппа = Ложь
		|И	ВидыНоменклатуры.Ссылка В ИЕРАРХИИ(&ГруппаВидаНоменклатуры)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	Склад					КАК Склад,
		|	СУММА(ПосадочныеМеста)	КАК ПосадочныеМеста 
		|ПОМЕСТИТЬ КешПоСкладамПоПосадочнымМестам
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|																	ВидНоменклатуры  	В (ВЫБРАТЬ Ссылка ИЗ КешВидовНоменклатуры)
		|																И 	ТоварнаяКатегория 	= ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|																И	Производитель  		= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																И	Номенклатура  		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																							) КАК АМ_УправлениеАссортиментнойМатрицей
		|СГРУППИРОВАТЬ ПО
		|	Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;	
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	Склад 					КАК Склад,
		|	КОЛИЧЕСТВО(Номенклатура)КАК КоличествоАртикулов
		|ПОМЕСТИТЬ КешПоСкладамПоКоличествуАртикулов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(, Номенклатура.ВидНоменклатуры В (ВЫБРАТЬ Ссылка ИЗ КешВидовНоменклатуры)) КАК ТоварыОрганизацийОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	Склад
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;		
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА IsNull(КешПоСкладамПоПосадочнымМестам.ПосадочныеМеста, 0) = 0 
		|			И IsNull(КешПоСкладамПоКоличествуАртикулов.КоличествоАртикулов, 0) = 0
		|			ТОГДА 0
		|		КОГДА IsNull(КешПоСкладамПоПосадочнымМестам.ПосадочныеМеста, 0) = 0 
		|			И IsNull(КешПоСкладамПоКоличествуАртикулов.КоличествоАртикулов, 0) > 0
		|			ТОГДА 3
		|		КОГДА КешПоСкладамПоПосадочнымМестам.ПосадочныеМеста < КешПоСкладамПоКоличествуАртикулов.КоличествоАртикулов
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ															КАК Состояние,
		|	ПРЕДСТАВЛЕНИЕ(АМ_ФорматыМагазиновСклады.Склад)					КАК ДанныеДерева,
		|	АМ_ФорматыМагазинов.Ссылка										КАК ФорматМагазина,
		|	АМ_ФорматыМагазиновСклады.Склад									КАК Склад,
		|	АМ_ФорматыМагазиновСклады.ИспользуетсяУправление				КАК ПодУправлением,
		|	IsNull(КешПоСкладамПоПосадочнымМестам.ПосадочныеМеста, 0)	 	КАК ПосадочныеМеста,
		|	IsNull(КешПоСкладамПоКоличествуАртикулов.КоличествоАртикулов, 0)КАК КоличествоАртикулов,
		|	""""															КАК Пустышка
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов КАК АМ_ФорматыМагазинов
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АМ_ФорматыМагазинов.Склады КАК АМ_ФорматыМагазиновСклады
		|ПО 	АМ_ФорматыМагазиновСклады.Ссылка = АМ_ФорматыМагазинов.Ссылка
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешПоСкладамПоКоличествуАртикулов КАК КешПоСкладамПоКоличествуАртикулов
		|ПО	КешПоСкладамПоКоличествуАртикулов.Склад = АМ_ФорматыМагазиновСклады.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешПоСкладамПоПосадочнымМестам КАК КешПоСкладамПоПосадочнымМестам
		|ПО	КешПоСкладамПоПосадочнымМестам.Склад = АМ_ФорматыМагазиновСклады.Склад
		|
		|ГДЕ
		|	АМ_ФорматыМагазинов.Активен = Истина
		|	
		|СГРУППИРОВАТЬ ПО
		|	АМ_ФорматыМагазинов.Ссылка,
		|	АМ_ФорматыМагазиновСклады.Склад,
		|	АМ_ФорматыМагазиновСклады.ИспользуетсяУправление,
		|	КешПоСкладамПоПосадочнымМестам.ПосадочныеМеста,
		|	КешПоСкладамПоКоличествуАртикулов.КоличествоАртикулов
		|	
		|ИТОГИ 
		|	СУММА(ПосадочныеМеста),
		|	СУММА(КоличествоАртикулов) 
		|ПО
		|	ФорматМагазина 	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешВидовНоменклатуры;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешПоСкладамПоПосадочнымМестам;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешПоСкладамПоКоличествуАртикулов;	
		|";
	Возврат ТекстЗапроса;		
		
КонецФункции // ПолучитьТекстЗапросаДеревоФорматовМагазина()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаКешаСкладов()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ФорматыМагазинов.Склад КАК Склад
		|
		|ПОМЕСТИТЬ КешСклады
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК ФорматыМагазинов
		|
		|ГДЕ
		|	ФорматыМагазинов.Ссылка = &ФорматМагазина 		
		|И  ФорматыМагазинов.ИспользуетсяУправление = Истина
		|И	ВЫБОР
		|		КОГДА &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			ТОГДА Истина
		|		ИНАЧЕ ФорматыМагазинов.Склад = &Склад
		|	КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад	
		|";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаКешаСкладов()
 
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыКорень()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ВидыНоменклатуры.Ссылка)	КАК ДанныеДерева,
		|	ПРЕДСТАВЛЕНИЕ(ВидыНоменклатуры.Родитель)КАК ДанныеРодителя, 	
		|	&Склад									КАК Склад,
		|	ВидыНоменклатуры.Ссылка				   	КАК ВидНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)	КАК ТоварнаяКатегория,
		|   ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка) 	КАК Производитель,
		|   ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 		КАК Номенклатура
		|
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|
		|ГДЕ
		| 	ВидыНоменклатуры.ЭтоГруппа = Ложь	
		|И	ВидыНоменклатуры.ПометкаУдаления = Ложь
		|И	ВЫБОР
		|		КОГДА &ГруппаВидаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ВидыНоменклатуры.Ссылка В ИЕРАРХИИ(&ГруппаВидаНоменклатуры)
		|	КОНЕЦ 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.Склад			КАК Склад,
		|   КешДанныхДляВывода.ВидНоменклатуры	КАК ВидНоменклатуры,
		|
		|	СРЕДНЕЕ(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ГлубинаОстаткаФактСреднее,
		|   МАКСИМУМ(ТоварыОрганизацийОстатки.КоличествоОстаток)КАК ГлубинаОстаткаФактМаксимальное,
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) 	КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|                                                              
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Склад = &Склад) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Номенклатура.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|И	ТоварыОрганизацийОстатки.Склад 						  = КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АМ_УправлениеАссортиментнойМатрицей.Склад 				КАК Склад,	
		|	АМ_УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	
		|
		|	АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста 		КАК ПосадочныеМеста,
		|	АМ_УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|	АМ_УправлениеАссортиментнойМатрицей.МинимальныйЗапас   		КАК МинимальныйЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.СтраховойЗапас     		КАК СтраховойЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.МаксимальныйЗапас  		КАК МаксимальныйЗапас,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.Исключено 					КАК Исключено,
		|	АМ_УправлениеАссортиментнойМатрицей.КонтрольМатрицейОтключен 	КАК КонтрольМатрицейОтключен
		|
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, Номенклатура) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры, 
		|																			ТоварнаяКатегория,
		|                                                                           Производитель,
		|                                                                           Номенклатура
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК АМ_УправлениеАссортиментнойМатрицей	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	АМ_УАМ.Склад 					КАК Склад,	
		|	АМ_УАМ.ВидНоменклатуры 			КАК ВидНоменклатуры,
		|	АМ_УАМ.Исключено            	КАК Исключено
		|
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры) В (	ВЫБРАТЬ 
		|															Склад, 
		|															ВидНоменклатуры
		|														ИЗ 
		|															КешДанныхДляВывода)
		|						И ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|ГДЕ 
		|	 АМ_УАМ.Исключено = Истина
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	АМ_УАМ.Склад 					КАК Склад,	
		|	АМ_УАМ.ВидНоменклатуры 			КАК ВидНоменклатуры,
		|	АМ_УАМ.КонтрольМатрицейОтключен КАК КонтрольМатрицейОтключен
		|
		|ПОМЕСТИТЬ КешКонтрольОтключенВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры) В (	ВЫБРАТЬ 
		|															Склад, 
		|															ВидНоменклатуры
		|														ИЗ 
		|															КешДанныхДляВывода)
		|						И ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|ГДЕ 
		|	АМ_УАМ.КонтрольМатрицейОтключен = Истина
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладе	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешДанныхДляВывода КАК КешДанныхДляВывода
		|ПО	КешДанныхДляВывода.Склад = АУН.Склад
		|И  КешДанныхДляВывода.ВидНоменклатуры = АУН.Номенклатура.ВидНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ВидНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) = Истина
		|			ТОГДА 1
		|		КОГДА IsNull(КешИсключенияВПодчиненных.Исключено, Ложь) = Истина
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Исключено,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.КонтрольМатрицейОтключен, Ложь) = Истина
		|			ТОГДА 1
		|		КОГДА IsNull(КешКонтрольОтключенВПодчиненных.КонтрольМатрицейОтключен, Ложь) = Истина
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КонтрольМатрицейОтключен,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0 
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) = 0
		|			ТОГДА 0
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0 
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) > 0
		|			ТОГДА 3
		|		КОГДА УправлениеАссортиментнойМатрицей.ПосадочныеМеста < РасчетТКА.КоличествоАртикулов
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ									КАК Состояние,
		|
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|	КешДанныхДляВывода.ДанныеРодителя		КАК ДанныеРодителя,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|
		|	IsNull(УправлениеАссортиментнойМатрицей.МинимальныйЗапас, 0) КАК МинимальныйЗапас,
		|	IsNull(УправлениеАссортиментнойМатрицей.СтраховойЗапас, 0) 	 КАК СтраховойЗапас,
		|	IsNull(УправлениеАссортиментнойМатрицей.МаксимальныйЗапас, 0)КАК МаксимальныйЗапас,
		|	IsNull(УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|	IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 		КАК ПосадочныеМеста,
		|
		|   РасчетТКА.ГлубинаОстаткаФактСреднее  		КАК ГлубинаОстаткаФактСреднее,
		|   РасчетТКА.ГлубинаОстаткаФактМаксимальное  	КАК ГлубинаОстаткаФактМаксимальное,
		|	РасчетТКА.КоличествоАртикулов 				КАК КоличествоАртикулов,
		|
		|	ДнейНаСкладе.ДНС КАК ДНС
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей
		|ПО	КешДанныхДляВывода.Склад 			 = УправлениеАссортиментнойМатрицей.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = УправлениеАссортиментнойМатрицей.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = УправлениеАссортиментнойМатрицей.ТоварнаяКатегория
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО	РасчетТКА.Склад 		  = КешДанныхДляВывода.Склад
		|И	РасчетТКА.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных
		|ПО	КешИсключенияВПодчиненных.Склад = КешДанныхДляВывода.Склад
		|И	КешИсключенияВПодчиненных.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешКонтрольОтключенВПодчиненных КАК КешКонтрольОтключенВПодчиненных
		|ПО	КешКонтрольОтключенВПодчиненных.Склад = КешДанныхДляВывода.Склад
		|И	КешКонтрольОтключенВПодчиненных.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ДнейНаСкладе КАК ДнейНаСкладе
		|ПО	ДнейНаСкладе.Склад = КешДанныхДляВывода.Склад
		|И	ДнейНаСкладе.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|
		|УПОРЯДОЧИТЬ ПО
		|	IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) Возр, КешДанныхДляВывода.ДанныеРодителя Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДнейНаСкладе;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешИсключенияВПодчиненных;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешКонтрольОтключенВПодчиненных;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
			
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыКорень()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыПоВидуНоменклатуры()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ТоварныеКатегории.Ссылка)		КАК ДанныеДерева,
		|	&Склад								   		КАК Склад,
		|	&ВидНоменклатуры				   			КАК ВидНоменклатуры,
		|	ТоварныеКатегории.Ссылка					КАК ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка) КАК Производитель
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|
		|ГДЕ
		|	ТоварныеКатегории.Владелец = &ВидНоменклатуры
		|И 	ТоварныеКатегории.ЭтоГруппа = Ложь	
		|И	ТоварныеКатегории.ПометкаУдаления = Ложь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""<Товарная категория не задана>"",
		|	&Склад,
		|	&ВидНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.Склад				КАК Склад,
		|   КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|
		|	СРЕДНЕЕ(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ГлубинаОстаткаФактСреднее,
		|   МАКСИМУМ(ТоварыОрганизацийОстатки.КоличествоОстаток)КАК ГлубинаОстаткаФактМаксимальное,
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) 	КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Номенклатура.ВидНоменклатуры = &ВидНоменклатуры И Склад = &Склад) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Номенклатура.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	ТоварыОрганизацийОстатки.Номенклатура.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	ТоварыОрганизацийОстатки.Склад 						  	= КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АМ_УправлениеАссортиментнойМатрицей.Склад 				КАК Склад,	
		|	АМ_УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста			КАК ПосадочныеМеста,
		|	АМ_УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|	АМ_УправлениеАссортиментнойМатрицей.МинимальныйЗапас   		КАК МинимальныйЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.СтраховойЗапас     		КАК СтраховойЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.МаксимальныйЗапас  		КАК МаксимальныйЗапас,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.Исключено		  			КАК Исключено,
		|	АМ_УправлениеАссортиментнойМатрицей.КонтрольМатрицейОтключен    КАК КонтрольМатрицейОтключен,
		|	АМ_УправлениеАссортиментнойМатрицей.НомерПоПорядку				КАК НомерПоПорядку
		|
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры, 
		|																			ТоварнаяКатегория,
		|																			Производитель
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК АМ_УправлениеАссортиментнойМатрицей	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Склад КАК Склад,	
		|	ВидНоменклатуры КАК ВидНоменклатуры,
		|	ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Исключено КАК Исключено
		|
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры,
		|					                                                        ТоварнаяКатегория
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|						И Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|ГДЕ 
		|	 АМ_УАМ.Исключено = Истина
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Склад КАК Склад,	
		|	ВидНоменклатуры КАК ВидНоменклатуры,
		|	ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КонтрольМатрицейОтключен КАК КонтрольМатрицейОтключен
		|
		|ПОМЕСТИТЬ КешКонтрольОтключенВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры,
		|					                                                        ТоварнаяКатегория
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|						И Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|ГДЕ 
		|	 АМ_УАМ.КонтрольМатрицейОтключен = Истина
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладе	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешДанныхДляВывода КАК КешДанныхДляВывода
		|ПО	КешДанныхДляВывода.Склад = АУН.Склад
		|И  КешДанныхДляВывода.ВидНоменклатуры = АУН.Номенклатура.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = АУН.Номенклатура.ТоварнаяКатегория
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ	
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) = Истина
		|			ТОГДА 1
		|		КОГДА IsNull(КешИсключенияВПодчиненных.Исключено, Ложь) = Истина
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Исключено,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.КонтрольМатрицейОтключен, Ложь) = Истина
		|			ТОГДА 1
		|		КОГДА IsNull(КешКонтрольОтключенВПодчиненных.КонтрольМатрицейОтключен, Ложь) = Истина
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КонтрольМатрицейОтключен,
		|	IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, 0) КАК НомерПоПорядку,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|			И IsNull(УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) = 0
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) = 0
		|			ТОГДА 0
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|			И IsNull(УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) = 0
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) > 0
		|			ТОГДА 3
		|		КОГДА УправлениеАссортиментнойМатрицей.ПосадочныеМеста + УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ < РасчетТКА.КоличествоАртикулов
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ									КАК Состояние,
		|
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|
		|	IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 		КАК ПосадочныеМеста,
		|	IsNull(УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|
		|	УправлениеАссортиментнойМатрицей.МинимальныйЗапас 	КАК МинимальныйЗапас,
		|	УправлениеАссортиментнойМатрицей.СтраховойЗапас 	КАК СтраховойЗапас,
		|	УправлениеАссортиментнойМатрицей.МаксимальныйЗапас 	КАК МаксимальныйЗапас,
		|
		|   РасчетТКА.ГлубинаОстаткаФактСреднее  		КАК ГлубинаОстаткаФактСреднее,
		|   РасчетТКА.ГлубинаОстаткаФактМаксимальное  	КАК ГлубинаОстаткаФактМаксимальное,
		|	РасчетТКА.КоличествоАртикулов 				КАК КоличествоАртикулов,
		|
		|	ДнейНаСкладе.ДНС КАК ДНС	
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей
		|ПО	КешДанныхДляВывода.Склад 			 = УправлениеАссортиментнойМатрицей.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = УправлениеАссортиментнойМатрицей.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = УправлениеАссортиментнойМатрицей.ТоварнаяКатегория
		|И	КешДанныхДляВывода.ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей_Родитель
		|ПО	УправлениеАссортиментнойМатрицей.Склад 			 = УправлениеАссортиментнойМатрицей_Родитель.Склад
		|И 	УправлениеАссортиментнойМатрицей.ВидНоменклатуры = УправлениеАссортиментнойМатрицей_Родитель.ВидНоменклатуры
		|И	УправлениеАссортиментнойМатрицей_Родитель.ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО	РасчетТКА.Склад 		  	= КешДанныхДляВывода.Склад
		|И	РасчетТКА.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных
		|ПО	КешИсключенияВПодчиненных.Склад 		  	= КешДанныхДляВывода.Склад
		|И	КешИсключенияВПодчиненных.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	КешИсключенияВПодчиненных.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешКонтрольОтключенВПодчиненных КАК КешКонтрольОтключенВПодчиненных
		|ПО	КешКонтрольОтключенВПодчиненных.Склад = КешДанныхДляВывода.Склад
		|И	КешКонтрольОтключенВПодчиненных.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|И	КешКонтрольОтключенВПодчиненных.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ДнейНаСкладе КАК ДнейНаСкладе
		|ПО	ДнейНаСкладе.Склад = КешДанныхДляВывода.Склад
		|И	ДнейНаСкладе.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|И	ДнейНаСкладе.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|
		|УПОРЯДОЧИТЬ ПО
		|	IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) Возр,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, 0) = 0
		|		ТОГДА 99999 
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.НомерПоПорядку
		|	КОНЕЦ Возр,
		|	КешДанныхДляВывода.ТоварнаяКатегория.Наименование Возр
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДнейНаСкладе;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешИсключенияВПодчиненных;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешКонтрольОтключенВПодчиненных;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыПоВидуНоменклатуры()
 
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0. Кеш номенклатуры
		|ВЫБРАТЬ
		|	СпрНоменклатура.Ссылка 			КАК Номенклатура,
		|	СпрНоменклатура.Производитель 	КАК Производитель
		|ПОМЕСТИТЬ СпрНоменклатура
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|ГДЕ
		|	СпрНоменклатура.ВидНоменклатуры = &ВидНоменклатуры
		|И	СпрНоменклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПРЕДСТАВЛЕНИЕ(Производитель.Ссылка)		КАК ДанныеДерева,
		|	&Склад								   	КАК Склад,
		|	&ВидНоменклатуры				   		КАК ВидНоменклатуры,
		|	&ТоварнаяКатегория						КАК ТоварнаяКатегория,
		|	Производители.Ссылка                    КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.Производители КАК Производители
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ СпрНоменклатура КАК СпрНоменклатура
		|ПО	СпрНоменклатура.Производитель = Производители.Ссылка
		|
		|ГДЕ
		|	Производители.ПометкаУдаления = Ложь
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""<Производитель не задан>"",
		|	&Склад,
		|	&ВидНоменклатуры,
		|	&ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КешДанныхДляВывода.Склад				КАК Склад,
		|   КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель	 	КАК Производитель,
		|
		|	СРЕДНЕЕ(ТоварыОрганизацийОстатки.КоличествоОстаток) КАК ГлубинаОстаткаФактСреднее,
		|   МАКСИМУМ(ТоварыОрганизацийОстатки.КоличествоОстаток)КАК ГлубинаОстаткаФактМаксимальное,
		|  	КОЛИЧЕСТВО(ТоварыОрганизацийОстатки.Номенклатура) 	КАК КоличествоАртикулов
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(, Номенклатура В (ВЫБРАТЬ Номенклатура ИЗ СпрНоменклатура) И Склад = &Склад) КАК ТоварыОрганизацийОстатки
		|ПО	ТоварыОрганизацийОстатки.Номенклатура.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	ТоварыОрганизацийОстатки.Номенклатура.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	ТоварыОрганизацийОстатки.Номенклатура.Производитель	    = КешДанныхДляВывода.Производитель
		|И	ТоварыОрганизацийОстатки.Склад 						  	= КешДанныхДляВывода.Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	КешДанныхДляВывода.Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АМ_УправлениеАссортиментнойМатрицей.Склад 				КАК Склад,	
		|	АМ_УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	АМ_УправлениеАссортиментнойМатрицей.Производитель		КАК Производитель,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста 		КАК ПосадочныеМеста,
		|	АМ_УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ 	КАК ОтклонениеКоличествоПМ,
		|	АМ_УправлениеАссортиментнойМатрицей.МинимальныйЗапас   		КАК МинимальныйЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.СтраховойЗапас     		КАК СтраховойЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.МаксимальныйЗапас  		КАК МаксимальныйЗапас,
		| 
		|	АМ_УправлениеАссортиментнойМатрицей.Исключено		  			КАК Исключено,
		|	АМ_УправлениеАссортиментнойМатрицей.КонтрольМатрицейОтключен    КАК КонтрольМатрицейОтключен,
		|	АМ_УправлениеАссортиментнойМатрицей.НомерПоПорядку      		КАК НомерПоПорядку
		|
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, 
		|						ВидНоменклатуры, 
		|						ТоварнаяКатегория, 
		|						Производитель,
		|						Номенклатура) В (	ВЫБРАТЬ 
		|												Склад, 
		|												ВидНоменклатуры, 
		|												ТоварнаяКатегория,
		|												Производитель,
		|												Номенклатура
		|											ИЗ 
		|												КешДанныхДляВывода)
		|										  ) КАК АМ_УправлениеАссортиментнойМатрицей	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Склад КАК Склад,	
		|	ВидНоменклатуры КАК ВидНоменклатуры,
		|	ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Производитель КАК Производитель,
		|	Исключено КАК Исключено
		|
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры,
		|					                                                        ТоварнаяКатегория,
		|																			Производитель
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|						И Производитель <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|ГДЕ 
		|	 АМ_УАМ.Исключено = Истина
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Склад КАК Склад,	
		|	ВидНоменклатуры КАК ВидНоменклатуры,
		|	ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Производитель КАК Производитель,
		|   КонтрольМатрицейОтключен КАК КонтрольМатрицейОтключен
		|
		|ПОМЕСТИТЬ КешКонтрольОтключенВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры,
		|					                                                        ТоварнаяКатегория,
		|																			Производитель
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|						И Производитель <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|													) КАК АМ_УАМ
		|ГДЕ 
		|	АМ_УАМ.КонтрольМатрицейОтключен = Истина
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	АУН.Номенклатура.Производитель КАК Производитель,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладе	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешДанныхДляВывода КАК КешДанныхДляВывода
		|ПО	КешДанныхДляВывода.Склад = АУН.Склад
		|И  КешДанныхДляВывода.ВидНоменклатуры = АУН.Номенклатура.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = АУН.Номенклатура.ТоварнаяКатегория
		|И  КешДанныхДляВывода.Производитель = АУН.Номенклатура.Производитель
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ВидНоменклатуры,
		|	АУН.Номенклатура.ТоварнаяКатегория,
		|	АУН.Номенклатура.Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ВидНоменклатуры,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) = Истина
		|			ТОГДА 1
		|		КОГДА IsNull(КешИсключенияВПодчиненных.Исключено, Ложь) = Истина
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Исключено,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.КонтрольМатрицейОтключен, Ложь) = Истина
		|			ТОГДА 1
		|		КОГДА IsNull(КешКонтрольОтключенВПодчиненных.КонтрольМатрицейОтключен, Ложь) = Истина
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КонтрольМатрицейОтключен,
		|	IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, 0) КАК НомерПоПорядку,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|			И IsNull(УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) = 0
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) = 0
		|			ТОГДА 0
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 0
		|			И IsNull(УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) = 0
		|			И IsNull(РасчетТКА.КоличествоАртикулов, 0) > 0
		|			ТОГДА 3
		|		КОГДА УправлениеАссортиментнойМатрицей.ПосадочныеМеста + УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ < РасчетТКА.КоличествоАртикулов
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ									КАК Состояние,
		|
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель		КАК Производитель,
		|
		|	IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 		КАК ПосадочныеМеста,
		|	IsNull(УправлениеАссортиментнойМатрицей.ОтклонениеКоличествоПМ, 0) 	КАК ОтклонениеКоличествоПМ,
		|
		|	УправлениеАссортиментнойМатрицей.МинимальныйЗапас 	КАК МинимальныйЗапас,
		|	УправлениеАссортиментнойМатрицей.СтраховойЗапас 	КАК СтраховойЗапас,
		|	УправлениеАссортиментнойМатрицей.МаксимальныйЗапас 	КАК МаксимальныйЗапас,
		|
		|   РасчетТКА.ГлубинаОстаткаФактСреднее  		КАК ГлубинаОстаткаФактСреднее,
		|   РасчетТКА.ГлубинаОстаткаФактМаксимальное  	КАК ГлубинаОстаткаФактМаксимальное,
		|	РасчетТКА.КоличествоАртикулов 				КАК КоличествоАртикулов,
		|
		|	ДнейНаСкладе.ДНС КАК ДНС
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей
		|ПО	КешДанныхДляВывода.Склад 			 = УправлениеАссортиментнойМатрицей.Склад
		|И 	КешДанныхДляВывода.ВидНоменклатуры 	 = УправлениеАссортиментнойМатрицей.ВидНоменклатуры
		|И  КешДанныхДляВывода.ТоварнаяКатегория = УправлениеАссортиментнойМатрицей.ТоварнаяКатегория
		|И  КешДанныхДляВывода.Производитель	 = УправлениеАссортиментнойМатрицей.Производитель
		|И	КешДанныхДляВывода.Производитель 	<> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей_Родитель
		|ПО	УправлениеАссортиментнойМатрицей.Склад 			 	= УправлениеАссортиментнойМатрицей_Родитель.Склад
		|И 	УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	= УправлениеАссортиментнойМатрицей_Родитель.ВидНоменклатуры
		|И 	УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	= УправлениеАссортиментнойМатрицей_Родитель.ТоварнаяКатегория
		|И	УправлениеАссортиментнойМатрицей_Родитель.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО	РасчетТКА.Склад 		  	= КешДанныхДляВывода.Склад
		|И	РасчетТКА.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	РасчетТКА.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	РасчетТКА.Производитель 	= КешДанныхДляВывода.Производитель
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных
		|ПО	КешИсключенияВПодчиненных.Склад = КешДанныхДляВывода.Склад
		|И	КешИсключенияВПодчиненных.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|И	КешИсключенияВПодчиненных.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	КешИсключенияВПодчиненных.Производитель = КешДанныхДляВывода.Производитель
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешКонтрольОтключенВПодчиненных КАК КешКонтрольОтключенВПодчиненных
		|ПО	КешКонтрольОтключенВПодчиненных.Склад = КешДанныхДляВывода.Склад
		|И	КешКонтрольОтключенВПодчиненных.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|И	КешКонтрольОтключенВПодчиненных.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	КешКонтрольОтключенВПодчиненных.Производитель 	= КешДанныхДляВывода.Производитель
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ДнейНаСкладе КАК ДнейНаСкладе
		|ПО	ДнейНаСкладе.Склад = КешДанныхДляВывода.Склад
		|И	ДнейНаСкладе.ВидНоменклатуры = КешДанныхДляВывода.ВидНоменклатуры
		|И	ДнейНаСкладе.ТоварнаяКатегория = КешДанныхДляВывода.ТоварнаяКатегория
		|И	ДнейНаСкладе.Производитель = КешДанныхДляВывода.Производитель
		|
		|УПОРЯДОЧИТЬ ПО
		|	IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) Возр,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, 0) = 0
		|		ТОГДА 99999 
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.НомерПоПорядку
		|	КОНЕЦ Возр
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СпрНоменклатура;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ РасчетТКА;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДнейНаСкладе;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешИсключенияВПодчиненных;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории()
 
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПРЕДСТАВЛЕНИЕ(СпрНоменклатура.Ссылка)		КАК ДанныеДерева,
		|	СпрНоменклатура.Ссылка				   		КАК Номенклатура,
		|	&Склад								   		КАК Склад,
		|	СпрНоменклатура.ВидНоменклатуры				КАК ВидНоменклатуры,
		|	СпрНоменклатура.ТоварнаяКатегория			КАК ТоварнаяКатегория,
		|	СпрНоменклатура.Производитель				КАК Производитель
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|
		|ГДЕ
		|	СпрНоменклатура.ВидНоменклатуры = &ВидНоменклатуры
		|И	СпрНоменклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|И	СпрНоменклатура.Производитель = &Производитель
		|И 	СпрНоменклатура.ЭтоГруппа = Ложь	
		|И	СпрНоменклатура.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Склад	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	АМ_УправлениеАссортиментнойМатрицей.Склад 				КАК Склад,	
		|	АМ_УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	КАК ТоварнаяКатегория,
		|	АМ_УправлениеАссортиментнойМатрицей.Производитель	 	КАК Производитель,
		|	АМ_УправлениеАссортиментнойМатрицей.Номенклатура	 	КАК Номенклатура,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста 	КАК ПосадочныеМеста,
		|	АМ_УправлениеАссортиментнойМатрицей.МинимальныйЗапас   	КАК МинимальныйЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.СтраховойЗапас     	КАК СтраховойЗапас,
		|	АМ_УправлениеАссортиментнойМатрицей.МаксимальныйЗапас  	КАК МаксимальныйЗапас,
		|
		|	АМ_УправлениеАссортиментнойМатрицей.Исключено		  			КАК Исключено,
		|	АМ_УправлениеАссортиментнойМатрицей.КонтрольМатрицейОтключен    КАК КонтрольМатрицейОтключен,
		|	АМ_УправлениеАссортиментнойМатрицей.НомерПоПорядку				КАК НомерПоПорядку
		|
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, 
		|						(Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, Номенклатура) В (	ВЫБРАТЬ 
		|																			Склад, 
		|																			ВидНоменклатуры, 
		|																			ТоварнаяКатегория,
		|																			Производитель,
		|																			Номенклатура
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК АМ_УправлениеАссортиментнойМатрицей	
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад, ВидНоменклатуры, ТоварнаяКатегория 
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура КАК Номенклатура,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладе	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешДанныхДляВывода КАК КешДанныхДляВывода
		|ПО	КешДанныхДляВывода.Склад = АУН.Склад
		|И  КешДанныхДляВывода.Номенклатура = АУН.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) КАК Исключено,
		|	IsNull(УправлениеАссортиментнойМатрицей.КонтрольМатрицейОтключен, Ложь) КАК КонтрольМатрицейОтключен,
		|	IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, Ложь) КАК НомерПоПорядку,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) 	= 0 
		|			И IsNull(ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток, 0)>= 0
		|			ТОГДА 0
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) = 1 
		|			И IsNull(ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток, 0) = 0
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ									КАК Состояние,
		|
		|	КешДанныхДляВывода.ДанныеДерева			КАК ДанныеДерева,
		|   КешДанныхДляВывода.Склад				КАК Склад,
		|	КешДанныхДляВывода.ВидНоменклатуры		КАК ВидНоменклатуры,
		|	КешДанныхДляВывода.ТоварнаяКатегория	КАК ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель		КАК Производитель,
		|	КешДанныхДляВывода.Номенклатура			КАК Номенклатура,
		|
		|	IsNull(УправлениеАссортиментнойМатрицей.ПосадочныеМеста, 0) КАК ПосадочныеМеста,
		|
		|	УправлениеАссортиментнойМатрицей.МинимальныйЗапас 	КАК МинимальныйЗапас,
		|	УправлениеАссортиментнойМатрицей.СтраховойЗапас 	КАК СтраховойЗапас,
		|	УправлениеАссортиментнойМатрицей.МаксимальныйЗапас 	КАК МаксимальныйЗапас,
		|
		|   ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток КАК ГлубинаОстаткаФактСреднее,
		|   ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток КАК ГлубинаОстаткаФактМаксимальное,
		|	ВЫБОР
		|		КОГДА ТоварыОрганизацийОбороты.КоличествоКонечныйОстаток > 0 
		|			ТОГДА 1 
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоличествоАртикулов,
		|
		|	ДнейНаСкладе.ДНС КАК ДНС
		|
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(&НачалоПериодаМесяц, &КонецПериода, , ,  
		|											(Номенклатура, Склад) В (	ВЫБРАТЬ 
		|																			Номенклатура, 
		|																			Склад 
		|																		ИЗ 
		|																			КешДанныхДляВывода)
		|																					) КАК ТоварыОрганизацийОбороты
		|ПО	КешДанныхДляВывода.Номенклатура	= ТоварыОрганизацийОбороты.Номенклатура
		|И 	КешДанныхДляВывода.Склад	 	= ТоварыОрганизацийОбороты.Склад
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ АМ_УправлениеАссортиментнойМатрицей КАК УправлениеАссортиментнойМатрицей
		|ПО	УправлениеАссортиментнойМатрицей.Склад 			 	= КешДанныхДляВывода.Склад
		|И 	УправлениеАссортиментнойМатрицей.ВидНоменклатуры 	= КешДанныхДляВывода.ВидНоменклатуры
		|И	УправлениеАссортиментнойМатрицей.ТоварнаяКатегория 	= КешДанныхДляВывода.ТоварнаяКатегория
		|И 	УправлениеАссортиментнойМатрицей.Производитель 		= КешДанныхДляВывода.Производитель
		|И	УправлениеАссортиментнойМатрицей.Номенклатура 		= КешДанныхДляВывода.Номенклатура
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ДнейНаСкладе КАК ДнейНаСкладе
		|ПО	ДнейНаСкладе.Склад = КешДанныхДляВывода.Склад
		|И	ДнейНаСкладе.Номенклатура = КешДанныхДляВывода.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	IsNull(УправлениеАссортиментнойМатрицей.Исключено, Ложь) Возр,
		|	ВЫБОР
		|		КОГДА IsNull(УправлениеАссортиментнойМатрицей.НомерПоПорядку, 0) = 0
		|		ТОГДА 99999 
		|		ИНАЧЕ УправлениеАссортиментнойМатрицей.НомерПоПорядку
		|	КОНЕЦ Возр,
		|	КешДанныхДляВывода.Номенклатура.Наименование Возр
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДнейНаСкладе;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДляВывода;
		////////////////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи()



&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаПодчиненныхАналитическихДанных()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ
		|	АналитикаУчетаНоменклатуры.Ссылка 			КАК АналитикаУчетаНоменклатуры,
		|	АналитикаУчетаНоменклатуры.Номенклатура 	КАК Номенклатура,
		|	АналитикаУчетаНоменклатуры.Характеристика 	КАК Характеристика,
		|	АналитикаУчетаНоменклатуры.Склад 			КАК Склад,
		|	ВЫБОР
		|		КОГДА &ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|			ТОГДА АналитикаУчетаНоменклатуры.Номенклатура.ТоварнаяКатегория
		|		КОГДА &Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|			ТОГДА АналитикаУчетаНоменклатуры.Номенклатура.Производитель
		|		ИНАЧЕ АналитикаУчетаНоменклатуры.Номенклатура
		|	КОНЕЦ КАК ДанныеДерева
		|ПОМЕСТИТЬ КешАналитикаУчетаНоменклатуры
		|ИЗ
		|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|
		|ГДЕ
		|	АналитикаУчетаНоменклатуры.Склад В (ВЫБРАТЬ 
		|											Склад
		|										ИЗ 
		|											Справочник.АМ_ФорматыМагазинов.Склады
		|										ГДЕ
		|											Ссылка = &ФорматМагазина
		|										
		|										ОБЪЕДИНИТЬ
		|
		|										ВЫБРАТЬ
		|											&Склад)
		|И	АналитикаУчетаНоменклатуры.Номенклатура.ВидНоменклатуры = &ВидНоменклатуры
		|И	ВЫБОР
		|		КОГДА &ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|			ТОГДА Истина
		|		ИНАЧЕ АналитикаУчетаНоменклатуры.Номенклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|	КОНЕЦ
		|И	ВЫБОР
		|		КОГДА &Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|			ТОГДА Истина
		|		ИНАЧЕ АналитикаУчетаНоменклатуры.Номенклатура.Производитель = &Производитель
		|	КОНЕЦ		
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1. Продажи по неделям
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Аналитика.ДанныеДерева 								КАК ДанныеДерева,
		|	СУММА(КоличествоОборот) 							КАК ПродажиНеделя,
		|	КОЛИЧЕСТВО(Продажи.АналитикаУчетаНоменклатуры.Номенклатура) КАК ПродажиНеделяПоАртикулам
		|ПОМЕСТИТЬ ПродажиПоНеделям
		|ИЗ
		|	КешАналитикаУчетаНоменклатуры КАК Аналитика
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериодаНеделя, &КонецПериода, , АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)) КАК Продажи
		|ПО	Продажи.АналитикаУчетаНоменклатуры = Аналитика.АналитикаУчетаНоменклатуры	
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДерева
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДанныеДерева
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2. Продажи по неделям "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Аналитика.ДанныеДерева		КАК ДанныеДерева,
		|	Сумма(НаличиеПодЗаказРасход)КАК ПродажиНеделяПодЗаказ
		|ПОМЕСТИТЬ ПродажиПоНеделямПодЗаказ
		|ИЗ
		|	КешАналитикаУчетаНоменклатуры КАК Аналитика
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериодаНеделя, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры)) КАК Продажи
		|ПО Продажи.Номенклатура 	= Аналитика.Номенклатура
		|И	Продажи.Характеристика 	= Аналитика.Характеристика
		|И	Продажи.Склад			= Аналитика.Склад
		|
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	ДанныеДерева
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	ДанныеДерева
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3. Продажи по 2-х неделям
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Аналитика.ДанныеДерева								КАК ДанныеДерева,
		|	СУММА(КоличествоОборот) 							КАК Продажи2Недели,
		|	КОЛИЧЕСТВО(Продажи.АналитикаУчетаНоменклатуры.Номенклатура) КАК Продажи2НеделиПоАртикулам
		|ПОМЕСТИТЬ Продажи2ПоНеделям
		|ИЗ
		|	КешАналитикаУчетаНоменклатуры КАК Аналитика
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериода2Недели, &КонецПериода, , АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)) КАК Продажи
		|ПО	Продажи.АналитикаУчетаНоменклатуры = Аналитика.АналитикаУчетаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДерева
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДанныеДерева
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4. Продажи по 2-х неделям "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Аналитика.ДанныеДерева		КАК ДанныеДерева,
		|	Сумма(НаличиеПодЗаказРасход)КАК Продажи2НеделиПодЗаказ
		|ПОМЕСТИТЬ ПродажиПо2НеделямПодЗаказ
		|ИЗ
		|	КешАналитикаУчетаНоменклатуры КАК Аналитика
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериода2Недели, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры)) КАК Продажи
		|ПО Продажи.Номенклатура 	= Аналитика.Номенклатура
		|И	Продажи.Характеристика 	= Аналитика.Характеристика
		|И	Продажи.Склад			= Аналитика.Склад
		|
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	ДанныеДерева
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	ДанныеДерева
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5. Продажи за месяц
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Аналитика.ДанныеДерева								КАК ДанныеДерева,	
		|	СУММА(КоличествоОборот) 							КАК ПродажиМесяц,
		|	КОЛИЧЕСТВО(Продажи.АналитикаУчетаНоменклатуры.Номенклатура) КАК ПродажиМесяцПоАртикулам
		|ПОМЕСТИТЬ ПродажиЗаМесяц
		|ИЗ
		|	КешАналитикаУчетаНоменклатуры КАК Аналитика
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериодаМесяц, &КонецПериода, ,  АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)) КАК Продажи
		|ПО	Продажи.АналитикаУчетаНоменклатуры = Аналитика.АналитикаУчетаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДерева	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДанныеДерева
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6. Продажи за месяц "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Аналитика.ДанныеДерева		КАК ДанныеДерева,
		|	Сумма(НаличиеПодЗаказРасход)КАК ПродажиМесяцПодЗаказ
		|ПОМЕСТИТЬ ПродажиЗаМесяцПодЗаказ
		|ИЗ
		|	КешАналитикаУчетаНоменклатуры КАК Аналитика
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериодаМесяц, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры)) КАК Продажи
		|ПО Продажи.Номенклатура 	= Аналитика.Номенклатура
		|И	Продажи.Характеристика 	= Аналитика.Характеристика
		|И	Продажи.Склад			= Аналитика.Склад
		|
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	ДанныеДерева
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	ДанныеДерева
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7. Продажи за квартал
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Аналитика.ДанныеДерева								КАК ДанныеДерева,
		|	СУММА(КоличествоОборот) 							КАК ПродажиКвартал,
		|	КОЛИЧЕСТВО(Продажи.АналитикаУчетаНоменклатуры.Номенклатура) КАК ПродажиКварталПоАртикулам
		|ПОМЕСТИТЬ ПродажиЗаКвартал
		|ИЗ
		|	КешАналитикаУчетаНоменклатуры КАК Аналитика
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(&НачалоПериодаКвартал, &КонецПериода, ,  АналитикаУчетаНоменклатуры В (ВЫБРАТЬ АналитикаУчетаНоменклатуры ИЗ КешАналитикаУчетаНоменклатуры)
		|														И  АналитикаУчетаПоПартнерам.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)) КАК Продажи
		|ПО	Продажи.АналитикаУчетаНоменклатуры = Аналитика.АналитикаУчетаНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДерева	
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДанныеДерева
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8. Продажи за квартал "Под заказ"
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Аналитика.ДанныеДерева		КАК ДанныеДерева,
		|	Сумма(НаличиеПодЗаказРасход)КАК ПродажиКварталПодЗаказ
		|ПОМЕСТИТЬ ПродажиЗаКварталПодЗаказ
		|ИЗ
		|	КешАналитикаУчетаНоменклатуры КАК Аналитика
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов.Обороты(&НачалоПериодаКвартал, 
		|												&КонецПериода, 
		|												Регистратор, 
		|												(Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры)) КАК Продажи
		|ПО Продажи.Номенклатура 	= Аналитика.Номенклатура
		|И	Продажи.Характеристика 	= Аналитика.Характеристика
		|И	Продажи.Склад			= Аналитика.Склад
		|
		|ГДЕ
		|	Регистратор Ссылка Документ.РеализацияТоваровУслуг
		|
		|СГРУППИРОВАТЬ ПО
		| 	ДанныеДерева
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	ДанныеДерева
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 9. Свободные остатки
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Аналитика.ДанныеДерева					КАК ДанныеДерева,
		|	Сумма(ОстаткиНаСкладе.ВНаличииОстаток)	КАК ВНаличииОстаток
		|ПОМЕСТИТЬ КешСвободныхОстатков
		|ИЗ
		|	КешАналитикаУчетаНоменклатуры КАК Аналитика
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(, (Номенклатура, Характеристика, Склад) В (ВЫБРАТЬ 
		|																							Номенклатура, 
		|																							Характеристика, 
		|																							Склад 
		|																						ИЗ 
		|																							КешАналитикаУчетаНоменклатуры)) КАК ОстаткиНаСкладе
		|ПО ОстаткиНаСкладе.Номенклатура 	= Аналитика.Номенклатура
		|И	ОстаткиНаСкладе.Характеристика 	= Аналитика.Характеристика
		|И	ОстаткиНаСкладе.Склад			= Аналитика.Склад
		|
		|СГРУППИРОВАТЬ ПО
		| 	ДанныеДерева
		|
		|ИНДЕКСИРОВАТЬ ПО
		| 	ДанныеДерева
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 10.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		| 	ДанныеДерева
		|ПОМЕСТИТЬ КешДанныхДерева
		|ИЗ
		|	КешАналитикаУчетаНоменклатуры 	
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 11.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Аналитика.ДанныеДерева 						КАК ДанныеДерева,
		|	IsNull(ОстаткиНаСкладе.ВНаличииОстаток, 0) 	КАК НаСкладе,
		|
		|	IsNull(ПродажиПоНеделям.ПродажиНеделя, 0) 					КАК ПродажиНеделя,
		|	IsNull(ПродажиПоНеделям.ПродажиНеделяПоАртикулам, 0) 		КАК ПродажиНеделяПоАртикулам,
		|	IsNull(ПродажиПоНеделямПодЗаказ.ПродажиНеделяПодЗаказ, 0) 	КАК ПродажиНеделяПодЗаказ,
		|	ВЫБОР
		|		КОГДА IsNull(ОстаткиНаСкладе.ВНаличииОстаток, 0) > 0
		|		ТОГДА IsNull(ПродажиПоНеделям.ПродажиНеделя, 0) * 4 / ОстаткиНаСкладе.ВНаличииОстаток
		|		ИНАЧЕ ""—""
		|	КОНЕЦ КАК ПродажиНеделяОборачиваемость,
		|	ВЫБОР
		|		КОГДА IsNull(Продажи2ПоНеделям.Продажи2Недели, 0) > 0
		|		ТОГДА (IsNull(ПродажиПоНеделям.ПродажиНеделя, 0) * 2 / Продажи2ПоНеделям.Продажи2Недели - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПродажиНеделяРост,
		|
		|
		|	IsNull(Продажи2ПоНеделям.Продажи2Недели, 0) 				КАК Продажи2Недели,
		|	IsNull(Продажи2ПоНеделям.Продажи2НеделиПоАртикулам, 0) 		КАК Продажи2НеделиПоАртикулам,
		|	IsNull(ПродажиПо2НеделямПодЗаказ.Продажи2НеделиПодЗаказ, 0) КАК Продажи2НеделиПодЗаказ,
		|	ВЫБОР
		|		КОГДА IsNull(ОстаткиНаСкладе.ВНаличииОстаток, 0) > 0
		|		ТОГДА IsNull(Продажи2ПоНеделям.Продажи2Недели, 0) * 2 / ОстаткиНаСкладе.ВНаличииОстаток
		|		ИНАЧЕ ""—""
		|	КОНЕЦ КАК Продажи2НеделиОборачиваемость,
		|	ВЫБОР
		|		КОГДА IsNull(ПродажиЗаМесяц.ПродажиМесяц, 0) > 0
		|		ТОГДА (IsNull(Продажи2ПоНеделям.Продажи2Недели, 0) * 2 / ПродажиЗаМесяц.ПродажиМесяц - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Продажи2НеделиРост,
		|
		|
		|	IsNull(ПродажиЗаМесяц.ПродажиМесяц, 0) 					КАК ПродажиМесяц,
		|	IsNull(ПродажиЗаМесяц.ПродажиМесяцПоАртикулам, 0) 		КАК ПродажиМесяцПоАртикулам,
		|	IsNull(ПродажиЗаМесяцПодЗаказ.ПродажиМесяцПодЗаказ, 0) 	КАК ПродажиМесяцПодЗаказ,
		|	ВЫБОР
		|		КОГДА IsNull(ОстаткиНаСкладе.ВНаличииОстаток, 0) > 0
		|		ТОГДА IsNull(ПродажиЗаМесяц.ПродажиМесяц, 0) / ОстаткиНаСкладе.ВНаличииОстаток
		|		ИНАЧЕ ""—""
		|	КОНЕЦ КАК ПродажиМесяцОборачиваемость,
		|	ВЫБОР
		|		КОГДА IsNull(ПродажиЗаКвартал.ПродажиКвартал, 0) > 0
		|		ТОГДА (IsNull(ПродажиЗаМесяц.ПродажиМесяц, 0) * 3 / ПродажиЗаКвартал.ПродажиКвартал - 1) * 100
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПродажиМесяцРост,
		|
		|
		|	IsNull(ПродажиЗаКвартал.ПродажиКвартал, 0) 					КАК ПродажиКвартал,
		|	IsNull(ПродажиЗаКвартал.ПродажиКварталПоАртикулам, 0) 		КАК ПродажиКварталПоАртикулам,
		|	IsNull(ПродажиЗаКварталПодЗаказ.ПродажиКварталПодЗаказ, 0) 	КАК ПродажиКварталПодЗаказ,
		|	ВЫБОР
		|		КОГДА IsNull(ОстаткиНаСкладе.ВНаличииОстаток, 0) > 0
		|		ТОГДА IsNull(ПродажиЗаКвартал.ПродажиКвартал, 0) / 3 / ОстаткиНаСкладе.ВНаличииОстаток
		|		ИНАЧЕ ""—""
		|	КОНЕЦ КАК ПродажиКварталОборачиваемость
		|
		|ИЗ
		|	КешДанныхДерева КАК Аналитика
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ КешСвободныхОстатков КАК ОстаткиНаСкладе
		|ПО ОстаткиНаСкладе.ДанныеДерева = Аналитика.ДанныеДерева
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоНеделям КАК ПродажиПоНеделям
		|ПО ПродажиПоНеделям.ДанныеДерева = Аналитика.ДанныеДерева
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоНеделямПодЗаказ КАК ПродажиПоНеделямПодЗаказ
		|ПО ПродажиПоНеделямПодЗаказ.ДанныеДерева = Аналитика.ДанныеДерева
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ Продажи2ПоНеделям КАК Продажи2ПоНеделям
		|ПО Продажи2ПоНеделям.ДанныеДерева = Аналитика.ДанныеДерева
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПо2НеделямПодЗаказ КАК ПродажиПо2НеделямПодЗаказ
		|ПО ПродажиПо2НеделямПодЗаказ.ДанныеДерева = Аналитика.ДанныеДерева
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаМесяц КАК ПродажиЗаМесяц
		|ПО ПродажиЗаМесяц.ДанныеДерева = Аналитика.ДанныеДерева
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаМесяцПодЗаказ КАК ПродажиЗаМесяцПодЗаказ
		|ПО ПродажиЗаМесяцПодЗаказ.ДанныеДерева = Аналитика.ДанныеДерева
		|
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаКвартал КАК ПродажиЗаКвартал
		|ПО ПродажиЗаКвартал.ДанныеДерева = Аналитика.ДанныеДерева
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПродажиЗаКварталПодЗаказ КАК ПродажиЗаКварталПодЗаказ
		|ПО ПродажиЗаКварталПодЗаказ.ДанныеДерева = Аналитика.ДанныеДерева
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПродажиПоНеделям.ПродажиНеделя Убыв
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешДанныхДерева;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешСвободныхОстатков;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешАналитикаУчетаНоменклатуры;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиПоНеделям;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиПоНеделямПодЗаказ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Продажи2ПоНеделям;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиПо2НеделямПодЗаказ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаМесяц;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаМесяцПодЗаказ;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаКвартал;
		////////////////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПродажиЗаКварталПодЗаказ;
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаПодчиненныхАналитическихДанных()
 
#Область СлужебныеПроцедурыИФункцииСтраницыОбщегоЗаказа

&НаСервере
Процедура ОбщийЗаказВидыНоменклатурыПриАктивизацииСтрокиСервер(ВидНоменклатуры)

	Если ВидНоменклатуры.Пустая() ИЛИ ВидНоменклатуры.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);	
	
	ДеревоОбщийЗаказ = РеквизитФормыВЗначение("ОбщийЗаказДетально");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = РеквизитФормыВЗначение("Объект").ПолучитьТекстЗапросаДоступныхСкладов();
	Запрос.Выполнить();
	
	Запрос.Текст = РеквизитФормыВЗначение("Объект").ПолучитьТекстЗапросаОбщегоЗаказа();
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	РезультатПакета = Запрос.ВыполнитьПакет();
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	ТаблицаМатрицы = РезультатПакета[55].Выгрузить();
	
	ТаблицаОстатков = РезультатПакета[56].Выгрузить();
	ТаблицаОстатков.Индексы.Добавить("СкладПополнения, Номенклатура");
	
	ТаблицаАктуальности = РезультатПакета[57].Выгрузить();
	ТаблицаАктуальности.Индексы.Добавить("Номенклатура");

	// Распределение по виду номенклатуры
	РаспределитьТоварыПоИерархииМатрицы(РезультатПакета[31].Выбрать(),
									РезультатПакета[32].Выгрузить(),
									ТаблицаМатрицы,
									ТаблицаОстатков,
									ТаблицаАктуальности,
									Новый Структура("Склад, ВидНоменклатуры"),
									Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, ТКА_НМ", , , , 1),
									Новый Структура("СкладПополнения, Номенклатура"),
									ДеревоОбщийЗаказ);
									
	// Распеределение по товарным категориям
	РаспределитьТоварыПоИерархииМатрицы(РезультатПакета[40].Выбрать(),
									РезультатПакета[41].Выгрузить(),
									ТаблицаМатрицы,
									ТаблицаОстатков,
									ТаблицаАктуальности,
									Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория"),
									Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, ТКА_НМ", , , , , 1),
									Новый Структура("СкладПополнения, Номенклатура"),
									ДеревоОбщийЗаказ);
									
	// Распеределение по товарным категориям
	РаспределитьТоварыПоИерархииМатрицы(РезультатПакета[49].Выбрать(),
									РезультатПакета[50].Выгрузить(),
									ТаблицаМатрицы,
									ТаблицаОстатков,
									ТаблицаАктуальности,
									Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель"),
									Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, Номенклатура, ТКА_НМ", , , , , , 1),
									Новый Структура("СкладПополнения, Номенклатура"),
									ДеревоОбщийЗаказ);
									
	// Распеределение по номенклатуре
	РаспределитьТоварыПоИерархииМатрицы(РезультатПакета[54].Выбрать(),
									РезультатПакета[54].Выгрузить(),
									ТаблицаМатрицы,
									ТаблицаОстатков,
									ТаблицаАктуальности,
									Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, Номенклатура"),
									Новый Структура("Склад, ВидНоменклатуры, ТоварнаяКатегория, Производитель, Номенклатура, ТКА_НМ", , , , , , 1),
									Новый Структура("СкладПополнения, Номенклатура"),
									ДеревоОбщийЗаказ);
	
	ДеревоОбщийЗаказ.Строки.Сортировать("ТоварнаяКатегория Возр");
	
	ЗначениеВРеквизитФормы(ДеревоОбщийЗаказ, "ОбщийЗаказДетально");
	
КонецПроцедуры // ОбщийЗаказВидыНоменклатурыПриАктивизацииСтрокиСервер()

&НаСервереБезКонтекста
Процедура РаспределитьТоварыПоИерархииМатрицы(ВыборкаИерархия, ТаблицаПоиска, ТаблицаМатрицы, ТаблицаОстатков, ТаблицаАктуальности, ОтборПоИерархии, ОтборПоМатрице, ОтборПоОстаткам, ДеревоОбщийЗаказ)
	
	Пока ВыборкаИерархия.Следующий() Цикл
		
		НеРаспределено = ВыборкаИерархия.НеРаспределено;
		КоличествоМест = ВыборкаИерархия.КоличествоМест;
		
		ЗаполнитьЗначенияСвойств(ОтборПоИерархии, ВыборкаИерархия);		
		РезультатыПоиска = ТаблицаПоиска.НайтиСтроки(ОтборПоИерархии);
		
		РаспределитьОстаткиПоМатрице(РезультатыПоиска,
								ТаблицаМатрицы,
								ТаблицаОстатков,
								ОтборПоМатрице,
								ОтборПоОстаткам,
								ДеревоОбщийЗаказ,
								НеРаспределено,
								КоличествоМест);
								
		РаспределитьАктуальностьПоМатрице(РезультатыПоиска,
								ТаблицаМатрицы,
								ТаблицаАктуальности,
								ОтборПоМатрице,
								ДеревоОбщийЗаказ,
								НеРаспределено);
								
		Если НеРаспределено > 0 Тогда
			
			ТекстСообщения = НСтр("ru = '%1% позиций не распределено. Нет возможности заказа по параметрам : %2% %3% %4% %5% %6%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1%", Строка(НеРаспределено));
			
			Если ОтборПоИерархии.Свойство("Склад") Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2%", "[" + Строка(ВыборкаИерархия.Склад) + "]");
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%2%", "");	
			КонецЕсли;
			
			Если ОтборПоИерархии.Свойство("ВидНоменклатуры") Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%3%", "[" + Строка(ВыборкаИерархия.ВидНоменклатуры) + "]");
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%3%", "");
			КонецЕсли;
			
			Если ОтборПоИерархии.Свойство("ТоварнаяКатегория") Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%4%", "[" + Строка(ВыборкаИерархия.ТоварнаяКатегория) + "]");
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%4%", "");
			КонецЕсли;
			
			Если ОтборПоИерархии.Свойство("Производитель") Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%5%", "[" + Строка(ВыборкаИерархия.Производитель) + "]");
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%5%", "");
			КонецЕсли;
			
			Если ОтборПоИерархии.Свойство("Номенклатура") Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%6%", "[" + Строка(ВыборкаИерархия.Номенклатура) + "]");
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%6%", "");
			КонецЕсли;
			
			НоваяСтрока = ДеревоОбщийЗаказ.Строки.Добавить();
			НоваяСтрока.ДанныеДерева = ТекстСообщения
			
		КонецЕсли;
			
	КонецЦикла;
	
КонецПроцедуры // РаспределитьТоварыПоИерархииМатрицы()

&НаСервереБезКонтекста
Процедура РаспределитьОстаткиПоМатрице(МассивЭлементов, МатрицаНоменклатуры, ОстаткиТоваров, ПараметрыОтбораПоМатрице, ПараметрыОтбораОстатков, ДеревоОбщийЗаказ, НеРаспределено, КоличествоМест)

	// Обработка элементов в наличии
	ПараметрыОтбораПоМатрице.ТКА_НМ = 1;
	Для каждого Элемент Из МассивЭлементов Цикл
		
		ЗаполнитьЗначенияСвойств(ПараметрыОтбораПоМатрице, Элемент);
		РезультатыОтбораПоМатрице = МатрицаНоменклатуры.НайтиСтроки(ПараметрыОтбораПоМатрице);
		Для каждого ЭлементМатрицы Из РезультатыОтбораПоМатрице Цикл
			
			Если КоличествоМест = 0 Тогда
				Прервать;	
			КонецЕсли;
			
			Если ЭлементМатрицы.МаксимальныйЗапас = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ПараметрыОтбораОстатков, ЭлементМатрицы, "СкладПополнения, Номенклатура");
			ДоступныеОстатки = ОстаткиТоваров.НайтиСтроки(ПараметрыОтбораОстатков);	
			Если ДоступныеОстатки.Количество() Тогда
				УменьшитьКоличествоДоступногоТовара(ОстаткиТоваров, ДоступныеОстатки[0], ДеревоОбщийЗаказ, ЭлементМатрицы, КоличествоМест);
			Иначе
				Если ЭлементМатрицы.МинимальныйЗапас >= ЭлементМатрицы.КоличествоОстаток
				 И	 ЭлементМатрицы.МаксимальныйЗапас > ЭлементМатрицы.КоличествоОстаток Тогда
					ДобавитьНоменклатуруВДеревоЗаказов(ДеревоОбщийЗаказ.Строки, ЭлементМатрицы, 0, НСтр("ru = 'Недостаток по min\max'"));
				КонецЕсли;
				УменьшитьКоличествоНеРаспределенногоТовара(КоличествоМест);	
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если НеРаспределено <= 0 Тогда
		Возврат;		
	КонецЕсли;
	
	// Обработка элементов не достающих
	ПараметрыОтбораПоМатрице.ТКА_НМ = 0;
	Для каждого Элемент Из МассивЭлементов Цикл
			
		ЗаполнитьЗначенияСвойств(ПараметрыОтбораПоМатрице, Элемент);
		РезультатыОтбораПоМатрице = МатрицаНоменклатуры.НайтиСтроки(ПараметрыОтбораПоМатрице);
		Для каждого ЭлементМатрицы Из РезультатыОтбораПоМатрице Цикл
			
			Если НеРаспределено = 0 Тогда
				Прервать;	
			КонецЕсли;
			
			Если ЭлементМатрицы.МаксимальныйЗапас = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ПараметрыОтбораОстатков, ЭлементМатрицы, "СкладПополнения, Номенклатура");
			ДоступныеОстатки = ОстаткиТоваров.НайтиСтроки(ПараметрыОтбораОстатков);
			Если ДоступныеОстатки.Количество() Тогда
				УменьшитьКоличествоДоступногоТовара(ОстаткиТоваров, ДоступныеОстатки[0], ДеревоОбщийЗаказ, ЭлементМатрицы, НеРаспределено);
			КонецЕсли;
			
		КонецЦикла; 
			
	КонецЦикла;
		
КонецПроцедуры // РаспределитьОстаткиПоМатрице()

&НаСервереБезКонтекста
Процедура РаспределитьАктуальностьПоМатрице(МассивЭлементов, МатрицаНоменклатуры, АктуальныеТовары, ПараметрыОтбораПоМатрице, ДеревоОбщийЗаказ, НеРаспределено)

	Если НеРаспределено <= 0 Тогда
		Возврат;		
	КонецЕсли;

	ПараметрыПоискаПоДереву = Новый Структура("Склад, Номенклатура");	
	ПараметрыОтбораПоМатрице.ТКА_НМ = 0;
	Для каждого Элемент Из МассивЭлементов Цикл
			
		ЗаполнитьЗначенияСвойств(ПараметрыОтбораПоМатрице, Элемент);
		РезультатыОтбораПоМатрице = МатрицаНоменклатуры.НайтиСтроки(ПараметрыОтбораПоМатрице);
		Для каждого ЭлементМатрицы Из РезультатыОтбораПоМатрице Цикл
			
			Если НеРаспределено = 0 Тогда
				Прервать;	
			КонецЕсли;
			
			Если ЭлементМатрицы.МаксимальныйЗапас = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			РезультатПоискаАТ = АктуальныеТовары.НайтиСтроки(Новый Структура("Номенклатура", ЭлементМатрицы.Номенклатура));
			Если РезультатПоискаАТ.Количество() Тогда
				
				ЗаполнитьЗначенияСвойств(ПараметрыПоискаПоДереву, ЭлементМатрицы);
				РезультатПоиска = ДеревоОбщийЗаказ.Строки.НайтиСтроки(ПараметрыПоискаПоДереву, Истина);	
				Если РезультатПоиска.Количество() Тогда
					Продолжить;
				КонецЕсли;
				
				ДобавитьНоменклатуруВДеревоЗаказов(ДеревоОбщийЗаказ.Строки, ЭлементМатрицы, 0, НСтр("ru = 'Недостаток артикулов'"));
				УменьшитьКоличествоНеРаспределенногоТовара(НеРаспределено);
					
			КонецЕсли;
		
		КонецЦикла; 
			
	КонецЦикла;
	
КонецПроцедуры // РаспределитьАктуальностьПоМатрице()
 
&НаСервереБезКонтекста
Процедура УменьшитьКоличествоДоступногоТовара(ОстаткиТоваров, СтрокаОстаток, ДеревоОбщийЗаказ, ЭлементМатрицы, НеОбработано)
	
	КоличествоКПриезду = Макс(ЭлементМатрицы.МаксимальныйЗапас - ЭлементМатрицы.КоличествоОстаток, 0);
	Если КоличествоКПриезду = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаОстаток.КоличествоОстаток > КоличествоКПриезду Тогда
		
		// Уменьшаем остаток товаров, так как эти остатки уедут на потребность матрицы
		СтрокаОстаток.КоличествоОстаток = СтрокаОстаток.КоличествоОстаток - КоличествоКПриезду;
		УменьшитьКоличествоНеРаспределенногоТовара(НеОбработано);
		
	ИначеЕсли СтрокаОстаток.КоличествоОстаток = КоличествоКПриезду Тогда
		
		// Удаляем остаток товаров, так как эти остатки уедут на потребность матрицы
		ОстаткиТоваров.Удалить(СтрокаОстаток);
		УменьшитьКоличествоНеРаспределенногоТовара(НеОбработано);
		
	Иначе
		
		ДобавитьНоменклатуруВДеревоЗаказов(ДеревоОбщийЗаказ.Строки, ЭлементМатрицы, СтрокаОстаток.КоличествоОстаток, НСтр("ru = 'Недостаток по min\max'"));
		// Удаляем остаток товаров, так как эти остатки уедут на потребность матрицы
		ОстаткиТоваров.Удалить(СтрокаОстаток);
		УменьшитьКоличествоНеРаспределенногоТовара(НеОбработано);
			
	КонецЕсли;

КонецПроцедуры // УменьшитьКоличествоДоступногоТовара() 

&НаСервереБезКонтекста
Процедура УменьшитьКоличествоНеРаспределенногоТовара(НеРаспределено)
	НеРаспределено = НеРаспределено - 1;	
КонецПроцедуры // УменьшитьКоличествоНеРаспределенногоТовара()

&НаСервереБезКонтекста
Процедура ДобавитьНоменклатуруВДеревоЗаказов(Строки, ЭлементМатрицы, Знач ДоступныйОстаток, ДополнительноеСообщение)
	
	КоличествоКПриезду = Макс(ЭлементМатрицы.МаксимальныйЗапас - ЭлементМатрицы.КоличествоОстаток, 0);
	КЗаказу = КоличествоКПриезду - ДоступныйОстаток;
	СтрокаДерева = Строки.Найти(ЭлементМатрицы.Номенклатура, "Номенклатура");
	Если СтрокаДерева <> Неопределено Тогда
		СтрокаДерева.ОбщееКоличество = СтрокаДерева.ОбщееКоличество + КЗаказу;
	Иначе
		СтрокаДерева = Строки.Добавить();
		СтрокаДерева.ДанныеДерева = "Недостаток артикулов";
		ЗаполнитьЗначенияСвойств(СтрокаДерева, ЭлементМатрицы, , "Склад");
		СтрокаДерева.ОбщееКоличество = КЗаказу;		
	КонецЕсли;
	
	ПодчиненнаяСтрока = СтрокаДерева.Строки.Добавить();
	ЗаполнитьЗначенияСвойств(ПодчиненнаяСтрока, ЭлементМатрицы);
	ПодчиненнаяСтрока.ДанныеДерева = Строка(ЭлементМатрицы.Склад);	
	ПодчиненнаяСтрока.ОбщееКоличество = КЗаказу;
	ПодчиненнаяСтрока.Пустышка = ДополнительноеСообщение;
	
КонецПроцедуры // ДобавитьНоменклатуруВДеревоЗаказов()

#КонецОбласти 

#Область СлужебныеПроцедурыИФункцииСтраницыОшибок

&НаСервере
Процедура ОбновитьСтраницуОшибок()
	
	ДеревоОшибок = АналитикаОшибкиПоМатрице.ПолучитьЭлементы();
	ДеревоОшибок.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаОшибокПоМатрице();
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаВыгрузки Из Выгрузка Цикл
		ЗаполнитьЗначенияСвойств(ДеревоОшибок.Добавить(), СтрокаВыгрузки);	
	КонецЦикла; 
	
КонецПроцедуры // ОбновитьСтраницуОшибок()


&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОшибокПоМатрице()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ
		|	*
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, Склад В(ВЫБРАТЬ 
		|																					Склад 
		|																				ИЗ 
		|																					Справочник.АМ_ФорматыМагазинов.Склады
		|																				ГДЕ
		|																					ИспользуетсяУправление = Истина
		|																				И 	(
		|																						АвтоПеремещениеПоГлубине = Истина
		|																				 	ИЛИ
		|																					    АвтоПеремещениеСоСклада = Истина
		|																					ИЛИ 
		|																					    АвтоПеремещениеЗаказПодЗаказ = Истина
		|																				  	)
		|																				)
		|																		) КАК УАМ
		|ГДЕ
		|	УАМ.ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|И	УАМ.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|И	УАМ.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|И	УАМ.ПосадочныеМеста <> 0
		|И	УАМ.МинимальныйЗапас = 0
		|И	УАМ.МаксимальныйЗапас = 0
		|И	УАМ.Исключено = Ложь
		|И	УАМ.КонтрольМатрицейОтключен = Ложь
		|";
	Возврат ТекстЗапроса;		
		
КонецФункции // ПолучитьТекстЗапросаОшибокПоМатрице()

#КонецОбласти 

#Область ИнтеграцияСБиблиотекойСтандартныхПодсистем

&НаСервере
Функция ВыполнитьКомандуНапрямую(ИдентификаторКоманды, ПараметрыКоманды)
    Возврат ДополнительныеОтчетыИОбработки.ВыполнитьКомандуИзФормыВнешнегоОбъекта(ИдентификаторКоманды, ПараметрыКоманды, ЭтаФорма);
КонецФункции

#КонецОбласти 




//&НаСервере
//Процедура ВыполнитьВостановлениеКурсораПриПерестройкиДерева(РезультатПоиска, Знач Свойство, Знач Значение)
//	
//	Если ЗначениеЗаполнено(Значение) Тогда
//		ЭлементыДерева = РезультатПоиска.ПолучитьЭлементы();
//		Для каждого ЭлементДерева Из ЭлементыДерева Цикл
//			Если ЭлементДерева[Свойство] = Значение Тогда
//				РезультатПоиска = ЭлементДерева;
//				//ОбновитьДеревоУправленияНаСервере(РезультатПоиска.ПолучитьИдентификатор());
//				Прервать;
//			КонецЕсли;
//		КонецЦикла; 
//	КонецЕсли;
//	
//КонецПроцедуры // ВыполнитьВостановлениеКурсораПриПерестройкиДерева()

#КонецОбласти

