
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	//Если Параметры.Свойство("НоменклатураВладелец") = ЛОЖЬ Тогда
		//НоменклатураВладелец = Параметры.НоменклатураВладелец;
	//	Возврат;	
	//КонецЕсли;
	//
	//ОбъектСсылка = git_ПереопределениеОбработчиковСервер.ПолучитьСсылкуНаВнешнийОбъект("УправлениеАссортиментнымиМатрицами"); 
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");  	
	МассивФорматов  = ОбъектОбработки.ПолучитьФорматыМагазинов();  	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
	СоздатьДополнительныеРеквизитыФормы(МассивФорматов);
	СоздатьДополнительныеЭлементыФормы(МассивФорматов);
	УсловноеОформлениеДополнительныеРеквизитыФормы(МассивФорматов);
	ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей();  
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НоменклатураВладелецПриИзменении(Элемент)
	ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаВидаНоменклатурыПриИзменении(Элемент)
	ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей();
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяПодМатрицаПередРазворачиванием(Элемент, Строка, Отказ)
	РазвернутьПодчиненнуюГруппуАссортиментнойМатрицы(Строка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Инициализация_формы

// Процедура создает дополнительные реквизиты формы для дерева распределения.
//
// Параметры:
//  МассивФорматов - Массив - cодержит структуры со свойствами:
//   * АМ_ФорматыМагазинов - СправочникСсылка.АМ_ФорматыМагазинов - ссылка на АМ_ФорматыМагазинов.
//
&НаСервере
Процедура СоздатьДополнительныеРеквизитыФормы(МассивФорматов)

	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");
	МассивРеквизитов 			   = Новый Массив;	
	
	Для каждого Формат Из МассивФорматов Цикл
		ИдентификаторФормата = ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(Формат);
		МассивРеквизитов.Добавить(Новый РеквизитФормы("Формат"+ИдентификаторФормата						, Новый ОписаниеТипов("СправочникСсылка.АМ_ФорматыМагазинов")	, "АссортиментнаяПодМатрица", "Формат"));    
		МассивРеквизитов.Добавить(Новый РеквизитФормы("Исключено"+ИдентификаторФормата					, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1,0)) , "АссортиментнаяПодМатрица", "Исключено"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("НомерПоПорядку"+ИдентификаторФормата				, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(3,0))	, "АссортиментнаяПодМатрица", "№"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("ПосадочныеМеста"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "Пос. мест"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("МинимальныйЗапас"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "АссортиментнаяПодМатрица", "Мин. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("СтраховойЗапас"+ИдентификаторФормата				, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "Страх. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("МаксимальныйЗапас"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "АссортиментнаяПодМатрица", "Макс. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("ДНС"+ИдентификаторФормата						, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "ДНС"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("КонтрольМатрицейОтключен"+ИдентификаторФормата	, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1,0))	, "АссортиментнаяПодМатрица", "КонтрольМатрицейОтключен"));
	КонецЦикла; 
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
КонецПроцедуры // СоздатьДополнительныеРеквизитыИЭлементыФормы()


// Процедура создает дополнительные элементы формы для дерева распределения.
//
// Параметры:
//  МассивФорматов - Массив - cодержит структуры со свойствами:
//   * АМ_ФорматыМагазинов - СправочникСсылка.АМ_ФорматыМагазинов - ссылка на АМ_ФорматыМагазинов.
//
&НаСервере
Процедура СоздатьДополнительныеЭлементыФормы(МассивФорматов)
		
	ЭлементАссортиментнаяПодМатрица = Элементы.АссортиментнаяПодМатрица;
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект"); 
	
	Для каждого Формат Из МассивФорматов Цикл
		
		ИдентификаторФормата= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(Формат);
		
		ПараметрыЭлемента = Новый Структура;
		ПараметрыЭлемента.Вставить("Имя", "группа_"+ИдентификаторФормата);
		ПараметрыЭлемента.Вставить("Вид", ВидГруппыФормы.ГруппаКолонок);
		ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
		ПараметрыЭлемента.Вставить("Группировка", ГруппировкаКолонок.Горизонтальная);
		ПараметрыЭлемента.Вставить("ОтображатьВШапке", Истина);
		ПараметрыЭлемента.Вставить("Заголовок", Формат);
		ПараметрыЭлемента.Вставить("ФиксацияВТаблице", ФиксацияВТаблице.Нет );
		ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
		ПараметрыЭлемента.Вставить("КартинкаШапки", БиблиотекаКартинок.ЗначокПлюс); 
		ГруппаКолонок 	  = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ЭлементАссортиментнаяПодМатрица);
		
			Подсказка = НСтр("ru='Полностью исключено из ассортиментной матрицы'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "Исключено"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТриСостояние", Истина); 
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.Исключено"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("ЦветФона", Новый Цвет(255, 235, 205) );
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", Ложь);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("КартинкаШапки", БиблиотекаКартинок.УдалитьНепосредственно );
			ПараметрыЭлемента.Вставить("ПоложениеЗаголовка  ", ПоложениеЗаголовкаЭлементаФормы.Нет);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));  
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементИсключеноПриИзменении");
			
			Подсказка = НСтр("ru='Номер по порядку'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "НомерПоПорядку"+ИдентификаторФормата);                                        	
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.НомерПоПорядку"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", ТолькоПросмотр);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементНомерПоПорядкуПриИзменении");

			Подсказка = НСтр("ru='Посадочные места'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "ПосадочныеМеста"+ИдентификаторФормата);                                        	
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			ПараметрыЭлемента.Вставить("Формат", "ЧН=—"); 
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.ПосадочныеМеста"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", ТолькоПросмотр);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));    
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементПосадочныеМестаПриИзменении");

			Подсказка = НСтр("ru='Минимальний запас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "МинимальныйЗапас"+ИдентификаторФормата);                                        	
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			ПараметрыЭлемента.Вставить("Формат", "ЧН=—"); 
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.МинимальныйЗапас"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", ТолькоПросмотр);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205)); 
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементМинимальныйЗапасПриИзменении");

			//Подсказка = НСтр("ru='Страховой Запас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			//ПараметрыЭлемента = Новый Структура;
			//ПараметрыЭлемента.Вставить("Имя", "СтраховойЗапас"+ИдентификаторФормата);                                        	
			//ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			//ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.СтраховойЗапас"+ИдентификаторФормата);
			//ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			//ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			//ПараметрыЭлемента.Вставить("Ширина", 3);
			//ПараметрыЭлемента.Вставить("ТолькоПросмотр", ТолькоПросмотр);
			//ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			//ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			//ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			//ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			//ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));
			//ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			//ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементСтраховойЗапасПриИзменении");

			Подсказка = НСтр("ru='Полностью исключено из ассортиментной матрицы'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "МаксимальныйЗапас"+ИдентификаторФормата);                                        	
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			ПараметрыЭлемента.Вставить("Формат", "ЧН=—"); 
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.МаксимальныйЗапас"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", ТолькоПросмотр);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205)); 														   
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементМаксимальныйЗапасПриИзменении");

			Подсказка = НСтр("ru='Дней на складе'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "ДНС"+ИдентификаторФормата);                                        	
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.ДНС"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", ТолькоПросмотр);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205)); 	
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементДНСПриИзменении");
			
			Подсказка = НСтр("ru='Контроль матрицей отключен'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "КонтрольМатрицейОтключен"+ИдентификаторФормата); 
			ПараметрыЭлемента.Вставить("ТриСостояние", Истина); 
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.КонтрольМатрицейОтключен"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("ЦветФона", Новый Цвет(255, 235, 205) );
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", Ложь);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("КартинкаШапки", БиблиотекаКартинок.Удалить );
			ПараметрыЭлемента.Вставить("ПоложениеЗаголовка  ", ПоложениеЗаголовкаЭлементаФормы.Нет);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));   
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементКонтрольМатрицейОтключенПриИзменении");

	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
КонецПроцедуры // СоздатьДополнительныеЭлементыФормы()

&НаСервере
Процедура УсловноеОформлениеДополнительныеРеквизитыФормы(МассивФорматов)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	МассивИдентификаторов = Новый Массив;
	Для каждого ФорматИзМассива Из МассивФорматов Цикл
		МассивИдентификаторов.Добавить(ОбработкаОбъект.ПолучитьСтрокуИдентификатораСсылки(ФорматИзМассива));	
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	Для каждого ИдентификаторСклада Из МассивИдентификаторов Цикл
	
		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина; 		
		 	ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "МинимальныйЗапас"+ИдентификаторСклада);
			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "СтраховойЗапас"+ИдентификаторСклада);
			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "МаксимальныйЗапас"+ИдентификаторСклада);
			
			ГруппаОтбора = ДобавитьЭлементОтбораГруппа(ЭлементУсловногоОформления,ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
			ОтборНеЗаполненоЗначение(ГруппаОтбора,"АссортиментнаяМатрица.Номенклатура");
            ОтборЗаполненоЗначение(ГруппаОтбора,"АссортиментнаяМатрица.ТоварнаяКатегория");			
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
		
			
		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина;

			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "НомерПоПорядку"+ИдентификаторСклада);
			
			ГруппаОтбора = ДобавитьЭлементОтбораГруппа(ЭлементУсловногоОформления,ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
            ОтборЗаполненоЗначение(ГруппаОтбора,"АссортиментнаяМатрица.ТоварнаяКатегория");
			ОтборЗаполненоЗначение(ГруппаОтбора,"АссортиментнаяМатрица.Производитель");
			ОтборНеЗаполненоЗначение(ГруппаОтбора,"АссортиментнаяМатрица.Номенклатура");			
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина); 
			
		
		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина;
		
			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "НомерПоПорядку"+ИдентификаторСклада);
			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "МинимальныйЗапас"+ИдентификаторСклада);
			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "СтраховойЗапас"+ИдентификаторСклада);
			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "МаксимальныйЗапас"+ИдентификаторСклада); 
			
			ОтборЗаполненоЗначение(ЭлементУсловногоОформления,"АссортиментнаяМатрица.Номенклатура");
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

			
		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина;

			ДобавитьОформляемоеВсеПоляВСрезеФормата(ЭлементУсловногоОформления, ИдентификаторСклада); 

			НовыйЭлементОтбора 				  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.Использование  = ИСТИНА;
			НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("АссортиментнаяМатрица.Исключено");
			НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭлементОтбора.ПравоеЗначение = 1;
			
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт",Новый Шрифт(,,,,,,Истина));
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста"	, Новый Цвет(160, 160, 164));

			
		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина;
		    ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "Исключено"+ИдентификаторСклада);  				
			
			НовыйЭлементОтбора 				  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.Использование  = ИСТИНА;
			НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("АссортиментнаяМатрица.Исключено");
			НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭлементОтбора.ПравоеЗначение = 1;
			
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста"	, Новый Цвет(0, 0, 0));
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона"	, Новый Цвет(255, 255, 255));
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт"		, Новый Шрифт());
	

		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина;
			ДобавитьОформляемоеВсеПоляВСрезеФормата(ЭлементУсловногоОформления, ИдентификаторСклада); 			

			НовыйЭлементОтбора 				  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.Использование  = ИСТИНА;
			НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("АссортиментнаяМатрица.КонтрольМатрицейОтключен");
			НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭлементОтбора.ПравоеЗначение = 1;
			
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста"	, Новый Цвет(160, 160, 164));

		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина;
		
			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "МинимальныйЗапас"+ИдентификаторСклада);
			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "МаксимальныйЗапас"+ИдентификаторСклада); 

			ГруппаОтбораИЛИ = ДобавитьЭлементОтбораГруппа(ЭлементУсловногоОформления,ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
            ОтборЗаполненоЗначение(ГруппаОтбораИЛИ,"АссортиментнаяМатрица.ТоварнаяКатегория");
			ОтборНеЗаполненоЗначение(ГруппаОтбораИЛИ,"АссортиментнаяМатрица.Производитель");			
			
			ЭлементОтбора 					= ГруппаОтбораИЛИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("АссортиментнаяМатрица.ПосадочныеМеста");
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеРавно;
			ЭлементОтбора.ПравоеЗначение	= 0;

			ЭлементОтбора 					= ГруппаОтбораИЛИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("АссортиментнаяМатрица.МинимальныйЗапас");
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение	= 0;

			ЭлементОтбора 					= ГруппаОтбораИЛИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("АссортиментнаяМатрица.МаксимальныйЗапас");
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение	= 0;
		    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста"	, Новый Цвет(160, 160, 164));		
	
	КонецЦикла; 

КонецПроцедуры // УсловноеОформлениеДополнительныеРеквизитыФормы()


&НаСервере
Процедура ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, Имя)
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных(Имя);
	ОформляемоеПоле.Использование 	= Истина;  
КонецПроцедуры // ДобавитьОформляемоеПоле()

&НаСервере
Процедура ДобавитьОформляемоеВсеПоляВСрезеФормата(ЭлементУсловногоОформления, ИдентификаторСклада)
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("Исключено"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= ИСТИНА;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("НомерПоПорядку"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= ИСТИНА;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("ПосадочныеМеста"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= ИСТИНА;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("МинимальныйЗапас"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= Истина;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("СтраховойЗапас"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= Истина;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("МаксимальныйЗапас"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= ИСТИНА;   
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("ДНС"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= Истина;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("КонтрольМатрицейОтключен"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= ИСТИНА; 
КонецПроцедуры // ДобавитьОформляемоеВсеПоляВСрезеФормата()

&НаСервере
Функция ДобавитьЭлементОтбораГруппа(ЭлементУсловногоОформления,ТипГруппыЭлементов)
	ГруппаОтбора 					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));	
	ГруппаОтбора.ТипГруппы 			= ТипГруппыЭлементов;	 
	Возврат ГруппаОтбора;

КонецФункции // ДобавитьЭлементОтбораГруппаИЛИ()

&НаСервере
Процедура ОтборНеЗаполненоЗначение(ГруппаОтбора,ИмяЗначения) 
	
	НовыйЭлементОтбора 				  = ГруппаОтбора.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлементОтбора.Использование  = ИСТИНА;
	НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяЗначения);
	НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено; 	

КонецПроцедуры // ОтборНеЗаполненоЗначение()

&НаСервере
Процедура ОтборЗаполненоЗначение(ГруппаОтбора,ИмяЗначения)  
	
	НовыйЭлементОтбора 				  = ГруппаОтбора.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлементОтбора.Использование  = ИСТИНА;
	НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяЗначения);
	НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено; 	

КонецПроцедуры // ОтборЗаполненоЗначение()



#КонецОбласти 

&НаСервере
Процедура РазвернутьПодчиненнуюГруппуАссортиментнойМатрицы(Идентификатор)
	
	ОбъектОбработки  = РеквизитФормыВЗначение("Объект");
	МассивФорматов  = ОбъектОбработки.ПолучитьФорматыМагазинов();  

	СтрокаДерева = АссортиментнаяПодМатрица.НайтиПоИдентификатору(Идентификатор);
	ПараметрПроизводитель	  = СтрокаДерева.Производитель;
	ПараметрТоварнаяКатегория = СтрокаДерева.ТоварнаяКатегория;
	
	СтрокаЭлементы = СтрокаДерева.ПолучитьЭлементы();
	СтрокаЭлементы.Очистить();
	
	УровеньВложенности = 0;
	Пока СтрокаДерева.ПолучитьРодителя() <> Неопределено Цикл
		СтрокаДерева = СтрокаДерева.ПолучитьРодителя();
		УровеньВложенности = УровеньВложенности + 1;			
	КонецЦикла;
	
	// Получаем уровень вложености "ТоварнаяКатегория"
	Если УровеньВложенности = 0 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории(МассивФорматов);		
	// Получаем уровень вложености "Производители"
	ИначеЕсли УровеньВложенности = 1 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи(МассивФорматов);	
	Иначе
		Возврат;	
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);   
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Производитель", ПараметрПроизводитель);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ПараметрТоварнаяКатегория);
	Запрос.УстановитьПараметр("ГруппаВидаНоменклатуры", ГруппаВидаНоменклатуры);
	Запрос.УстановитьПараметр("КонецПериода", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("НачалоПериодаМесяц", НачалоДня(ТекущаяДатаСеанса()) - 31 * 86400);
	Запрос.УстановитьПараметр("НоменклатураВладелец", НоменклатураВладелец);
	
	Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл  		
		ИдентификаторФормата	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);
		Запрос.УстановитьПараметр("Формат"+ИдентификаторФормата, ФорматМагазина);  							
	КонецЦикла; 
	

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ДанныеДерева = "<Производитель не задан>" И Выборка.КоличествоАртикулов = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Выборка.ДанныеДерева = "<Товарная категория не задана>" И Выборка.КоличествоАртикулов = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если УровеньВложенности <> 1 Тогда
			НоваяСтрока.ПолучитьЭлементы().Добавить();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // РазвернутьПодчиненуюГруппуАссортиментнойМатрицы()


&НаСервере
Процедура ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей()
	
	АссортиментнаяПодМатрица.ПолучитьЭлементы().Очистить();
	
	ОбъектОбработки  = РеквизитФормыВЗначение("Объект");
	МассивФорматов  = ОбъектОбработки.ПолучитьФорматыМагазинов();  

	СтрокаЭлементы = АссортиментнаяПодМатрица.ПолучитьЭлементы();
	
	Запрос = Новый Запрос;	  	
	Запрос.Текст = ПолучитьТекстЗапросаАссортиментнойМатрицыКорень(МассивФорматов);
	Запрос.УстановитьПараметр("НоменклатураВладелец", НоменклатураВладелец);
	Запрос.УстановитьПараметр("ГруппаВидаНоменклатуры", ГруппаВидаНоменклатуры);
	
	Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл  		
		ИдентификаторФормата	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);
		Запрос.УстановитьПараметр("Формат"+ИдентификаторФормата, ФорматМагазина);  							
	КонецЦикла; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если ПустаяСтрока(Выборка.ДанныеРодителя) Тогда
			НоваяСтрока.ДанныеДерева = Выборка.ДанныеДерева;	
		Иначе
			НоваяСтрока.ДанныеДерева = Выборка.ДанныеРодителя + " / " + Выборка.ДанныеДерева;
		КонецЕсли;
		НоваяСтрока.ПолучитьЭлементы().Добавить();   		
	КонецЦикла;    		
КонецПроцедуры // ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей()


&НаСервере
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыКорень(МассивФорматов)
	
	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");

	ТекстЗапроса = "ВЫБРАТЬ
		|	АМ_ФорматыМагазиновСклады.Ссылка КАК Формат,
		|	АМ_ФорматыМагазиновСклады.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыФорматов
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК АМ_ФорматыМагазиновСклады
		|
		|ГДЕ
		|	АМ_ФорматыМагазиновСклады.Ссылка.Активен = ИСТИНА
		|	И АМ_ФорматыМагазиновСклады.Ссылка.ПометкаУдаления = ЛОЖЬ
		|  
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Склад
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПД_ПривязкиАналогиНоменклатуры.АналогНоменклатуры КАК АналогНоменклатуры,
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура
		|ПОМЕСТИТЬ ПД_Аналоги
		|ИЗ
		|	РегистрСведений.ПД_АналогиНоменклатуры КАК ПД_ПривязкиАналогиНоменклатуры
		|ГДЕ
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура = &НоменклатураВладелец
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналогНоменклатуры
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.    
		|ВЫБРАТЬ
		|	ПД_НаборПодпихни.АналогНоменклатуры,
		|	ПД_НаборПодпихни.Подпихня КАК Подпихня,
		|	ПД_НаборПодпихни.Номенклатура КАК Номенклатура,
		|	ПД_НаборПодпихни.Ответственный
		|ПОМЕСТИТЬ ПД_Подпихня
		|ИЗ
		|	ПД_Аналоги КАК ПД_Аналоги
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПД_НаборПодпихни КАК ПД_НаборПодпихни
		|ПО ПД_Аналоги.АналогНоменклатуры = ПД_НаборПодпихни.АналогНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подпихня,
		|	Номенклатура
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ
		|	ПД_Подпихня.Номенклатура КАК Номенклатура,
		|	ПД_Подпихня.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
		|ПОМЕСТИТЬ ПД_Номенклатура
		|ИЗ
		|	ПД_Подпихня КАК ПД_Подпихня
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПД_ИсключениеПодпихни КАК ПД_ИсключениеПодпихни
		|ПО ПД_Подпихня.Подпихня = ПД_ИсключениеПодпихни.Подпихня
		|И ПД_Подпихня.Номенклатура = ПД_ИсключениеПодпихни.Номенклатура
		|
		|ГДЕ
		|	ПД_ИсключениеПодпихни.Номенклатура ЕСТЬ NULL 
		|	И	ВЫБОР
		|		КОГДА &ГруппаВидаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ПД_Подпихня.Номенклатура.ВидНоменклатуры В ИЕРАРХИИ(&ГруппаВидаНоменклатуры)
		|	КОНЕЦ 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.  
		|ВЫБРАТЬ
		|	ПД_Номенклатура.Номенклатура,
		|	ПД_Номенклатура.ВидНоменклатуры,
		|	ТОМА.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	ПРЕДСТАВЛЕНИЕ(ТОМА.ТоварнаяКатегория) КАК ДанныеДерева,
		|	ПРЕДСТАВЛЕНИЕ(ПД_Номенклатура.ВидНоменклатуры) КАК ДанныеРодителя		
		|ПОМЕСТИТЬ Кеш_Номенклатура
		|ИЗ
		|	ПД_Номенклатура КАК ПД_Номенклатура
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТОМА_ТоварнаяКатегория.СрезПоследних КАК ТОМА
		|ПО ПД_Номенклатура.Номенклатура = ТОМА.Номенклатура
		|   
		|ОБЪЕДИНИТЬ
		|   
		|ВЫБРАТЬ
		|	ПД_Номенклатура.Номенклатура,
		|	ПД_Номенклатура.ВидНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка),
		|	""<Товарная категория не задана>"",
		|	ПРЕДСТАВЛЕНИЕ(ПД_Номенклатура.ВидНоменклатуры)	
		|ИЗ
		|	ПД_Номенклатура КАК ПД_Номенклатура
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТОМА_ТоварнаяКатегория.СрезПоследних КАК ТОМА
		|ПО ПД_Номенклатура.Номенклатура = ТОМА.Номенклатура
		|    
		|ГДЕ
		|	ТОМА.Номенклатура ЕСТЬ NULL
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.
		|ВЫБРАТЬ
		|	Кеш_Номенклатура.ТоварнаяКатегория
		|   %КоличествоАртикулов%
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	Кеш_Номенклатура КАК Кеш_Номенклатура
		|   %СоединенияПоОстаткамКоличестваАртикулов%
		|   
		|СГРУППИРОВАТЬ ПО
		|	Кеш_Номенклатура.ТоварнаяКатегория   
		| ;		
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.  
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Кеш_Номенклатура.ДанныеДерева КАК ДанныеДерева,
		|	Кеш_Номенклатура.ДанныеРодителя КАК ДанныеРодителя,
		|	%1
		|	Кеш_Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка) КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Кеш_Номенклатура КАК Кеш_Номенклатура
		|		
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	%4
		|	КешДанныхДляВывода.ДанныеДерева,
		|	КешДанныхДляВывода.ДанныеРодителя,
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
		|   %2
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|	
		| %3
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	 КешДанныхДляВывода.ТоварнаяКатегория 
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	%4
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
		|   %6  
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|   %7
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	 КешДанныхДляВывода.ТоварнаяКатегория
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 9.		
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладеТК	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Кеш_Номенклатура КАК Кеш_Номенклатура
		|ПО  Кеш_Номенклатура.Номенклатура = АУН.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ТоварнаяКатегория
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8.
		|ВЫБРАТЬ
		|	СкладыФорматов.Формат КАК Формат,
		|	ДнейНаСкладеТК.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СРЕДНЕЕ(ДнейНаСкладеТК.ДНС) КАК ДНС
		|ПОМЕСТИТЬ ДНСПоФорматам
		|ИЗ
		|   ДнейНаСкладеТК КАК ДнейНаСкладеТК
		|	
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ  СкладыФорматов КАК СкладыФорматов
		|ПО ДнейНаСкладеТК.Склад = СкладыФорматов.Склад
		|    
		|СГРУППИРОВАТЬ ПО
		|	СкладыФорматов.Формат,
		|	ДнейНаСкладеТК.ТоварнаяКатегория
		|   
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	ТоварнаяКатегория
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 9.  
		|ВЫБРАТЬ
		|	АМ_УправлениеАссортиментнойМатрицей.*
		|   %8
		|ИЗ
		|	АМ_УправлениеАссортиментнойМатрицей КАК АМ_УправлениеАссортиментнойМатрицей
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО   АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = РасчетТКА.ТоварнаяКатегория 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ  КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных
		| ПО  АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = КешИсключенияВПодчиненных.ТоварнаяКатегория
		|	И АМ_УправлениеАссортиментнойМатрицей.Производитель 	= КешИсключенияВПодчиненных.Производитель
		|	И АМ_УправлениеАссортиментнойМатрицей.Номенклатура 	= КешИсключенияВПодчиненных.Номенклатура
		|
		|
		|  %9
		|";

		
		#Область МассивФорматовМагазина
		ТЗВыборкаПоФорматам 					= ""; //%1
		ТЗАсортиментПоФорматам 					= ""; //%2
		ТЗСоединенияАсортиментаПоФорматам 		= ""; //%3
		ТЗВыборкаПоФорматамДляВывода 			= ""; //%4
		ТЗВыборкаПоФорматамДляИндексации 		= ""; //%5   
		ТЗАсортиментаМатрицаПоИсключению		= ""; //%6
		ТЗСоединенияАсортиментаПоИсключению		= ""; //%7
		ТЗАсортиментаПоВсехФорматах				= ""; //%8
		ТЗСоединенияАсортиментПоВсехФорматах	= ""; //%9
		ТЗКоличествоАртикулов                   = ""; //%КоличествоАртикулов%
		ТЗСоединенияПоОстаткамКоличестваАртикулов= ""; //%СоединенияПоОстаткамКоличестваАртикулов%

		Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл
			ИдентификаторСклада	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);

			ТЗКоличествоАртикулов = ТЗКоличествоАртикулов +"
									|  	,КОЛИЧЕСТВО(ТоварыОрганизацийОстатки" + ИдентификаторСклада + ".Номенклатура) 	КАК КоличествоАртикулов" + ИдентификаторСклада;

			ТЗСоединенияПоОстаткамКоличестваАртикулов = ТЗСоединенияПоОстаткамКоличестваАртикулов +"
			                        |ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
									|															,Склад В
									|																	(ВЫБРАТЬ
									|																		СкладыФорматов.Склад
									|																	ИЗ
									|																		СкладыФорматов КАК СкладыФорматов
									|																	ГДЕ
									|																		СкладыФорматов.Формат = &Формат"+ИдентификаторСклада+")
									|															) КАК ТоварыОрганизацийОстатки"+ИдентификаторСклада+"
									|ПО	ТоварыОрганизацийОстатки"+ИдентификаторСклада+".Номенклатура 					= Кеш_Номенклатура.Номенклатура
									|И	ТоварыОрганизацийОстатки"+ИдентификаторСклада+".Номенклатура.ТоварнаяКатегория = Кеш_Номенклатура.ТоварнаяКатегория";


									
			ТЗВыборкаПоФорматам =  ТЗВыборкаПоФорматам	+"	
									|	&Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
									
			ТЗАсортиментПоФорматам =  ТЗАсортиментПоФорматам	+"
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 			КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) 			КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 			КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) 		КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 			КАК ПредИсключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК ПредКонтрольМатрицейОтключен" + ИдентификаторСклада;

			ТЗСоединенияАсортиментаПоФорматам =  ТЗСоединенияАсортиментаПоФорматам	+ "
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,
									|			(Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория,
									|					КешДанныхДляВывода.Производитель,
									|					КешДанныхДляВывода.Номенклатура
									|				ИЗ
									|					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";   
			
			ТЗВыборкаПоФорматамДляВывода =  ТЗВыборкаПоФорматамДляВывода	+"	
									|	КешДанныхДляВывода.Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
						
			ТЗВыборкаПоФорматамДляИндексации =  ТЗВыборкаПоФорматамДляИндексации	+"	
									|	Формат"+ИдентификаторСклада+",";
									
			ТЗАсортиментаМатрицаПоИсключению =  ТЗАсортиментаМатрицаПоИсключению	+ "
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 				КАК Исключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ) КАК КонтрольМатрицейОтключен" + ИдентификаторСклада;
									
			ТЗСоединенияАсортиментаПоИсключению =  ТЗСоединенияАсортиментаПоИсключению	+"
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,
									|			(Формат, ТоварнаяКатегория) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория
									|				ИЗ
									|					КешДанныхДляВывода)
									|			И Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";
									


			ТЗАсортиментаПоВсехФорматах = ТЗАсортиментаПоВсехФорматах +"
				                    |,
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредИсключено"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 1
									|		КОГДА IsNull(КешИсключенияВПодчиненных.Исключено"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 2
									|		ИНАЧЕ 0
									|	КОНЕЦ КАК Исключено"+ИдентификаторСклада+",
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредКонтрольМатрицейОтключен"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 1
									|		КОГДА IsNull(КешИсключенияВПодчиненных.КонтрольМатрицейОтключен"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 2
									|		ИНАЧЕ 0
									|	КОНЕЦ КАК КонтрольМатрицейОтключен"+ИдентификаторСклада+",
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста"+ИдентификаторСклада+", 0) = 0
									|			И IsNull(РасчетТКА.КоличествоАртикулов"+ИдентификаторСклада+", 0) = 0
									|			ТОГДА 0
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста"+ИдентификаторСклада+", 0) = 0
									|			И IsNull(РасчетТКА.КоличествоАртикулов"+ИдентификаторСклада+", 0) > 0
									|			ТОГДА 3
									|		КОГДА АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста"+ИдентификаторСклада+" < РасчетТКА.КоличествоАртикулов"+ИдентификаторСклада+"
									|			ТОГДА 1
									|		ИНАЧЕ 2
									|	КОНЕЦ									КАК Состояние"+ИдентификаторСклада+",
									|	ISNULL(ДНСПоФорматам"+ИдентификаторСклада+".ДНС,0) 			КАК ДНС" + ИдентификаторСклада; 

			ТЗСоединенияАсортиментПоВсехФорматах = ТЗСоединенияАсортиментПоВсехФорматах+"
									|ЛЕВОЕ СОЕДИНЕНИЕ ДНСПоФорматам КАК ДНСПоФорматам"+ИдентификаторСклада+"
									|ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= ДНСПоФорматам"+ИдентификаторСклада+".Формат
									|И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = ДНСПоФорматам"+ИдентификаторСклада+".ТоварнаяКатегория
									|";	
	

		КонецЦикла;

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%КоличествоАртикулов%"						,ТЗКоличествоАртикулов);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединенияПоОстаткамКоличестваАртикулов%"	,ТЗСоединенияПоОстаткамКоличестваАртикулов);
				
		ТЗСоединенияАсортиментаПоФорматам = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаМатрицаПоИсключению
																				,ТЗСоединенияАсортиментаПоИсключению
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				); 						
			
		#КонецОбласти
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаМатрицаПоИсключению
																				,ТЗСоединенияАсортиментаПоИсключению
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				);

		
			
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыКорень()

&НаСервере
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории(МассивФорматов)

	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");
	
	ТекстЗапроса = "ВЫБРАТЬ
		|	АМ_ФорматыМагазиновСклады.Ссылка КАК Формат,
		|	АМ_ФорматыМагазиновСклады.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыФорматов
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК АМ_ФорматыМагазиновСклады
		|
		|ГДЕ
		|	АМ_ФорматыМагазиновСклады.Ссылка.Активен = ИСТИНА
		|	И АМ_ФорматыМагазиновСклады.Ссылка.ПометкаУдаления = ЛОЖЬ
		|  
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Склад
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПД_ПривязкиАналогиНоменклатуры.АналогНоменклатуры КАК АналогНоменклатуры,
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура
		|ПОМЕСТИТЬ ПД_Аналоги
		|ИЗ
		|	РегистрСведений.ПД_АналогиНоменклатуры КАК ПД_ПривязкиАналогиНоменклатуры
		|ГДЕ
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура = &НоменклатураВладелец
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналогНоменклатуры
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.    
		|ВЫБРАТЬ
		|	ПД_НаборПодпихни.АналогНоменклатуры,
		|	ПД_НаборПодпихни.Подпихня КАК Подпихня,
		|	ПД_НаборПодпихни.Номенклатура КАК Номенклатура,
		|	ПД_НаборПодпихни.Ответственный
		|ПОМЕСТИТЬ ПД_Подпихня
		|ИЗ
		|	ПД_Аналоги КАК ПД_Аналоги
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПД_НаборПодпихни КАК ПД_НаборПодпихни
		|ПО ПД_Аналоги.АналогНоменклатуры = ПД_НаборПодпихни.АналогНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подпихня,
		|	Номенклатура
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ
		|	ПД_Подпихня.Номенклатура 					КАК Номенклатура,
		|	ПД_Подпихня.Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	ПД_Подпихня.Номенклатура.Производитель 		КАК Производитель
		|ПОМЕСТИТЬ ПД_Номенклатура
		|ИЗ
		|	ПД_Подпихня КАК ПД_Подпихня
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПД_ИсключениеПодпихни КАК ПД_ИсключениеПодпихни
		|ПО ПД_Подпихня.Подпихня = ПД_ИсключениеПодпихни.Подпихня
		|И ПД_Подпихня.Номенклатура = ПД_ИсключениеПодпихни.Номенклатура
		|
		|ГДЕ
		|	ПД_ИсключениеПодпихни.Номенклатура ЕСТЬ NULL 
		|	И	ВЫБОР
		|		КОГДА &ГруппаВидаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ПД_Подпихня.Номенклатура.ВидНоменклатуры В ИЕРАРХИИ(&ГруппаВидаНоменклатуры)
		|	КОНЕЦ 
		|   И	ПД_Подпихня.Номенклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;   
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.  
		|ВЫБРАТЬ
		|	ПД_Номенклатура.Номенклатура		КАК Номенклатура,
		|	&ТоварнаяКатегория					КАК ТоварнаяКатегория,
		|   Производители.Ссылка 				КАК Производитель,
		|	ПРЕДСТАВЛЕНИЕ(Производители.Ссылка) КАК ДанныеДерева		
		|ПОМЕСТИТЬ Кеш_Номенклатура
		|ИЗ
		|	ПД_Номенклатура КАК ПД_Номенклатура
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Производители КАК Производители
		|ПО	ПД_Номенклатура.Производитель = Производители.Ссылка
		|
		|ГДЕ
		|	Производители.ПометкаУдаления = Ложь  
		|   
		|ОБЪЕДИНИТЬ
		|   
		|ВЫБРАТЬ
		|	ПД_Номенклатура.Номенклатура,
		|	&ТоварнаяКатегория,
		|   ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка),
		|	""<Производитель не задан>""
		|ИЗ
		|	ПД_Номенклатура КАК ПД_Номенклатура
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Производители КАК Производители
		|ПО	ПД_Номенклатура.Производитель = Производители.Ссылка
		|И	Производители.ПометкаУдаления = Ложь 
		|    
		|ГДЕ
		|	Производители.Ссылка ЕСТЬ NULL
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТоварнаяКатегория, Производитель
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.
		|ВЫБРАТЬ
		|	Кеш_Номенклатура.Производитель
		|   %КоличествоАртикулов%
		|ПОМЕСТИТЬ РасчетТКА
		|ИЗ
		|	Кеш_Номенклатура КАК Кеш_Номенклатура
		|   %СоединенияПоОстаткамКоличестваАртикулов%
		|   
		|СГРУППИРОВАТЬ ПО
		|	Кеш_Номенклатура.Производитель   
		| ;	
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.  
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Кеш_Номенклатура.ДанныеДерева КАК ДанныеДерева,
		|	%1
		|	Кеш_Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Кеш_Номенклатура.Производитель КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Кеш_Номенклатура КАК Кеш_Номенклатура
		|		
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	%4
		|	КешДанныхДляВывода.ДанныеДерева,
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
		|   %2
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|	
		| %3
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	 КешДанныхДляВывода.ТоварнаяКатегория 
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	%4
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
		|   %6  
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|   %7
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 9.		
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура.Производитель КАК Производитель,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладеТК	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Кеш_Номенклатура КАК Кеш_Номенклатура
		|ПО  Кеш_Номенклатура.Номенклатура = АУН.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.Производитель 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	Производитель
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8.
		|ВЫБРАТЬ
		|	СкладыФорматов.Формат КАК Формат,
		|	ДнейНаСкладеТК.Производитель КАК Производитель,
		|	СРЕДНЕЕ(ДнейНаСкладеТК.ДНС) КАК ДНС
		|ПОМЕСТИТЬ ДНСПоФорматам
		|ИЗ
		|   ДнейНаСкладеТК КАК ДнейНаСкладеТК
		|	
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ  СкладыФорматов КАК СкладыФорматов
		|ПО ДнейНаСкладеТК.Склад = СкладыФорматов.Склад
		|    
		|СГРУППИРОВАТЬ ПО
		|	Формат,
		|	Производитель
		|   
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Производитель
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 9.  
		|ВЫБРАТЬ
		|	АМ_УправлениеАссортиментнойМатрицей.*
		|   %8
		|ИЗ
		|	АМ_УправлениеАссортиментнойМатрицей КАК АМ_УправлениеАссортиментнойМатрицей
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РасчетТКА КАК РасчетТКА
		|ПО   АМ_УправлениеАссортиментнойМатрицей.Производитель = РасчетТКА.Производитель 
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ  КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных
		| ПО  АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = КешИсключенияВПодчиненных.ТоварнаяКатегория
		|	И АМ_УправлениеАссортиментнойМатрицей.Производитель 	= КешИсключенияВПодчиненных.Производитель
		|	И АМ_УправлениеАссортиментнойМатрицей.Номенклатура 	= КешИсключенияВПодчиненных.Номенклатура
		|
		|
		|  %9
		|";

			
		#Область МассивФорматовМагазина
		ТЗВыборкаПоФорматам 					= ""; //%1
		ТЗАсортиментПоФорматам 					= ""; //%2
		ТЗСоединенияАсортиментаПоФорматам 		= ""; //%3
		ТЗВыборкаПоФорматамДляВывода 			= ""; //%4
		ТЗВыборкаПоФорматамДляИндексации 		= ""; //%5   
		ТЗАсортиментаМатрицаПоИсключению		= ""; //%6
		ТЗСоединенияАсортиментаПоИсключению		= ""; //%7
		ТЗАсортиментаПоВсехФорматах				= ""; //%8
		ТЗСоединенияАсортиментПоВсехФорматах	= ""; //%9
		ТЗКоличествоАртикулов                   = ""; //%КоличествоАртикулов%
		ТЗСоединенияПоОстаткамКоличестваАртикулов= ""; //%СоединенияПоОстаткамКоличестваАртикулов%

		Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл
			ИдентификаторСклада	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);

			ТЗКоличествоАртикулов = ТЗКоличествоАртикулов +"
									|  	,КОЛИЧЕСТВО(ТоварыОрганизацийОстатки" + ИдентификаторСклада + ".Номенклатура) 	КАК КоличествоАртикулов" + ИдентификаторСклада;

			ТЗСоединенияПоОстаткамКоличестваАртикулов = ТЗСоединенияПоОстаткамКоличестваАртикулов +"
			                        |ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
									|															,Склад В
									|																	(ВЫБРАТЬ
									|																		СкладыФорматов.Склад
									|																	ИЗ
									|																		СкладыФорматов КАК СкладыФорматов
									|																	ГДЕ
									|																		СкладыФорматов.Формат = &Формат"+ИдентификаторСклада+")
									|															) КАК ТоварыОрганизацийОстатки"+ИдентификаторСклада+"
									|ПО	ТоварыОрганизацийОстатки"+ИдентификаторСклада+".Номенклатура 					= Кеш_Номенклатура.Номенклатура";


									
			ТЗВыборкаПоФорматам =  ТЗВыборкаПоФорматам	+"	
									|	&Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
									
			ТЗАсортиментПоФорматам =  ТЗАсортиментПоФорматам	+"
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 			КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) 			КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 			КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) 		КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 			КАК ПредИсключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК ПредКонтрольМатрицейОтключен" + ИдентификаторСклада;

			ТЗСоединенияАсортиментаПоФорматам =  ТЗСоединенияАсортиментаПоФорматам	+ "
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,
									|			(Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория,
									|					КешДанныхДляВывода.Производитель,
									|					КешДанныхДляВывода.Номенклатура
									|				ИЗ
									|					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";   
			
			ТЗВыборкаПоФорматамДляВывода =  ТЗВыборкаПоФорматамДляВывода	+"	
									|	КешДанныхДляВывода.Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
						
			ТЗВыборкаПоФорматамДляИндексации =  ТЗВыборкаПоФорматамДляИндексации	+"	
									|	Формат"+ИдентификаторСклада+",";
									
			ТЗАсортиментаМатрицаПоИсключению =  ТЗАсортиментаМатрицаПоИсключению	+ "
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 				КАК Исключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ) КАК КонтрольМатрицейОтключен" + ИдентификаторСклада;
									
			ТЗСоединенияАсортиментаПоИсключению =  ТЗСоединенияАсортиментаПоИсключению	+"
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,
									|			(Формат, ТоварнаяКатегория,Производитель) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|                   КешДанныхДляВывода.ТоварнаяКатегория,
									|					КешДанныхДляВывода.Производитель
									|				ИЗ
									|					КешДанныхДляВывода)
									|			) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";
									


			ТЗАсортиментаПоВсехФорматах = ТЗАсортиментаПоВсехФорматах +"
				                    |,
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредИсключено"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 1
									|		КОГДА IsNull(КешИсключенияВПодчиненных.Исключено"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 2
									|		ИНАЧЕ 0
									|	КОНЕЦ КАК Исключено"+ИдентификаторСклада+",
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредКонтрольМатрицейОтключен"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 1
									|		КОГДА IsNull(КешИсключенияВПодчиненных.КонтрольМатрицейОтключен"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 2
									|		ИНАЧЕ 0
									|	КОНЕЦ КАК КонтрольМатрицейОтключен"+ИдентификаторСклада+",
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста"+ИдентификаторСклада+", 0) = 0
									|			И IsNull(РасчетТКА.КоличествоАртикулов"+ИдентификаторСклада+", 0) = 0
									|			ТОГДА 0
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста"+ИдентификаторСклада+", 0) = 0
									|			И IsNull(РасчетТКА.КоличествоАртикулов"+ИдентификаторСклада+", 0) > 0
									|			ТОГДА 3
									|		КОГДА АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста"+ИдентификаторСклада+" < РасчетТКА.КоличествоАртикулов"+ИдентификаторСклада+"
									|			ТОГДА 1
									|		ИНАЧЕ 2
									|	КОНЕЦ									КАК Состояние"+ИдентификаторСклада+",
									|	ISNULL(ДНСПоФорматам"+ИдентификаторСклада+".ДНС,0) 			КАК ДНС" + ИдентификаторСклада; 

			ТЗСоединенияАсортиментПоВсехФорматах = ТЗСоединенияАсортиментПоВсехФорматах+"
									|ЛЕВОЕ СОЕДИНЕНИЕ ДНСПоФорматам КАК ДНСПоФорматам"+ИдентификаторСклада+"
									|ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= ДНСПоФорматам"+ИдентификаторСклада+".Формат
									|И АМ_УправлениеАссортиментнойМатрицей.Производитель = ДНСПоФорматам"+ИдентификаторСклада+".Производитель
									|";	
	

		КонецЦикла;

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%КоличествоАртикулов%"						,ТЗКоличествоАртикулов);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%СоединенияПоОстаткамКоличестваАртикулов%"	,ТЗСоединенияПоОстаткамКоличестваАртикулов);
				
		ТЗСоединенияАсортиментаПоФорматам = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаМатрицаПоИсключению
																				,ТЗСоединенияАсортиментаПоИсключению
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				); 						
			
		#КонецОбласти
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаМатрицаПоИсключению
																				,ТЗСоединенияАсортиментаПоИсключению
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				);

	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории()

&НаСервере
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи(МассивФорматов)

	
	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");
	
	ТекстЗапроса = "ВЫБРАТЬ
		|	АМ_ФорматыМагазиновСклады.Ссылка КАК Формат,
		|	АМ_ФорматыМагазиновСклады.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыФорматов
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК АМ_ФорматыМагазиновСклады
		|
		|ГДЕ
		|	АМ_ФорматыМагазиновСклады.Ссылка.Активен = ИСТИНА
		|	И АМ_ФорматыМагазиновСклады.Ссылка.ПометкаУдаления = ЛОЖЬ
		|  
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Склад
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПД_ПривязкиАналогиНоменклатуры.АналогНоменклатуры КАК АналогНоменклатуры,
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура
		|ПОМЕСТИТЬ ПД_Аналоги
		|ИЗ
		|	РегистрСведений.ПД_АналогиНоменклатуры КАК ПД_ПривязкиАналогиНоменклатуры
		|ГДЕ
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура = &НоменклатураВладелец
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналогНоменклатуры
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.    
		|ВЫБРАТЬ
		|	ПД_НаборПодпихни.АналогНоменклатуры,
		|	ПД_НаборПодпихни.Подпихня КАК Подпихня,
		|	ПД_НаборПодпихни.Номенклатура КАК Номенклатура,
		|	ПД_НаборПодпихни.Ответственный
		|ПОМЕСТИТЬ ПД_Подпихня
		|ИЗ
		|	ПД_Аналоги КАК ПД_Аналоги
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПД_НаборПодпихни КАК ПД_НаборПодпихни
		|ПО ПД_Аналоги.АналогНоменклатуры = ПД_НаборПодпихни.АналогНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подпихня,
		|	Номенклатура
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ  РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ПД_Подпихня.Номенклатура)		КАК ДанныеДерева,
		|	%1
		|	ПД_Подпихня.Номенклатура 					КАК Номенклатура,
		|	ПД_Подпихня.Номенклатура.Производитель 		КАК Производитель,
		|	ПД_Подпихня.Номенклатура.ТоварнаяКатегория 	КАК ТоварнаяКатегория 
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	ПД_Подпихня КАК ПД_Подпихня
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПД_ИсключениеПодпихни КАК ПД_ИсключениеПодпихни
		|ПО ПД_Подпихня.Подпихня = ПД_ИсключениеПодпихни.Подпихня
		|И ПД_Подпихня.Номенклатура = ПД_ИсключениеПодпихни.Номенклатура
		|
		|ГДЕ
		|	ПД_ИсключениеПодпихни.Номенклатура ЕСТЬ NULL 
		|	И	ВЫБОР
		|		КОГДА &ГруппаВидаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ПД_Подпихня.Номенклатура.ВидНоменклатуры В ИЕРАРХИИ(&ГруппаВидаНоменклатуры)
		|	КОНЕЦ 
		|   И	ПД_Подпихня.Номенклатура.ТоварнаяКатегория 	= &ТоварнаяКатегория
		|   И	ПД_Подпихня.Номенклатура.Производитель 		= &Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	Номенклатура
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	%4
		|	КешДанныхДляВывода.ДанныеДерева,
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
		|   %2
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|	
		| %3
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	 КешДанныхДляВывода.Номенклатура 
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.		
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура КАК Номенклатура,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладеТК	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешДанныхДляВывода КАК КешДанныхДляВывода
		|ПО  КешДанныхДляВывода.Номенклатура = АУН.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	Номенклатура
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.
		|ВЫБРАТЬ
		|	СкладыФорматов.Формат КАК Формат,
		|	ДнейНаСкладеТК.Номенклатура КАК Номенклатура,
		|	СРЕДНЕЕ(ДнейНаСкладеТК.ДНС) КАК ДНС
		|ПОМЕСТИТЬ ДНСПоФорматам
		|ИЗ
		|   ДнейНаСкладеТК КАК ДнейНаСкладеТК
		|	
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ  СкладыФорматов КАК СкладыФорматов
		|ПО ДнейНаСкладеТК.Склад = СкладыФорматов.Склад
		|    
		|СГРУППИРОВАТЬ ПО
		|	Формат,
		|	Номенклатура
		|   
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Номенклатура
		|;   
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7.  
		|ВЫБРАТЬ  РАЗРЕШЕННЫЕ
		|	АМ_УправлениеАссортиментнойМатрицей.*
		|   %6
		|ИЗ
		|	АМ_УправлениеАссортиментнойМатрицей КАК АМ_УправлениеАссортиментнойМатрицей
		|
		|
		|  %7
		|";
		
		
#Область МассивФорматовМагазина
		ТЗВыборкаПоФорматам 					= ""; //%1
		ТЗАсортиментПоФорматам 					= ""; //%2
		ТЗСоединенияАсортиментаПоФорматам 		= ""; //%3
		ТЗВыборкаПоФорматамДляВывода 			= ""; //%4
		ТЗВыборкаПоФорматамДляИндексации 		= ""; //%5   
		ТЗАсортиментаПоВсехФорматах				= ""; //%6
		ТЗСоединенияАсортиментПоВсехФорматах	= ""; //%7

		Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл
			ИдентификаторСклада	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);
					
			ТЗВыборкаПоФорматам =  ТЗВыборкаПоФорматам	+"	
									|	&Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
									
			ТЗАсортиментПоФорматам =  ТЗАсортиментПоФорматам	+"
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 			КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) 			КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 			КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) 		КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 			КАК Исключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК КонтрольМатрицейОтключен" + ИдентификаторСклада;

			ТЗСоединенияАсортиментаПоФорматам =  ТЗСоединенияАсортиментаПоФорматам	+ "
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,
									|			(Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория,
									|					КешДанныхДляВывода.Производитель,
									|					КешДанныхДляВывода.Номенклатура
									|				ИЗ
									|					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";   
			
			ТЗВыборкаПоФорматамДляВывода =  ТЗВыборкаПоФорматамДляВывода	+"	
									|	КешДанныхДляВывода.Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
						
			ТЗВыборкаПоФорматамДляИндексации =  ТЗВыборкаПоФорматамДляИндексации	+"	
									|	Формат"+ИдентификаторСклада+",";
									
			ТЗАсортиментаПоВсехФорматах = ТЗАсортиментаПоВсехФорматах +"
				                    |,
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста"+ИдентификаторСклада+", 0) = 0
									|			И IsNull(ТоварыОрганизацийОбороты"+ИдентификаторСклада+".КоличествоКонечныйОстаток, 0) = 0
									|			ТОГДА 0
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПосадочныеМеста"+ИдентификаторСклада+", 0) = 1
									|			И IsNull(ТоварыОрганизацийОбороты"+ИдентификаторСклада+".КоличествоКонечныйОстаток, 0) =0
									|			ТОГДА 1
									|		ИНАЧЕ 2
									|	КОНЕЦ									КАК Состояние"+ИдентификаторСклада+",
									|	ВЫБОР
									|		КОГДА ТоварыОрганизацийОбороты"+ИдентификаторСклада+".КоличествоКонечныйОстаток > 0 
									|			ТОГДА 1 
									|		ИНАЧЕ 0
									|	КОНЕЦ КАК КоличествоАртикулов"+ИдентификаторСклада+",
									|	ISNULL(ДНСПоФорматам"+ИдентификаторСклада+".ДНС,0) 			КАК ДНС" + ИдентификаторСклада; 


			ТЗСоединенияАсортиментПоВсехФорматах = ТЗСоединенияАсортиментПоВсехФорматах+"
									|
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(&НачалоПериодаМесяц, &КонецПериода, , ,  
									|											(Номенклатура) В (	ВЫБРАТЬ 
									|																	Номенклатура									
									|																ИЗ 
									|																	КешДанныхДляВывода)
									|											И Склад В (ВЫБРАТЬ
									|															СкладыФорматов.Склад
									|														ИЗ
									|															СкладыФорматов КАК СкладыФорматов
									|														ГДЕ
									|															СкладыФорматов.Формат = &Формат"+ИдентификаторСклада+")				
									|														) КАК ТоварыОрганизацийОбороты"+ИдентификаторСклада+"
									|ПО	АМ_УправлениеАссортиментнойМатрицей.Номенклатура	= ТоварыОрганизацийОбороты"+ИдентификаторСклада+".Номенклатура
									|  
									|ЛЕВОЕ СОЕДИНЕНИЕ ДНСПоФорматам КАК ДНСПоФорматам"+ИдентификаторСклада+"
									|ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= ДНСПоФорматам"+ИдентификаторСклада+".Формат
									|И АМ_УправлениеАссортиментнойМатрицей.Номенклатура = ДНСПоФорматам"+ИдентификаторСклада+".Номенклатура
									|";	

		КонецЦикла;

				
		ТЗСоединенияАсортиментаПоФорматам = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				); 						
			
		#КонецОбласти
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				);


	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи()


#КонецОбласти

