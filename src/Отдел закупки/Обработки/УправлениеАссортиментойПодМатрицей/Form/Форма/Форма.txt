
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	//Если Параметры.Свойство("НоменклатураВладелец") = ЛОЖЬ Тогда
		//НоменклатураВладелец = Параметры.НоменклатураВладелец;
	//	Возврат;	
	//КонецЕсли;
	//
	//ОбъектСсылка = git_ПереопределениеОбработчиковСервер.ПолучитьСсылкуНаВнешнийОбъект("УправлениеАссортиментнымиМатрицами"); 
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");  	
	МассивФорматов  = ОбъектОбработки.ПолучитьФорматыМагазинов();  	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
	СоздатьДополнительныеРеквизитыФормы(МассивФорматов);
	СоздатьДополнительныеЭлементыФормы(МассивФорматов);
	ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей();  
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Инициализация_формы

// Процедура создает дополнительные реквизиты формы для дерева распределения.
//
// Параметры:
//  МассивФорматов - Массив - cодержит структуры со свойствами:
//   * АМ_ФорматыМагазинов - СправочникСсылка.АМ_ФорматыМагазинов - ссылка на АМ_ФорматыМагазинов.
//
&НаСервере
Процедура СоздатьДополнительныеРеквизитыФормы(МассивФорматов)

	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");
	МассивРеквизитов 			   = Новый Массив;	
	
	Для каждого Формат Из МассивФорматов Цикл
		ИдентификаторФормата = ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(Формат);
		МассивРеквизитов.Добавить(Новый РеквизитФормы("Формат"+ИдентификаторФормата						, Новый ОписаниеТипов("СправочникСсылка.АМ_ФорматыМагазинов")	, "АссортиментнаяПодМатрица", "Формат"));    
		МассивРеквизитов.Добавить(Новый РеквизитФормы("Исключено"+ИдентификаторФормата					, Новый ОписаниеТипов("Булево")									, "АссортиментнаяПодМатрица", "Исключено"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("НомерПоПорядку"+ИдентификаторФормата				, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(3,0))	, "АссортиментнаяПодМатрица", "№"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("ПосадочныеМеста"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "Пос. мест"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("МинимальныйЗапас"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "АссортиментнаяПодМатрица", "Мин. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("СтраховойЗапас"+ИдентификаторФормата				, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "Страх. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("МаксимальныйЗапас"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "АссортиментнаяПодМатрица", "Макс. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("ДНС"+ИдентификаторФормата						, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "ДНС"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("КонтрольМатрицейОтключен"+ИдентификаторФормата	, Новый ОписаниеТипов("Булево")									, "АссортиментнаяПодМатрица", "КонтрольМатрицейОтключен"));
	КонецЦикла; 
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
КонецПроцедуры // СоздатьДополнительныеРеквизитыИЭлементыФормы()


// Процедура создает дополнительные элементы формы для дерева распределения.
//
// Параметры:
//  МассивФорматов - Массив - cодержит структуры со свойствами:
//   * АМ_ФорматыМагазинов - СправочникСсылка.АМ_ФорматыМагазинов - ссылка на АМ_ФорматыМагазинов.
//
&НаСервере
Процедура СоздатьДополнительныеЭлементыФормы(МассивФорматов)
		
	ЭлементАссортиментнаяПодМатрица = Элементы.АссортиментнаяПодМатрица;
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект"); 
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	Для каждого Формат Из МассивФорматов Цикл
		
		ЦветФонаЗаголовка = ГСЧ.СлучайноеЧисло(150, 160);
		
		ИдентификаторФормата= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(Формат);
		
		ПараметрыЭлемента = СтруктураПараметровГруппыКолонок(
															"группа_"+ИдентификаторФормата  //ИмяЭлемента
															, Формат                        //ЗаголовокЭлемента
															, ФиксацияВТаблице.Нет          //ФиксацияВТаблице
															, ЦветФонаЗаголовка             //ЦветФонаЗаголовка
															);
		ГруппаКолонок 	  = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ЭлементАссортиментнаяПодМатрица);
		
		Подсказка = НСтр("ru='Полностью исключено из ассортиментной матрицы'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки(
													"Исключено"+ИдентификаторФормата  //ИмяЭлемента
													, Новый Цвет(255, 235, 205)       //ЦветЭлемента
													, Ложь                            //ТолькоПросмотр
													, Подсказка                       //Подсказка
													,                                 //ЦветФонаЗаголовка
													,                                 //Шрифт
													,БиблиотекаКартинок.УдалитьНепосредственно//КартинкаШапка
													);
													
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементИсключеноПриИзменении");
		
		Подсказка = НСтр("ru='Номер по порядку'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки(
														"НомерПоПорядку"+ИдентификаторФормата //ИмяЭлемента
														, Новый Цвет(255, 235, 205)            //ЦветЭлемента
														, Ложь                                 //ТолькоПросмотр
														, Подсказка                            //Подсказка
														, 
														);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементНомерПоПорядкуПриИзменении");

		Подсказка = НСтр("ru='Посадочные места'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки(
														"ПосадочныеМеста"+ИдентификаторФормата   //ИмяЭлемента
														, Новый Цвет(255, 235, 205)              //ЦветЭлемента
														, Ложь                                   //ТолькоПросмотр
														, Подсказка                              //Подсказка
														, 
														);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементПосадочныеМестаПриИзменении");

		Подсказка = НСтр("ru='Минимальний запас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки(
														"МинимальныйЗапас"+ИдентификаторФормата  //ИмяЭлемента
														, Новый Цвет(255, 235, 205)              //ЦветЭлемента
														, Ложь                                   //ТолькоПросмотр
														, Подсказка                              //Подсказка
														);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементМинимальныйЗапасПриИзменении");

		//Подсказка = НСтр("ru='Страховой Запас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		//ПараметрыЭлемента = СтруктураПараметровКолонки("СтраховойЗапас"+ИдентификаторФормата, Новый Цвет(255, 235, 205), Ложь, Подсказка, ЦветФонаЗаголовка);
		//ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		//ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементСтраховойЗапасПриИзменении");

		Подсказка = НСтр("ru='Полностью исключено из ассортиментной матрицы'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки("МаксимальныйЗапас"+ИдентификаторФормата   //ИмяЭлемента
													  , Новый Цвет(255, 235, 205)                 //ЦветЭлемента
													  , Ложь                                      //ТолькоПросмотр
													  , Подсказка                                 //Подсказка
													   );
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементМаксимальныйЗапасПриИзменении");

		Подсказка = НСтр("ru='Дней на складе'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки(
														"ДНС"+ИдентификаторФормата           //ИмяЭлемента
														, Новый Цвет(255, 235, 205)          //ЦветЭлемента
														, Ложь                               //ТолькоПросмотр
														, Подсказка                          //Подсказка
														);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементДНСПриИзменении");
		
		Подсказка = НСтр("ru='Контроль матрицей отключен'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки(
														"КонтрольМатрицейОтключен"+ИдентификаторФормата    //ИмяЭлемента
														, Новый Цвет(255, 235, 205)                        //ЦветЭлемента
														, Ложь                                             //ТолькоПросмотр
														, Подсказка                                        //Подсказка
														, ЦветФонаЗаголовка                                //ЦветФонаЗаголовка
														,                                                  //Шрифт
														,БиблиотекаКартинок.Удалить                        //КартинкаШапка
														);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементКонтрольМатрицейОтключенПриИзменении");

	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
КонецПроцедуры // СоздатьДополнительныеЭлементыФормы()

// Возвращает заполненную структуру для создания группы колонок дерева распределения.
// 
// Параметры:
//  ИмяЭлемента - Строка - наименование элемента формы.
//  ЗаголовокЭлемента - Строка - заголовок элемента формы.
//  ФиксацияВТаблице - ФиксацияВТаблице - фиксация элемента в таблице.
//
// Возвращаемое значение:
//  Структура - структура параметров нового элемента формы.
//
&НаСервере
Функция СтруктураПараметровГруппыКолонок(ИмяЭлемента, ЗаголовокЭлемента, ФиксацияВТаблице, ЦветФонаЗаголовка=Неопределено)

	ПараметрыЭлемента = Новый Структура;
	ПараметрыЭлемента.Вставить("Имя", ИмяЭлемента);
	ПараметрыЭлемента.Вставить("Вид", ВидГруппыФормы.ГруппаКолонок);
	ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
	ПараметрыЭлемента.Вставить("Группировка", ГруппировкаКолонок.Горизонтальная);
	ПараметрыЭлемента.Вставить("ОтображатьВШапке", Истина);
	ПараметрыЭлемента.Вставить("Заголовок", ЗаголовокЭлемента);
	ПараметрыЭлемента.Вставить("ФиксацияВТаблице", ФиксацияВТаблице);
	ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
	ПараметрыЭлемента.Вставить("КартинкаШапки", БиблиотекаКартинок.ЗначокПлюс);
	
	Если ЦветФонаЗаголовка <> Неопределено Тогда
		ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 240-Цел(240/ЦветФонаЗаголовка), ЦветФонаЗаголовка));
	КонецЕсли;
	
	Возврат ПараметрыЭлемента;

КонецФункции // ПолучитьСтруктуруПараметровГруппыКолонок()

// Возвращает заполненную структуру для создания колоноки дерева распределения.
//
// Параметры:
//  ИмяЭлемента - Строка - наименование элемента формы.
//  ЦветЭлемента - Цвет - цвет фона элемента.
//
// Возвращаемое значение:
//   Структура - структура параметров нового элемента формы.
//
&НаСервере
Функция СтруктураПараметровКолонки(ИмяЭлемента, ЦветЭлемента, ТолькоПросмотр, Подсказка, ЦветФонаЗаголовка=Неопределено, Шрифт=Неопределено,КартинкаШапка = Неопределено)

	ПараметрыЭлемента = Новый Структура;
	ПараметрыЭлемента.Вставить("Имя", ИмяЭлемента);                                        	
	ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
	ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица." + ИмяЭлемента);
	ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
	ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
	//ПараметрыЭлемента.Вставить("ЦветФона", ЦветЭлемента);
	ПараметрыЭлемента.Вставить("Ширина", 3);
	ПараметрыЭлемента.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
	ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
	ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
	ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
	Если КартинкаШапка <> Неопределено Тогда
		ПараметрыЭлемента.Вставить("КартинкаШапка", КартинкаШапка);
		ПараметрыЭлемента.Вставить("ПоложениеЗаголовка  ", ПоложениеЗаголовкаЭлементаФормы.Нет);
	КонецЕсли;
	
	Если Шрифт <> Неопределено Тогда
		ПараметрыЭлемента.Вставить("Шрифт", Шрифт);
	КонецЕсли;  	
	ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));

		
	Возврат ПараметрыЭлемента;

КонецФункции // СтруктураПараметровКолонки()


#КонецОбласти 


&НаСервере
Процедура ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей()
	
	АссортиментнаяПодМатрица.ПолучитьЭлементы().Очистить();
	
	ОбъектОбработки  = РеквизитФормыВЗначение("Объект");
	МассивФорматов  = ОбъектОбработки.ПолучитьФорматыМагазинов();  

	СтрокаЭлементы = АссортиментнаяПодМатрица.ПолучитьЭлементы();
	
	Запрос = Новый Запрос;	  	
	Запрос.Текст = ПолучитьТекстЗапросаАссортиментнойМатрицыКорень(МассивФорматов);
	Запрос.УстановитьПараметр("НоменклатураВладелец", НоменклатураВладелец);
	
	Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл  		
		ИдентификаторФормата	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);
		Запрос.УстановитьПараметр("Формат"+ИдентификаторФормата, ФорматМагазина);  							
	КонецЦикла; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если ПустаяСтрока(Выборка.ДанныеРодителя) Тогда
			НоваяСтрока.ДанныеДерева = Выборка.ДанныеДерева;	
		Иначе
			НоваяСтрока.ДанныеДерева = Выборка.ДанныеРодителя + " / " + Выборка.ДанныеДерева;
		КонецЕсли;
					
	//	ВыполнитьДополнительнуюОбработкуСтрокиДерева(НоваяСтрока, СтрокаДерева);
		
		НоваяСтрока.ПолучитьЭлементы().Добавить();   		
	КонецЦикла;    		
КонецПроцедуры // ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей()

&НаСервере
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыКорень(МассивФорматов)
	
	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");

	ТекстЗапроса = "ВЫБРАТЬ
		|	АМ_ФорматыМагазиновСклады.Ссылка КАК Формат,
		|	АМ_ФорматыМагазиновСклады.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыФорматов
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК АМ_ФорматыМагазиновСклады
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Склад
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПД_ПривязкиАналогиНоменклатуры.АналогНоменклатуры КАК АналогНоменклатуры,
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура
		|ПОМЕСТИТЬ ПД_Аналоги
		|ИЗ
		|	РегистрСведений.ПД_АналогиНоменклатуры КАК ПД_ПривязкиАналогиНоменклатуры
		|ГДЕ
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура = &НоменклатураВладелец
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналогНоменклатуры
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.    
		|ВЫБРАТЬ
		|	ПД_НаборПодпихни.АналогНоменклатуры,
		|	ПД_НаборПодпихни.Подпихня КАК Подпихня,
		|	ПД_НаборПодпихни.Номенклатура КАК Номенклатура,
		|	ПД_НаборПодпихни.Ответственный
		|ПОМЕСТИТЬ ПД_Подпихня
		|ИЗ
		|	ПД_Аналоги КАК ПД_Аналоги
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПД_НаборПодпихни КАК ПД_НаборПодпихни
		|ПО ПД_Аналоги.АналогНоменклатуры = ПД_НаборПодпихни.АналогНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подпихня,
		|	Номенклатура
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ
		|	ПД_Подпихня.Номенклатура КАК Номенклатура,
		|	ПД_Подпихня.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
		|ПОМЕСТИТЬ ПД_Номенклатура
		|ИЗ
		|	ПД_Подпихня КАК ПД_Подпихня
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПД_ИсключениеПодпихни КАК ПД_ИсключениеПодпихни
		|ПО ПД_Подпихня.Подпихня = ПД_ИсключениеПодпихни.Подпихня
		|И ПД_Подпихня.Номенклатура = ПД_ИсключениеПодпихни.Номенклатура
		|
		|ГДЕ
		|	ПД_ИсключениеПодпихни.Номенклатура ЕСТЬ NULL 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.  
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ТоварныеКатегории.Ссылка) КАК ДанныеДерева,
		|	ПРЕДСТАВЛЕНИЕ(ТоварныеКатегории.Родитель) КАК ДанныеРодителя,
		|	%1
		|	ТоварныеКатегории.Ссылка КАК ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка) КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	ПД_Номенклатура КАК ПД_Номенклатура
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|ПО ПД_Номенклатура.ВидНоменклатуры = ТоварныеКатегории.Владелец
		|
		|ГДЕ
		|	ТоварныеКатегории.ЭтоГруппа = ЛОЖЬ
		|	И ТоварныеКатегории.ПометкаУдаления = ЛОЖЬ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	%4
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
		|   %2
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|	
		| %3
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	 КешДанныхДляВывода.ТоварнаяКатегория 
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	%4
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
		|   %6  
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|   %7
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	%5
		|	 КешДанныхДляВывода.ТоварнаяКатегория
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7.
		|ВЫБРАТЬ
		|	СРЕДНЕЕ(АМ_ДнейНаСкладе.КоличествоДней) КАК КоличествоДней,
		|	ТоварныеКатегории.Ссылка КАК ТоварнаяКатегория,
		|	АМ_ДнейНаСкладе.АналитикаУчетаНоменклатуры.Склад КАК Склад
		|ПОМЕСТИТЬ ДнейНаСкладеТК
		|ИЗ
		|	ПД_Номенклатура КАК ПД_Номенклатура
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|ПО ПД_Номенклатура.ВидНоменклатуры = ТоварныеКатегории.Владелец
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АМ_ДнейНаСкладе КАК АМ_ДнейНаСкладе
		|ПО ПД_Номенклатура.Номенклатура = АМ_ДнейНаСкладе.АналитикаУчетаНоменклатуры.Номенклатура
		|
		|ГДЕ
		|	ТоварныеКатегории.ПометкаУдаления = ЛОЖЬ
		|	И ТоварныеКатегории.ЭтоГруппа = ЛОЖЬ 
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварныеКатегории.Ссылка,
		|	АМ_ДнейНаСкладе.АналитикаУчетаНоменклатуры.Склад

		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ТоварнаяКатегория
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8.
		|ВЫБРАТЬ
		|	СкладыФорматов.Формат КАК Формат,
		|	ДнейНаСкладеТК.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СРЕДНЕЕ(ДнейНаСкладеТК.КоличествоДней) КАК КоличествоДней
		|ПОМЕСТИТЬ ДНСПоФорматам
		|ИЗ
		|	СкладыФорматов КАК СкладыФорматов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДнейНаСкладеТК КАК ДнейНаСкладеТК
		|		ПО СкладыФорматов.Склад = ДнейНаСкладеТК.Склад
		|    
		|СГРУППИРОВАТЬ ПО
		|	СкладыФорматов.Формат,
		|	ДнейНаСкладеТК.ТоварнаяКатегория
		|   
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	ТоварнаяКатегория
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 9.  
		|ВЫБРАТЬ
		|   %4
		|	КешДанныхДляВывода.ДанныеДерева,
		|	КешДанныхДляВывода.ДанныеРодителя,
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
		|   %8
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|  %9
		|";

		
		#Область МассивФорматовМагазина
		ТЗВыборкаПоФорматам 					= ""; //%1
		ТЗАсортиментПоФорматам 					= ""; //%2
		ТЗСоединенияАсортиментаПоФорматам 		= ""; //%3
		ТЗВыборкаПоФорматамДляВывода 			= ""; //%4
		ТЗВыборкаПоФорматамДляИндексации 		= ""; //%5   
		ТЗАсортиментаМатрицаПоИсключению		= ""; //%6
		ТЗСоединенияАсортиментаПоИсключению		= ""; //%7
		ТЗАсортиментаПоВсехФорматах				= ""; //%8
		ТЗСоединенияАсортиментПоВсехФорматах	= ""; //%9

		
		

		Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл
			ИдентификаторСклада	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);

			ТЗВыборкаПоФорматам =  ТЗВыборкаПоФорматам	+"	
									|	&Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
									
			ТЗАсортиментПоФорматам =  ТЗАсортиментПоФорматам	+"
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 			КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) 			КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 			КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) 		КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 			КАК Исключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК КонтрольМатрицейОтключен" + ИдентификаторСклада;

			ТЗСоединенияАсортиментаПоФорматам =  ТЗСоединенияАсортиментаПоФорматам	+ "
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,
									|			(Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория,
									|					КешДанныхДляВывода.Производитель,
									|					КешДанныхДляВывода.Номенклатура
									|				ИЗ
									|					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";   
			
			ТЗВыборкаПоФорматамДляВывода =  ТЗВыборкаПоФорматамДляВывода	+"	
									|	КешДанныхДляВывода.Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
						
			ТЗВыборкаПоФорматамДляИндексации =  ТЗВыборкаПоФорматамДляИндексации	+"	
									|	Формат"+ИдентификаторСклада+",";
									
			ТЗАсортиментаМатрицаПоИсключению =  ТЗАсортиментаМатрицаПоИсключению	+ "
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 				КАК Исключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ) КАК КонтрольМатрицейОтключен" + ИдентификаторСклада;
									
			ТЗСоединенияАсортиментаПоИсключению =  ТЗСоединенияАсортиментаПоИсключению	+"
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,
									|			(Формат, ТоварнаяКатегория) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория
									|				ИЗ
									|					КешДанныхДляВывода)
									|			И Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";
			ТЗАсортиментаПоВсехФорматах = ТЗАсортиментаПоВсехФорматах +"
				                    |,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 			КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) 			КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 			КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) 		КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 			КАК Исключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК КонтрольМатрицейОтключен" + ИдентификаторСклада;

			ТЗСоединенияАсортиментПоВсехФорматах = ТЗСоединенияАсортиментПоВсехФорматах+"
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,Формат = &Формат"+ИдентификаторСклада+" И
									|			(Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория,
									|					КешДанныхДляВывода.Производитель,
									|					КешДанныхДляВывода.Номенклатура
									|				ИЗ
									|					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";
						

		КонецЦикла;
								
		ТЗСоединенияАсортиментаПоФорматам = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаМатрицаПоИсключению
																				,ТЗСоединенияАсортиментаПоИсключению); 						
			
		#КонецОбласти
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаМатрицаПоИсключению
																				,ТЗСоединенияАсортиментаПоИсключению);

		
			
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыКорень()

&НаКлиенте
Процедура НоменклатураВладелецПриИзменении(Элемент)
	ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей();
КонецПроцедуры

#КонецОбласти

