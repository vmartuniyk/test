
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	//Если Параметры.Свойство("") = ЛОЖЬ Тогда
	//	Возврат;	
	//КонецЕсли;
	//
	//ОбъектСсылка = git_ПереопределениеОбработчиковСервер.ПолучитьСсылкуНаВнешнийОбъект("УправлениеАссортиментнымиМатрицами"); 
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");  	
	МассивФорматов   			   = ОбъектОбработки.ПолучитьФорматыМагазинов();  	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
	СоздатьДополнительныеРеквизитыФормы(МассивФорматов);
	СоздатьДополнительныеЭлементыФормы(МассивФорматов);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Инициализация_формы

// Процедура создает дополнительные реквизиты формы для дерева распределения.
//
// Параметры:
//  МассивФорматов - Массив - cодержит структуры со свойствами:
//   * АМ_ФорматыМагазинов - СправочникСсылка.АМ_ФорматыМагазинов - ссылка на АМ_ФорматыМагазинов.
//
&НаСервере
Процедура СоздатьДополнительныеРеквизитыФормы(МассивФорматов)

	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");
	МассивРеквизитов 			   = Новый Массив;	
	
	Для каждого Формат Из МассивФорматов Цикл
		ИдентификаторФормата = ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(Формат);
		МассивРеквизитов.Добавить(Новый РеквизитФормы("Формат"+ИдентификаторФормата						, Новый ОписаниеТипов("СправочникСсылка.АМ_ФорматыМагазинов")	, "АссортиментнаяПодМатрица", "Формат"));    
		МассивРеквизитов.Добавить(Новый РеквизитФормы("Исключено"+ИдентификаторФормата					, Новый ОписаниеТипов("Булево")									, "АссортиментнаяПодМатрица", "Исключено"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("НомерПоПорядку"+ИдентификаторФормата				, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(3,0))	, "АссортиментнаяПодМатрица", "№"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("ПосадочныеМеста"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "Пос. мест"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("МинимальныйЗапас"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "АссортиментнаяПодМатрица", "Мин. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("СтраховойЗапас"+ИдентификаторФормата				, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "Страх. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("МаксимальныйЗапас"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "АссортиментнаяПодМатрица", "Макс. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("ДНС"+ИдентификаторФормата						, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "ДНС"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("КонтрольМатрицейОтключен"+ИдентификаторФормата	, Новый ОписаниеТипов("Булево")									, "АссортиментнаяПодМатрица", "КонтрольМатрицейОтключен"));
	КонецЦикла; 
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
КонецПроцедуры // СоздатьДополнительныеРеквизитыИЭлементыФормы()


// Процедура создает дополнительные элементы формы для дерева распределения.
//
// Параметры:
//  МассивФорматов - Массив - cодержит структуры со свойствами:
//   * АМ_ФорматыМагазинов - СправочникСсылка.АМ_ФорматыМагазинов - ссылка на АМ_ФорматыМагазинов.
//
&НаСервере
Процедура СоздатьДополнительныеЭлементыФормы(МассивФорматов)
		
	ЭлементАссортиментнаяПодМатрица = Элементы.АссортиментнаяПодМатрица;
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект"); 
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	
	Для каждого Формат Из МассивФорматов Цикл
		
		ЦветФонаЗаголовка = ГСЧ.СлучайноеЧисло(0, 255);
		
		ИдентификаторФормата= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(Формат);
		
		ПараметрыЭлемента = СтруктураПараметровГруппыКолонок("группа_"+ИдентификаторФормата, Формат, ФиксацияВТаблице.Нет, ЦветФонаЗаголовка);
		ГруппаКолонок 	  = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ЭлементАссортиментнаяПодМатрица);
		
		Подсказка = НСтр("ru='Полностью исключено из ассортиментной матрицы'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки("Исключено"+ИдентификаторФормата, Новый Цвет(255, 235, 205), Ложь, Подсказка, ЦветФонаЗаголовка,,БиблиотекаКартинок.УдалитьНепосредственно);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементИсключеноПриИзменении");
		
		Подсказка = НСтр("ru='Номер по порядку'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки("НомерПоПорядку"+ИдентификаторФормата, Новый Цвет(255, 235, 205), Ложь, Подсказка, ЦветФонаЗаголовка);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементНомерПоПорядкуПриИзменении");

		Подсказка = НСтр("ru='Посадочные места'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки("ПосадочныеМеста"+ИдентификаторФормата, Новый Цвет(255, 235, 205), Ложь, Подсказка, ЦветФонаЗаголовка);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементПосадочныеМестаПриИзменении");

		Подсказка = НСтр("ru='Минимальний запас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки("МинимальныйЗапас"+ИдентификаторФормата, Новый Цвет(255, 235, 205), Ложь, Подсказка, ЦветФонаЗаголовка);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементМинимальныйЗапасПриИзменении");

		//Подсказка = НСтр("ru='Страховой Запас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		//ПараметрыЭлемента = СтруктураПараметровКолонки("СтраховойЗапас"+ИдентификаторФормата, Новый Цвет(255, 235, 205), Ложь, Подсказка, ЦветФонаЗаголовка);
		//ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		//ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементСтраховойЗапасПриИзменении");

		Подсказка = НСтр("ru='Полностью исключено из ассортиментной матрицы'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки("МаксимальныйЗапас"+ИдентификаторФормата, Новый Цвет(255, 235, 205), Ложь, Подсказка, ЦветФонаЗаголовка);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементМаксимальныйЗапасПриИзменении");

		Подсказка = НСтр("ru='Дней на складе'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки("ДНС"+ИдентификаторФормата, Новый Цвет(255, 235, 205), Ложь, Подсказка, ЦветФонаЗаголовка);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементДНСПриИзменении");
		
		Подсказка = НСтр("ru='Контроль матрицей отключен'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ПараметрыЭлемента = СтруктураПараметровКолонки("КонтрольМатрицейОтключен"+ИдентификаторФормата, Новый Цвет(255, 235, 205), Ложь, Подсказка, ЦветФонаЗаголовка,,БиблиотекаКартинок.Удалить);
		ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
		ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементКонтрольМатрицейОтключенПриИзменении");

	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
КонецПроцедуры // СоздатьДополнительныеЭлементыФормы()

// Возвращает заполненную структуру для создания группы колонок дерева распределения.
// 
// Параметры:
//  ИмяЭлемента - Строка - наименование элемента формы.
//  ЗаголовокЭлемента - Строка - заголовок элемента формы.
//  ФиксацияВТаблице - ФиксацияВТаблице - фиксация элемента в таблице.
//
// Возвращаемое значение:
//  Структура - структура параметров нового элемента формы.
//
&НаСервере
Функция СтруктураПараметровГруппыКолонок(ИмяЭлемента, ЗаголовокЭлемента, ФиксацияВТаблице, ЦветФонаЗаголовка=Неопределено)

	ПараметрыЭлемента = Новый Структура;
	ПараметрыЭлемента.Вставить("Имя", ИмяЭлемента);
	ПараметрыЭлемента.Вставить("Вид", ВидГруппыФормы.ГруппаКолонок);
	ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
	ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
	ПараметрыЭлемента.Вставить("Группировка", ГруппировкаКолонок.Горизонтальная);
	ПараметрыЭлемента.Вставить("ОтображатьВШапке", Истина);
	ПараметрыЭлемента.Вставить("Заголовок", ЗаголовокЭлемента);
	ПараметрыЭлемента.Вставить("ФиксацияВТаблице", ФиксацияВТаблице);
	ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
	ПараметрыЭлемента.Вставить("КартинкаШапки", БиблиотекаКартинок.ЗначокПлюс);
	
	Если ЦветФонаЗаголовка <> Неопределено Тогда
		ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 240-Цел(240/ЦветФонаЗаголовка), ЦветФонаЗаголовка));
	КонецЕсли;
	
	Возврат ПараметрыЭлемента;

КонецФункции // ПолучитьСтруктуруПараметровГруппыКолонок()

// Возвращает заполненную структуру для создания колоноки дерева распределения.
//
// Параметры:
//  ИмяЭлемента - Строка - наименование элемента формы.
//  ЦветЭлемента - Цвет - цвет фона элемента.
//
// Возвращаемое значение:
//   Структура - структура параметров нового элемента формы.
//
&НаСервере
Функция СтруктураПараметровКолонки(ИмяЭлемента, ЦветЭлемента, ТолькоПросмотр, Подсказка, ЦветФонаЗаголовка=Неопределено, Шрифт=Неопределено,КартинкаПодвала = Неопределено)

	ПараметрыЭлемента = Новый Структура;
	ПараметрыЭлемента.Вставить("Имя", ИмяЭлемента);                                        	
	ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
	ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица." + ИмяЭлемента);
	ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
	ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
	ПараметрыЭлемента.Вставить("ЦветФона", ЦветЭлемента);
	ПараметрыЭлемента.Вставить("Ширина", 3);
	ПараметрыЭлемента.Вставить("ТолькоПросмотр", ТолькоПросмотр);
	ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
	ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
	ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
	ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
	Если КартинкаПодвала <> Неопределено Тогда
		ПараметрыЭлемента.Вставить("КартинкаПодвала ", КартинкаПодвала );
		ПараметрыЭлемента.Вставить("ПоложениеЗаголовка  ", ПоложениеЗаголовкаЭлементаФормы.Нет);
	КонецЕсли;
	
	Если Шрифт <> Неопределено Тогда
		ПараметрыЭлемента.Вставить("Шрифт", Шрифт);
	КонецЕсли;
	
	Если ЦветФонаЗаголовка <> Неопределено Тогда
		ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 255-Цел(255/ЦветФонаЗаголовка), ЦветФонаЗаголовка));
		ПараметрыЭлемента.Вставить("ЦветРамки", Новый Цвет(253, 255-Цел(255/ЦветФонаЗаголовка), ЦветФонаЗаголовка));
	КонецЕсли;
	
	Возврат ПараметрыЭлемента;

КонецФункции // СтруктураПараметровКолонки()


#КонецОбласти 

#КонецОбласти

