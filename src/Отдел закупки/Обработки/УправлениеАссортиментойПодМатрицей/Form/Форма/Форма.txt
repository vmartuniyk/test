
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Модифицированность = ЛОЖЬ;
	Если Параметры.Свойство("НоменклатураВладелец") = Истина Тогда
		НоменклатураВладелец = Параметры.НоменклатураВладелец;
	КонецЕсли;
		
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");  	
	МассивФорматов  = ОбъектОбработки.ПолучитьФорматыМагазинов();  	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
	СоздатьДополнительныеРеквизитыФормы(МассивФорматов);
	СоздатьДополнительныеЭлементыФормы(МассивФорматов);
	УсловноеОформлениеДополнительныеРеквизитыФормы(МассивФорматов);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НоменклатураВладелецПриИзменении(Элемент)
	ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей();  	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаВидаНоменклатурыПриИзменении(Элемент)
	ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей();
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяПодМатрицаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "АссортиментнаяПодМатрицаДанныеДерева" Тогда
		
		Если ТекущиеДанныеОпределены(Элемент) Тогда
			ТекущиеДанные = Элемент.ТекущиеДанные;
			Если ТекущиеДанные.Номенклатура.Пустая() = Ложь Тогда
				Свойство = "Номенклатура";
			ИначеЕсли ТекущиеДанные.Производитель.Пустая() = Ложь Тогда
				Свойство = "Производитель";
			ИначеЕсли ТекущиеДанные.ТоварнаяКатегория.Пустая() = Ложь Тогда
				Свойство = "ТоварнаяКатегория";
			Иначе
				Возврат;
			КонецЕсли;
			
			ПоказатьЗначение(, ТекущиеДанные[Свойство]);
			СтандартнаяОбработка = ЛОЖЬ;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // АссортиментнаяПодМатрицаВыбор()

&НаКлиенте
Процедура АссортиментнаяПодМатрицаПередРазворачиванием(Элемент, Строка, Отказ)
	РазвернутьПодчиненнуюГруппуАссортиментнойМатрицы(Строка);
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяПодМатрицаИсключеноПриИзменении(Элемент)
	
	ОбработатьСостояниеТрехПозиционногоФлажкаДерева("АссортиментнаяПодМатрица", "Исключено");
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяПодМатрицаКонтрольМатрицейОтключенПриИзменении(Элемент)
	
	ОбработатьСостояниеТрехПозиционногоФлажкаДерева("АссортиментнаяПодМатрица", "КонтрольМатрицейОтключен");
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяПодМатрицаПосадочныеМестаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ДанныеФормыДерево_АПМ = Элементы.АссортиментнаяПодМатрица;
	Если ТекущиеДанныеОпределены(ДанныеФормыДерево_АПМ) Тогда	
		
		ИмяКолонки = ДанныеФормыДерево_АПМ.ТекущийЭлемент.Имя;
		ИндентификаторФормата = СтрЗаменить(ИмяКолонки, "ПосадочныеМеста", "");

		ТекущиеДанные = ДанныеФормыДерево_АПМ.ТекущиеДанные;
		Если НЕ ТекущиеДанные.Номенклатура.Пустая() Тогда
			Текст = ?(Текст = "—" ИЛИ Текст = "0", "0", "1");		
		КонецЕсли;
		НовоеЗначениеПосадочныхМест = ?(Текст = "—", 0, Число(Формат(Текст, "ЧГ=0"))); 
		
		Если ЕстьДоступныеПосадочныеМеста(ТекущиеДанные.ПолучитьИдентификатор(), НовоеЗначениеПосадочныхМест, ИндентификаторФормата) Тогда
			ТекущиеДанные["ПосадочныеМеста"+ИндентификаторФормата] = НовоеЗначениеПосадочныхМест;
		Иначе
			СтандартнаяОбработка = Ложь;
			Текст = Строка(ТекущиеДанные["ПосадочныеМеста"+ИндентификаторФормата]);
		КонецЕсли;
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяПодМатрицаПриИзменении(Элемент)
	
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		ИмяКолонки = Элементы.АссортиментнаяПодМатрица.ТекущийЭлемент.Имя;
		
		ИндентификаторФормата = "";
		
		Если Найти(ИмяКолонки,"Исключено") Тогда  
			ИндентификаторФормата = СтрЗаменить(ИмяКолонки,"Исключено",""); 
		ИначеЕсли Найти(ИмяКолонки,"НомерПоПорядку") Тогда
			ИндентификаторФормата = СтрЗаменить(ИмяКолонки,"НомерПоПорядку","");
		ИначеЕсли Найти(ИмяКолонки,"ПосадочныеМеста") Тогда
			ИндентификаторФормата = СтрЗаменить(ИмяКолонки,"ПосадочныеМеста","");
		ИначеЕсли Найти(ИмяКолонки,"МинимальныйЗапас") Тогда
			ИндентификаторФормата = СтрЗаменить(ИмяКолонки,"МинимальныйЗапас","");
		ИначеЕсли Найти(ИмяКолонки,"СтраховойЗапас") Тогда
			ИндентификаторФормата = СтрЗаменить(ИмяКолонки,"СтраховойЗапас",""); 
		ИначеЕсли Найти(ИмяКолонки,"МаксимальныйЗапас") Тогда
			ИндентификаторФормата = СтрЗаменить(ИмяКолонки,"МаксимальныйЗапас",""); 
		ИначеЕсли Найти(ИмяКолонки,"КонтрольМатрицейОтключен") Тогда 
			ИндентификаторФормата = СтрЗаменить(ИмяКолонки,"КонтрольМатрицейОтключен","");
		Иначе 
			Возврат; 			
		КонецЕсли;
		
		Если ПустаяСтрока(ИндентификаторФормата) = Истина Тогда
			Возврат;		
		КонецЕсли;
		
		ВыполнитьЗаписьИзмененийВРегистр_АМ_УправлениеАссортиментнойМатрицей(Элемент.ТекущаяСтрока, ИндентификаторФормата);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяПодМатрицаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура АссортиментнаяПодМатрицаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Инициализация_формы

// Процедура создает дополнительные реквизиты формы для дерева распределения.
//
// Параметры:
//  МассивФорматов - Массив - cодержит структуры со свойствами:
//   * АМ_ФорматыМагазинов - СправочникСсылка.АМ_ФорматыМагазинов - ссылка на АМ_ФорматыМагазинов.
//
&НаСервере
Процедура СоздатьДополнительныеРеквизитыФормы(МассивФорматов)

	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");
	МассивРеквизитов 			   = Новый Массив;	
	
	Для каждого Формат Из МассивФорматов Цикл
		ИдентификаторФормата = ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(Формат);
		МассивРеквизитов.Добавить(Новый РеквизитФормы("Формат"+ИдентификаторФормата						, Новый ОписаниеТипов("СправочникСсылка.АМ_ФорматыМагазинов")	, "АссортиментнаяПодМатрица", "Формат"));    
		МассивРеквизитов.Добавить(Новый РеквизитФормы("Исключено"+ИдентификаторФормата					, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1,0)) , "АссортиментнаяПодМатрица", "Исключено"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("НомерПоПорядку"+ИдентификаторФормата				, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(3,0))	, "АссортиментнаяПодМатрица", "№"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("ПосадочныеМеста"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "Пос. мест"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("МинимальныйЗапас"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "АссортиментнаяПодМатрица", "Мин. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("СтраховойЗапас"+ИдентификаторФормата				, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "Страх. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("МаксимальныйЗапас"+ИдентификаторФормата			, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15,3)), "АссортиментнаяПодМатрица", "Макс. запас"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("ДНС"+ИдентификаторФормата						, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10,0)), "АссортиментнаяПодМатрица", "ДНС"));
		МассивРеквизитов.Добавить(Новый РеквизитФормы("КонтрольМатрицейОтключен"+ИдентификаторФормата	, Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(1,0))	, "АссортиментнаяПодМатрица", "КонтрольМатрицейОтключен"));
	КонецЦикла; 
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
КонецПроцедуры // СоздатьДополнительныеРеквизитыИЭлементыФормы()

// Процедура создает дополнительные элементы формы для дерева распределения.
//
// Параметры:
//  МассивФорматов - Массив - cодержит структуры со свойствами:
//   * АМ_ФорматыМагазинов - СправочникСсылка.АМ_ФорматыМагазинов - ссылка на АМ_ФорматыМагазинов.
//
&НаСервере
Процедура СоздатьДополнительныеЭлементыФормы(МассивФорматов)
		
	ЭлементАссортиментнаяПодМатрица = Элементы.АссортиментнаяПодМатрица;
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект"); 
	
	Для каждого Формат Из МассивФорматов Цикл
		
		ИдентификаторФормата = ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(Формат);
		
		ПараметрыЭлемента = Новый Структура;
		ПараметрыЭлемента.Вставить("Имя", "группа_"+ИдентификаторФормата);
		ПараметрыЭлемента.Вставить("Вид", ВидГруппыФормы.ГруппаКолонок);
		ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ГруппаФормы"));
		ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
		ПараметрыЭлемента.Вставить("Группировка", ГруппировкаКолонок.Горизонтальная);
		ПараметрыЭлемента.Вставить("ОтображатьВШапке", Истина);
		ПараметрыЭлемента.Вставить("Заголовок", Формат);
		ПараметрыЭлемента.Вставить("ФиксацияВТаблице", ФиксацияВТаблице.Нет);
		ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
		ПараметрыЭлемента.Вставить("КартинкаШапки", БиблиотекаКартинок.ЗначокПлюс); 
		ГруппаКолонок = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ЭлементАссортиментнаяПодМатрица);
		
			Подсказка = НСтр("ru = 'Полностью исключено из ассортиментной матрицы'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "Исключено"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТриСостояния", Истина); 
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.Исключено" + ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", Ложь);
			
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("ЦветФона", Новый Цвет(255, 235, 205));
			ПараметрыЭлемента.Вставить("Ширина", 3);
			
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("КартинкаШапки", БиблиотекаКартинок.УдалитьНепосредственно );
			ПараметрыЭлемента.Вставить("ПоложениеЗаголовка  ", ПоложениеЗаголовкаЭлементаФормы.Нет);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));  
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			Элементы["Исключено"+ИдентификаторФормата].УстановитьДействие("ПриИзменении", "АссортиментнаяПодМатрицаИсключеноПриИзменении");
			
			Подсказка = НСтр("ru='Номер по порядку'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "НомерПоПорядку"+ИдентификаторФормата);                                        	
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.НомерПоПорядку"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("РежимРедактирования", РежимРедактированияКолонки.Непосредственно); 
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", Ложь);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);

			Подсказка = НСтр("ru='Посадочные места'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "ПосадочныеМеста"+ИдентификаторФормата);                                        	
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			ПараметрыЭлемента.Вставить("Формат", "ЧН=—"); 
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.ПосадочныеМеста"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РежимРедактирования", РежимРедактированияКолонки.ВходПриВводе); 
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", Ложь);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));    
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			Элементы["ПосадочныеМеста"+ИдентификаторФормата].УстановитьДействие("ОкончаниеВводаТекста", "АссортиментнаяПодМатрицаПосадочныеМестаОкончаниеВводаТекста");

			Подсказка = НСтр("ru='Минимальний запас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "МинимальныйЗапас"+ИдентификаторФормата);                                        	
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			ПараметрыЭлемента.Вставить("Формат", "ЧН=—"); 
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.МинимальныйЗапас"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РежимРедактирования", РежимРедактированияКолонки.Непосредственно); 
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", Ложь);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205)); 
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);

			//Подсказка = НСтр("ru='Страховой Запас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			//ПараметрыЭлемента = Новый Структура;
			//ПараметрыЭлемента.Вставить("Имя", "СтраховойЗапас"+ИдентификаторФормата);                                        	
			//ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			//ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.СтраховойЗапас"+ИдентификаторФормата);
			//ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			//ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			//ПараметрыЭлемента.Вставить("Ширина", 3);
			//ПараметрыЭлемента.Вставить("ТолькоПросмотр", Истина);
			//ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			//ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			//ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			//ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			//ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));
			//ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			//ЭлементАссортиментнаяПодМатрица.УстановитьДействие("ПриИзменении", "Подключаемый_ЭлементСтраховойЗапасПриИзменении");

			Подсказка = НСтр("ru='Максимальный запас'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "МаксимальныйЗапас"+ИдентификаторФормата);                                        	
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			ПараметрыЭлемента.Вставить("Формат", "ЧН=—"); 
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.МаксимальныйЗапас"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("РежимРедактирования", РежимРедактированияКолонки.Непосредственно); 
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", Ложь);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205)); 														   
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);

			Подсказка = НСтр("ru='Дней на складе'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "ДНС"+ИдентификаторФормата);                                        	
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеВвода);
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.ДНС"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", Истина);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205)); 	
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			
			Подсказка = НСтр("ru='Контроль матрицей отключен'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ПараметрыЭлемента = Новый Структура;
			ПараметрыЭлемента.Вставить("Имя", "КонтрольМатрицейОтключен"+ИдентификаторФормата); 
			ПараметрыЭлемента.Вставить("ТриСостояния", Истина); 
			ПараметрыЭлемента.Вставить("Вид", ВидПоляФормы.ПолеФлажка);
			ПараметрыЭлемента.Вставить("ПутьКДанным", "АссортиментнаяПодМатрица.КонтрольМатрицейОтключен"+ИдентификаторФормата);
			ПараметрыЭлемента.Вставить("ТолькоПросмотр", Ложь);
			ПараметрыЭлемента.Вставить("ТипЭлемента", Тип("ПолеФормы"));
			ПараметрыЭлемента.Вставить("РастягиватьПоГоризонтали", Ложь);
			ПараметрыЭлемента.Вставить("ЦветФона", Новый Цвет(255, 235, 205) );
			ПараметрыЭлемента.Вставить("Ширина", 3);
			ПараметрыЭлемента.Вставить("КнопкаВыбора", Ложь);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложениеВШапке", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("ГоризонтальноеПоложение", ГоризонтальноеПоложениеЭлемента.Центр);
			ПараметрыЭлемента.Вставить("Подсказка", Подсказка);
			ПараметрыЭлемента.Вставить("КартинкаШапки", БиблиотекаКартинок.Удалить );
			ПараметрыЭлемента.Вставить("ПоложениеЗаголовка  ", ПоложениеЗаголовкаЭлементаФормы.Нет);
			ПараметрыЭлемента.Вставить("ЦветФонаЗаголовка", Новый Цвет(253, 250, 205));   
			ЭлементКоличество = git_ПереопределениеОбработчиковСервер.ДобавитьЭлементВКоллекциюЭлементовФормы(Элементы, ПараметрыЭлемента, ГруппаКолонок);
			Элементы["КонтрольМатрицейОтключен"+ИдентификаторФормата].УстановитьДействие("ПриИзменении", "АссортиментнаяПодМатрицаКонтрольМатрицейОтключенПриИзменении");

	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
КонецПроцедуры // СоздатьДополнительныеЭлементыФормы()

#КонецОбласти 

#Область УсловноеОформление 
	
&НаСервере
Процедура УсловноеОформлениеДополнительныеРеквизитыФормы(МассивФорматов)

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	МассивИдентификаторов = Новый Массив;
	Для каждого ФорматИзМассива Из МассивФорматов Цикл
		МассивИдентификаторов.Добавить(ОбработкаОбъект.ПолучитьСтрокуИдентификатораСсылки(ФорматИзМассива));	
	КонецЦикла; 
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	Для каждого ИдентификаторСклада Из МассивИдентификаторов Цикл
		
		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина;

			ДобавитьОформляемоеВсеПоляВСрезеФормата(ЭлементУсловногоОформления, ИдентификаторСклада); 

			НовыйЭлементОтбора 				  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.Использование  = Истина;
			НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("АссортиментнаяПодМатрица.Исключено"+ИдентификаторСклада);
			НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭлементОтбора.ПравоеЗначение = 1;
			
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(WindowsШрифты.ШрифтДиалоговИМеню, , , , , , Истина));
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(160, 160, 164));

			
		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина;
		    ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "Исключено"+ИдентификаторСклада);
			
			ГруппаОтбора = ДобавитьЭлементОтбораГруппа(ЭлементУсловногоОформления,ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
			
			НовыйЭлементОтбора 				  = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.Использование  = ИСТИНА;
			НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("АссортиментнаяПодМатрица.Исключено"+ИдентификаторСклада);
			НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭлементОтбора.ПравоеЗначение = 1;
			
			НовыйЭлементОтбора 				  = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.Использование  = ИСТИНА;
			НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("АссортиментнаяПодМатрица.Исключено"+ИдентификаторСклада);
			НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭлементОтбора.ПравоеЗначение = 2;
			
			НовыйЭлементОтбора 				  = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.Использование  = ИСТИНА;
			НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("АссортиментнаяПодМатрица.Исключено"+ИдентификаторСклада);
			НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭлементОтбора.ПравоеЗначение = 0;
			
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста"	, Новый Цвет(0, 0, 0));
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона"	, Новый Цвет(255, 255, 255));
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Шрифт"		, Новый Шрифт());
			
		

		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина;
			ДобавитьОформляемоеВсеПоляВСрезеФормата(ЭлементУсловногоОформления, ИдентификаторСклада); 			

			НовыйЭлементОтбора 				  = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.Использование  = ИСТИНА;
			НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("АссортиментнаяПодМатрица.КонтрольМатрицейОтключен"+ИдентификаторСклада);
			НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭлементОтбора.ПравоеЗначение = 1;
			
			ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста"	, Новый Цвет(160, 160, 164));

		ЭлементУсловногоОформления 				 = УсловноеОформление.Элементы.Добавить();
		ЭлементУсловногоОформления.Использование = Истина;
		
			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "МинимальныйЗапас"+ИдентификаторСклада);
			ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, "МаксимальныйЗапас"+ИдентификаторСклада); 

			ГруппаОтбораИ = ДобавитьЭлементОтбораГруппа(ЭлементУсловногоОформления,ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	        ОтборГруппаЗаполненоЗначение(ГруппаОтбораИ,"АссортиментнаяПодМатрица.ТоварнаяКатегория");
			ОтборГруппаНеЗаполненоЗначение(ГруппаОтбораИ,"АссортиментнаяПодМатрица.Производитель");			
			
			ЭлементОтбора 					= ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("АссортиментнаяПодМатрица.ПосадочныеМеста"+ИдентификаторСклада);
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеРавно;
			ЭлементОтбора.ПравоеЗначение	= 0;

			ЭлементОтбора 					= ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("АссортиментнаяПодМатрица.МинимальныйЗапас"+ИдентификаторСклада);
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение	= 0;

			ЭлементОтбора 					= ГруппаОтбораИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("АссортиментнаяПодМатрица.МаксимальныйЗапас"+ИдентификаторСклада);
			ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.ПравоеЗначение	= 0;
			
		    ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста"	, Новый Цвет(160, 160, 164));		
	
	КонецЦикла; 

КонецПроцедуры // УсловноеОформлениеДополнительныеРеквизитыФормы()

&НаСервере
Процедура ДобавитьОформляемоеПоле(ЭлементУсловногоОформления, Имя)
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных(Имя);
	ОформляемоеПоле.Использование 	= Истина;  
КонецПроцедуры // ДобавитьОформляемоеПоле()

&НаСервере
Процедура ДобавитьОформляемоеВсеПоляВСрезеФормата(ЭлементУсловногоОформления, ИдентификаторСклада)
	
	//ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	//ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("Исключено"+ИдентификаторСклада);
	//ОформляемоеПоле.Использование 	= ИСТИНА;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("НомерПоПорядку"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= ИСТИНА;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("ПосадочныеМеста"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= ИСТИНА;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("МинимальныйЗапас"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= Истина;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("СтраховойЗапас"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= Истина;
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("МаксимальныйЗапас"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= ИСТИНА;   
	
	ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("ДНС"+ИдентификаторСклада);
	ОформляемоеПоле.Использование 	= Истина;
	
	//ОформляемоеПоле 				= ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	//ОформляемоеПоле.Поле 			= Новый ПолеКомпоновкиДанных("КонтрольМатрицейОтключен"+ИдентификаторСклада);
	//ОформляемоеПоле.Использование 	= ИСТИНА; 
КонецПроцедуры // ДобавитьОформляемоеВсеПоляВСрезеФормата()

&НаСервере
Функция ДобавитьЭлементОтбораГруппа(ЭлементУсловногоОформления,ТипГруппыЭлементов)
	ГруппаОтбора 					= ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));	
	ГруппаОтбора.ТипГруппы 			= ТипГруппыЭлементов;	 
	Возврат ГруппаОтбора;

КонецФункции // ДобавитьЭлементОтбораГруппаИЛИ()

&НаСервере
Процедура ОтборГруппаНеЗаполненоЗначение(ГруппаОтбора,ИмяЗначения) 
	
	НовыйЭлементОтбора 				  = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлементОтбора.Использование  = ИСТИНА;
	НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяЗначения);
	НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено; 	

КонецПроцедуры // ОтборГруппаНеЗаполненоЗначение()

&НаСервере
Процедура ОтборЗаполненоЗначение(УО,ИмяЗначения) 
	
	НовыйЭлементОтбора 				  = УО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлементОтбора.Использование  = ИСТИНА;
	НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяЗначения);
	НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено; 	

КонецПроцедуры // ОтборНеЗаполненоЗначение()

&НаСервере
Процедура ОтборГруппаЗаполненоЗначение(ГруппаОтбора,ИмяЗначения)  
	
	НовыйЭлементОтбора 				  = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлементОтбора.Использование  = ИСТИНА;
	НовыйЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяЗначения);
	НовыйЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено; 	

КонецПроцедуры // ОтборГруппаЗаполненоЗначение()

#КонецОбласти


&НаКлиенте
Процедура ОбновитьПодвалАссортиментнойМатрицы()
	
	Если ТекущиеДанныеОпределены(Элементы.АссортиментнаяМатрица) Тогда
		
		СтрокаДерева = АссортиментнаяПодМатрица.НайтиПоИдентификатору(Элементы.АссортиментнаяМатрица.ТекущаяСтрока);
		СтрокаРодитель = СтрокаДерева.ПолучитьРодителя();
		Если СтрокаРодитель = Неопределено Тогда
			ЗаполненностьПосадочныхМест =  Строка(СтрокаДерева.ПосадочныеМеста) + "/" + Строка(СтрокаДерева.ПосадочныеМеста);
		Иначе
			
			СуммаМест = 0;
			Для Каждого Строки Из СтрокаРодитель.ПолучитьЭлементы() Цикл
				Если Строки.Исключено <> 1 И Строки.КонтрольМатрицейОтключен <> 1 Тогда 
					СуммаМест = СуммаМест + Строки.ПосадочныеМеста;
				КонецЕсли;
			КонецЦикла;
			
			ЗаполненностьПосадочныхМест = Строка(СуммаМест) + "/" + Строка(СтрокаРодитель.ПосадочныеМеста);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьПодвалАссортиментнойМатрицы()

&НаКлиенте
Процедура ОбработатьСостояниеТрехПозиционногоФлажкаДерева(ИмяДерева, ИмяПоля)
	
	Если ТекущиеДанныеОпределены(Элементы[ИмяДерева]) Тогда
		
		ИмяКолонки = Элементы[ИмяДерева].ТекущийЭлемент.Имя;
		ИндентификаторФормата = СтрЗаменить(ИмяКолонки,ИмяПоля,"");
		
		ТекущиеДанные = Элементы[ИмяДерева].ТекущиеДанные;
		Если ТекущиеДанные[ИмяКолонки] = 2 Тогда
			ТекущиеДанные[ИмяКолонки] = 0;
		ИначеЕсли ТекущиеДанные[ИмяКолонки] = 0 Тогда
			ТекущиеДанные[ИмяКолонки] = 1;
		КонецЕсли;
		
		Если ТекущиеДанные[ИмяКолонки] = 1 Тогда
			
			ТекущиеДанные["ПосадочныеМеста"+ИндентификаторФормата] 	 = 0;
			ТекущиеДанные["МинимальныйЗапас"+ИндентификаторФормата]  = 0;   
			ТекущиеДанные["СтраховойЗапас"+ИндентификаторФормата] 	 = 0;   
			ТекущиеДанные["МаксимальныйЗапас"+ИндентификаторФормата] = 0;   
			
			РодительСтрокиДерева = ТекущиеДанные.ПолучитьРодителя();
			Пока РодительСтрокиДерева <> Неопределено Цикл
				Если РодительСтрокиДерева[ИмяКолонки]= 0 Тогда
					РодительСтрокиДерева[ИмяКолонки] = 2;
				КонецЕсли;
				РодительСтрокиДерева = РодительСтрокиДерева.ПолучитьРодителя();
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработатьСостояниеТрехПозиционногоФлажка()

&НаКлиенте
Процедура ПоказатьЗначениеКолонки(Элемент, Поле)
	
	ИмяКолонки = СтрЗаменить(Поле.Имя, Элемент.Имя, "");
	Если ТекущиеДанныеОпределены(Элемент) Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные[ИмяКолонки]);		
	КонецЕсли;
	
КонецПроцедуры // ПоказатьЗначениеКолонки()

&НаКлиенте
Функция ТекущиеДанныеОпределены(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ТекущиеДанныеОпределены() 


&НаСервере
Процедура РазвернутьПодчиненнуюГруппуАссортиментнойМатрицы(Идентификатор)
	
	ОбъектОбработки  = РеквизитФормыВЗначение("Объект");
	МассивФорматов  = ОбъектОбработки.ПолучитьФорматыМагазинов();  

	СтрокаДерева = АссортиментнаяПодМатрица.НайтиПоИдентификатору(Идентификатор);
	ПараметрПроизводитель	  = СтрокаДерева.Производитель;
	ПараметрТоварнаяКатегория = СтрокаДерева.ТоварнаяКатегория;
	
	СтрокаЭлементы = СтрокаДерева.ПолучитьЭлементы();
	СтрокаЭлементы.Очистить();
	
	УровеньВложенности = 0;
	Пока СтрокаДерева.ПолучитьРодителя() <> Неопределено Цикл
		СтрокаДерева = СтрокаДерева.ПолучитьРодителя();
		УровеньВложенности = УровеньВложенности + 1;			
	КонецЦикла;
	
	// Получаем уровень вложености "ТоварнаяКатегория"
	Если УровеньВложенности = 0 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории(МассивФорматов);		
	// Получаем уровень вложености "Производители"
	ИначеЕсли УровеньВложенности = 1 Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи(МассивФорматов);	
	Иначе
		Возврат;	
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);   
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Производитель", ПараметрПроизводитель);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ПараметрТоварнаяКатегория);
	Запрос.УстановитьПараметр("ГруппаВидаНоменклатуры", ГруппаВидаНоменклатуры);
	Запрос.УстановитьПараметр("КонецПериода", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("НачалоПериодаМесяц", НачалоДня(ТекущаяДатаСеанса()) - 31 * 86400);
	Запрос.УстановитьПараметр("НоменклатураВладелец", НоменклатураВладелец);
	
	Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл  		
		ИдентификаторФормата	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);
		Запрос.УстановитьПараметр("Формат"+ИдентификаторФормата, ФорматМагазина);  							
	КонецЦикла; 
	

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		//Если Выборка.ДанныеДерева = "<Производитель не задан>"  Тогда
		//	Продолжить;
		//КонецЕсли;
		//
		//Если Выборка.ДанныеДерева = "<Товарная категория не задана>"  Тогда
		//	Продолжить;
		//КонецЕсли;
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если УровеньВложенности <> 1 Тогда
			НоваяСтрока.ПолучитьЭлементы().Добавить();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // РазвернутьПодчиненуюГруппуАссортиментнойМатрицы()


&НаСервере
Процедура ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей()
	
	АссортиментнаяПодМатрица.ПолучитьЭлементы().Очистить();
	
	ОбъектОбработки  = РеквизитФормыВЗначение("Объект");
	МассивФорматов  = ОбъектОбработки.ПолучитьФорматыМагазинов();  

	СтрокаЭлементы = АссортиментнаяПодМатрица.ПолучитьЭлементы();
	
	Запрос = Новый Запрос;	  	
	Запрос.Текст = ПолучитьТекстЗапросаАссортиментнойМатрицыКорень(МассивФорматов);
	Запрос.УстановитьПараметр("НоменклатураВладелец", НоменклатураВладелец);
	Запрос.УстановитьПараметр("ГруппаВидаНоменклатуры", ГруппаВидаНоменклатуры);
	
	Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл  		
		ИдентификаторФормата	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);
		Запрос.УстановитьПараметр("Формат"+ИдентификаторФормата, ФорматМагазина);  							
	КонецЦикла; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = СтрокаЭлементы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если ПустаяСтрока(Выборка.ДанныеРодителя) ИЛИ Выборка.ДанныеДерева = "<Товарная категория не задана>"  Тогда
			НоваяСтрока.ДанныеДерева = Выборка.ДанныеДерева;	
		Иначе
			НоваяСтрока.ДанныеДерева = Выборка.ДанныеРодителя + " / " + Выборка.ДанныеДерева;
		КонецЕсли;
		НоваяСтрока.ПолучитьЭлементы().Добавить();   		
	КонецЦикла;    		
КонецПроцедуры // ОбновитьОтображениеСтраницыУправлениеАссортиментнойМатрицей()


&НаСервере
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыКорень(МассивФорматов)
	
	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");

	ТекстЗапроса = "ВЫБРАТЬ
		|	АМ_ФорматыМагазиновСклады.Ссылка КАК Формат,
		|	АМ_ФорматыМагазиновСклады.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыФорматов
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК АМ_ФорматыМагазиновСклады
		|
		|ГДЕ
		|	АМ_ФорматыМагазиновСклады.Ссылка.Активен = ИСТИНА
		|	И АМ_ФорматыМагазиновСклады.Ссылка.ПометкаУдаления = ЛОЖЬ
		|  
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Склад
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПД_ПривязкиАналогиНоменклатуры.АналогНоменклатуры КАК АналогНоменклатуры,
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура
		|ПОМЕСТИТЬ ПД_Аналоги
		|ИЗ
		|	РегистрСведений.ПД_АналогиНоменклатуры КАК ПД_ПривязкиАналогиНоменклатуры
		|ГДЕ
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура = &НоменклатураВладелец
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналогНоменклатуры
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.    
		|ВЫБРАТЬ
		|	ПД_НаборПодпихни.АналогНоменклатуры,
		|	ПД_НаборПодпихни.Подпихня КАК Подпихня,
		|	ПД_НаборПодпихни.Номенклатура КАК Номенклатура,
		|	ПД_НаборПодпихни.Ответственный
		|ПОМЕСТИТЬ ПД_Подпихня
		|ИЗ
		|	ПД_Аналоги КАК ПД_Аналоги
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПД_НаборПодпихни КАК ПД_НаборПодпихни
		|ПО ПД_Аналоги.АналогНоменклатуры = ПД_НаборПодпихни.АналогНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подпихня,
		|	Номенклатура
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ
		|	ПД_Подпихня.Номенклатура КАК Номенклатура,
		|	ПД_Подпихня.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
		|ПОМЕСТИТЬ ПД_Номенклатура
		|ИЗ
		|	ПД_Подпихня КАК ПД_Подпихня
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПД_ИсключениеПодпихни КАК ПД_ИсключениеПодпихни
		|ПО ПД_Подпихня.Подпихня = ПД_ИсключениеПодпихни.Подпихня
		|И ПД_Подпихня.Номенклатура = ПД_ИсключениеПодпихни.Номенклатура
		|
		|ГДЕ
		|	ПД_ИсключениеПодпихни.Номенклатура ЕСТЬ NULL 
		|	И	ВЫБОР
		|		КОГДА &ГруппаВидаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ПД_Подпихня.Номенклатура.ВидНоменклатуры В ИЕРАРХИИ(&ГруппаВидаНоменклатуры)
		|	КОНЕЦ 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.  
		|ВЫБРАТЬ
		|	ПД_Номенклатура.ВидНоменклатуры,
		|	ПД_Номенклатура.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|  	ПД_Номенклатура.Номенклатура.ТоварнаяКатегория.Наименование КАК ДанныеДерева,
		|	ПРЕДСТАВЛЕНИЕ(ПД_Номенклатура.ВидНоменклатуры) КАК ДанныеРодителя		
		|ПОМЕСТИТЬ Кеш_Номенклатура
		|ИЗ
		|	ПД_Номенклатура КАК ПД_Номенклатура
		|		
		|ГДЕ
		|   ПД_Номенклатура.Номенклатура.ТоварнаяКатегория <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)  		
		|ОБЪЕДИНИТЬ
		|   
		|ВЫБРАТЬ
		|	ПД_Номенклатура.ВидНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка),
		|	""<Товарная категория не задана>"",
		|	ПРЕДСТАВЛЕНИЕ(ПД_Номенклатура.ВидНоменклатуры)	
		|ИЗ
		|	ПД_Номенклатура КАК ПД_Номенклатура
		|    
		|ГДЕ
		|	 ПД_Номенклатура.Номенклатура.ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|    ТоварнаяКатегория  
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.  
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	Кеш_Номенклатура.ДанныеДерева КАК ДанныеДерева,
		|	Кеш_Номенклатура.ДанныеРодителя КАК ДанныеРодителя,
		// Пример - &Формат_Идентификатор
		|	%1 
		|	Кеш_Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка) КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Кеш_Номенклатура КАК Кеш_Номенклатура
		|		
		|ИНДЕКСИРОВАТЬ ПО
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		// Пример - КешДанныхДляВывода.Формат_Идентификатор   
		|	%4 		
		|	КешДанныхДляВывода.ДанныеДерева,
		|	КешДанныхДляВывода.ДанныеРодителя,
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
	 	//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 	КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 	КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 	КАК ПредИсключено" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК ПредКонтрольМатрицейОтключен" + ИдентификаторСклада;
		|   %2
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|	
		//ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
		//			,Владелец = &НоменклатураВладелец
		//			И (Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
		//				(ВЫБРАТЬ
		//					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
		//					КешДанныхДляВывода.ТоварнаяКатегория,
		//					КешДанныхДляВывода.Производитель,
		//					КешДанныхДляВывода.Номенклатура
		//				ИЗ
		//					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
		//ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
		//И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
		//И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
		//И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура 
		| %3
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	 КешДанныхДляВывода.ТоварнаяКатегория 
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Формат КАК Формат,
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Исключено
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
		|			,
		|			Владелец = &НоменклатураВладелец
		|				И ТоварнаяКатегория В
		|					(ВЫБРАТЬ
		|						КешДанныхДляВывода.ТоварнаяКатегория
		|					ИЗ
		|						КешДанныхДляВывода)) КАК АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних
		|ГДЕ
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Исключено = ИСТИНА

		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	ТоварнаяКатегория
		|;

		////////////////////////////////////////////////////////////////////////////////////////////
		// 8.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Формат КАК Формат,
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.КонтрольМатрицейОтключен
		|ПОМЕСТИТЬ КешКонтрольОтключенВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
		|			,
		|			Владелец = &НоменклатураВладелец
		|				И ТоварнаяКатегория В
		|					(ВЫБРАТЬ
		|						КешДанныхДляВывода.ТоварнаяКатегория
		|					ИЗ
		|						КешДанныхДляВывода)) КАК АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних
		|ГДЕ
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.КонтрольМатрицейОтключен = ИСТИНА
		|     
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 9.		
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладеТК	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Кеш_Номенклатура КАК Кеш_Номенклатура
		|ПО  Кеш_Номенклатура.ТоварнаяКатегория = АУН.Номенклатура.ТоварнаяКатегория
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	ТоварнаяКатегория
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 10.
		|ВЫБРАТЬ
		|	СкладыФорматов.Формат КАК Формат,
		|	ДнейНаСкладеТК.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СРЕДНЕЕ(ДнейНаСкладеТК.ДНС) КАК ДНС
		|ПОМЕСТИТЬ ДНСПоФорматам
		|ИЗ
		|   ДнейНаСкладеТК КАК ДнейНаСкладеТК
		|	
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ  СкладыФорматов КАК СкладыФорматов
		|ПО ДнейНаСкладеТК.Склад = СкладыФорматов.Склад
		|    
		|СГРУППИРОВАТЬ ПО
		|	СкладыФорматов.Формат,
		|	ДнейНаСкладеТК.ТоварнаяКатегория
		|   
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	ТоварнаяКатегория
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 11.  
		|ВЫБРАТЬ 
		|	АМ_УправлениеАссортиментнойМатрицей.*
		//ВЫБОР
		//	КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредИсключено"+ИдентификаторСклада+", Ложь) = Истина
		//		ТОГДА 1
		//	КОГДА IsNull(КешИсключенияВПодчиненных"+ИдентификаторСклада+".Исключено, Ложь) = Истина
		//		ТОГДА 2
		//	ИНАЧЕ 0
		//КОНЕЦ КАК Исключено"+ИдентификаторСклада+",
		//ВЫБОР
		//	КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредКонтрольМатрицейОтключен"+ИдентификаторСклада+", Ложь) = Истина
		//		ТОГДА 1
		//	КОГДА IsNull(КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".КонтрольМатрицейОтключен, Ложь) = Истина
		//		ТОГДА 2
		//	ИНАЧЕ 0
		//КОНЕЦ КАК КонтрольМатрицейОтключен"+ИдентификаторСклада+",
		//ISNULL(ДНСПоФорматам"+ИдентификаторСклада+".ДНС,0) 			КАК ДНС" + ИдентификаторСклада;
		|   %8
		|ИЗ
		|	АМ_УправлениеАссортиментнойМатрицей КАК АМ_УправлениеАссортиментнойМатрицей
		|
		|
		//ЛЕВОЕ СОЕДИНЕНИЕ ДНСПоФорматам КАК ДНСПоФорматам"+ИдентификаторСклада+"
		//ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= ДНСПоФорматам"+ИдентификаторСклада+".Формат
		//И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = ДНСПоФорматам"+ИдентификаторСклада+".ТоварнаяКатегория

		//ЛЕВОЕ СОЕДИНЕНИЕ КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных"+ИдентификаторСклада+"
		//ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= КешИсключенияВПодчиненных"+ИдентификаторСклада+".Формат
		//И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = КешИсключенияВПодчиненных"+ИдентификаторСклада+".ТоварнаяКатегория

		//ЛЕВОЕ СОЕДИНЕНИЕ КешКонтрольОтключенВПодчиненных КАК КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+"
		//ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".Формат
		//И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".ТоварнаяКатегория 
		|  %9
		|
		|УПОРЯДОЧИТЬ ПО
		|	Выбор 
		|		КОГДА ДанныеДерева =""<Товарная категория не задана>"" ТОГДА
		|	     	""яяяяяяяяяяяя""
		|		Иначе ДанныеДерева
		|	КОНЕЦ 
		|;
		|Уничтожить СкладыФорматов
		|;
		|Уничтожить ПД_Аналоги
		|;
		|Уничтожить ПД_Подпихня
		|;
		|Уничтожить ПД_Номенклатура
		|;
		|Уничтожить Кеш_Номенклатура
		|;
		|Уничтожить КешДанныхДляВывода		
		|;
		|Уничтожить КешИсключенияВПодчиненных		
		|;
		|Уничтожить ДнейНаСкладеТК		
		|;
		|Уничтожить ДНСПоФорматам
		|";

		
		#Область МассивФорматовМагазина
		ТЗВыборкаПоФорматам 					= ""; //%1
		ТЗАсортиментПоФорматам 					= ""; //%2
		ТЗСоединенияАсортиментаПоФорматам 		= ""; //%3
		ТЗВыборкаПоФорматамДляВывода 			= ""; //%4
		ТЗАсортиментаМатрицаПоИсключению		= ""; //%6
		ТЗСоединенияАсортиментаПоИсключению		= ""; //%7
		ТЗАсортиментаПоВсехФорматах				= ""; //%8
		ТЗСоединенияАсортиментПоВсехФорматах	= ""; //%9

		ТЗСоединенияПоОстаткамКоличестваАртикулов= ""; //%СоединенияПоОстаткамКоличестваАртикулов%

		Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл
			ИдентификаторСклада	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);
									
			ТЗВыборкаПоФорматам =  ТЗВыборкаПоФорматам	+"	
									|	&Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
									
			ТЗАсортиментПоФорматам =  ТЗАсортиментПоФорматам	+"
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 			КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) 			КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 			КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) 		КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 			КАК ПредИсключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК ПредКонтрольМатрицейОтключен" + ИдентификаторСклада;

			ТЗСоединенияАсортиментаПоФорматам =  ТЗСоединенияАсортиментаПоФорматам	+ "
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,Владелец = &НоменклатураВладелец
									|			И (Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория,
									|					КешДанныхДляВывода.Производитель,
									|					КешДанныхДляВывода.Номенклатура
									|				ИЗ
									|					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";   
			
			ТЗВыборкаПоФорматамДляВывода =  ТЗВыборкаПоФорматамДляВывода	+"	
									|	КешДанныхДляВывода.Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";   						
						
			ТЗАсортиментаМатрицаПоИсключению =  ТЗАсортиментаМатрицаПоИсключению	+ "
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 				КАК Исключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ) КАК КонтрольМатрицейОтключен" + ИдентификаторСклада;
									
			ТЗСоединенияАсортиментаПоИсключению =  ТЗСоединенияАсортиментаПоИсключению	+"
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			, Владелец  = &НоменклатураВладелец
									|			И (Формат, ТоварнаяКатегория) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория
									|				ИЗ
									|					КешДанныхДляВывода)
									|			И Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";
									


			ТЗАсортиментаПоВсехФорматах = ТЗАсортиментаПоВсехФорматах +"
				                    |,
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредИсключено"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 1
									|		КОГДА IsNull(КешИсключенияВПодчиненных"+ИдентификаторСклада+".Исключено, Ложь) = Истина
									|			ТОГДА 2
									|		ИНАЧЕ 0
									|	КОНЕЦ КАК Исключено"+ИдентификаторСклада+",
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредКонтрольМатрицейОтключен"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 1
									|		КОГДА IsNull(КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".КонтрольМатрицейОтключен, Ложь) = Истина
									|			ТОГДА 2
									|		ИНАЧЕ 0
									|	КОНЕЦ КАК КонтрольМатрицейОтключен"+ИдентификаторСклада+",
									|	ISNULL(ДНСПоФорматам"+ИдентификаторСклада+".ДНС,0) 			КАК ДНС" + ИдентификаторСклада; 

			ТЗСоединенияАсортиментПоВсехФорматах = ТЗСоединенияАсортиментПоВсехФорматах+"
									|ЛЕВОЕ СОЕДИНЕНИЕ ДНСПоФорматам КАК ДНСПоФорматам"+ИдентификаторСклада+"
									|ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= ДНСПоФорматам"+ИдентификаторСклада+".Формат
									|И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = ДНСПоФорматам"+ИдентификаторСклада+".ТоварнаяКатегория
									|
									|ЛЕВОЕ СОЕДИНЕНИЕ КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных"+ИдентификаторСклада+"
									|ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= КешИсключенияВПодчиненных"+ИдентификаторСклада+".Формат
									|И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = КешИсключенияВПодчиненных"+ИдентификаторСклада+".ТоварнаяКатегория
									|
									|ЛЕВОЕ СОЕДИНЕНИЕ КешКонтрольОтключенВПодчиненных КАК КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+"
									|ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".Формат
									|И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".ТоварнаяКатегория    
									|";	
	

		КонецЦикла;
				
		ТЗСоединенияАсортиментаПоФорматам = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,
																				,ТЗАсортиментаМатрицаПоИсключению
																				,ТЗСоединенияАсортиментаПоИсключению
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				); 						
			
		#КонецОбласти
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,
																				,ТЗАсортиментаМатрицаПоИсключению
																				,ТЗСоединенияАсортиментаПоИсключению
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				);

		
			
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыКорень()


&НаСервере
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории(МассивФорматов)

	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");
	
	ТекстЗапроса = "ВЫБРАТЬ
		|	АМ_ФорматыМагазиновСклады.Ссылка КАК Формат,
		|	АМ_ФорматыМагазиновСклады.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыФорматов
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК АМ_ФорматыМагазиновСклады
		|
		|ГДЕ
		|	АМ_ФорматыМагазиновСклады.Ссылка.Активен = ИСТИНА
		|	И АМ_ФорматыМагазиновСклады.Ссылка.ПометкаУдаления = ЛОЖЬ
		|  
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Склад
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПД_ПривязкиАналогиНоменклатуры.АналогНоменклатуры КАК АналогНоменклатуры,
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура
		|ПОМЕСТИТЬ ПД_Аналоги
		|ИЗ
		|	РегистрСведений.ПД_АналогиНоменклатуры КАК ПД_ПривязкиАналогиНоменклатуры
		|ГДЕ
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура = &НоменклатураВладелец
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналогНоменклатуры
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.    
		|ВЫБРАТЬ
		|	ПД_НаборПодпихни.АналогНоменклатуры,
		|	ПД_НаборПодпихни.Подпихня КАК Подпихня,
		|	ПД_НаборПодпихни.Номенклатура КАК Номенклатура,
		|	ПД_НаборПодпихни.Ответственный
		|ПОМЕСТИТЬ ПД_Подпихня
		|ИЗ
		|	ПД_Аналоги КАК ПД_Аналоги
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПД_НаборПодпихни КАК ПД_НаборПодпихни
		|ПО ПД_Аналоги.АналогНоменклатуры = ПД_НаборПодпихни.АналогНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подпихня,
		|	Номенклатура
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ
		|	ПД_Подпихня.Номенклатура 					КАК Номенклатура,
		|	ПД_Подпихня.Номенклатура.ВидНоменклатуры 	КАК ВидНоменклатуры,
		|	ПД_Подпихня.Номенклатура.Производитель 		КАК Производитель
		|ПОМЕСТИТЬ ПД_Номенклатура
		|ИЗ
		|	ПД_Подпихня КАК ПД_Подпихня
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПД_ИсключениеПодпихни КАК ПД_ИсключениеПодпихни
		|ПО ПД_Подпихня.Подпихня = ПД_ИсключениеПодпихни.Подпихня
		|И ПД_Подпихня.Номенклатура = ПД_ИсключениеПодпихни.Номенклатура
		|
		|ГДЕ
		|	ПД_ИсключениеПодпихни.Номенклатура ЕСТЬ NULL 
		|	И	ВЫБОР
		|		КОГДА &ГруппаВидаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ПД_Подпихня.Номенклатура.ВидНоменклатуры В ИЕРАРХИИ(&ГруппаВидаНоменклатуры)
		|	КОНЕЦ 
		|   И	ПД_Подпихня.Номенклатура.ТоварнаяКатегория = &ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;   
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.  
		|ВЫБРАТЬ
		|	&ТоварнаяКатегория					КАК ТоварнаяКатегория,
		|   Производители.Ссылка 				КАК Производитель,
		|	ПОДСТРОКА(Производители.Ссылка.Наименование, 0, 200) КАК ДанныеДерева		
		|ПОМЕСТИТЬ Кеш_Номенклатура
		|ИЗ
		|	ПД_Номенклатура КАК ПД_Номенклатура
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Производители КАК Производители
		|ПО	ПД_Номенклатура.Производитель = Производители.Ссылка
		|
		|ГДЕ
		|	Производители.ПометкаУдаления = Ложь  
		|   
		|ОБЪЕДИНИТЬ
		|   
		|ВЫБРАТЬ
		|	&ТоварнаяКатегория,
		|   ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка),
		|	ПОДСТРОКА(""<Производитель не задан>"", 0, 200)
		|ИЗ
		|	ПД_Номенклатура КАК ПД_Номенклатура
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Производители КАК Производители
		|ПО	ПД_Номенклатура.Производитель = Производители.Ссылка
		|И	Производители.ПометкаУдаления = Ложь 
		|    
		|ГДЕ
		|	Производители.Ссылка ЕСТЬ NULL
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТоварнаяКатегория, Производитель
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.  
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Кеш_Номенклатура.ДанныеДерева КАК ДанныеДерева,
		//&Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ","
		|	%1
		|	Кеш_Номенклатура.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	Кеш_Номенклатура.Производитель КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	Кеш_Номенклатура КАК Кеш_Номенклатура
		|		
		|ИНДЕКСИРОВАТЬ ПО
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		// КешДанныхДляВывода.Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",
		|	%4
		|	КешДанныхДляВывода.ДанныеДерева,
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 			КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) 			КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 			КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) 		КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 			КАК ПредИсключено" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК ПредКонтрольМатрицейОтключен" + ИдентификаторСклада
		|   %2
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|	
		//ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
		//			,Владелец = &НоменклатураВладелец
		//			И (Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
		//				(ВЫБРАТЬ
		//					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
		//					КешДанныхДляВывода.ТоварнаяКатегория,
		//					КешДанныхДляВывода.Производитель,
		//					КешДанныхДляВывода.Номенклатура
		//				ИЗ
		//					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
		//ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
		//И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
		//И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
		//И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
		| %3
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	 КешДанныхДляВывода.ТоварнаяКатегория 
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 8.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Формат КАК Формат,
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Производитель КАК Производитель,
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Исключено
		|ПОМЕСТИТЬ КешИсключенияВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
		|			,
		|			Владелец = &НоменклатураВладелец
		|				И (ТоварнаяКатегория, Производитель) В
		|					(ВЫБРАТЬ
		|						КешДанныхДляВывода.ТоварнаяКатегория,
		|                       КешДанныхДляВывода.Производитель
		|					ИЗ
		|						КешДанныхДляВывода)) КАК АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних
		|ГДЕ
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Исключено = ИСТИНА

		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 9.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Формат КАК Формат,
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Производитель КАК Производитель,
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.КонтрольМатрицейОтключен
		|ПОМЕСТИТЬ КешКонтрольОтключенВПодчиненных
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
		|			,
		|			Владелец = &НоменклатураВладелец
		|				И (ТоварнаяКатегория, Производитель) В
		|					(ВЫБРАТЬ
		|						КешДанныхДляВывода.ТоварнаяКатегория,
		|                       КешДанныхДляВывода.Производитель
		|					ИЗ
		|						КешДанныхДляВывода)) КАК АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних
		|ГДЕ
		|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.КонтрольМатрицейОтключен = ИСТИНА
		|     
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	ТоварнаяКатегория,
		|	Производитель
		|;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 10.		
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура.Производитель КАК Производитель,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладеТК	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Кеш_Номенклатура КАК Кеш_Номенклатура
		|ПО  Кеш_Номенклатура.Производитель = АУН.Номенклатура.Производитель
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура.Производитель 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	Производитель
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		//11.
		|ВЫБРАТЬ
		|	СкладыФорматов.Формат КАК Формат,
		|	ДнейНаСкладеТК.Производитель КАК Производитель,
		|	СРЕДНЕЕ(ДнейНаСкладеТК.ДНС) КАК ДНС
		|ПОМЕСТИТЬ ДНСПоФорматам
		|ИЗ
		|   ДнейНаСкладеТК КАК ДнейНаСкладеТК
		|	
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ  СкладыФорматов КАК СкладыФорматов
		|ПО ДнейНаСкладеТК.Склад = СкладыФорматов.Склад
		|    
		|СГРУППИРОВАТЬ ПО
		|	Формат,
		|	Производитель
		|   
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Производитель
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 12.  
		|ВЫБРАТЬ
		|	АМ_УправлениеАссортиментнойМатрицей.*
		//ВЫБОР
		//	КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредИсключено"+ИдентификаторСклада+", Ложь) = Истина
		//		ТОГДА 1
		//	КОГДА IsNull(КешИсключенияВПодчиненных"+ИдентификаторСклада+".Исключено, Ложь) = Истина
		//		ТОГДА 2
		//	ИНАЧЕ 0
		//КОНЕЦ КАК Исключено"+ИдентификаторСклада+",
		//ВЫБОР
		//	КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредКонтрольМатрицейОтключен"+ИдентификаторСклада+", Ложь) = Истина
		//		ТОГДА 1
		//	КОГДА IsNull(КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".КонтрольМатрицейОтключен, Ложь) = Истина
		//		ТОГДА 2
		//	ИНАЧЕ 0
		//КОНЕЦ КАК КонтрольМатрицейОтключен"+ИдентификаторСклада+",
		//ISNULL(ДНСПоФорматам"+ИдентификаторСклада+".ДНС,0) 			КАК ДНС" + ИдентификаторСклада
		|   %8
		|ИЗ
		|	АМ_УправлениеАссортиментнойМатрицей КАК АМ_УправлениеАссортиментнойМатрицей
		|
		|
		|
		//ЛЕВОЕ СОЕДИНЕНИЕ ДНСПоФорматам КАК ДНСПоФорматам"+ИдентификаторСклада+"
		//ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= ДНСПоФорматам"+ИдентификаторСклада+".Формат
		//И АМ_УправлениеАссортиментнойМатрицей.Производитель = ДНСПоФорматам"+ИдентификаторСклада+".Производитель

		//ЛЕВОЕ СОЕДИНЕНИЕ КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных"+ИдентификаторСклада+"
		//ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= КешИсключенияВПодчиненных"+ИдентификаторСклада+".Формат
		//И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = КешИсключенияВПодчиненных"+ИдентификаторСклада+".ТоварнаяКатегория
		//И АМ_УправлениеАссортиментнойМатрицей.Производитель = КешИсключенияВПодчиненных"+ИдентификаторСклада+".Производитель

		//ЛЕВОЕ СОЕДИНЕНИЕ КешКонтрольОтключенВПодчиненных КАК КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+"
		//ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".Формат
		//И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".ТоварнаяКатегория
		//И АМ_УправлениеАссортиментнойМатрицей.Производитель = КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".Производитель 
		|  %9
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДанныеДерева УБЫВ
		|	
		|;
		|Уничтожить СкладыФорматов
		|;
		|Уничтожить ПД_Аналоги
		|;
		|Уничтожить ПД_Подпихня
		|;
		|Уничтожить ПД_Номенклатура
		|;
		|Уничтожить КешДанныхДляВывода	
		|;
		|Уничтожить АМ_УправлениеАссортиментнойМатрицей	
		|;
		|Уничтожить ДнейНаСкладеТК	
		|;
		|Уничтожить ДНСПоФорматам
		|";     
			
		#Область МассивФорматовМагазина
		ТЗВыборкаПоФорматам 					= ""; //%1
		ТЗАсортиментПоФорматам 					= ""; //%2
		ТЗСоединенияАсортиментаПоФорматам 		= ""; //%3
		ТЗВыборкаПоФорматамДляВывода 			= ""; //%4
		ТЗВыборкаПоФорматамДляИндексации 		= ""; //%5   
		ТЗАсортиментаМатрицаПоИсключению		= ""; //%6
		ТЗСоединенияАсортиментаПоИсключению		= ""; //%7
		ТЗАсортиментаПоВсехФорматах				= ""; //%8
		ТЗСоединенияАсортиментПоВсехФорматах	= ""; //%9
		ТЗКоличествоАртикулов                   = ""; //%КоличествоАртикулов%
		ТЗСоединенияПоОстаткамКоличестваАртикулов= ""; //%СоединенияПоОстаткамКоличестваАртикулов%

		Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл
			ИдентификаторСклада	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);

			ТЗВыборкаПоФорматам =  ТЗВыборкаПоФорматам	+"	
									|	&Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
									
			ТЗАсортиментПоФорматам =  ТЗАсортиментПоФорматам	+"
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 			КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) 			КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 			КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) 		КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 			КАК ПредИсключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК ПредКонтрольМатрицейОтключен" + ИдентификаторСклада;

			ТЗСоединенияАсортиментаПоФорматам =  ТЗСоединенияАсортиментаПоФорматам	+ "
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,Владелец = &НоменклатураВладелец
									|			И (Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория,
									|					КешДанныхДляВывода.Производитель,
									|					КешДанныхДляВывода.Номенклатура
									|				ИЗ
									|					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";   
			
			ТЗВыборкаПоФорматамДляВывода =  ТЗВыборкаПоФорматамДляВывода	+"	
									|	КешДанныхДляВывода.Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
						
			ТЗВыборкаПоФорматамДляИндексации =  ТЗВыборкаПоФорматамДляИндексации	+"	
									|	Формат"+ИдентификаторСклада+",";
									
			ТЗАсортиментаМатрицаПоИсключению =  ТЗАсортиментаМатрицаПоИсключению	+ "
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 				КАК Исключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ) КАК КонтрольМатрицейОтключен" + ИдентификаторСклада;
									
			ТЗСоединенияАсортиментаПоИсключению =  ТЗСоединенияАсортиментаПоИсключению	+"
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			,Владелец = &НоменклатураВладелец
									|			И (Формат, ТоварнаяКатегория,Производитель) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|                   КешДанныхДляВывода.ТоварнаяКатегория,
									|					КешДанныхДляВывода.Производитель
									|				ИЗ
									|					КешДанныхДляВывода)
									|			) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";
									


			ТЗАсортиментаПоВсехФорматах = ТЗАсортиментаПоВсехФорматах +"
				                    |,
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредИсключено"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 1
									|		КОГДА IsNull(КешИсключенияВПодчиненных"+ИдентификаторСклада+".Исключено, Ложь) = Истина
									|			ТОГДА 2
									|		ИНАЧЕ 0
									|	КОНЕЦ КАК Исключено"+ИдентификаторСклада+",
									|	ВЫБОР
									|		КОГДА IsNull(АМ_УправлениеАссортиментнойМатрицей.ПредКонтрольМатрицейОтключен"+ИдентификаторСклада+", Ложь) = Истина
									|			ТОГДА 1
									|		КОГДА IsNull(КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".КонтрольМатрицейОтключен, Ложь) = Истина
									|			ТОГДА 2
									|		ИНАЧЕ 0
									|	КОНЕЦ КАК КонтрольМатрицейОтключен"+ИдентификаторСклада+",
									|	ISNULL(ДНСПоФорматам"+ИдентификаторСклада+".ДНС,0) 			КАК ДНС" + ИдентификаторСклада; 

			ТЗСоединенияАсортиментПоВсехФорматах = ТЗСоединенияАсортиментПоВсехФорматах+"
									|ЛЕВОЕ СОЕДИНЕНИЕ ДНСПоФорматам КАК ДНСПоФорматам"+ИдентификаторСклада+"
									|ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= ДНСПоФорматам"+ИдентификаторСклада+".Формат
									|И АМ_УправлениеАссортиментнойМатрицей.Производитель = ДНСПоФорматам"+ИдентификаторСклада+".Производитель
									|
									|ЛЕВОЕ СОЕДИНЕНИЕ КешИсключенияВПодчиненных КАК КешИсключенияВПодчиненных"+ИдентификаторСклада+"
									|ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= КешИсключенияВПодчиненных"+ИдентификаторСклада+".Формат
									|И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = КешИсключенияВПодчиненных"+ИдентификаторСклада+".ТоварнаяКатегория
									|И АМ_УправлениеАссортиментнойМатрицей.Производитель = КешИсключенияВПодчиненных"+ИдентификаторСклада+".Производитель
									|
									|ЛЕВОЕ СОЕДИНЕНИЕ КешКонтрольОтключенВПодчиненных КАК КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+"
									|ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".Формат
									|И АМ_УправлениеАссортиментнойМатрицей.ТоварнаяКатегория = КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".ТоварнаяКатегория
									|И АМ_УправлениеАссортиментнойМатрицей.Производитель = КешКонтрольОтключенВПодчиненных"+ИдентификаторСклада+".Производитель    
									|";	
	

		КонецЦикла;
				
		ТЗСоединенияАсортиментаПоФорматам = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаМатрицаПоИсключению
																				,ТЗСоединенияАсортиментаПоИсключению
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				); 						
			
		#КонецОбласти
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаМатрицаПоИсключению
																				,ТЗСоединенияАсортиментаПоИсключению
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				);

	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыПоТоварнойКатегории()


&НаСервере
Функция ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи(МассивФорматов)

	
	ОбъектОбработки  			   = РеквизитФормыВЗначение("Объект");
	
	ТекстЗапроса = "ВЫБРАТЬ
		|	АМ_ФорматыМагазиновСклады.Ссылка КАК Формат,
		|	АМ_ФорматыМагазиновСклады.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыФорматов
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК АМ_ФорматыМагазиновСклады
		|
		|ГДЕ
		|	АМ_ФорматыМагазиновСклады.Ссылка.Активен = ИСТИНА
		|	И АМ_ФорматыМагазиновСклады.Ссылка.ПометкаУдаления = ЛОЖЬ
		|  
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Склад
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 1.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПД_ПривязкиАналогиНоменклатуры.АналогНоменклатуры КАК АналогНоменклатуры,
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура
		|ПОМЕСТИТЬ ПД_Аналоги
		|ИЗ
		|	РегистрСведений.ПД_АналогиНоменклатуры КАК ПД_ПривязкиАналогиНоменклатуры
		|ГДЕ
		|	ПД_ПривязкиАналогиНоменклатуры.Номенклатура = &НоменклатураВладелец
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	АналогНоменклатуры
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 2.    
		|ВЫБРАТЬ
		|	ПД_НаборПодпихни.АналогНоменклатуры,
		|	ПД_НаборПодпихни.Подпихня КАК Подпихня,
		|	ПД_НаборПодпихни.Номенклатура КАК Номенклатура,
		|	ПД_НаборПодпихни.Ответственный
		|ПОМЕСТИТЬ ПД_Подпихня
		|ИЗ
		|	ПД_Аналоги КАК ПД_Аналоги
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПД_НаборПодпихни КАК ПД_НаборПодпихни
		|ПО ПД_Аналоги.АналогНоменклатуры = ПД_НаборПодпихни.АналогНоменклатуры
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Подпихня,
		|	Номенклатура
		|;
		|
		////////////////////////////////////////////////////////////////////////////////////////////
		// 3.
		|ВЫБРАТЬ  РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПРЕДСТАВЛЕНИЕ(ПД_Подпихня.Номенклатура)		КАК ДанныеДерева,
		//	&Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ","
		|	%1  
		|	ПД_Подпихня.Номенклатура 					КАК Номенклатура,
		|	ПД_Подпихня.Номенклатура.Производитель 		КАК Производитель,
		|	ПД_Подпихня.Номенклатура.ТоварнаяКатегория 	КАК ТоварнаяКатегория 
		|ПОМЕСТИТЬ КешДанныхДляВывода
		|ИЗ
		|	ПД_Подпихня КАК ПД_Подпихня
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПД_ИсключениеПодпихни КАК ПД_ИсключениеПодпихни
		|ПО ПД_Подпихня.Подпихня = ПД_ИсключениеПодпихни.Подпихня
		|И ПД_Подпихня.Номенклатура = ПД_ИсключениеПодпихни.Номенклатура
		|
		|ГДЕ
		|	ПД_ИсключениеПодпихни.Номенклатура ЕСТЬ NULL 
		|	И	ВЫБОР
		|		КОГДА &ГруппаВидаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ПД_Подпихня.Номенклатура.ВидНоменклатуры В ИЕРАРХИИ(&ГруппаВидаНоменклатуры)
		|	КОНЕЦ 
		|   И	ПД_Подпихня.Номенклатура.ТоварнаяКатегория 	= &ТоварнаяКатегория
		|   И	ПД_Подпихня.Номенклатура.Производитель 		= &Производитель
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 4.
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		//	КешДанныхДляВывода.Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ","		
		|	%4
		|	КешДанныхДляВывода.ДанныеДерева,
		|	КешДанныхДляВывода.ТоварнаяКатегория,
		|	КешДанныхДляВывода.Производитель,
		|	КешДанныхДляВывода.Номенклатура
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 			КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) 			КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 			КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) 		КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 			КАК Исключено" + ИдентификаторСклада+ ", 
		//ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК КонтрольМатрицейОтключен" + ИдентификаторСклада
		|   %2
		|ПОМЕСТИТЬ АМ_УправлениеАссортиментнойМатрицей
		|ИЗ
		|	КешДанныхДляВывода КАК КешДанныхДляВывода
		|	
		//ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
		//			, Владелец = &НоменклатураВладелец И
		//			(Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
		//				(ВЫБРАТЬ
		//					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
		//					КешДанныхДляВывода.ТоварнаяКатегория,
		//					КешДанныхДляВывода.Производитель,
		//					КешДанныхДляВывода.Номенклатура
		//				ИЗ
		//					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
		//ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
		//И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
		//И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
		//И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура 
		| %3
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	 КешДанныхДляВывода.Номенклатура 
		| ;
		////////////////////////////////////////////////////////////////////////////////////////////
		// 5.		
		|ВЫБРАТЬ
		|	АУН.Склад КАК Склад,
		|	АУН.Номенклатура КАК Номенклатура,
		|	СРЕДНЕЕ(ДнейНаСкладе.КоличествоДней) КАК ДНС
		|ПОМЕСТИТЬ ДнейНаСкладеТК	
		|ИЗ
		|	РегистрСведений.АМ_ДнейНаСкладе КАК ДнейНаСкладе
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АУН
		|ПО АУН.КлючАналитики = ДнейНаСкладе.АналитикаУчетаНоменклатуры
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешДанныхДляВывода КАК КешДанныхДляВывода
		|ПО  КешДанныхДляВывода.Номенклатура = АУН.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	АУН.Склад,
		|	АУН.Номенклатура 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад,
		|	Номенклатура
		|; 
		////////////////////////////////////////////////////////////////////////////////////////////
		// 6.
		|ВЫБРАТЬ
		|	СкладыФорматов.Формат КАК Формат,
		|	ДнейНаСкладеТК.Номенклатура КАК Номенклатура,
		|	СРЕДНЕЕ(ДнейНаСкладеТК.ДНС) КАК ДНС
		|ПОМЕСТИТЬ ДНСПоФорматам
		|ИЗ
		|   ДнейНаСкладеТК КАК ДнейНаСкладеТК
		|	
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ  СкладыФорматов КАК СкладыФорматов
		|ПО ДнейНаСкладеТК.Склад = СкладыФорматов.Склад
		|    
		|СГРУППИРОВАТЬ ПО
		|	Формат,
		|	Номенклатура
		|   
		|ИНДЕКСИРОВАТЬ ПО
		|	Формат,
		|	Номенклатура
		|;   
		////////////////////////////////////////////////////////////////////////////////////////////
		// 7.  
		|ВЫБРАТЬ  РАЗРЕШЕННЫЕ
		|	АМ_УправлениеАссортиментнойМатрицей.*
		//ISNULL(ДНСПоФорматам"+ИдентификаторСклада+".ДНС,0) 			КАК ДНС" + ИдентификаторСклада; 
		|   %6
		|ИЗ
		|	АМ_УправлениеАссортиментнойМатрицей КАК АМ_УправлениеАссортиментнойМатрицей
		|
		|
		//ЛЕВОЕ СОЕДИНЕНИЕ ДНСПоФорматам КАК ДНСПоФорматам"+ИдентификаторСклада+"
		//ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= ДНСПоФорматам"+ИдентификаторСклада+".Формат
		//И АМ_УправлениеАссортиментнойМатрицей.Номенклатура = ДНСПоФорматам"+ИдентификаторСклада+".Номенклатура
		|  %7
		|
		|УПОРЯДОЧИТЬ ПО
		|	АМ_УправлениеАссортиментнойМатрицей.Номенклатура
		|; 
		|УНИЧТОЖИТЬ СкладыФорматов
		|;   
		|УНИЧТОЖИТЬ ПД_Аналоги
		|;    
		|УНИЧТОЖИТЬ ПД_Подпихня
		|;   
		|УНИЧТОЖИТЬ АМ_УправлениеАссортиментнойМатрицей
		|;  
		|УНИЧТОЖИТЬ ДнейНаСкладеТК
		|;  
		|УНИЧТОЖИТЬ ДНСПоФорматам
		|";
		
		
#Область МассивФорматовМагазина
		ТЗВыборкаПоФорматам 					= ""; //%1
		ТЗАсортиментПоФорматам 					= ""; //%2
		ТЗСоединенияАсортиментаПоФорматам 		= ""; //%3
		ТЗВыборкаПоФорматамДляВывода 			= ""; //%4
		ТЗВыборкаПоФорматамДляИндексации 		= ""; //%5   
		ТЗАсортиментаПоВсехФорматах				= ""; //%6
		ТЗСоединенияАсортиментПоВсехФорматах	= ""; //%7

		Для Каждого ФорматМагазина ИЗ МассивФорматов Цикл
			ИдентификаторСклада	= ОбъектОбработки.ПолучитьСтрокуИдентификатораСсылки(ФорматМагазина);
					
			ТЗВыборкаПоФорматам =  ТЗВыборкаПоФорматам	+"	
									|	&Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
									
			ТЗАсортиментПоФорматам =  ТЗАсортиментПоФорматам	+"
									|,
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".ПосадочныеМеста,0) 			КАК ПосадочныеМеста" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МинимальныйЗапас,0) 			КАК МинимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".СтраховойЗапас,0) 			КАК СтраховойЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".МаксимальныйЗапас,0) 		КАК МаксимальныйЗапас" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".Исключено, ЛОЖЬ) 			КАК Исключено" + ИдентификаторСклада+ ", 
									|	ISNULL(АМ_УФПМ"+ИдентификаторСклада+".КонтрольМатрицейОтключен,ЛОЖЬ)КАК КонтрольМатрицейОтключен" + ИдентификаторСклада;

			ТЗСоединенияАсортиментаПоФорматам =  ТЗСоединенияАсортиментаПоФорматам	+ "
									|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
									|			, Владелец = &НоменклатураВладелец И
									|			(Формат, ТоварнаяКатегория, Производитель, Номенклатура) В
									|				(ВЫБРАТЬ
									|					КешДанныхДляВывода.Формат"+ИдентификаторСклада+",
									|					КешДанныхДляВывода.ТоварнаяКатегория,
									|					КешДанныхДляВывода.Производитель,
									|					КешДанныхДляВывода.Номенклатура
									|				ИЗ
									|					КешДанныхДляВывода)) КАК АМ_УФПМ"+ИдентификаторСклада+"
									|ПО КешДанныхДляВывода.Формат"+ИдентификаторСклада+"= АМ_УФПМ"+ИдентификаторСклада+".Формат
									|И КешДанныхДляВывода.ТоварнаяКатегория = АМ_УФПМ"+ИдентификаторСклада+".ТоварнаяКатегория
									|И КешДанныхДляВывода.Производитель 	= АМ_УФПМ"+ИдентификаторСклада+".Производитель
									|И КешДанныхДляВывода.Номенклатура 		= АМ_УФПМ"+ИдентификаторСклада+".Номенклатура
									|";   
			
			ТЗВыборкаПоФорматамДляВывода =  ТЗВыборкаПоФорматамДляВывода	+"	
									|	КешДанныхДляВывода.Формат"+ИдентификаторСклада+" КАК " + "Формат" + ИдентификаторСклада + ",";
									
			ТЗАсортиментаПоВсехФорматах = ТЗАсортиментаПоВсехФорматах +"
				                    |,
									|	ISNULL(ДНСПоФорматам"+ИдентификаторСклада+".ДНС,0) 			КАК ДНС" + ИдентификаторСклада; 


			ТЗСоединенияАсортиментПоВсехФорматах = ТЗСоединенияАсортиментПоВсехФорматах+"
									|
									|  
									|ЛЕВОЕ СОЕДИНЕНИЕ ДНСПоФорматам КАК ДНСПоФорматам"+ИдентификаторСклада+"
									|ПО АМ_УправлениеАссортиментнойМатрицей.Формат"+ИдентификаторСклада+"= ДНСПоФорматам"+ИдентификаторСклада+".Формат
									|И АМ_УправлениеАссортиментнойМатрицей.Номенклатура = ДНСПоФорматам"+ИдентификаторСклада+".Номенклатура
									|";	

		КонецЦикла;

				
		ТЗСоединенияАсортиментаПоФорматам = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				); 						
			
		#КонецОбласти
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса
																				,ТЗВыборкаПоФорматам
																				,ТЗАсортиментПоФорматам
																				,ТЗСоединенияАсортиментаПоФорматам
																				,ТЗВыборкаПоФорматамДляВывода
																				,ТЗВыборкаПоФорматамДляИндексации
																				,ТЗАсортиментаПоВсехФорматах
																				,ТЗСоединенияАсортиментПоВсехФорматах
																				);


	Возврат ТекстЗапроса;	

КонецФункции // ПолучитьТекстЗапросаАссортиментнойМатрицыДетальныеЗаписи()


&НаСервере
Процедура ВыполнитьЗаписьИзмененийВРегистр_АМ_УправлениеАссортиментнойМатрицей(Идентификатор, ИдентификаторФормата)	
	
	РезультатПоиска = АссортиментнаяПодМатрица.НайтиПоИдентификатору(Идентификатор);
	Если РезультатПоиска <> Неопределено Тогда
		ПериодЗаписи = ТекущаяДатаСеанса();
		НаборЗаписей = РегистрыСведений.АМ_УправлениеАссортиментнойПодМатрицей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ПериодЗаписи);
		НаборЗаписей.Отбор.Владелец.Установить(НоменклатураВладелец);
		НаборЗаписей.Отбор.Формат.Установить(РезультатПоиска["Формат"+ИдентификаторФормата]);
		НаборЗаписей.Отбор.ВидНоменклатуры.Установить(РезультатПоиска["ТоварнаяКатегория"].Владелец);
		НаборЗаписей.Отбор.ТоварнаяКатегория.Установить(РезультатПоиска["ТоварнаяКатегория"]);
		НаборЗаписей.Отбор.Производитель.Установить(РезультатПоиска["Производитель"]);
		НаборЗаписей.Отбор.Номенклатура.Установить(РезультатПоиска["Номенклатура"]);
		
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Период					= ПериодЗаписи;
			НоваяЗапись.Владелец				= НоменклатураВладелец;
			НоваяЗапись.Формат 					= РезультатПоиска["Формат"+ИдентификаторФормата];
			НоваяЗапись.ВидНоменклатуры 		= РезультатПоиска["ТоварнаяКатегория"].Владелец; 
			НоваяЗапись.ТоварнаяКатегория 		= РезультатПоиска["ТоварнаяКатегория"];
			НоваяЗапись.Производитель 			= РезультатПоиска["Производитель"]; 
			НоваяЗапись.Номенклатура 			= РезультатПоиска["Номенклатура"];  
			НоваяЗапись.НомерПоПорядку 			= РезультатПоиска["НомерПоПорядку"+ИдентификаторФормата];
			НоваяЗапись.ПосадочныеМеста 		= РезультатПоиска["ПосадочныеМеста"+ИдентификаторФормата];
			НоваяЗапись.МинимальныйЗапас		= РезультатПоиска["МинимальныйЗапас"+ИдентификаторФормата];
			НоваяЗапись.СтраховойЗапас 			= РезультатПоиска["СтраховойЗапас"+ИдентификаторФормата];
			НоваяЗапись.МаксимальныйЗапас 		= РезультатПоиска["МаксимальныйЗапас"+ИдентификаторФормата];  
			НоваяЗапись.Ответственный 			= ПараметрыСеанса.ТекущийПользователь;
			НоваяЗапись.Исключено 				= ?(РезультатПоиска["Исключено"+ИдентификаторФормата] = 2, 0, РезультатПоиска["Исключено"+ИдентификаторФормата]);
			НоваяЗапись.КонтрольМатрицейОтключен = ?(РезультатПоиска["КонтрольМатрицейОтключен"+ИдентификаторФормата] = 2, 0, РезультатПоиска["КонтрольМатрицейОтключен"+ИдентификаторФормата]);
		Попытка
			НаборЗаписей.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Неудача при попытке записи значения'")+ОписаниеОшибки());	
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЕстьДоступныеПосадочныеМеста(Знач ИдентификаторСтроки, Знач НовоеЗначениеПосадочныхМест, Знач ИдентификаторФормата)
	
	GUID_Формата = Новый УникальныйИдентификатор(СтрЗаменить(ИдентификаторФормата,"_","-"));	
	ФорматМагазина = Справочники.АМ_ФорматыМагазинов.ПолучитьСсылку(GUID_Формата);
	Если НЕ ЗначениеЗаполнено(ФорматМагазина) Тогда
		ТекстСообщения = НСтр("ru = 'Не удалось найти указаный формат магазина!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь;	
	КонецЕсли;
	
	Если НоменклатураВладелец.Пустая() Тогда
		ТекстСообщения = НСтр("ru = 'Не указана номенклатура владелец для ассортиментной подматрицы!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь;	
	КонецЕсли;
	
	ТекущиеДанныеДерева = АссортиментнаяПодМатрица.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если ТекущиеДанныеДерева = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'Не удалось определить текущие данные дерева ассортиментной подматрицы!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь;	
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	
	Если ТекущиеДанныеДерева.Производитель.Пустая() = Истина Тогда
		Запрос.Текст = ПолучитьТекстЗапросаКонтроляПосадочныхМестПоТоварнойКатегории();	
	ИначеЕсли ТекущиеДанныеДерева.Номенклатура.Пустая() Тогда
		Запрос.Текст = ПолучитьТекстЗапросаКонтроляПосадочныхМестПоПроизводителю();
	Иначе
		Запрос.Текст = ПолучитьТекстЗапросаКонтроляПосадочныхМестПоНоменклатуре();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Владелец", НоменклатураВладелец);
	Запрос.УстановитьПараметр("ФорматМагазина", ФорматМагазина);
	Запрос.УстановитьПараметр("ВидНоменклатуры", ТекущиеДанныеДерева.ТоварнаяКатегория.Владелец);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", ТекущиеДанныеДерева.ТоварнаяКатегория);
	Запрос.УстановитьПараметр("Производитель", ТекущиеДанныеДерева.Производитель);
	Запрос.УстановитьПараметр("Номенклатура", ТекущиеДанныеДерева.Номенклатура);
	Запрос.УстановитьПараметр("НовоеЗначениеПосадочныхМест", НовоеЗначениеПосадочныхМест);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если НЕ РезультатЗапроса[0].Пустой() Тогда
		
		ВыборкаРезультат = РезультатЗапроса[0].Выбрать();
		ВыборкаРезультат.Следующий();
		Если ВыборкаРезультат.ПосадочныеМеста > НовоеЗначениеПосадочныхМест Тогда
			ТекстСообщения = НСтр("ru = 'Посадочных мест не может быть меньше чем сумма подчиненных элементов!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Ложь; 			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ РезультатЗапроса[1].Пустой() Тогда
	
		ВыборкаРезультат = РезультатЗапроса[1].Выбрать();
		ВыборкаРезультат.Следующий();
		ПосадочныхМестРодитель = ВыборкаРезультат.ПосадочныеМеста;
		
		ВыборкаРезультат = РезультатЗапроса[2].Выбрать();
		ВыборкаРезультат.Следующий();
		ПосадочныхМестГоризонтально = ВыборкаРезультат.ПосадочныеМеста;
			
		Если ПосадочныхМестРодитель < ПосадочныхМестГоризонтально + НовоеЗначениеПосадочныхМест Тогда
			ТекстСообщения = НСтр("ru = 'Посадочных мест не может быть больше у подчиненных элементов чем у родительской группы!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат Ложь; 			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ЕстьДоступныеПосадочныеМеста()

&НаСервереБезКонтекста    
Функция ПроверитьВозможноеКоличествоПосадочныхМестПоОсновнойМатрице(СтруктураДанных)
	
	Если ТипЗнч(СтруктураДанных) <> Тип("Структура") Тогда
		Возврат Истина;	
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);
	
	ИндентификаторФормата  	= Новый УникальныйИдентификатор(СтрЗаменить(СтруктураДанных.ИндентификаторФормата,"_","-"));
	ФорматМагазинов  		= Справочники.АМ_ФорматыМагазинов.ПолучитьСсылку(ИндентификаторФормата);
	НовоеЗначение			= СтруктураДанных.НовоеЗначение;
	
	Если ЗначениеЗаполнено(ФорматМагазинов) = Ложь Тогда
		Возврат Истина;	
	КонецЕсли;   

	Запрос = Новый Запрос;
	//Запрос.Текст = ПолучитьТекстЗапросаКонтроляОстатковОсновнойМатрице();
	Запрос.УстановитьПараметр("ФорматМагазинов", ФорматМагазинов);	
	Запрос.УстановитьПараметр("ВидНоменклатуры", СтруктураДанных.ТоварнаяКатегория.Владелец);
	Запрос.УстановитьПараметр("ТоварнаяКатегория", СтруктураДанных.ТоварнаяКатегория);
	Запрос.УстановитьПараметр("НоменклатураВладелец", СтруктураДанных.НоменклатураВладелец);
	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаСуммаПосМестПоПроизводителю 	= РезультатЗапроса[0].Выбрать();
	ВыборкаОстотокПоОсновнойМатрице	 	= РезультатЗапроса[12].Выбрать(); 
	
	СуммаПосМестПоПроизводителю = ?(ВыборкаСуммаПосМестПоПроизводителю.Следующий(), ВыборкаСуммаПосМестПоПроизводителю.ПосадочныеМеста, 0);
	Если СуммаПосМестПоПроизводителю > НовоеЗначение Тогда
		ТекстСообщения = НСтр("ru = 'Посадочных мест не может быть менше чем сумма подчиненных элементов!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Ложь; 			
	КонецЕсли;  
	
	Ошибка = ЛОЖЬ;
	Пока ВыборкаОстотокПоОсновнойМатрице.Следующий() Цикл
	    ТекстСообщения = НСтр("ru = 'Не достаточно %3 посадочных мест в основной матрице на складе %1, рассчытано посадочных мест по подпихне %2!'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ВыборкаОстотокПоОсновнойМатрице.Склад, ВыборкаОстотокПоОсновнойМатрице.ПосадочныеМестаПодпихня, ВыборкаОстотокПоОсновнойМатрице.Остаток);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Ошибка = ИСТИНА;	
	КонецЦикла;
	
	Пока Ошибка = ИСТИНА Цикл
		Возврат ЛОЖЬ;	
	КонецЦикла;

	Возврат ИСТИНА;
КонецФункции // ПроверитьВозможноеКоличествоПосадочныхМестПоОсновнойМатрице()  

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаКонтроляПосадочныхМестПоТоварнойКатегории()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////
		// 0. Вычисление подчиненных посадочных мест (Контроль нижних мест)
		|ВЫБРАТЬ
		|	IsNull(СУММА(ПосадочныеМеста), 0) КАК ПосадочныеМеста
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних( , Владелец 		 	= &Владелец
		|																		И  	Формат 			 	= &ФорматМагазина
		|																		И  	ТоварнаяКатегория	= &ТоварнаяКатегория
		|																		И  	Производитель 	   <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																		И	Номенклатура  		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																		)
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 1. Вычисление родительских посадочных мест (Контроль верхних мест)
		|ВЫБРАТЬ
		|	0 КАК ПосадочныеМеста
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних( , Владелец 		 = &Владелец
		|																		И  	Формат 			 = &ФорматМагазина
		|																		И 	Ложь
		|																		)
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 2. Вычисление посадочных мест на одном уровне (Контроль верхних мест)
		|ВЫБРАТЬ
		|	IsNull(Сумма(ПосадочныеМеста), 0) КАК ПосадочныеМеста
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних( , Владелец 		 = &Владелец
		|																		И  	Формат 			 = &ФорматМагазина
		|																		И	Ложь
		|																		)
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 3. Вычисление посадочных мест на одном уровне (Контроль верхних мест)
		|ВЫБРАТЬ
		|	СкладыВФормате.Ссылка КАК Формат,
		|	СкладыВФормате.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыВФормате
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК СкладыВФормате	
		|ГДЕ
		|	СкладыВФормате.Ссылка = &ФорматМагазина
		|И 	СкладыВФормате.Ссылка.Активен 		  = Истина
		|И 	СкладыВФормате.Ссылка.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СкладыВФормате.Склад	
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 4. Посадочные места по родителю иерархии в основной матрице (номинально), 
		// для вычисления, если у нас установлены ПосадочныеМеста = 0 (для Товарной категории) 
		|ВЫБРАТЬ
		|	МестаПоВидуНоменклатуры.Склад,
		|	МестаПоВидуНоменклатуры.ВидНоменклатуры,
		|	МестаПоВидуНоменклатуры.ТоварнаяКатегория,
		|	МестаПоВидуНоменклатуры.Производитель,
		|	МестаПоВидуНоменклатуры.Номенклатура,
		|	ВЫБОР
		|		КОГДА МестаПоВидуНоменклатуры.Исключено = Ложь И МестаПоВидуНоменклатуры.КонтрольМатрицейОтключен = Ложь
		|		ТОГДА МестаПоВидуНоменклатуры.ПосадочныеМеста
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПосадочныеМеста,
		|	IsNull(СУММА(ПодчиненныеМеста.ПосадочныеМеста), 0) КАК РаспределеноВОсновнойМатрице
		|ПОМЕСТИТЬ КоличествоПосадочныхМестПоВидуНоменклатуры
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, Склад В (ВЫБРАТЬ
		|																					Склад
		|																				 ИЗ
		|																					СкладыВФормате
		|																				 )
		|																		И 	ВидНоменклатуры 	= &ВидНоменклатуры
		|																		И 	ТоварнаяКатегория 	= ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|																		И 	Производитель   	= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																		И	Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|																	) КАК МестаПоВидуНоменклатуры
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, Склад В  (ВЫБРАТЬ
		|																									Склад
		|																								ИЗ
		|																									СкладыВФормате
		|																								)
		|																					И 	ВидНоменклатуры 	= &ВидНоменклатуры
		|																					И 	ТоварнаяКатегория  <> ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|																					И 	Производитель	    = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																					И 	Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																				) КАК ПодчиненныеМеста
		|ПО	ПодчиненныеМеста.Склад 			 = МестаПоВидуНоменклатуры.Склад
		|И	ПодчиненныеМеста.ВидНоменклатуры = МестаПоВидуНоменклатуры.ВидНоменклатуры
		|И	ПодчиненныеМеста.Исключено 				  = Ложь
		|И 	ПодчиненныеМеста.КонтрольМатрицейОтключен = Ложь
		|
		|СГРУППИРОВАТЬ ПО
		|	МестаПоВидуНоменклатуры.Склад,
		|	МестаПоВидуНоменклатуры.ВидНоменклатуры,
		|	МестаПоВидуНоменклатуры.ТоварнаяКатегория,
		|	МестаПоВидуНоменклатуры.Производитель,
		|	МестаПоВидуНоменклатуры.Номенклатура,
		|	МестаПоВидуНоменклатуры.ПосадочныеМеста,
		|	МестаПоВидуНоменклатуры.Исключено,
		|	МестаПоВидуНоменклатуры.КонтрольМатрицейОтключен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МестаПоВидуНоменклатуры.Склад
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 5. Посадочные места по товарной категории в основной матрице (номинально)
		|ВЫБРАТЬ
		|	МестаПоТоварнойКатегории.Склад,
		|	МестаПоТоварнойКатегории.ВидНоменклатуры,
		|	МестаПоТоварнойКатегории.ТоварнаяКатегория,
		|	МестаПоТоварнойКатегории.Производитель,
		|	МестаПоТоварнойКатегории.Номенклатура,
		|	ВЫБОР
		|		КОГДА МестаПоТоварнойКатегории.Исключено = Ложь И МестаПоТоварнойКатегории.КонтрольМатрицейОтключен = Ложь
		|		ТОГДА МестаПоТоварнойКатегории.ПосадочныеМеста
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ПосадочныеМеста,
		|	IsNull(СУММА(ПодчиненныеМеста.ПосадочныеМеста), 0) КАК РаспределеноВОсновнойМатрице
		|ПОМЕСТИТЬ КоличествоПосадочныхМестПоТоварнойКатегории
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, Склад В (ВЫБРАТЬ
		|																					Склад
		|																				 ИЗ
		|																					СкладыВФормате
		|																				 )
		|																		И 	ВидНоменклатуры 	= &ВидНоменклатуры
		|																		И 	ТоварнаяКатегория 	= &ТоварнаяКатегория
		|																		И 	Производитель   	= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																		И	Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|																	) КАК МестаПоТоварнойКатегории
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, Склад В  (ВЫБРАТЬ
		|																									Склад
		|																								ИЗ
		|																									СкладыВФормате
		|																								)
		|																					И 	ВидНоменклатуры 	= &ВидНоменклатуры
		|																					И 	ТоварнаяКатегория   = &ТоварнаяКатегория
		|																					И 	Производитель	   <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																					И 	Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																				) КАК ПодчиненныеМеста
		|ПО	ПодчиненныеМеста.Склад 			 	= МестаПоТоварнойКатегории.Склад
		|И	ПодчиненныеМеста.ВидНоменклатуры 	= МестаПоТоварнойКатегории.ВидНоменклатуры
		|И	ПодчиненныеМеста.ТоварнаяКатегория 	= МестаПоТоварнойКатегории.ТоварнаяКатегория
		|И	ПодчиненныеМеста.Исключено 				  = Ложь
		|И 	ПодчиненныеМеста.КонтрольМатрицейОтключен = Ложь
		|
		|СГРУППИРОВАТЬ ПО
		|	МестаПоТоварнойКатегории.Склад,
		|	МестаПоТоварнойКатегории.ВидНоменклатуры,
		|	МестаПоТоварнойКатегории.ТоварнаяКатегория,
		|	МестаПоТоварнойКатегории.Производитель,
		|	МестаПоТоварнойКатегории.Номенклатура,
		|	МестаПоТоварнойКатегории.ПосадочныеМеста,
		|	МестаПоТоварнойКатегории.Исключено,
		|	МестаПоТоварнойКатегории.КонтрольМатрицейОтключен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	МестаПоТоварнойКатегории.Склад
		|;	
		////////////////////////////////////////////////////////////////////////////////
		// 6. Посадочные места по товарной категории в подматрице МАКСИМУМ()
		|ВЫБРАТЬ
		|	ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	МАКСИМУМ(ПосадочныеМеста) КАК ПосадочныеМеста
		|ПОМЕСТИТЬ ПодМатрицаРаспределеноПоТоварнойКатегории
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварнаяКатегория КАК ТоварнаяКатегория,
		|		ПосадочныеМеста	  КАК ПосадочныеМеста
		|	ИЗ
		|		РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(, 	Владелец		   <> &Владелец
		|																			И	Формат 				= &ФорматМагазина
		|																			И 	ТоварнаяКатегория 	= &ТоварнаяКатегория
		|																			И 	Производитель 		= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																			И 	Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																			)
		|	ГДЕ
		|		Исключено = Ложь
		|	И 	КонтрольМатрицейОтключен = Ложь
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		&ТоварнаяКатегория,
		|		&НовоеЗначениеПосадочныхМест
		|   ) КАК ВложенныйЗапрос
		|
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 7. Посадочные места по производителям в подматрице СУММА(МАКСИМУМ())
		|ВЫБРАТЬ	
		|	ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	СУММА(ПосадочныеМеста) КАК ПосадочныеМеста
		|ПОМЕСТИТЬ ПодМатрицаРаспределеноПоПроизводителям
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварнаяКатегория 			КАК ТоварнаяКатегория,
		|		Производитель 				КАК Производитель,
		|		МАКСИМУМ(ПосадочныеМеста) 	КАК ПосадочныеМеста
		|	ИЗ
		|		РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(, 	Формат 				= &ФорматМагазина
		|																			И 	ТоварнаяКатегория 	= &ТоварнаяКатегория
		|																			И 	Производитель 	   <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																			И 	Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																			)
		|	ГДЕ
		|		Исключено = Ложь
		|	И 	КонтрольМатрицейОтключен = Ложь
		|
		|	СГРУППИРОВАТЬ ПО
		|		ТоварнаяКатегория,
		|		Производитель	
		|
		|   ) КАК ВложенныйЗапрос
		|
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТоварнаяКатегория
		|; 
		////////////////////////////////////////////////////////////////////////////////
		// 8. Посадочные места по номенклатуре в подматрице КОЛИЧЕСТВО(РАЗЛИЧНЫЕ)
		|ВЫБРАТЬ	
		|	ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	КОЛИЧЕСТВО(Номенклатура) КАК ПосадочныеМеста
		|ПОМЕСТИТЬ ПодМатрицаРаспределеноПоНоменклатуре
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ТоварнаяКатегория 			КАК ТоварнаяКатегория,
		|		Производитель 				КАК Производитель,
		|		Номенклатура				КАК Номенклатура 
		|	ИЗ
		|		РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(, 	Формат 				= &ФорматМагазина
		|																			И 	ТоварнаяКатегория 	= &ТоварнаяКатегория
		|																			И 	Производитель 	   <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																			И 	Номенклатура 	   <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																			)
		|	ГДЕ
		|		Исключено = Ложь
		|	И 	КонтрольМатрицейОтключен = Ложь
		|	И	ПосадочныеМеста > 0
		|
		|   ) КАК ВложенныйЗапрос
		|
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварнаяКатегория
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТоварнаяКатегория
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 9. Распределено в подматрице по товарной категории
		|ВЫБРАТЬ
		|	&ВидНоменклатуры КАК ВидНоменклатуры,
		|	ПодМатрицаРаспределеноПоТоварнойКатегории.ТоварнаяКатегория КАК ТоварнаяКатегория,
		|	ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка) КАК Производитель,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА IsNull(ПодМатрицаРаспределеноПоТоварнойКатегории.ПосадочныеМеста, 0) >= IsNull(ПодМатрицаРаспределеноПоПроизводителям.ПосадочныеМеста, 0)
		|			И IsNull(ПодМатрицаРаспределеноПоТоварнойКатегории.ПосадочныеМеста, 0) >= IsNull(ПодМатрицаРаспределеноПоНоменклатуре.ПосадочныеМеста, 0)
		|		ТОГДА IsNull(ПодМатрицаРаспределеноПоТоварнойКатегории.ПосадочныеМеста, 0)
		|       КОГДА IsNull(ПодМатрицаРаспределеноПоПроизводителям.ПосадочныеМеста, 0) >= IsNull(ПодМатрицаРаспределеноПоТоварнойКатегории.ПосадочныеМеста, 0)
		|			И IsNull(ПодМатрицаРаспределеноПоПроизводителям.ПосадочныеМеста, 0) >= IsNull(ПодМатрицаРаспределеноПоНоменклатуре.ПосадочныеМеста, 0)
		|		ТОГДА IsNull(ПодМатрицаРаспределеноПоПроизводителям.ПосадочныеМеста, 0)
		|		ИНАЧЕ IsNull(ПодМатрицаРаспределеноПоНоменклатуре.ПосадочныеМеста, 0)
		|	КОНЕЦ КАК ПосадочныеМеста
		|ПОМЕСТИТЬ РаспределениеПосадочныхМестВПодматрице
		|ИЗ
		|	ПодМатрицаРаспределеноПоТоварнойКатегории КАК ПодМатрицаРаспределеноПоТоварнойКатегории
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПодМатрицаРаспределеноПоПроизводителям КАК ПодМатрицаРаспределеноПоПроизводителям
		|ПО ПодМатрицаРаспределеноПоПроизводителям.ТоварнаяКатегория = ПодМатрицаРаспределеноПоТоварнойКатегории.ТоварнаяКатегория
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПодМатрицаРаспределеноПоНоменклатуре КАК ПодМатрицаРаспределеноПоНоменклатуре
		|ПО ПодМатрицаРаспределеноПоНоменклатуре.ТоварнаяКатегория = ПодМатрицаРаспределеноПоТоварнойКатегории.ТоварнаяКатегория
		|
		|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПодМатрицаРаспределеноПоТоварнойКатегории;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПодМатрицаРаспределеноПоПроизводителям;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПодМатрицаРаспределеноПоНоменклатуре;
		////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаКонтроляПосадочныхМестПоТоварнойКатегории()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаКонтроляПосадочныхМестПоПроизводителю()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////
		// 0. Вычисление подчиненных посадочных мест (Контроль нижних мест)
		|ВЫБРАТЬ
		|	IsNull(СУММА(ПосадочныеМеста), 0) КАК ПосадочныеМеста
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних( , Владелец 		 	= &Владелец
		|																		И  	Формат 			 	= &ФорматМагазина
		|																		И  	ТоварнаяКатегория	= &ТоварнаяКатегория
		|																		И  	Производитель 	 	= &Производитель
		|																		И	Номенклатура  	   <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																		)
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 1. Вычисление родительских посадочных мест (Контроль верхних мест)
		|ВЫБРАТЬ
		|	ПосадочныеМеста КАК ПосадочныеМеста
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних( , Владелец 		 	= &Владелец
		|																		И  	Формат 			 	= &ФорматМагазина
		|																		И 	ТоварнаяКатегория 	= &ТоварнаяКатегория
		|																		И	Производитель 		= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)  
		|																		И  	Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																		)
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 2. Вычисление посадочных мест на одном уровне (Контроль верхних мест)
		|ВЫБРАТЬ
		|	IsNull(Сумма(ПосадочныеМеста), 0) КАК ПосадочныеМеста
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних( , Владелец 		 	= &Владелец
		|																		И  	Формат 			 	= &ФорматМагазина
		|																		И	ТоварнаяКатегория 	= &ТоварнаяКатегория
		|																		И	Производитель 	   <> &Производитель
		|																		И	Производитель 	   <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																		И  	Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																		)
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 3. Вычисление посадочных мест на одном уровне (Контроль верхних мест)
		|ВЫБРАТЬ
		|	СкладыВФормате.Ссылка КАК Формат,
		|	СкладыВФормате.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыВФормате
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК СкладыВФормате	
		|ГДЕ
		|	СкладыВФормате.Ссылка = &ФорматМагазина
		|И 	СкладыВФормате.Ссылка.Активен 		  = Истина
		|И 	СкладыВФормате.Ссылка.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СкладыВФормате.Склад	
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 4. Посадочные места по родителю иерархии в основной матрице (номинально) 
		|ВЫБРАТЬ
		|	Склад 			КАК Склад,
		|	ПосадочныеМеста КАК ПосадочныеМеста
		|ПОМЕСТИТЬ КоличествоПосадочныхМестПоИерархииВидуНоменклатуры
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, Склад В (ВЫБРАТЬ
		|																					Склад
		|																				 ИЗ
		|																					СкладыВФормате
		|																				)
		|																		И ВидНоменклатуры 	= &ВидНоменклатуры
		|																		И 	ВЫБОР
		|																				КОГДА &Производитель 	= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																				ТОГДА ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|																				ИНАЧЕ ТоварнаяКатегория = &ТоварнаяКатегория
		|																			КОНЕЦ
		|																		И	ВЫБОР
		|																				КОГДА &Производитель  = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																				ТОГДА Производитель   = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																				КОГДА &Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																				    И &Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																				ТОГДА Производитель   = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																				ИНАЧЕ Производитель   = &Производитель
		|																			КОНЕЦ
		|																		И	Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|																	)
		|ГДЕ
		|	Исключено = Ложь
		|И 	КонтрольМатрицейОтключен = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;	
		|
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаКонтроляПосадочныхМестПоПроизводителю()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаКонтроляПосадочныхМестПоНоменклатуре()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////
		// 0. Вычисление подчиненных посадочных мест (Контроль нижних мест)
		|ВЫБРАТЬ
		|	IsNull(СУММА(ПосадочныеМеста), 0) КАК ПосадочныеМеста
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних( , Владелец 		 	= &Владелец
		|																		И  	Формат 			 	= &ФорматМагазина
		|																		И  	Ложь
		|																		)
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 1. Вычисление родительских посадочных мест (Контроль верхних мест)
		|ВЫБРАТЬ
		|	ПосадочныеМеста КАК ПосадочныеМеста
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних( , Владелец 		 	= &Владелец
		|																		И  	Формат 			 	= &ФорматМагазина
		|																		И 	ТоварнаяКатегория 	= &ТоварнаяКатегория
		|																		И	Производитель 		= &Производитель 
		|																		И  	Номенклатура 		= ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																		)
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 2. Вычисление посадочных мест на одном уровне (Контроль верхних мест)
		|ВЫБРАТЬ
		|	IsNull(Сумма(ПосадочныеМеста), 0) КАК ПосадочныеМеста
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних( , Владелец 		 	= &Владелец
		|																		И  	Формат 			 	= &ФорматМагазина
		|																		И	ТоварнаяКатегория 	= &ТоварнаяКатегория
		|																		И	Производитель 		= &Производитель
		|																		И	Номенклатура 	   <> &Номенклатура
		|																		И   Номенклатура 	   <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																		)
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 3. Вычисление посадочных мест на одном уровне (Контроль верхних мест)
		|ВЫБРАТЬ
		|	СкладыВФормате.Ссылка КАК Формат,
		|	СкладыВФормате.Склад КАК Склад
		|ПОМЕСТИТЬ СкладыВФормате
		|ИЗ
		|	Справочник.АМ_ФорматыМагазинов.Склады КАК СкладыВФормате	
		|ГДЕ
		|	СкладыВФормате.Ссылка = &ФорматМагазина
		|И 	СкладыВФормате.Ссылка.Активен 		  = Истина
		|И 	СкладыВФормате.Ссылка.ПометкаУдаления = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СкладыВФормате.Склад	
		|;
		////////////////////////////////////////////////////////////////////////////////
		// 4. Посадочные места по родителю иерархии в основной матрице (номинально) 
		|ВЫБРАТЬ
		|	Склад 			КАК Склад,
		|	ПосадочныеМеста КАК ПосадочныеМеста
		|ПОМЕСТИТЬ КоличествоПосадочныхМестПоИерархииВидуНоменклатуры
		|ИЗ
		|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(, Склад В (ВЫБРАТЬ
		|																					Склад
		|																				 ИЗ
		|																					СкладыВФормате
		|																				)
		|																		И ВидНоменклатуры 	= &ВидНоменклатуры
		|																		И 	ВЫБОР
		|																				КОГДА &Производитель 	= ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																				ТОГДА ТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
		|																				ИНАЧЕ ТоварнаяКатегория = &ТоварнаяКатегория
		|																			КОНЕЦ
		|																		И	ВЫБОР
		|																				КОГДА &Производитель  = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																				ТОГДА Производитель   = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																				КОГДА &Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																				    И &Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|																				ТОГДА Производитель   = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|																				ИНАЧЕ Производитель   = &Производитель
		|																			КОНЕЦ
		|																		И	Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|																	)
		|ГДЕ
		|	Исключено = Ложь
		|И 	КонтрольМатрицейОтключен = Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|;	
		|
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаКонтроляПосадочныхМестПоНоменклатуре()

//		
//					////////////////////////////////////////////////////////////////////////////////
//					// 4.			
//					|ВЫБРАТЬ
//					|	ПосадочныеМестаПоВсехТКВидаНоменклатуры.ТоварнаяКатегория КАК ТоварнаяКатегория
//					|ПОМЕСТИТЬ ТоварнаяКатегорияДляРасчетаПодпихни
//					|ИЗ
//					|	ПосадочныеМестаПоВсехТКВидаНоменклатуры КАК ПосадочныеМестаПоВсехТКВидаНоменклатуры
//					|ГДЕ
//					|	ПосадочныеМестаПоВсехТКВидаНоменклатуры.ПосадочныеМеста = 0
//					|
//					|ОБЪЕДИНИТЬ
//					|
//					|ВЫБРАТЬ
//					|	&ТоварнаяКатегория
//					|
//					|ИНДЕКСИРОВАТЬ ПО
//					|	ТоварнаяКатегория
//					|;     

//					////////////////////////////////////////////////////////////////////////////////
//					// 6. 
//					|ВЫБРАТЬ
//					|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.ТоварнаяКатегория КАК ТоварнаяКатегория,
//					|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Производитель КАК Производитель,
//					|	МАКСИМУМ(АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.ПосадочныеМеста) КАК ПосадочныеМеста
//					|ПОМЕСТИТЬ ПроизводительМаксимум
//					|ИЗ
//					|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
//					|			,
//					|			Формат = &ФорматМагазинов
//					|				И ТоварнаяКатегория В
//					|					(ВЫБРАТЬ
//					|						ТоварнаяКатегорияДляРасчетаПодпихни.ТоварнаяКатегория
//					|					ИЗ
//					|						ТоварнаяКатегорияДляРасчетаПодпихни)
//					|				И Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
//					|				И Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних
//					|ГДЕ
//					|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Исключено = ЛОЖЬ
//					|	И АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.КонтрольМатрицейОтключен = ЛОЖЬ

//					|СГРУППИРОВАТЬ ПО
//					|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.ТоварнаяКатегория,
//					|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Производитель

//					|ИНДЕКСИРОВАТЬ ПО
//					|	ТоварнаяКатегория
//					|;   
//					////////////////////////////////////////////////////////////////////////////////
//					//7
//					|ВЫБРАТЬ
//					|	ПроизводительМаксимум.ТоварнаяКатегория КАК ТоварнаяКатегория,
//					|	СУММА(ПроизводительМаксимум.ПосадочныеМеста) КАК ПосадочныеМеста
//					|ПОМЕСТИТЬ ПроизводительСумма
//					|ИЗ
//					|	ПроизводительМаксимум КАК ПроизводительМаксимум

//					|СГРУППИРОВАТЬ ПО
//					|	ПроизводительМаксимум.ТоварнаяКатегория

//					|ИНДЕКСИРОВАТЬ ПО
//					|	ТоварнаяКатегория
//					|;
//					////////////////////////////////////////////////////////////////////////////////
//					//8   				
//					|ВЫБРАТЬ
//					|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.ТоварнаяКатегория КАК ТоварнаяКатегория,
//					|	СУММА(ВЫБОР
//					|			КОГДА АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.ПосадочныеМеста > 0
//					|				ТОГДА 1
//					|			ИНАЧЕ 0
//					|		КОНЕЦ) КАК ПосадочныеМеста
//					|ПОМЕСТИТЬ НоменклатураСумма
//					|ИЗ
//					|	РегистрСведений.АМ_УправлениеАссортиментнойПодМатрицей.СрезПоследних(
//					|			,
//					|			Формат = &ФорматМагазинов
//					|				И ТоварнаяКатегория В
//					|					(ВЫБРАТЬ
//					|						ТоварнаяКатегорияДляРасчетаПодпихни.ТоварнаяКатегория
//					|					ИЗ
//					|						ТоварнаяКатегорияДляРасчетаПодпихни)
//					|				И Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
//					|				И Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних
//					|ГДЕ
//					|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.Исключено = ЛОЖЬ
//					|	И АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.КонтрольМатрицейОтключен = ЛОЖЬ

//					|СГРУППИРОВАТЬ ПО
//					|	АМ_УправлениеАссортиментнойПодМатрицейСрезПоследних.ТоварнаяКатегория

//					|ИНДЕКСИРОВАТЬ ПО
//					|	ТоварнаяКатегория
//					|;
//					////////////////////////////////////////////////////////////////////////////////
//					//9  					
//					|ВЫБРАТЬ
//					|	МАКСИМУМ(МаксимальноРазбитоПосадочныхМест.ПосадочныеМеста) КАК ПосадочныеМеста
//					|ПОМЕСТИТЬ ТкПоДругойПодпихне
//					|ИЗ
//					|	(ВЫБРАТЬ
//					|		ТоварнаяКатегорияМакс.ТоварнаяКатегория КАК ТоварнаяКатегория,
//					|		ТоварнаяКатегорияМакс.ПосадочныеМеста КАК ПосадочныеМеста
//					|	ИЗ
//					|		ТоварнаяКатегорияМакс КАК ТоварнаяКатегорияМакс
//					|	
//					|	ОБЪЕДИНИТЬ ВСЕ
//					|	
//					|	ВЫБРАТЬ
//					|		ПроизводительСумма.ТоварнаяКатегория,
//					|		ПроизводительСумма.ПосадочныеМеста
//					|	ИЗ
//					|		ПроизводительСумма КАК ПроизводительСумма
//					|	
//					|	ОБЪЕДИНИТЬ ВСЕ
//					|	
//					|	ВЫБРАТЬ
//					|		НоменклатураСумма.ТоварнаяКатегория,
//					|		НоменклатураСумма.ПосадочныеМеста
//					|	ИЗ
//					|		НоменклатураСумма КАК НоменклатураСумма) КАК МаксимальноРазбитоПосадочныхМест
//					|;
//					////////////////////////////////////////////////////////////////////////////////
//					//10 					
//					|ВЫБРАТЬ
//					|	КоличествоПосадочныхМестПоИерархииВидуНоменклатуры.ПосадочныеМеста - СУММА(ВЫБОР
//					|			КОГДА ПосадочныеМестаПоВсехТКВидаНоменклатуры.ПосадочныеМеста = 0
//					|				ТОГДА ЕСТЬNULL(ТкПоДругойПодпихне.ПосадочныеМеста, 0)
//					|			ИНАЧЕ ПосадочныеМестаПоВсехТКВидаНоменклатуры.ПосадочныеМеста
//					|		КОНЕЦ) КАК СвободныеПосадочныеМестаПоВидуНоменклатуры,
//					|	КоличествоПосадочныхМестПоИерархииВидуНоменклатуры.Склад КАК Склад
//					|ПОМЕСТИТЬ СвободныеОстаткПоВидуНоменклатуры
//					|ИЗ
//					|	ПосадочныеМестаПоВсехТКВидаНоменклатуры КАК ПосадочныеМестаПоВсехТКВидаНоменклатуры
//					|	
//					|ВНУТРЕННЕЕ СОЕДИНЕНИЕ КоличествоПосадочныхМестПоИерархииВидуНоменклатуры КАК КоличествоПосадочныхМестПоИерархииВидуНоменклатуры
//					|ПО ПосадочныеМестаПоВсехТКВидаНоменклатуры.Склад = КоличествоПосадочныхМестПоИерархииВидуНоменклатуры.Склад
//					|ЛЕВОЕ СОЕДИНЕНИЕ ТкПоДругойПодпихне КАК ТкПоДругойПодпихне
//					|ПО (ИСТИНА)


//					|СГРУППИРОВАТЬ ПО
//					|	КоличествоПосадочныхМестПоИерархииВидуНоменклатуры.Склад,
//					|	КоличествоПосадочныхМестПоИерархииВидуНоменклатуры.ПосадочныеМеста

//					|ИНДЕКСИРОВАТЬ ПО
//					|	Склад
//					|;
//					////////////////////////////////////////////////////////////////////////////////
//					//11
//					|ВЫБРАТЬ
//					|	АМ_УправлениеАссортиментнойМатрицейСрезПоследних.ТоварнаяКатегория КАК ТоварнаяКатегория,
//					|	АМ_УправлениеАссортиментнойМатрицейСрезПоследних.Склад КАК Склад,
//					|	СУММА(АМ_УправлениеАссортиментнойМатрицейСрезПоследних.ПосадочныеМеста) КАК ПосадочныеМеста
//					|ПОМЕСТИТЬ ПосадочныеМестаТКПоПроизводителю
//					|ИЗ
//					|	РегистрСведений.АМ_УправлениеАссортиментнойМатрицей.СрезПоследних(
//					|			,
//					|			Склад В
//					|					(ВЫБРАТЬ
//					|						СкладыФорматов.Склад
//					|					ИЗ
//					|						СкладыФорматов КАК СкладыФорматов)
//					|				И ВидНоменклатуры = &ВидНоменклатуры
//					|				И ТоварнаяКатегория = &ТоварнаяКатегория
//					|				И Производитель <> ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
//					|				И Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК АМ_УправлениеАссортиментнойМатрицейСрезПоследних
//					|ГДЕ
//					|	АМ_УправлениеАссортиментнойМатрицейСрезПоследних.Исключено = ЛОЖЬ
//					|	И АМ_УправлениеАссортиментнойМатрицейСрезПоследних.КонтрольМатрицейОтключен = ЛОЖЬ

//					|СГРУППИРОВАТЬ ПО
//					|	АМ_УправлениеАссортиментнойМатрицейСрезПоследних.ТоварнаяКатегория,
//					|	АМ_УправлениеАссортиментнойМатрицейСрезПоследних.Склад

//					|ИНДЕКСИРОВАТЬ ПО
//					|	Склад
//					|;
//					////////////////////////////////////////////////////////////////////////////////
//					//12
//					|ВЫБРАТЬ
//					|	КоличествоПосадочныхМестПоИерархииВидуНоменклатуры.Склад,
//					|	ВЫБОР
//					|		КОГДА ЕСТЬNULL(ПосадочныеМестаПоВсехТКВидаНоменклатуры.ПосадочныеМеста, 0) = 0
//					|			ТОГДА КоличествоПосадочныхМестПоИерархииВидуНоменклатуры.ПосадочныеМеста
//					|		ИНАЧЕ ЕСТЬNULL(ПосадочныеМестаПоВсехТКВидаНоменклатуры.ПосадочныеМеста, 0) - ЕСТЬNULL(ПосадочныеМестаТКПоПроизводителю.ПосадочныеМеста, 0) - ЕСТЬNULL(ТкПоДругойПодпихне.ПосадочныеМеста, 0)
//					|	КОНЕЦ КАК Остаток,
//					|	ТкПоДругойПодпихне.ПосадочныеМеста КАК ПосадочныеМестаПодпихня
//					|ИЗ
//					|	КоличествоПосадочныхМестПоИерархииВидуНоменклатуры КАК КоличествоПосадочныхМестПоИерархииВидуНоменклатуры
//					|		ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныеМестаПоВсехТКВидаНоменклатуры КАК ПосадочныеМестаПоВсехТКВидаНоменклатуры
//					|		ПО КоличествоПосадочныхМестПоИерархииВидуНоменклатуры.Склад = ПосадочныеМестаПоВсехТКВидаНоменклатуры.Склад
//					|			И (ПосадочныеМестаПоВсехТКВидаНоменклатуры.ТоварнаяКатегория = &ТоварнаяКатегория)
//					|		ЛЕВОЕ СОЕДИНЕНИЕ ТкПоДругойПодпихне КАК ТкПоДругойПодпихне
//					|		ПО (ИСТИНА)
//					|		ЛЕВОЕ СОЕДИНЕНИЕ ПосадочныеМестаТКПоПроизводителю КАК ПосадочныеМестаТКПоПроизводителю
//					|		ПО КоличествоПосадочныхМестПоИерархииВидуНоменклатуры.Склад = ПосадочныеМестаТКПоПроизводителю.Склад
//					|ГДЕ
//					|	ВЫБОР
//					|			КОГДА ЕСТЬNULL(ПосадочныеМестаПоВсехТКВидаНоменклатуры.ПосадочныеМеста, 0) = 0
//					|				ТОГДА КоличествоПосадочныхМестПоИерархииВидуНоменклатуры.ПосадочныеМеста
//					|			ИНАЧЕ ЕСТЬNULL(ПосадочныеМестаПоВсехТКВидаНоменклатуры.ПосадочныеМеста, 0) - ТкПоДругойПодпихне.ПосадочныеМеста
//					|		КОНЕЦ < 0
//					|; 
//					////////////////////////////////////////////////////////////////////////////////
//					//13
//					|УНИЧТОЖИТЬ СкладыФорматов
//					|; 
//					////////////////////////////////////////////////////////////////////////////////
//					//14
//					|УНИЧТОЖИТЬ КоличествоПосадочныхМестПоИерархииВидуНоменклатуры
//					|;
//					////////////////////////////////////////////////////////////////////////////////
//					//15
//					|УНИЧТОЖИТЬ ПосадочныеМестаПоВсехТКВидаНоменклатуры
//					|; 
//					////////////////////////////////////////////////////////////////////////////////
//					//16
//					|УНИЧТОЖИТЬ ТоварнаяКатегорияДляРасчетаПодпихни
//					|;   
//					////////////////////////////////////////////////////////////////////////////////
//					//17
//					|УНИЧТОЖИТЬ ТоварнаяКатегорияМакс
//					|;    
//					////////////////////////////////////////////////////////////////////////////////
//					//18
//					|УНИЧТОЖИТЬ ПроизводительМаксимум
//					|;  
//					////////////////////////////////////////////////////////////////////////////////
//					//19
//					|УНИЧТОЖИТЬ ПроизводительСумма
//					|; 
//					////////////////////////////////////////////////////////////////////////////////
//					//20
//					|УНИЧТОЖИТЬ НоменклатураСумма
//					|;
//					////////////////////////////////////////////////////////////////////////////////
//					//21
//					|УНИЧТОЖИТЬ ТкПоДругойПодпихне
//					|;   
//					////////////////////////////////////////////////////////////////////////////////
//					//22
//					|УНИЧТОЖИТЬ СвободныеОстаткПоВидуНоменклатуры
//					////////////////////////////////////////////////////////////////////////////////
//					//23
//					| ;
//					|УНИЧТОЖИТЬ ПосадочныеМестаТКПоПроизводителю";
//	Возврат ТекстЗапроса;
//КонецФункции // ПолучитьТекстЗапросаКонтроляОстатковОсновнойМатрице()


#КонецОбласти

