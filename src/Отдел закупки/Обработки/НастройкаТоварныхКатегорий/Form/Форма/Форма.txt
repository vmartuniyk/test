#Область ИнтерфейсАвтоматическихТестов

&НаКлиенте
Перем ЮнитТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СписокТестов = Новый Массив;
	Возврат СписокТестов;
	
КонецФункции

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИнициализироватьВидыНоменклатуры();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовДереваЗначенийВидыНоменклатуры

&НаКлиенте
Процедура ВидыНоменклатурыПриАктивизацииСтроки(Элемент)
	
	ТаблицаНоменклатуры.Очистить();
	
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Загрузить_ТаблицаНоменклатурыСервер(ТекущиеДанные.Ссылка, ТекущиеДанные.ТоварнаяКатегория); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура инициализирует ДеревоЗначений Навигация_ВидыНоменклатуры
//
// Параметры:
//  Нет
//
&НаСервере
Процедура ИнициализироватьВидыНоменклатуры()
	
	Перем ТекущийУровень;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДеревоВидыНоменклатуры = РеквизитФормыВЗначение("Навигация_ВидыНоменклатуры");
	ДеревоВидыНоменклатуры.Строки.Очистить();
	ПараметрОтбора = Новый Структура("Ссылка");
	ПараметрОтбораКатегории = Новый Структура("ТоварнаяКатегория");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаИнициализацииВидовНоменклатуры();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ПараметрОтбора, Выборка); 
		РезультатПоиска = ДеревоВидыНоменклатуры.Строки.НайтиСтроки(ПараметрОтбора, Истина);
		Если РезультатПоиска.Количество() = 0 Тогда
			Если Выборка.Родитель.Пустая() Тогда
				СтрокаДереваВид = ДеревоВидыНоменклатуры.Строки.Добавить();
				СтрокаДереваВид.Ссылка = Выборка.Ссылка;
				СтрокаДереваВид.ЭтоГруппа = ?(Выборка.ЭтоГруппа, 0, 3);
				СтрокаДереваВид.Наименование = Выборка.Наименование;
			Иначе
				ПараметрОтбора.Вставить("Ссылка", Выборка.Родитель);
				РезультатПоиска = ДеревоВидыНоменклатуры.Строки.НайтиСтроки(ПараметрОтбора, Истина);
				СтрокаДереваВид = РезультатПоиска[0].Строки.Добавить();
				СтрокаДереваВид.Ссылка = Выборка.Ссылка;
				СтрокаДереваВид.ЭтоГруппа = ?(Выборка.ЭтоГруппа, 0, 3);
				СтрокаДереваВид.Наименование = Выборка.Наименование;		
			КонецЕсли;
		Иначе
			СтрокаДереваВид = РезультатПоиска[0];	
		КонецЕсли;
		
		Если НЕ Выборка.ТоварнаяКатегория.Пустая() Тогда
			ЗаполнитьЗначенияСвойств(ПараметрОтбораКатегории, Выборка); 
			РезультатПоиска = ДеревоВидыНоменклатуры.Строки.НайтиСтроки(ПараметрОтбораКатегории, Истина);
			Если РезультатПоиска.Количество() = 0 Тогда
				Если Выборка.Родитель_ТоварныеКатегории.Пустая() Тогда
					СтрокаДереваКатегория = СтрокаДереваВид.Строки.Добавить();
					СтрокаДереваКатегория.Ссылка = Выборка.Ссылка;
					СтрокаДереваКатегория.ЭтоГруппа = ?(Выборка.ЭтоГруппа_ТоварныеКатегории, 2, 5);
					СтрокаДереваКатегория.Наименование = Выборка.Наименование_ТоварныеКатегории;
					СтрокаДереваКатегория.ТоварнаяКатегория = Выборка.ТоварнаяКатегория;
				Иначе
					ПараметрОтбораКатегории.Вставить("ТоварнаяКатегория", Выборка.Родитель_ТоварныеКатегории);
					РезультатПоиска = ДеревоВидыНоменклатуры.Строки.НайтиСтроки(ПараметрОтбораКатегории, Истина);
					СтрокаДереваКатегория = РезультатПоиска[0].Строки.Добавить();
					СтрокаДереваКатегория.Ссылка = Выборка.Ссылка;
					СтрокаДереваКатегория.ЭтоГруппа = ?(Выборка.ЭтоГруппа_ТоварныеКатегории, 2, 5);
					СтрокаДереваКатегория.Наименование = Выборка.Наименование_ТоварныеКатегории;
					СтрокаДереваКатегория.ТоварнаяКатегория = Выборка.ТоварнаяКатегория;		
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоВидыНоменклатуры, "Навигация_ВидыНоменклатуры");
	
КонецПроцедуры  // ИнициализироватьВидыНоменклатуры()

// Функция возвращает текст запроса инициализации видов номенклатуры и товарных категорий
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//   Строка - текст запроса  
//
&НаСервере
Функция ПолучитьТекстЗапросаИнициализацииВидовНоменклатуры()

	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВидыНоменклатуры.Ссылка 					КАК Ссылка,
		|	ВидыНоменклатуры.ЭтоГруппа 					КАК ЭтоГруппа,
		|	ВидыНоменклатуры.Наименование 				КАК Наименование,
		|	ВидыНоменклатуры.Родитель					КАК Родитель,
		|	ЕСТЬNULL(ТоварныеКатегории.Ссылка, ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)) КАК ТоварнаяКатегория,
		|	ТоварныеКатегории.ЭтоГруппа					КАК ЭтоГруппа_ТоварныеКатегории,
		|	ТоварныеКатегории.Наименование 				КАК Наименование_ТоварныеКатегории,
		|	ТоварныеКатегории.Родитель	 				КАК Родитель_ТоварныеКатегории
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|	ПО 
		|		(ТоварныеКатегории.Владелец = ВидыНоменклатуры.Ссылка)
		|	И 	(НЕ ТоварныеКатегории.ПометкаУдаления)
		|ГДЕ
		|	НЕ ВидыНоменклатуры.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидыНоменклатуры.ЭтоГруппа ИЕРАРХИЯ,
		|	ВидыНоменклатуры.Наименование,
		|	ТоварныеКатегории.ЭтоГруппа ИЕРАРХИЯ,
		|	ТоварныеКатегории.Наименование Возр";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаИнициализацииВидовНоменклатуры()


&НаСервере
Процедура Загрузить_ТаблицаНоменклатурыСервер(ВидНоменклатуры, ТоварнаяКатегория)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос 			= Новый Запрос;
	ТекстЗапроса	= ПолучитьТекстЗапросаИнициализацииНоменклатуры();
	
	Если ВидНоменклатуры.ЭтоГруппа = Истина Или ТоварнаяКатегория.Пустая() Тогда
		ОтборПараметров = "	И ВидНоменклатуры В ИЕРАРХИИ(&ВидНоменклатуры)";
	Иначе 
		ОтборПараметров = "	И ВидНоменклатуры  В ИЕРАРХИИ(&ВидНоменклатуры)
						  |	И ТоварнаяКатегория = &ТоварнаяКатегория";
 	КонецЕсли;

	Запрос.Текст = ТекстЗапроса+ОтборПараметров;
	Запрос.УстановитьПараметр("ВидНоменклатуры"		,ВидНоменклатуры);
	Запрос.УстановитьПараметр("ТоварнаяКатегория"	,ТоварнаяКатегория);
	ТаблицаНоменклатуры.Загрузить(Запрос.Выполнить().Выгрузить());	

КонецПроцедуры // Загрузить_ТаблицаНоменклатурыСервер()

// Функция возвращает текст запроса инициализации номенклатуры
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//   Строка - текст запроса  
//
&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаИнициализацииНоменклатуры()

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Ссылка,
		|	ТоварнаяКатегория,
		|	Наименование
		|ИЗ
		|	Справочник.Номенклатура
		|ГДЕ
		|	НЕ ПометкаУдаления
		|	И НЕ ЭтоГруппа
		|";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаИнициализацииНоменклатуры()

&НаКлиенте
Процедура ТаблицаНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		ОткрытьЗначение(ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти
