#Область ИнтерфейсАвтоматическихТестов

Перем ЮнитТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СписокТестов = Новый Массив;	
	Возврат СписокТестов;
	
КонецФункции 

#КонецОбласти 

#Область ПрограммныйИнтерфейс

// Сохраняет расчитанные товарные категории
//
// Параметры:
//  ФормаОбработки	- УправляемаяФорма - форма обработки 
//
Процедура ЗаписатьТоварнуюКатегориюВНоменклатуру(ФормаОбработки)   Экспорт
	
	СписокНоменклатуры = ФормаОбработки.ТаблицаНоменклатуры;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаТоварнайКатегорияНоменклатуры();
	Запрос.УстановитьПараметр("СписокНоменклатуры",СписокНоменклатуры.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;	
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоменклатураСсылка		= Выборка.Номенклатура;
		ТоварнаяКатегорияСсылка	= Выборка.ТоварнаяКатегория;
				
		СправочникОбъект					= НоменклатураСсылка.ПолучитьОбъект();
		СправочникОбъект.ТоварнаяКатегория  = ТоварнаяКатегорияСсылка;
		
		Попытка
			СправочникОбъект.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
	КонецЦикла;
		
КонецПроцедуры

// Рассчитывает товарные категории согласно таблицы настроек
//
// Параметры:
//  ФормаОбработки	- УправляемаяФорма - форма обработки 
//
Процедура РассчитатьТоварныеКатегории(ФормаОбработки) Экспорт

	
	ТаблицаНоменклатуры = ФормаОбработки.ТаблицаНоменклатуры;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаРасчитатьТоварнуюКатегориюНоменклатуры();
	Запрос.УстановитьПараметр("ВидНоменклатуры"		,ФормаОбработки.ТекущийВидНоменклатуры);
	Запрос.УстановитьПараметр("ПустаяКатегория"		,Справочники.ТоварныеКатегории.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры"	,ТаблицаНоменклатуры.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаНастройки"	,ТаблицаНастройки.Выгрузить());
	ТаблицаНоменклатуры.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

// Возвращает текст запроса для рассчитанных товарных категорий
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//   Строка   - текст запроса
//
Функция ТекстЗапросаТоварнайКатегорияНоменклатуры()
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СпрНом.Ссылка КАК Ссылка,
	               |	СпрНом.ТоварнаяКатегория,
	               |	СпрНом.РассчитаннаяТоварнаяКатегория
	               |ПОМЕСТИТЬ КешНоменклатура
	               |ИЗ
	               |	&СписокНоменклатуры КАК СпрНом
				   |ГДЕ
	               |	НЕ СпрНом.РассчитаннаяТоварнаяКатегория = ЗНАЧЕНИЕ(Справочник.ТоварныеКатегории.ПустаяСсылка)
	               |
	               |;
	               ////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КешНоменклатура.Ссылка КАК Номенклатура,
	               |	КешНоменклатура.РассчитаннаяТоварнаяКатегория КАК ТоварнаяКатегория
	               |ИЗ
	               |	КешНоменклатура КАК КешНоменклатура
	               |ГДЕ
	               |	НЕ КешНоменклатура.ТоварнаяКатегория = КешНоменклатура.РассчитаннаяТоварнаяКатегория";
	Возврат ТекстЗапроса;
КонецФункции // ТекстЗапросаТоварнайКатегорияНоменклатуры()

// Возвращает текст запроса рассчета товарных категорий
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//   Строка   - текст запроса
//
Функция ТекстЗапросаРасчитатьТоварнуюКатегориюНоменклатуры()

	ТекстЗапроса =
		////////////////////////////////////////////////////////////////////////////////
		//0. Получаем настроек товарных категорий из ТаблицаНастройки
		"ВЫБРАТЬ
		|	ТаблицаНастройки.НомерСтроки								КАК Приоритет,
		|	ТаблицаНастройки.ТоварнаяКатегория							КАК ТоварнаяКатегория,
		|	ТаблицаНастройки.НижняяГраница								КАК НижняяГраница,
		|	ТаблицаНастройки.ВерхняяГраница								КАК ВерхняяГраница,
		|	ТаблицаНастройки.Содержит 									КАК Содержит,
		|	ТаблицаНастройки.НеСодержит 								КАК НеСодержит,
		|	ТаблицаНастройки.Производитель								КАК Производитель
		|ПОМЕСТИТЬ ТаблицаНастройки
		|ИЗ
		|	&ТаблицаНастройки КАК ТаблицаНастройки
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//1. Получаем настройки товарных категорий для вида номенклатуры и цены
		|ВЫБРАТЬ
		|	РСНастройки.Приоритет 										КАК Приоритет,
		|	РСНастройки.ТоварнаяКатегория								КАК ТоварнаяКатегория,
		|	РСНастройки.НижняяГраница									КАК НижняяГраница,
		|	РСНастройки.ВерхняяГраница									КАК ВерхняяГраница,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(РСНастройки.Содержит, 1, 3) = ""   ""
		|			ТОГДА РСНастройки.Содержит
		|		ИНАЧЕ ""%"" + РСНастройки.Содержит + ""%""
		|	КОНЕЦ 														КАК Содержит,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(РСНастройки.НеСодержит, 1, 3) = ""   ""
		|			ТОГДА РСНастройки.НеСодержит
		|		ИНАЧЕ ""%"" + РСНастройки.НеСодержит + ""%""
		|	КОНЕЦ 														КАК НеСодержит,
		|	РСНастройки.Производитель									КАК Производитель
		|ПОМЕСТИТЬ КешНастройки
		|ИЗ
		|	ТаблицаНастройки КАК РСНастройки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Приоритет
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//3. Таблица номенклатуры для рассчета товарной категории
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Ссылка 											КАК Ссылка,
		|	ТаблицаНоменклатуры.ТоварнаяКатегория 								КАК ТоварнаяКатегория,
		|	ТаблицаНоменклатуры.Наименование                                    КАК Наименование,
		|	&ПустаяКатегория													КАК РассчитаннаяТоварнаяКатегория,
		|	ТаблицаНоменклатуры.Актуально			 							КАК Актуально,
		|	ТаблицаНоменклатуры.Остаток											КАК Остаток,
		|	ТаблицаНоменклатуры.Цена											КАК Цена
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//4. Формируем таблицу актуальной номенклатуры  
		
		//- номенклатуры нет в наличиии и актуальна
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Ссылка 						КАК Ссылка,
		|	ТаблицаНоменклатуры.Цена 						КАК Цена,
		|	ТаблицаНоменклатуры.Ссылка.Производитель 		КАК Производитель,
		|	ТаблицаНоменклатуры.Наименование 				КАК Наименование
		|ПОМЕСТИТЬ АктуальнаяНоменклатура
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		
		|ГДЕ
		|	ТаблицаНоменклатуры.Актуально = ИСТИНА
		|И	ТаблицаНоменклатуры.Остаток = 0
		|
		| ОБЪЕДИНИТЬ
		|
		//- номенклатура в наличиии 
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Ссылка 						КАК Ссылка,
		|	ТаблицаНоменклатуры.Цена 						КАК Цена,
		|	ТаблицаНоменклатуры.Ссылка.Производитель 		КАК Производитель,
		|	ТаблицаНоменклатуры.Наименование 				КАК Наименование
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|	
		|ГДЕ 
		|	ТаблицаНоменклатуры.Остаток <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//5. Формируем таблицу номенклатуры не актуальной и нет в наличии  
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Ссылка 						КАК Ссылка,
		|	ТоварныеКатегории.Ссылка 						КАК РассчитаннаяТоварнаяКатегория
		|ПОМЕСТИТЬ НеАктуальнаяНоменклатура
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТоварныеКатегории КАК ТоварныеКатегории
		|	ПО 
		|		ТоварныеКатегории.Владелец = &ВидНоменклатуры
		|	И 	НЕ ТоварныеКатегории.ПометкаУдаления
		|	И	ТоварныеКатегории.Наименование = ""Прочие""
		|
		|ГДЕ 
		|	ТаблицаНоменклатуры.Актуально = ЛОЖЬ
		|	И ТаблицаНоменклатуры.Остаток = 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//6. Рассчитываем ТК для актуальной номенклатуры согласно настроек  
		|ВЫБРАТЬ
		|	АктуальнаяНоменклатура.Ссылка 					КАК Ссылка,
		|	МИНИМУМ(КешНастройки.Приоритет) 				КАК Приоритет
		|ПОМЕСТИТЬ КешРассчитанныхКатегорий
		|ИЗ
		|	АктуальнаяНоменклатура КАК АктуальнаяНоменклатура
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешНастройки КАК КешНастройки
		|	ПО 
		|		(ВЫБОР
		|			КОГДА КешНастройки.НижняяГраница = 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ 
		|			АктуальнаяНоменклатура.Цена >= КешНастройки.НижняяГраница
		|		КОНЕЦ)
		|		
		|	И	(ВЫБОР
		|			КОГДА КешНастройки.ВерхняяГраница = 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ 
		|			АктуальнаяНоменклатура.Цена < КешНастройки.ВерхняяГраница
		|		КОНЕЦ)
		|		
		|	И	(ВЫБОР
		|			КОГДА КешНастройки.Производитель = ЗНАЧЕНИЕ(Справочник.Производители.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ 
		|			АктуальнаяНоменклатура.Производитель = КешНастройки.Производитель
		|		КОНЕЦ)
		|		
		|	И	(ВЫБОР
		|			КОГДА ПОДСТРОКА(КешНастройки.Содержит, 1, 3) = ""   ""
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ 
		|			АктуальнаяНоменклатура.Наименование ПОДОБНО КешНастройки.Содержит
		|		КОНЕЦ)
		|		
		|	И	(ВЫБОР
		|			КОГДА ПОДСТРОКА(КешНастройки.НеСодержит, 1, 3) = ""   ""
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ 
		|			НЕ АктуальнаяНоменклатура.Наименование ПОДОБНО КешНастройки.НеСодержит
		|		КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	АктуальнаяНоменклатура.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		////////////////////////////////////////////////////////////////////////////////
		//7. Подставляем рассчитанные товарные категории в таблицу номенклатуры
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Ссылка						КАК Ссылка,
		|	ТаблицаНоменклатуры.Наименование				КАК Наименование,
		|	ТаблицаНоменклатуры.ТоварнаяКатегория			КАК ТоварнаяКатегория,
		|	ТаблицаНоменклатуры.Актуально					КАК Актуально,
		|	ТаблицаНоменклатуры.Остаток						КАК Остаток,
		|	ТаблицаНоменклатуры.Цена						КАК Цена,
		|	ЕСТЬNULL(КешНастройки.ТоварнаяКатегория, ЕСТЬNULL(НеАктуальнаяНоменклатура.РассчитаннаяТоварнаяКатегория, &ПустаяКатегория)) КАК РассчитаннаяТоварнаяКатегория
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ КешРассчитанныхКатегорий КАК КешРассчитанныхКатегорий
		|		ЛЕВОЕ СОЕДИНЕНИЕ КешНастройки КАК КешНастройки
		|		ПО 
		|			КешРассчитанныхКатегорий.Приоритет = КешНастройки.Приоритет
		|	ПО 
		|		ТаблицаНоменклатуры.Ссылка = КешРассчитанныхКатегорий.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ НеАктуальнаяНоменклатура КАК НеАктуальнаяНоменклатура
		|	ПО 
		|		ТаблицаНоменклатуры.Ссылка = НеАктуальнаяНоменклатура.Ссылка
		|";
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаРасчитатьТоварнуюКатегориюНоменклатуры()

#КонецОбласти 

#Область СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	//Версия
	Версия = "1.0.1";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Настройка товарных категорий");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Настройка товарных категорий [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Настройка товарных категорий [" + Версия + "]", "МРМ", "ОткрытиеФормы", Ложь, "МРМ");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

#КонецОбласти


