

///////////////////////////////////////////////////////////////////////////////////////////
//						1.1. ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ НА СЕВЕРЕ
///////////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВидЦены = Параметры.ВидЦены;
	
	Заголовок = Заголовок + " (вид цены: "+Строка(ВидЦены)+")";
	
	ЗагрузитьEmailОповещенияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьEmailОповещенияНаСервере()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ЗагрузитьEmailОповещения(ЭтаФорма, ВидЦены);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

КонецПроцедуры // ЗаписатьПараметрыEmailНаСервере()

&НаСервере
Процедура ЗаписатьТаблицуНаСервере(Отказ)

	Отказ = Ложь;
	
	Для каждого СтрокаТаблицы Из ТЗ_СписокEmailРассылки Цикл
		Если СтрокаТаблицы.Склад.Пустая() Тогда
			Отказ = Истина;
			ВывестиСообщениеПользователю(ТЗ_СписокEmailРассылки.Индекс(СтрокаТаблицы), "Склад");
		КонецЕсли; 
		
		Если СтрокаТаблицы.Профиль.Пустая() Тогда
			Отказ = Истина;
			ВывестиСообщениеПользователю(ТЗ_СписокEmailРассылки.Индекс(СтрокаТаблицы), "Профиль");
		КонецЕсли;
		
		Если РеквизитФормыВЗначение("Объект").GetLibrary("Библиотека внешних обработок").ПроверитьЗаполнениеПочтовогоАдреса(СтрокаТаблицы.Кому) Тогда
			Отказ = Истина;
			ВывестиСообщениеПользователю(ТЗ_СписокEmailРассылки.Индекс(СтрокаТаблицы), "Кому");
		КонецЕсли;
	
	КонецЦикла; 
	
			
	Если Не Отказ Тогда
		ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
		ОбработкаОбъект.ДобавитьEmailОповещание(ВидЦены, ТЗ_СписокEmailРассылки.Выгрузить());
		ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	КонецЕсли;

КонецПроцедуры // ЗаписатьТаблицуНаСервере()

&НаСервере
Процедура ВывестиСообщениеПользователю(Индекс, ИмяПоля)

	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Поле обязательное для заполнения.";
	Сообщение.Поле = "ТЗ_СписокEmailРассылки["+Индекс+"]." + ИмяПоля;
	Сообщение.Сообщить(); 

КонецПроцедуры // ВывестиСообщениеПользователю()
 




&НаКлиенте
Процедура ТЗ_СписокEmailРассылкиПриИзменении(Элемент)
	Модифицированность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Отказ=Ложь;
	ЗаписатьТаблицуНаСервере(Отказ);
	Если Отказ Тогда Возврат; КонецЕсли;
	Модифицированность=Ложь;
	Закрыть(ПолучитьПредставлениеТаблицы());
КонецПроцедуры



&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Модифицированность Тогда
		Ответ = Вопрос("Данные изменились. Записать изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьТаблицуНаСервере(Отказ);
			Если Отказ Тогда Возврат; КонецЕсли;
			Модифицированность=Ложь;
			Закрыть(ПолучитьПредставлениеТаблицы());
		КонецЕсли;
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Модифицированность=Ложь;
		КонецЕсли;
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
 
 

&НаКлиенте
Функция ПолучитьПредставлениеТаблицы()

	Результат = "";
	Для каждого СтрокаТаблицы ИЗ ТЗ_СписокEmailРассылки Цикл
		Результат = Результат + СтрокаТаблицы.Кому + " ";
	КонецЦикла;
	
	Возврат Результат;

КонецФункции // ПолучитьПредставлениеТаблицы()

&НаКлиенте
Процедура ТЗ_СписокEmailРассылкиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	Элемент.ТекущиеДанные.ВидЦены = ВидЦены;
КонецПроцедуры
 



 