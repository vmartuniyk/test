
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Перем ДеревоПрайсов;
		
	УстановитьПривилегированныйРежим(Истина);
	Библиотека = РеквизитФормыВЗначение("Объект").GetLibrary("Библиотека внешних обработок");
	
	КодВладелец		= Параметры.Код;
	АртикулВладелец = Параметры.Артикул;
	Номенклатура	= Параметры.Номенклатура;
	Артикул 		= Номенклатура.Артикул;
	Наименование 	= Номенклатура.Наименование;
	Владелец 		= Параметры.Владелец;
	
	Запрос		 = Новый Запрос;
	Запрос.Текст =  ПолучитьТекстЗапросаТаблициКроссПривязки();
	Запрос.УстановитьПараметр("Артикул",      Артикул);
	Запрос.УстановитьПараметр("Владелец", 	  Владелец);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить(); 
	Если РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Объект.КроссПривязки.Загрузить(РезультатЗапроса.Выгрузить());
		
	НастройкаГлобальная = ХранилищеНастроекДанныхФорм.Загрузить("ДополнительныеНастройкиОбработокМодификацииКонфигурации", , , "ДополнительныеНастройкиОбработокМодификацииКонфигурации");
	Если НЕ НастройкаГлобальная.Свойство("ДеревоПрайсов", ДеревоПрайсов) Тогда
		Отказ = Истина;
		Возврат;		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаВыгрузкаНастроек();
   	//Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ТабПартнеры", Объект.КроссПривязки.Выгрузить());
	Запрос.УстановитьПараметр("ТабСоглашения", Библиотека.ПолучитьТаблицуПрайсов(НастройкаГлобальная));
	РезультатПакета = Запрос.ВыполнитьПакет();
	ВыгрузкаНастроек = РезультатПакета[РезультатПакета.ВГраница()-2].Выгрузить();
	Если ВыгрузкаНастроек.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;		
	КонецЕсли;
	
	
	
	
	ДлинаНаименования = СтрДлина(ОчиститьСтрокуОтПробелов(Наименование));
	Для Каждого Элемент ИЗ Объект.КроссПривязки Цикл
		
		ПроцентАртикул = 0;
		ПроцентНаименование = 0;
		РезультатПоиска = ВыгрузкаНастроек.Найти(Элемент.Партнер, "Партнер");
		Если РезультатПоиска = Неопределено Тогда
			Продолжить;	
		КонецЕсли;
		
		НастройкиПрофиляАнализа = РеквизитФормыВЗначение("Объект").ЗагрузитьНастройкиПрофиляАнализа(РезультатПоиска.Соглашение);
		Если ТипЗнч(НастройкиПрофиляАнализа) <> Тип("Структура") Тогда
			Продолжить;	
		КонецЕсли;
		НастройкиПрофиляАнализа.Свойство("Привязка", Элемент.КодПривязки);
		
		
		ДлинаЭлемента = СтрДлина(ОчиститьСтрокуОтПробелов(Элемент.Наименование));
		МассивСлов = Библиотека.РазобратьСтрокуВМассивПоПробелам(Элемент.Наименование);
		ЧислоСовпадений = 0;
		Для Каждого Слово Из МассивСлов Цикл
			Вхождений = СтрЧислоВхождений(Наименование, Слово);
			ЧислоСовпадений = ЧислоСовпадений + Вхождений * СтрДлина(Слово);
		КонецЦикла;
		
		ПроцентНаименование = (ЧислоСовпадений / ДлинаНаименования + ЧислоСовпадений / ДлинаЭлемента) / 2 * 100;
		
		Если Элемент.Артикул = Артикул Тогда
			ПроцентАртикул = 100;		
		Иначе
			
		КонецЕсли;
		
		Элемент.Процент = (ПроцентАртикул + ПроцентНаименование) / 2;
		Если Элемент.Процент >= 70 Тогда
			Элемент.Пометка = Истина;	
		КонецЕсли;
		
		Элемент.Валюта = РезультатПоиска.Соглашение.Валюта;
		
	КонецЦикла;
	
	Объект.КроссПривязки.Сортировать("Процент Убыв");
	УстановитьПривилегированныйРежим(Ложь);
		
КонецПроцедуры

&НаСервере
Функция ОчиститьСтрокуОтПробелов(Строка)
	Возврат СтрЗаменить(СтрЗаменить(Строка, Символ(160), ""), Символ(32), "");
КонецФункции



&НаКлиенте
Процедура ЗаписатьПривязки(Команда)
	ПривязатьКроссПривязки(Номенклатура);
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КроссПривязкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КроссПривязкиПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Процедура ПривязатьКроссПривязки(Номенклатура)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Для Каждого КроссПривязка Из Объект.КроссПривязки Цикл
		
		Если КроссПривязка.Пометка Тогда
			Если ОбработкаОбъект.ПроверитьПривязкуНоменклатуры(Номенклатура, КроссПривязка.Партнер) Тогда
				Продолжить;
			КонецЕсли;
			
			НоменклатураПоставщика = ОбработкаОбъект.ПолучитьСсылкуНаНоменклатуруПоставщика(КроссПривязка.КодПривязки, КроссПривязка.Код, КроссПривязка.Артикул, КроссПривязка.Наименование, КроссПривязка.Партнер);
			Если НоменклатураПоставщика = Неопределено Тогда
				Сообщить("Неизвестно почему привязывать к партнеру: " + КроссПривязка.Партнер + "!");	
				Продолжить;	
			КонецЕсли;

			ОбъектПоставщика = ОбработкаОбъект.ЗаписатьОбъектНоменклатурыПоставщика(Номенклатура, НоменклатураПоставщика, КроссПривязка.КодПривязки, КроссПривязка.Код, КроссПривязка.Артикул, КроссПривязка.Наименование, КроссПривязка.Партнер);
			
			НаборЗаписей = РегистрыСведений.ALPS_РазвернутыеСтроки.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Партнер		.Установить(КроссПривязка.Партнер);
			НаборЗаписей.Отбор.Код			.Установить(КроссПривязка.Код);
			НаборЗаписей.Отбор.Артикул		.Установить(КроссПривязка.Артикул);
			НаборЗаписей.Отбор.Наименование	.Установить(КроссПривязка.Наименование);
			НаборЗаписей.Отбор.Штрихкод		.Установить(КроссПривязка.Штрихкод);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() = 1 Тогда
				НаборЗаписей[0].Номенклатура 		   = Номенклатура;
				НаборЗаписей[0].НоменклатураПоставщика = ОбъектПоставщика.Ссылка;
				НаборЗаписей.Записать();
			КонецЕсли;
			
		КонецЕсли;
		
		Если КроссПривязка.Исключено Тогда
			НаборЗаписей = РегистрыСведений.ALPS_РазвернутыеСтрокиИсключения.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Номенклатура	.Установить(Номенклатура);
			НаборЗаписей.Отбор.Партнер		.Установить(КроссПривязка.Партнер);
			НаборЗаписей.Отбор.Код			.Установить(КроссПривязка.Код);
			НаборЗаписей.Отбор.Артикул		.Установить(КроссПривязка.Артикул);
			НаборЗаписей.Отбор.Наименование	.Установить(КроссПривязка.Наименование);
			НаборЗаписей.Отбор.Штрихкод		.Установить(КроссПривязка.Штрихкод);
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.Номенклатура = Номенклатура;
				ЗаполнитьЗначенияСвойств(НоваяЗапись, КроссПривязка);	
			НаборЗаписей.Записать(); 
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);	
	
КонецПроцедуры



Функция ПолучитьТекстЗапросаТаблициКроссПривязки()
	ТекстЗапроса  = "
		|ВЫБРАТЬ
		|	Партнер,
		|   Код,
		|   Артикул,
		|   Наименование,
		|	Штрихкод,
		|	Цена
		|
		|ИЗ
		|	РегистрСведений.ALPS_РазвернутыеСтроки
		|
		|ГДЕ
		|	Артикул = &Артикул
		|И	Артикул <> """"
		|И	НоменклатураПоставщика = Значение(Справочник.НоменклатураПоставщиков.ПустаяСсылка)
		|И	Партнер <> &Владелец
		|И	(Партнер, Код, Артикул, Наименование, Штрихкод) НЕ В (	ВЫБРАТЬ 
		|																Партнер, 
		|																Код, 
		|																Артикул, 
		|																Наименование, 
		|																Штрихкод 
		|															ИЗ 
		|																РегистрСведений.ALPS_РазвернутыеСтрокиИсключения 
		|															ГДЕ 
		|																Номенклатура = &Номенклатура 
		|															И 	Исключено
		|														  )
		|";
	Возврат ТекстЗапроса;
КонецФункции // ПолучитьТекстЗапросаТаблициКроссПривязки()

Функция ПолучитьТекстЗапросаВыгрузкаНастроек()
	ТекстЗапроса = "
		|ВЫБРАТЬ
	   	|	ТабПартнеры.Партнер
	   	|ПОМЕСТИТЬ Cache_Партнеры
	   	|ИЗ
	   	|	&ТабПартнеры КАК ТабПартнеры
	   	|;
	   	|
	   	////////////////////////////////////////////////////////////////////////////////
	   	|ВЫБРАТЬ
	   	|	ТабСоглашения.Соглашение
	   	|ПОМЕСТИТЬ Cache_Соглашения
	   	|ИЗ
	   	|	&ТабСоглашения КАК ТабСоглашения
	   	|;
		////////////////////////////////////////////////////////////////////////////////
	   	|ВЫБРАТЬ
	   	|	Cache_Партнеры.Партнер,
	   	|	Cache_Соглашения.Соглашение
	   	|ИЗ
	   	|	Cache_Партнеры КАК Cache_Партнеры
	   	|		
	   	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Cache_Соглашения КАК Cache_Соглашения
	   	|ПО Cache_Соглашения.Соглашение.Партнер = Cache_Партнеры.Партнер
	   	|
	   	|;
	   	|УНИЧТОЖИТЬ Cache_Партнеры;
	   	|УНИЧТОЖИТЬ Cache_Соглашения;";
	Возврат ТекстЗапроса;
КонецФункции // ПолучитьТекстЗапросаВыгрузкаНастроек()
 
 