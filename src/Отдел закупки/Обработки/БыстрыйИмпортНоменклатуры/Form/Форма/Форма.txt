
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СформироватьТаблицуНастроек();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиИмпорта

&НаКлиенте
Процедура НастройкиИмпортаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НастройкиИмпортаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьИмпорт(Команда)
	ВыполнитьИмпортНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРезультатАнализа

&НаКлиенте
Процедура РезультатАнализаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьТаблицуНастроек()

	НоваяСтрока = НастройкиИмпорта.Добавить();
	НоваяСтрока.ИмяКолонки = "Артикул";
	НоваяСтрока = НастройкиИмпорта.Добавить();
	НоваяСтрока.ИмяКолонки = "Наименование";
	НоваяСтрока = НастройкиИмпорта.Добавить();
	НоваяСтрока.ИмяКолонки = "Вид номенклатури";
	НоваяСтрока = НастройкиИмпорта.Добавить();
	НоваяСтрока.ИмяКолонки = "Группа номенклатури";

КонецПроцедуры // СформироватьТаблицуНастроек()


&НаСервере
Процедура ВыполнитьИмпортНаСервере()

	Если Не ПроверитьНастройкиИмпорта() Тогда
		Возврат;
	КонецЕсли;
	
	

КонецПроцедуры // ВыполнитьИмпортНаСервере()

&НаСервере
Функция ПроверитьНастройкиИмпорта()

	РезультатПроверки = Истина;
	
	Для Каждого СтрокаТаблицы Из НастройкиИмпорта Цикл
		
		ВывестиСтрокуРезультатаПроверки("Наименование", "наименованием номенклатуры", СтрокаТаблицы, РезультатПроверки);
		ВывестиСтрокуРезультатаПроверки("Вид номенклатури", "видом номенклатуры", СтрокаТаблицы, РезультатПроверки);
		ВывестиСтрокуРезультатаПроверки("Группа номенклатури", "группой номенклатуры", СтрокаТаблицы, РезультатПроверки);
		
	КонецЦикла;
	
	Возврат РезультатПроверки;

КонецФункции // ПроверитьНастройкиИмпорта()

&НаСервере
Процедура ВывестиСтрокуРезультатаПроверки(ИмяКолонки, СуффиксСообщения, СтрокаТаблицы, РезультатПроверки)

	Если СтрокаТаблицы.ИмяКолонки = ИмяКолонки Тогда
		Если СтрокаТаблицы.Использовать = Ложь Тогда
			ТекстСообщения = НСтр("ru='Для выполнения процедуры импорта необходимо установить галочку.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "НастройкиИмпорта[" + НастройкиИмпорта.Индекс(СтрокаТаблицы) + "].Использовать");
			РезультатПроверки = Ложь;
		КонецЕсли;
		Если СтрокаТаблицы.НомерКолонки = 0 Тогда
			ТекстСообщения = НСтр("ru='Для выполнения процедуры импорта необходимо указать номер колонки из %1.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СуффиксСообщения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "НастройкиИмпорта[" + НастройкиИмпорта.Индекс(СтрокаТаблицы) + "].Использовать");
			РезультатПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ВывестиСтрокуРезультатаПроверки()
 
&НаСервере
Функция СформироватьТаблицуДанныхИмпорта()

	ТаблицаДанных = Новый ТаблицаЗначений;
	ТаблицаДанных.Колонки.Добавить("Артикул", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("ВидНоменклатуры", Новый ОписаниеТипов("Строка"));
	ТаблицаДанных.Колонки.Добавить("ГруппаНоменклатуры", Новый ОписаниеТипов("Строка"));
	
	Возврат ТаблицаДанных;

КонецФункции // СформироватьТаблицуДанныхИмпорта()
 

#КонецОбласти