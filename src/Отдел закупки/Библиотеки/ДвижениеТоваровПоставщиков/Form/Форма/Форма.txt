

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ДокументыБезДвиженийПриАктивизацииСтроки(Элемент)
	
	ТДанные = Элементы.ДокументыБезДвижений.ТекущиеДанные;
	Если ТДанные <> Неопределено Тогда
		ДокументПоступления.Очистить();
		Документ = ТДанные.ДокументДвижения;
		УдалитьДвиженияПриИзмененииНаСервере();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДвиженияПриИзменении(Элемент)
	УдалитьДвиженияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДокументПоступленияДокументПоступленияПриИзменении(Элемент)
	ТДанные = Элементы.ДокументПоступления.ТекущиеДанные;
	Если ТДанные <> Неопределено Тогда
		Если ТипЗнч(ТДанные.ДокументПоступления) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			ТДанные.Поставщик = ПолучитьПоставщикаИзДокумента(ТДанные.ДокументПоступления);	
		Иначе
			ТДанные.Поставщик = Неопределено;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументПоступленияДокументПоступленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Обработчик 			 = Новый ОписаниеОповещения("ДокументПоступленияДокументПоступленияНачалоВыбораОповещения", ЭтаФорма, Новый Структура("Элемент", Элемент));
	
	ТДанные = Элементы.ДокументПоступления.ТекущиеДанные;
	Если ТДанные <> Неопределено Тогда
		
		Элемент.СписокВыбора.ЗагрузитьЗначения(ПолучитьСписокОстатковПоПартиям(ТДанные.АналитикаУчетаНоменклатуры));	
		
		НачальныйЭлемент = Элемент.СписокВыбора.НайтиПоЗначению(ТДанные.ДокументПоступления);
		Если НачальныйЭлемент = Неопределено Тогда
			ПоказатьВыборИзСписка(Обработчик, Элемент.СписокВыбора, Элемент);
		Иначе 
			ПоказатьВыборИзСписка(Обработчик, Элемент.СписокВыбора, Элемент, НачальныйЭлемент);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ДокументПоступленияДокументПоступленияНачалоВыбора()

&НаКлиенте
Процедура ДокументПоступленияДокументПоступленияНачалоВыбораОповещения(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		Если ДополнительныеПараметры.Свойство("Элемент") Тогда 
			Элементы.ДокументПоступления.ТекущиеДанные.ДокументПоступления = ВыбранныйЭлемент.Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ДокументПоступленияДокументПоступленияНачалоВыбораОповещения()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПартии(Команда)
	ЗаполнитьПартииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПартии(Команда)
	УдалитьПартииНаСервере(Документ);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПартии(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ПолучитьПодтверждениеПользователя", ЭтаФорма, "ОчиститьПартииНаСервере");
	ПоказатьВопрос(ОписаниеОповещения, "Вы точно хотите выполнить данную операцию?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПартии(Команда)
	СохранитьПартииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНедостающиеПозиции(Команда)
	ЗаполнитьНедостающиеПозицииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуПартий(Команда)
	ПроверитьКорретностьУчетаНаСервере();
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПолучитьПодтверждениеПользователя(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если Параметры = "ОчиститьПартииНаСервере" Тогда
			ОчиститьПартииНаСервере();		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры



&НаСервере
Процедура УдалитьДвиженияПриИзмененииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	*
		|ИЗ
		|	РегистрНакопления.КТС_ДвижениеТоваровПоставщиков
		|ГДЕ
		|	Регистратор = &Регистратор
		|";
	Запрос.УстановитьПараметр("Регистратор", Документ);
	ДокументПоступления.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПартииНаСервере()
	РеквизитФормыВЗначение("Объект").ВыполнитьДвиженияПоПартиям(Дата, ПоМесяцам);
	ПроверитьКорретностьУчетаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьКорретностьУчетаНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаОтрицательныхОстатков();
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата)); 
	Запрос.УстановитьПараметр("ГраницаКонецПериода", Новый Граница(КонецМесяца(Дата), ВидГраницы.Включая));
	ОтрицательныеОстатки.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Запрос.Текст = ПолучитьТекстЗапросаДокументыБезДвижений();
	ДокументыБезДвижений.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры // ПроверитьКорретностьУчетаНаСервере()

&НаСервереБезКонтекста
Процедура УдалитьПартииНаСервере(Документ)
	НаборЗаписей = РегистрыНакопления.КТС_ДвижениеТоваровПоставщиков.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Документ);
	НаборЗаписей.Записать();
КонецПроцедуры

&НаСервере
Процедура ОчиститьПартииНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	Регистратор
		|ИЗ
		|	РегистрНакопления.КТС_ДвижениеТоваровПоставщиков
		|ГДЕ
		|	Период >= &НачалоПериода
		|И	Период <= &КонецПериода
		|";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыНакопления.КТС_ДвижениеТоваровПоставщиков.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры // ОчиститьПартииНаСервере()

&НаСервере
Процедура СохранитьПартииНаСервере()
	
	НаборЗаписей = РегистрыНакопления.КТС_ДвижениеТоваровПоставщиков.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Документ);
	НаборЗаписей.Загрузить(ДокументПоступления.Выгрузить());
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНедостающиеПозицииНаСервере()
	
	Запрос = Новый Запрос;
	Если ТипЗнч(Документ) <> Тип("ДокументСсылка.ПеремещениеТоваров") Тогда	
		Запрос.Текст = "
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ТипЗначения(Документ.Ссылка) = Тип(Документ.РеализацияТоваровУслуг)
			|			ТОГДА Значение(ВидДвиженияНакопления.Расход)
			|		КОГДА ТипЗначения(Документ.Ссылка) = Тип(Документ.СписаниеНедостачТоваров)
			|			ТОГДА Значение(ВидДвиженияНакопления.Расход)
			|	КОНЕЦ 						КАК ВидДвижения,
			|	Аналитика.Ссылка 			КАК АналитикаУчетаНоменклатуры,
			|	Сумма(Документ.Количество) 	КАК Количество
			|ИЗ
			|	Документ." + Документ.Метаданные().Имя + ".Товары КАК Документ
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
			|ПО	Аналитика.Номенклатура = Документ.Номенклатура
			|И	Аналитика.Склад		   = Документ.Ссылка.Склад
			|
			|ГДЕ
			|	Документ.Ссылка = &Ссылка
			|И	Документ.Номенклатура.ТипНоменклатуры <> Значение(Перечисление.ТипыНоменклатуры.Услуга)
			|
			|СГРУППИРОВАТЬ ПО
			|	Документ.Ссылка,
			|	Аналитика.Ссылка
			|";
	Иначе
		Запрос.Текст = "
			|ВЫБРАТЬ
			|	Значение(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
			|	Аналитика.Ссылка 						КАК АналитикаУчетаНоменклатуры,
			|	Сумма(Документ.Количество) 				КАК Количество
			|ИЗ
			|	Документ." + Документ.Метаданные().Имя + ".Товары КАК Документ
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
			|ПО	Аналитика.Номенклатура = Документ.Номенклатура
			|И	Аналитика.Склад		   = Документ.Ссылка.СкладОтправитель
			|
			|ГДЕ
			|	Документ.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	Документ.Ссылка,
			|	Аналитика.Ссылка
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	Значение(ВидДвиженияНакопления.Приход), 
			|	Аналитика.Ссылка,
			|	Сумма(Документ.Количество)
			|ИЗ
			|	Документ." + Документ.Метаданные().Имя + ".Товары КАК Документ
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
			|ПО	Аналитика.Номенклатура = Документ.Номенклатура
			|И	Аналитика.Склад		   = Документ.Ссылка.СкладПолучатель
			|
			|ГДЕ
			|	Документ.Ссылка = &Ссылка
			|
			|СГРУППИРОВАТЬ ПО
			|	Документ.Ссылка,
			|	Аналитика.Ссылка
			|";
		
	КонецЕсли;
			
	Запрос.УстановитьПараметр("Ссылка", Документ);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаВыгрузки ИЗ Выгрузка Цикл
		
		ПараметрыОтбора = Новый Структура("АналитикаУчетаНоменклатуры", СтрокаВыгрузки.АналитикаУчетаНоменклатуры);
		РезультатПоиска = ДокументПоступления.НайтиСтроки(ПараметрыОтбора);	
		Если РезультатПоиска.Количество() = 0 Тогда
			ДобавитьНовуюСтроку(СтрокаВыгрузки, СтрокаВыгрузки.Количество);
		Иначе
			Количество = 0;
			Для каждого ЭлементПоиска Из РезультатПоиска Цикл
				Количество = Количество + ЭлементПоиска.Количество;		
			КонецЦикла;
			
			Если Количество <> СтрокаВыгрузки.Количество Тогда
				ДобавитьНовуюСтроку(СтрокаВыгрузки, СтрокаВыгрузки.Количество - Количество);	
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры // ЗаполнитьНедостающиеПозицииНаСервере()

&НаСервере
Процедура ДобавитьНовуюСтроку(СтрокаВыгрузки, Количество)
	
	НоваяСтрока = ДокументПоступления.Добавить();
	НоваяСтрока.Контроль					= Истина;
	НоваяСтрока.Период 						= Документ.Дата;
	НоваяСтрока.ВидДвижения 				= СтрокаВыгрузки.ВидДвижения;
	НоваяСтрока.Регистратор 				= Документ;
	НоваяСтрока.АналитикаУчетаНоменклатуры 	= СтрокаВыгрузки.АналитикаУчетаНоменклатуры;
	НоваяСтрока.Количество 					= Количество;		
	
КонецПроцедуры // СоздатьНовуюСтроку()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОтрицательныхОстатков()
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	*
		|ИЗ
		|	РегистрНакопления.КТС_ДвижениеТоваровПоставщиков.Остатки(&ГраницаКонецПериода, ) КАК КТС_ДвижениеТоваровПоставщиковОстаткиИОбороты
		|ГДЕ
		|	КоличествоОстаток < 0
		|	
		|УПОРЯДОЧИТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаОтрицательныхОстатков()

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаДокументыБезДвижений()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ПТ.Ссылка.Дата			КАК Дата,
		|	ПТ.Ссылка 				КАК Регистратор,
		|	ПТ.Номенклатура			КАК Номенклатура,
		|	СУММА(ПТ.Количество) 	КАК Количество
		|ПОМЕСТИТЬ ПТ
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПТ	
		|ГДЕ
		|	Ссылка.Проведен
		|И	Ссылка.Дата <= &КонецПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	ПТ.Ссылка,
		|	ПТ.Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	РТиУ.Ссылка.Дата		КАК Дата,
		|	РТиУ.Ссылка 			КАК Регистратор,
		|	РТиУ.Номенклатура		КАК Номенклатура,
		|	СУММА(РТиУ.Количество) 	КАК Количество
		|ПОМЕСТИТЬ РТиУ
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РТиУ	
		|ГДЕ
		|	Ссылка.Проведен
		|И	Ссылка.Дата <= &КонецПериода
		|И	РТиУ.Номенклатура.ТипНоменклатуры <> Значение(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	РТиУ.Ссылка,
		|	РТиУ.Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	СНТ.Ссылка.Дата			КАК Дата,
		|	СНТ.Ссылка 				КАК Регистратор,
		|	СНТ.Номенклатура		КАК Номенклатура,
		|	СУММА(СНТ.Количество) 	КАК Количество
		|ПОМЕСТИТЬ СНТ
		|ИЗ
		|	Документ.СписаниеНедостачТоваров.Товары КАК СНТ	
		|ГДЕ
		|	Ссылка.Проведен
		|И	Ссылка.Дата <= &КонецПериода
		|И	СНТ.Номенклатура.ТипНоменклатуры <> Значение(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	СНТ.Ссылка,
		|	СНТ.Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ВПТ.Ссылка.Дата			КАК Дата,
		|	ВПТ.Ссылка 				КАК Регистратор,
		|	ВПТ.Номенклатура		КАК Номенклатура,
		|	СУММА(ВПТ.Количество) 	КАК Количество
		|ПОМЕСТИТЬ ВПТ
		|ИЗ
		|	Документ.ВнутреннееПотреблениеТоваров.Товары КАК ВПТ	
		|ГДЕ
		|	Ссылка.Проведен
		|И	Ссылка.Дата <= &КонецПериода
		|И	ВПТ.Номенклатура.ТипНоменклатуры <> Значение(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВПТ.Ссылка,
		|	ВПТ.Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ВТП.Ссылка.Дата			КАК Дата,
		|	ВТП.Ссылка 				КАК Регистратор,
		|	ВТП.Номенклатура		КАК Номенклатура,
		|	СУММА(ВТП.Количество) 	КАК Количество
		|ПОМЕСТИТЬ ВТП
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику.Товары КАК ВТП	
		|ГДЕ
		|	Ссылка.Проведен
		|И	Ссылка.Дата <= &КонецПериода
		|И	ВТП.Номенклатура.ТипНоменклатуры <> Значение(Перечисление.ТипыНоменклатуры.Услуга)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТП.Ссылка,
		|	ВТП.Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	СБ.Ссылка.Дата			КАК Дата,
		|	СБ.Ссылка 				КАК Регистратор,
		|	СБ.Номенклатура			КАК Номенклатура,
		|	СУММА(СБ.Количество) 	КАК Количество
		|ПОМЕСТИТЬ СБ
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК СБ	
		|ГДЕ
		|	Ссылка.Проведен
		|И	Ссылка.Дата <= &КонецПериода
		|И	СБ.Номенклатура.ТипНоменклатуры <> Значение(Перечисление.ТипыНоменклатуры.Услуга)
		|И	Ссылка.ТипОперации = Значение(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|
		|СГРУППИРОВАТЬ ПО
		|	СБ.Ссылка,
		|	СБ.Номенклатура
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ДТП.Регистратор 							КАК Регистратор,
		|	ДТП.АналитикаУчетаНоменклатуры.Номенклатура	КАК Номенклатура,
		|	ISNUll(СУММА(ДТП.Количество), 0) 			КАК Количество
		|ПОМЕСТИТЬ ДТП
		|ИЗ
		|	РегистрНакопления.КТС_ДвижениеТоваровПоставщиков КАК ДТП	
		|ГДЕ
		|	ВидДвижения = Значение(ВидДвиженияНакопления.Расход)
		|И	Период <= &КонецПериода
		|
		|СГРУППИРОВАТЬ ПО
		|	ДТП.Регистратор,
		|	ДТП.АналитикаУчетаНоменклатуры
		|;
		////////////////////////////////////////////////////////////////////////////////
		//
		|ВЫБРАТЬ
		|	ПТ.Дата						КАК Дата,
		|	ПТ.Регистратор				КАК ДокументДвижения,
		|	ПТ.Количество				КАК КоличествоВДокументе,
		|	IsNull(ДТП.Количество, 0)  	КАК КоличествоВРегистре
		|ИЗ
		|	ПТ КАК ПТ
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ДТП КАК ДТП
		|ПО	ДТП.Регистратор 	= ПТ.Регистратор
		|И	ДТП.Номенклатура 	= ПТ.Номенклатура
		|			
		|ГДЕ 
		|	ПТ.Количество <> IsNull(ДТП.Количество, 0)
		|	
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	РТиУ.Дата					КАК Дата,
		|	РТиУ.Регистратор			КАК ДокументДвижения,
		|	РТиУ.Количество				КАК КоличествоВДокументе,
		|	IsNull(ДТП.Количество, 0)  	КАК КоличествоВРегистре
		|ИЗ
		|	РТиУ КАК РТиУ
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ДТП КАК ДТП
		|ПО	ДТП.Регистратор  = РТиУ.Регистратор
		|И	ДТП.Номенклатура = РТиУ.Номенклатура
		|			
		|ГДЕ 
		|	РТиУ.Количество <> IsNull(ДТП.Количество, 0)
		|	
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	СНТ.Дата					КАК Дата,
		|	СНТ.Регистратор				КАК ДокументДвижения,
		|	СНТ.Количество				КАК КоличествоВДокументе,
		|	IsNull(ДТП.Количество, 0)  	КАК КоличествоВРегистре
		|ИЗ
		|	СНТ КАК СНТ
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ДТП КАК ДТП
		|ПО	ДТП.Регистратор  = СНТ.Регистратор
		|И	ДТП.Номенклатура = СНТ.Номенклатура
		|			
		|ГДЕ 
		|	СНТ.Количество <> IsNull(ДТП.Количество, 0)
		|	
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВПТ.Дата					КАК Дата,
		|	ВПТ.Регистратор				КАК ДокументДвижения,
		|	ВПТ.Количество				КАК КоличествоВДокументе,
		|	IsNull(ДТП.Количество, 0)  	КАК КоличествоВРегистре
		|ИЗ
		|	ВПТ КАК ВПТ
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ДТП КАК ДТП
		|ПО	ДТП.Регистратор  = ВПТ.Регистратор
		|И	ДТП.Номенклатура = ВПТ.Номенклатура
		|			
		|ГДЕ 
		|	ВПТ.Количество <> IsNull(ДТП.Количество, 0)
		|	
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВТП.Дата					КАК Дата,
		|	ВТП.Регистратор				КАК ДокументДвижения,
		|	ВТП.Количество				КАК КоличествоВДокументе,
		|	IsNull(ДТП.Количество, 0)  	КАК КоличествоВРегистре
		|ИЗ
		|	ВТП КАК ВТП
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ДТП КАК ДТП
		|ПО	ДТП.Регистратор  = ВТП.Регистратор
		|И	ДТП.Номенклатура = ВТП.Номенклатура
		|			
		|ГДЕ 
		|	ВТП.Количество <> IsNull(ДТП.Количество, 0)
		|	
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	СБ.Дата					КАК Дата,
		|	СБ.Регистратор				КАК ДокументДвижения,
		|	СБ.Количество				КАК КоличествоВДокументе,
		|	IsNull(ДТП.Количество, 0)  	КАК КоличествоВРегистре
		|ИЗ
		|	СБ КАК СБ
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ ДТП КАК ДТП
		|ПО	ДТП.Регистратор  = СБ.Регистратор
		|И	ДТП.Номенклатура = СБ.Номенклатура
		|			
		|ГДЕ 
		|	СБ.Количество <> IsNull(ДТП.Количество, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата Возр
		|";
	Возврат ТекстЗапроса;
	
КонецФункции // ПолучитьТекстЗапросаДокументыБезДвижений()


&НаСервере
Функция ПолучитьСписокОстатковПоПартиям(АналитикаУчетаНоменклатуры)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ДокументПоступления
		|ИЗ
		|	РегистрНакопления.КТС_ДвижениеТоваровПоставщиков.Остатки(&КонецПериода, АналитикаУчетаНоменклатуры = &АналитикаУчетаНоменклатуры)
		|";
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Документ.Дата));
	Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", АналитикаУчетаНоменклатуры);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДокументПоступления");
		
КонецФункции // ПолучитьСписокОстатковПоПартиям()

&НаСервереБезКонтекста
Функция ПолучитьПоставщикаИзДокумента(ДокументПоступления)
	
	Возврат ДокументПоступления.Партнер;
	
КонецФункции // ПолучитьПоставщикаИзДокумента() 



#КонецОбласти 

