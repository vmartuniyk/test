
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура ВыполнитьДвиженияПоПартиям() Экспорт
	
	ДатаНачала = Дата(2014, 02, 03);
	ДатаОкончания = КонецДня(Дата(2014, 02, 03));//НачалоДня(ТекущаяДата());
	
	Пока ДатаНачала <> ДатаОкончания Цикл	
		ВыполнитьДвиженияПриход_1(ДатаНачала);
		ВыполнитьДвиженияРасход_1(ДатаНачала);
		ДатаНачала = ДатаНачала + 86400;
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Контроль отрицательных остатков

Процедура ВыполнитьКонтрольОтрицательныхОстатков(Ссылка, Отказ)

	РезультатОстаток = ПолучитьОстаток();
	
	Если Не РезультатОстаток.Пустой() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Внимание обнаружены отрицательные остатки.", Ссылка);
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры
 
Функция ПолучитьОстаток()
	Запрос 			= Новый Запрос;
	Запрос.Текст 	=
					"ВЫБРАТЬ
					|	АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
					|	Поставщик КАК Поставщик,
					|	ДокументПоступления КАК ДокументПоступления,
					|	КоличествоОстаток
					|ИЗ
					|	РегистрНакопления.КТС_ДвижениеТоваровПоставщиков.Остатки(, )
					|ГДЕ
					|	КоличествоОстаток < 0";
	Возврат	Запрос.Выполнить();
КонецФункции




// Движения "приход" по регистру

Процедура ВыполнитьДвиженияПриход_1(Дата)

	НаборЗаписей = РегистрыНакопления.КТС_ДвижениеТоваровПоставщиков.СоздатьНаборЗаписей();
	
	Запрос 			= Новый Запрос;
	Запрос.Текст    = ПолучитьТекстЗапросаДвиженияПриход();
	Запрос.УстановитьПараметр("ДатаНачало", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));		
	ВыборкаДокументы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДокументы.ДокументПоступления);	
		
		ВыборкаДетальныеЗаписи = ВыборкаДокументы.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, ВыборкаДетальныеЗаписи);
		КонецЦикла; 
		
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
		
	КонецЦикла; 

КонецПроцедуры

Функция ПолучитьТекстЗапросаДвиженияПриход()

	ТекстЗапроса = "
					|ВЫБРАТЬ
				   |	Номенклатура 														КАК Номенклатура,
				   |	Характеристика      												КАК Характеристика,
				   |	Склад																КАК Склад,
				   |	Ссылка.Партнер														КАК Поставщик,
				   |	СУММА(Количество)   												КАК Количество,
				   |	ВЫРАЗИТЬ(СУММА(СуммаСНДС) / СУММА(Количество) КАК ЧИСЛО(15, 2))   	КАК ЦенаПрихода,
				   |	Ссылка.Дата															КАК ДатаПрихода,
				   |	Ссылка.Дата															КАК Период,
				   |	Ссылка																КАК ДокументПоступления
				   |ПОМЕСТИТЬ ТаблицаБезАналитики 
				   |ИЗ
				   |	Документ.ПоступлениеТоваровУслуг.Товары
				   |ГДЕ
				   |	Ссылка.Проведен
				   |	И Ссылка.Дата 				   >= &ДатаНачало
				   |	И Ссылка.Дата 				   <= &ДатаОкончания
				   |	И Номенклатура.Типноменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар) 
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
				   |	Характеристика,
				   |	Склад,
				   |	Ссылка
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   // Ввод остатков
				   |ВЫБРАТЬ
				   |	Номенклатура 														КАК Номенклатура,
				   |	Характеристика      												КАК Характеристика,
				   |	Ссылка.Склад														КАК Склад,
				   |	Ссылка.Партнер														КАК Поставщик,
				   |	СУММА(Количество)   												КАК Количество,
				   |	ВЫРАЗИТЬ(СУММА(Сумма) / СУММА(Количество) КАК ЧИСЛО(15, 2))   		КАК ЦенаПрихода,
				   |	Ссылка.Дата															КАК ДатаПрихода,
				   |	Ссылка.Дата															КАК Период,
				   |	Ссылка																КАК ДокументПоступления
				   |ИЗ
				   |	Документ.ВводОстатков.Товары
				   |ГДЕ
				   |	Ссылка.Проведен
				   |	И Ссылка.Дата 				   >= &ДатаНачало
				   |	И Ссылка.Дата 				   <= &ДатаОкончания
				   |	И Ссылка.ТипОперации 		   = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров)
				   |	И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар) 
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
				   |	Характеристика,
				   |	Ссылка
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   // Оприходование излишков товаров
				   |ВЫБРАТЬ
				   |	Номенклатура 														КАК Номенклатура,
				   |	Характеристика      												КАК Характеристика,
				   |	Ссылка.Склад														КАК Склад,
				   |	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)							КАК Поставщик,
				   |	СУММА(Количество)   												КАК Количество,
				   |	ВЫРАЗИТЬ(СУММА(Сумма) / СУММА(Количество) КАК ЧИСЛО(15, 2))   		КАК ЦенаПрихода,
				   |	Ссылка.Дата															КАК ДатаПрихода,
				   |	Ссылка.Дата															КАК Период,
				   |	Ссылка																КАК ДокументПоступления
				   |ИЗ
				   |	Документ.ОприходованиеИзлишковТоваров.Товары
				   |ГДЕ
				   |	Ссылка.Проведен
				   |	И Ссылка.Дата 				   >= &ДатаНачало
				   |	И Ссылка.Дата 				   <= &ДатаОкончания
				   |	И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
				   |	Характеристика,
				   |	Ссылка
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   // Сборка товаров (сборка из комплектующих)
				   |ВЫБРАТЬ
				   |	Номенклатура 													КАК Номенклатура,
				   |	Характеристика      											КАК Характеристика,
				   |	Склад															КАК Склад,
				   |	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)						КАК Поставщик,
				   |	Количество   													КАК Количество,
				   |	0   															КАК ЦенаПрихода,
				   |	Дата															КАК ДатаПрихода,
				   |	Дата															КАК Период,
				   |	Ссылка															КАК ДокументПоступления
				   |ИЗ
				   |	Документ.СборкаТоваров
				   |ГДЕ
				   |	Проведен
				   |	И Дата 				   		   >= &ДатаНачало
				   |	И Дата 				   		   <= &ДатаОкончания
				   |	И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
				   |	И ТипОперации				   = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   // Сборка товаров (разборка на комплектующие)
				   |ВЫБРАТЬ
				   |	Номенклатура 													КАК Номенклатура,
				   |	Характеристика      											КАК Характеристика,
				   |	Ссылка.Склад													КАК Склад,
				   |	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)						КАК Поставщик,
				   |	СУММА(Количество)												КАК Количество,
				   |	0   															КАК ЦенаПрихода,
				   |	Ссылка.Дата														КАК ДатаПрихода,
				   |	Ссылка.Дата														КАК Период,
				   |	Ссылка															КАК ДокументПоступления
				   |ИЗ
				   |	Документ.СборкаТоваров.Товары
				   |ГДЕ
				   |	Ссылка.Проведен
				   |	И Ссылка.Дата 				   >= &ДатаНачало
				   |	И Ссылка.Дата 				   <= &ДатаОкончания
				   |	И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
				   |	И Ссылка.ТипОперации		   = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
				   |	Характеристика,
				   |	Ссылка
				   |
				   |ОБЪЕДИНИТЬ ВСЕ
				   |
				   // Возврат товаров от клиента
				   |ВЫБРАТЬ
				   |	Номенклатура 													КАК Номенклатура,
				   |	Характеристика      											КАК Характеристика,
				   |	Ссылка.Склад													КАК Склад,
				   |	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)						КАК Поставщик,
				   |	СУММА(Количество)												КАК Количество,
				   |	СУММА(СуммаСНДС) / СУММА(Количество)							КАК ЦенаПрихода,
				   |	Ссылка.Дата														КАК ДатаПрихода,
				   |	Ссылка.Дата														КАК Период,
				   |	Ссылка															КАК ДокументПоступления
				   |ИЗ
				   |	Документ.ВозвратТоваровОтКлиента.Товары
				   |ГДЕ
				   |	Ссылка.Проведен
				   |	И Ссылка.Дата 				   >= &ДатаНачало
				   |	И Ссылка.Дата 				   <= &ДатаОкончания
				   |	И Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
				   |	Характеристика,
				   |	Ссылка
				   |;
				   |
				   |ВЫБРАТЬ
				   |	АналитикаНоменклатуры.КлючАналитики 									КАК АналитикаУчетаНоменклатуры,
				   |	ТаблицаБезАналитики.Поставщик											КАК Поставщик,
				   |	ТаблицаБезАналитики.Количество											КАК Количество,
				   |	ТаблицаБезАналитики.ЦенаПрихода											КАК ЦенаПрихода,
				   |	ТаблицаБезАналитики.ДатаПрихода											КАК ДатаПрихода,
				   |	ТаблицаБезАналитики.Период												КАК Период,
				   |	ТаблицаБезАналитики.ДокументПоступления     							КАК ДокументПоступления,
				   |	ТаблицаБезАналитики.ДокументПоступления     							КАК Регистратор
	   |ИЗ
	   |	ТаблицаБезАналитики КАК ТаблицаБезАналитики
	   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	   |		ПО ТаблицаБезАналитики.Номенклатура 	 = АналитикаНоменклатуры.Номенклатура
	   |			И ТаблицаБезАналитики.Характеристика = АналитикаНоменклатуры.Характеристика
	   |			И ТаблицаБезАналитики.Склад 		 = АналитикаНоменклатуры.Склад
	   |             
		|ИТОГИ ПО
		|	ДокументПоступления
				   |
				   |;
				   |УНИЧТОЖИТЬ ТаблицаБезАналитики;
				   |";
				   
				 //  |ИТОГИ ПО
				 //  |	ДокументПоступления";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаДвиженияПьриход()




// Движения "расход" по регистру

Процедура ВыполнитьДвиженияРасход_1(Дата)
	
	Запрос 			= Новый Запрос;
	Запрос.Текст    = ПолучитьТекстЗапросаДвиженияРасход();	
	Запрос.УстановитьПараметр("ДатаНачало", НачалоДня(Дата));
	Запрос.УстановитьПараметр("ДатаОкончание", КонецДня(Дата));	
	Выборка = Запрос.Выполнить().Выбрать();	
	Пока Выборка.Следующий() Цикл
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ВыполнитьДвижениеРасходРеализацияТоваровУслуг(Выборка.Ссылка);
		КонецЕсли;
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			ВыполнитьДвижениеРасходВозвратТоваровПоставщику(Выборка.Ссылка);
		КонецЕсли;
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров") Тогда
			ВыполнитьДвижениеРасходВнутреннееПотреблениеТоваров(Выборка.Ссылка);
		КонецЕсли;
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СписаниеНедостачТоваров") Тогда
			ВыполнитьДвижениеРасходСписаниеНедостачТоваров(Выборка.Ссылка);
		КонецЕсли;
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.СборкаТоваров") Тогда
			ВыполнитьДвижениеРасходСборкаТоваров(Выборка.Ссылка);
		КонецЕсли;
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			ВыполнитьДвижениеРасходПеремещениеТоваров(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыполнитьДвижениеРасходРеализацияТоваровУслуг(ДокументСсылка)
	
	ТекстЗапроса = ПолучитьТекстЗапросаРеализацияТоваровУслуг(ДокументСсылка);	
	ВыполнитьЗаписьДвиженийРасход(ДокументСсылка, ТекстЗапроса);
	
КонецПроцедуры

Процедура ВыполнитьДвижениеРасходВозвратТоваровПоставщику(ДокументСсылка)
	
	ТекстЗапроса = ПолучитьТекстЗапросаВозвратТоваровПоставщику(ДокументСсылка);	
	ВыполнитьЗаписьДвиженийРасход(ДокументСсылка, ТекстЗапроса);
	
КонецПроцедуры

Процедура ВыполнитьДвижениеРасходВнутреннееПотреблениеТоваров(ДокументСсылка)
	
	ТекстЗапроса = ПолучитьТекстЗапросаВнутреннееПотребление(ДокументСсылка);	
	ВыполнитьЗаписьДвиженийРасход(ДокументСсылка, ТекстЗапроса);
	
КонецПроцедуры

Процедура ВыполнитьДвижениеРасходСписаниеНедостачТоваров(ДокументСсылка)
	
	ТекстЗапроса = ПолучитьТекстЗапросаСписаниеНедостач(ДокументСсылка);	
	ВыполнитьЗаписьДвиженийРасход(ДокументСсылка, ТекстЗапроса);
	
КонецПроцедуры

Процедура ВыполнитьДвижениеРасходСборкаТоваров(ДокументСсылка)
	
	Если ДокументСсылка.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих Тогда
		ТекстЗапроса = ПолучитьТекстЗапросаСборкаТоваров(ДокументСсылка);	                                             	
		ВыполнитьЗаписьДвиженийРасход(ДокументСсылка, ТекстЗапроса);
	Иначе
		ТекстЗапроса = ПолучитьТекстЗапросаРазборкаТоваров(ДокументСсылка);	                                             	
		ВыполнитьЗаписьДвиженийРасход(ДокументСсылка, ТекстЗапроса);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьДвижениеРасходПеремещениеТоваров(ДокументСсылка)
	
	НаборЗаписей = РегистрыНакопления.КТС_ДвижениеТоваровПоставщиков.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
	
	Запрос 			= Новый Запрос;
	Запрос.Текст    = ПолучитьТекстЗапросаПеремещениеТоваров(ДокументСсылка);				
	Запрос.УстановитьПараметр("Ссылка", 			ДокументСсылка);
	Запрос.УстановитьПараметр("Период", 			ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("МоментВремени", 		ДокументСсылка.МоментВремени());
	Запрос.УстановитьПараметр("ВидДвиженияРасход",	ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ВидДвиженияПриход",	ВидДвиженияНакопления.Приход);
	Запрос.УстановитьПараметр("СкладПолучатель",	ДокументСсылка.СкладПолучатель);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРасход	 = РезультатЗапроса[РезультатЗапроса.ВГраница()-1].Выбрать();
	ВыборкаПриход	 = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	
	Пока ВыборкаРасход.Следующий() Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаРасход);
	КонецЦикла; 
	
	Пока ВыборкаПриход.Следующий() Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ВыборкаПриход);
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ВыполнитьЗаписьДвиженийРасход(ДокументСсылка, ТекстЗапроса)

	НаборЗаписей = РегистрыНакопления.КТС_ДвижениеТоваровПоставщиков.СоздатьНаборЗаписей();	
	НаборЗаписей.Отбор.Регистратор.Установить(ДокументСсылка);
	
	Запрос 		 = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", 			ДокументСсылка);
	Запрос.УстановитьПараметр("Период", 			ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("МоментВремени", 		ДокументСсылка.МоментВремени());
	Запрос.УстановитьПараметр("ВидДвиженияРасход",	ВидДвиженияНакопления.Расход);		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
	КонецЦикла; 

	НаборЗаписей.Записать();
	
КонецПроцедуры
 

Функция ПолучитьТекстЗапросаДвиженияРасход()

	ТекстЗапроса = "ВЫБРАТЬ
	               |	Ссылка			КАК Ссылка,
	               |	МоментВремени 	КАК МоментВремени
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг
	               |ГДЕ
	               |	Проведен
	               |	И Дата >= &ДатаНачало
	               |	И Дата <= &ДатаОкончание
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Ссылка			КАК Ссылка,
	               |	МоментВремени 	КАК МоментВремени
	               |ИЗ
	               |	Документ.ВозвратТоваровПоставщику
	               |ГДЕ
	               |	Проведен
	               |	И Дата >= &ДатаНачало
	               |	И Дата <= &ДатаОкончание
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Ссылка			КАК Ссылка,
	               |	МоментВремени 	КАК МоментВремени
	               |ИЗ
	               |	Документ.ВнутреннееПотреблениеТоваров
	               |ГДЕ
	               |	Проведен
	               |	И Дата >= &ДатаНачало
	               |	И Дата <= &ДатаОкончание
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Ссылка			КАК Ссылка,
	               |	МоментВремени 	КАК МоментВремени
	               |ИЗ
	               |	Документ.СписаниеНедостачТоваров
	               |ГДЕ
	               |	Проведен
	               |	И Дата >= &ДатаНачало
	               |	И Дата <= &ДатаОкончание
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Ссылка			КАК Ссылка,
	               |	МоментВремени 	КАК МоментВремени
	               |ИЗ
	               |	Документ.СборкаТоваров
	               |ГДЕ
	               |	Проведен
	               |	И Дата >= &ДатаНачало
	               |	И Дата <= &ДатаОкончание
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	Ссылка			КАК Ссылка,
	               |	МоментВремени 	КАК МоментВремени
	               |ИЗ
	               |	Документ.ПеремещениеТоваров
	               |ГДЕ
	               |	Проведен
	               |	И Дата >= &ДатаНачало
	               |	И Дата <= &ДатаОкончание
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	МоментВремени";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаДвиженияРасход() 
 
Функция ПолучитьТекстЗапросаДвиженияРасходОбщий(ДокументСсылка)

	ТекстЗапроса = "
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РегистрАналитикаНоменклатуры.Номенклатура,
	               |	РегистрАналитикаНоменклатуры.Характеристика,
	               |	РегистрАналитикаНоменклатуры.Склад,
	               |	ТоварыПоставщиков.Поставщик,
	               |	ТоварыПоставщиков.ДокументПоступления,
	               |	ТоварыПоставщиков.КоличествоОстаток КАК Количество,
	               |	ВЫБОР
	               |		КОГДА ТоварыПоставщиков.ДокументПоступления ССЫЛКА Документ.ВводОстатков
	               |			ТОГДА ВЫРАЗИТЬ(ТоварыПоставщиков.ДокументПоступления КАК Документ.ВводОстатков).Дата
	               |		КОГДА ТоварыПоставщиков.ДокументПоступления ССЫЛКА Документ.ВозвратТоваровОтКлиента
	               |			ТОГДА ВЫРАЗИТЬ(ТоварыПоставщиков.ДокументПоступления КАК Документ.ВозвратТоваровОтКлиента).Дата
	               |		КОГДА ТоварыПоставщиков.ДокументПоступления ССЫЛКА Документ.ОприходованиеИзлишковТоваров
	               |			ТОГДА ВЫРАЗИТЬ(ТоварыПоставщиков.ДокументПоступления КАК Документ.ОприходованиеИзлишковТоваров).Дата
	               |		КОГДА ТоварыПоставщиков.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
	               |			ТОГДА ВЫРАЗИТЬ(ТоварыПоставщиков.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг).Дата
	               |		КОГДА ТоварыПоставщиков.ДокументПоступления ССЫЛКА Документ.СборкаТоваров
	               |			ТОГДА ВЫРАЗИТЬ(ТоварыПоставщиков.ДокументПоступления КАК Документ.СборкаТоваров).Дата
	               |	КОНЕЦ КАК Период
				   |ПОМЕСТИТЬ ОстаткиТоваровПоставщиков
	               |ИЗ
	               |	РегистрНакопления.КТС_ДвижениеТоваровПоставщиков.Остатки(
	               |			,
	               |			(АналитикаУчетаНоменклатуры.Номенклатура, АналитикаУчетаНоменклатуры.Характеристика, АналитикаУчетаНоменклатуры.Склад) В
	               |				(ВЫБРАТЬ
	               |					Номенклатура,
	               |					Характеристика,
	               |					Склад
	               |				ИЗ
	               |					ТаблицаТовары)) КАК ТоварыПоставщиков
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РегистрАналитикаНоменклатуры
	               |		ПО ТоварыПоставщиков.АналитикаУчетаНоменклатуры = РегистрАналитикаНоменклатуры.КлючАналитики
				   |;
				   |
				   |
	               |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ОстаткиТоваровПоставщиков.Период 														КАК Период,
				   |	ОстаткиТоваровПоставщиков.ДокументПоступления   										КАК ДокументПоступления,
				   |	ОстаткиТоваровПоставщиков.Номенклатура													КАК Номенклатура,
				   |	ОстаткиТоваровПоставщиков.Характеристика												КАК Характеристика,
				   |	ОстаткиТоваровПоставщиков.Склад															КАК Склад,
				   |	СУММА(ОстаткиТоваровПоставщиковКопия.Количество)    									КАК КоличествоПосле,
				   |	СУММА(ОстаткиТоваровПоставщиковКопия.Количество) - ОстаткиТоваровПоставщиков.Количество КАК КоличествоДо
				   |ПОМЕСТИТЬ ДокументыПриходаНаростающие
				   |ИЗ
				   |	ОстаткиТоваровПоставщиков КАК ОстаткиТоваровПоставщиков
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиТоваровПоставщиков КАК ОстаткиТоваровПоставщиковКопия
				   |		ПО ОстаткиТоваровПоставщиков.Номенклатура 		= ОстаткиТоваровПоставщиковКопия.Номенклатура
				   |			И ОстаткиТоваровПоставщиков.Характеристика 	= ОстаткиТоваровПоставщиковКопия.Характеристика
				   |			И ОстаткиТоваровПоставщиков.Склад 			= ОстаткиТоваровПоставщиковКопия.Склад
				   |			И 
				   |				ВЫБОР
				   |					КОГДА ОстаткиТоваровПоставщиков.Период = ОстаткиТоваровПоставщиковКопия.Период
				   |						ТОГДА ОстаткиТоваровПоставщиков.ДокументПоступления >= ОстаткиТоваровПоставщиковКопия.ДокументПоступления
				   |					ИНАЧЕ ОстаткиТоваровПоставщиков.Период > ОстаткиТоваровПоставщиковКопия.Период
				   |				КОНЕЦ
				   |СГРУППИРОВАТЬ ПО
				   |	ОстаткиТоваровПоставщиков.Период,
				   |	ОстаткиТоваровПоставщиков.ДокументПоступления,
				   |	ОстаткиТоваровПоставщиков.Номенклатура,
				   |	ОстаткиТоваровПоставщиков.Характеристика,
				   |	ОстаткиТоваровПоставщиков.Склад,
				   |	ОстаткиТоваровПоставщиков.Количество
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	ДокументыНаростающие.Период 					КАК Период,
				   |	ДокументыНаростающие.ДокументПоступления 		КАК ДокументПоступления,
				   |	ДокументыНаростающие.Номенклатура 				КАК Номенклатура,
				   |	ДокументыНаростающие.Характеристика 			КАК Характеристика,
				   |	ДокументыНаростающие.Склад 						КАК Склад,
				   |	ТаблицаТовары.Количество						КАК Количество
				   |ПОМЕСТИТЬ ТаблицаГраниц
				   |ИЗ
				   |	ДокументыПриходаНаростающие КАК ДокументыНаростающие
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТовары КАК ТаблицаТовары
				   |		ПО ДокументыНаростающие.Номенклатура 		= ТаблицаТовары.Номенклатура
				   |			И ДокументыНаростающие.Характеристика 	= ТаблицаТовары.Характеристика
				   |			И ДокументыНаростающие.Склад 			= ТаблицаТовары.Склад
				   |			И ДокументыНаростающие.КоличествоПосле	>= ТаблицаТовары.Количество
				   |			И ДокументыНаростающие.КоличествоДо		<  ТаблицаТовары.Количество
				   |;
				   |
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	&ВидДвиженияРасход											КАК ВидДвижения,
				   |	РегистрАналитикаНоменклатуры.КлючАналитики  				КАК АналитикаУчетаНоменклатуры,
				   |	ДокументыПрихода.ДокументПоступления						КАК ДокументПоступления,
				   |	ВЫБОР
				   |		КОГДА ДокументыПрихода.ДокументПоступления ССЫЛКА Документ.ВводОстатков
				   |			ТОГДА ВЫРАЗИТЬ(ДокументыПрихода.ДокументПоступления КАК Документ.ВводОстатков).Партнер
				   |		КОГДА ДокументыПрихода.ДокументПоступления ССЫЛКА Документ.ВозвратТоваровОтКлиента
				   |			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
				   |		КОГДА ДокументыПрихода.ДокументПоступления ССЫЛКА Документ.ОприходованиеИзлишковТоваров
				   |			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
				   |		КОГДА ДокументыПрихода.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
				   |			ТОГДА ВЫРАЗИТЬ(ДокументыПрихода.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг).Партнер
				   |		КОГДА ДокументыПрихода.ДокументПоступления ССЫЛКА Документ.СборкаТоваров
				   |			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
				   |	КОНЕЦ 														КАК Поставщик,
				   |	&Период 													КАК Период,
				   |	ВЫРАЗИТЬ(&Ссылка КАК %1) 									КАК Регистратор,
				   |	ВЫБОР
				   |		КОГДА ДокументыПрихода.КоличествоПосле >= ТаблицаГраниц.Количество
				   |			ТОГДА ТаблицаГраниц.Количество - ДокументыПрихода.КоличествоДо
				   |		ИНАЧЕ ДокументыПрихода.КоличествоПосле - ДокументыПрихода.КоличествоДо
				   |	КОНЕЦ КАК Количество
				   |ИЗ
				   |	ДокументыПриходаНаростающие КАК ДокументыПрихода
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаГраниц КАК ТаблицаГраниц
				   |		ПО ДокументыПрихода.Номенклатура 		= ТаблицаГраниц.Номенклатура
				   |			И ДокументыПрихода.Характеристика 	= ТаблицаГраниц.Характеристика
				   |			И ДокументыПрихода.Склад 			= ТаблицаГраниц.Склад
				   |			И 
				   |				ВЫБОР
				   |					КОГДА ДокументыПрихода.Период = ТаблицаГраниц.Период
				   |						ТОГДА ДокументыПрихода.ДокументПоступления <= ТаблицаГраниц.ДокументПоступления
				   |					ИНАЧЕ ДокументыПрихода.Период < ТаблицаГраниц.Период
				   |				КОНЕЦ
				   |
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РегистрАналитикаНоменклатуры
				   |		ПО ДокументыПрихода.Номенклатура 		= РегистрАналитикаНоменклатуры.Номенклатура
				   |			И ДокументыПрихода.Характеристика 	= РегистрАналитикаНоменклатуры.Характеристика
				   |			И ДокументыПрихода.Склад			= РегистрАналитикаНоменклатуры.Склад";
				   
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда				   
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, "Документ.РеализацияТоваровУслуг");
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда				   
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, "Документ.ВозвратТоваровПоставщику");
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВнутреннееПотреблениеТоваров") Тогда				   
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, "Документ.ВнутреннееПотреблениеТоваров");
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СписаниеНедостачТоваров") Тогда				   
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, "Документ.СписаниеНедостачТоваров");
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.СборкаТоваров") Тогда				   
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, "Документ.СборкаТоваров");
	КонецЕсли;
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда				   
		ТекстЗапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗапроса, "Документ.ПеремещениеТоваров");
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаДвиженияРасходОбщий()

Функция ПолучитьТекстЗапросаРеализацияТоваровУслуг(ДокументСсылка)

	ТекстЗапроса = "ВЫБРАТЬ
	               |	Номенклатура		КАК Номенклатура,
	               |	Характеристика		КАК Характеристика,
	               |	Склад               КАК Склад,
				   |	СУММА(Количество)   КАК Количество
	               |ПОМЕСТИТЬ ТаблицаТовары
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары
	               |ГДЕ
	               |	Ссылка = &Ссылка
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
	               |	Характеристика,
	               |	Склад	
	               |;";
	
	Возврат ТекстЗапроса + ПолучитьТекстЗапросаДвиженияРасходОбщий(ДокументСсылка);

КонецФункции // ПолучитьТекстЗапросаРеализацияТоваровУслуг()

Функция ПолучитьТекстЗапросаВозвратТоваровПоставщику(ДокументСсылка)

	ТекстЗапроса = "ВЫБРАТЬ
	               |	Номенклатура		КАК Номенклатура,
	               |	Характеристика		КАК Характеристика,
	               |	Ссылка.Склад        КАК Склад,
				   |	СУММА(Количество)   КАК Количество
	               |ПОМЕСТИТЬ ТаблицаТовары
	               |ИЗ
	               |	Документ.ВозвратТоваровПоставщику.Товары
	               |ГДЕ
	               |	Ссылка = &Ссылка
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
	               |	Характеристика,
	               |	Ссылка	
	               |;";
	
	Возврат ТекстЗапроса + ПолучитьТекстЗапросаДвиженияРасходОбщий(ДокументСсылка);

КонецФункции // ПолучитьТекстЗапросаВозвратТоваровПоставщикуSN()

Функция ПолучитьТекстЗапросаВнутреннееПотребление(ДокументСсылка)

	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Номенклатура		КАК Номенклатура,
	               |	Характеристика		КАК Характеристика,
	               |	Ссылка.Склад        КАК Склад,
				   |	СУММА(Количество)   КАК Количество
	               |ПОМЕСТИТЬ ТаблицаТовары
	               |ИЗ
	               |	Документ.ВнутреннееПотреблениеТоваров.Товары
	               |ГДЕ
	               |	Ссылка = &Ссылка
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
	               |	Характеристика,
	               |	Ссылка	
	               |;";
	
	Возврат ТекстЗапроса + ПолучитьТекстЗапросаДвиженияРасходОбщий(ДокументСсылка);

КонецФункции // ПолучитьТекстЗапросаВнутреннееПотребление()

Функция ПолучитьТекстЗапросаСписаниеНедостач(ДокументСсылка)

	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Номенклатура		КАК Номенклатура,
	               |	Характеристика		КАК Характеристика,
	               |	Ссылка.Склад        КАК Склад,
				   |	СУММА(Количество)   КАК Количество
	               |ПОМЕСТИТЬ ТаблицаТовары
	               |ИЗ
	               |	Документ.СписаниеНедостачТоваров.Товары
	               |ГДЕ
	               |	Ссылка = &Ссылка
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
	               |	Характеристика,
	               |	Ссылка	
	               |;";
	
	Возврат ТекстЗапроса + ПолучитьТекстЗапросаДвиженияРасходОбщий(ДокументСсылка);

КонецФункции // ПолучитьТекстЗапросаСписаниеНедостачSN()

Функция ПолучитьТекстЗапросаСборкаТоваров(ДокументСсылка)

	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Номенклатура		КАК Номенклатура,
	               |	Характеристика		КАК Характеристика,
	               |	Ссылка.Склад        КАК Склад,
				   |	СУММА(Количество)   КАК Количество
	               |ПОМЕСТИТЬ ТаблицаТовары
	               |ИЗ
	               |	Документ.СборкаТоваров.Товары
	               |ГДЕ
	               |	Ссылка = &Ссылка
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
	               |	Характеристика,
	               |	Ссылка	
	               |;";
	
	Возврат ТекстЗапроса + ПолучитьТекстЗапросаДвиженияРасходОбщий(ДокументСсылка);


КонецФункции // ПолучитьТекстЗапросаСобркаТоваровSN()

Функция ПолучитьТекстЗапросаРазборкаТоваров(ДокументСсылка)

	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Номенклатура		КАК Номенклатура,
	               |	Характеристика		КАК Характеристика,
	               |	Склад        		КАК Склад,
				   |	Количество  		КАК Количество
	               |ПОМЕСТИТЬ ТаблицаТовары
	               |ИЗ
	               |	Документ.СборкаТоваров
	               |ГДЕ
	               |	Ссылка = &Ссылка	
	               |;";
	
	Возврат ТекстЗапроса + ПолучитьТекстЗапросаДвиженияРасходОбщий(ДокументСсылка);

КонецФункции // ПолучитьТекстЗапросаРазборкаТоваровSN()

Функция ПолучитьТекстЗапросаПеремещениеТоваров(ДокументСсылка)

	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Номенклатура				КАК Номенклатура,
	               |	Характеристика				КАК Характеристика,
	               |	Ссылка.СкладОтправитель    	КАК Склад,
				   |	СУММА(Количество)			КАК Количество
	               |ПОМЕСТИТЬ ТаблицаТовары
	               |ИЗ
	               |	Документ.ПеремещениеТоваров.Товары
	               |ГДЕ
	               |	Ссылка = &Ссылка
				   |
				   |СГРУППИРОВАТЬ ПО
				   |	Номенклатура,
	               |	Характеристика,
	               |	Ссылка	
	               |;";
	
	Возврат ТекстЗапроса + ПолучитьТекстЗапросаДвиженияРасходОбщий(ДокументСсылка) + ПолучитьТекстЗапросаПеремещениеТоваровДополнение();

КонецФункции // ПолучитьТекстЗапросаПеремещениеТоваровSN()

Функция ПолучитьТекстЗапросаПеремещениеТоваровДополнение()

	ТекстЗапроса = "
				   |;
				   |////////////////////////////////////////////////////////////////////////////////
				   |ВЫБРАТЬ
				   |	&ВидДвиженияПриход											КАК ВидДвижения,
				   |	РегистрАналитикаНоменклатуры.КлючАналитики  				КАК АналитикаУчетаНоменклатуры,
				   |	ДокументыПрихода.ДокументПоступления						КАК ДокументПоступления,
				   |	ВЫБОР
				   |		КОГДА ДокументыПрихода.ДокументПоступления ССЫЛКА Документ.ВводОстатков
				   |			ТОГДА ВЫРАЗИТЬ(ДокументыПрихода.ДокументПоступления КАК Документ.ВводОстатков).Партнер
				   |		КОГДА ДокументыПрихода.ДокументПоступления ССЫЛКА Документ.ВозвратТоваровОтКлиента
				   |			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
				   |		КОГДА ДокументыПрихода.ДокументПоступления ССЫЛКА Документ.ОприходованиеИзлишковТоваров
				   |			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
				   |		КОГДА ДокументыПрихода.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
				   |			ТОГДА ВЫРАЗИТЬ(ДокументыПрихода.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг).Партнер
				   |		КОГДА ДокументыПрихода.ДокументПоступления ССЫЛКА Документ.СборкаТоваров
				   |			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
				   |	КОНЕЦ 														КАК Поставщик,
				   |	ВЫРАЗИТЬ(&Ссылка КАК Документ.ПеремещениеТоваров).Дата 		КАК Период,
				   |	ВЫРАЗИТЬ(&Ссылка КАК Документ.ПеремещениеТоваров) 			КАК Регистратор,
				   |	ВЫБОР
				   |		КОГДА ДокументыПрихода.КоличествоПосле >= ТаблицаГраниц.Количество
				   |			ТОГДА ТаблицаГраниц.Количество - ДокументыПрихода.КоличествоДо
				   |		ИНАЧЕ ДокументыПрихода.КоличествоПосле - ДокументыПрихода.КоличествоДо
				   |	КОНЕЦ КАК Количество
				   |ИЗ
				   |	ДокументыПриходаНаростающие КАК ДокументыПрихода
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаГраниц КАК ТаблицаГраниц
				   |		ПО ДокументыПрихода.Номенклатура 		= ТаблицаГраниц.Номенклатура
				   |			И ДокументыПрихода.Характеристика 	= ТаблицаГраниц.Характеристика
				   |			И ДокументыПрихода.Склад 			= ТаблицаГраниц.Склад
				   |			И 
				   |				ВЫБОР
				   |					КОГДА ДокументыПрихода.Период = ТаблицаГраниц.Период
				   |						ТОГДА ДокументыПрихода.ДокументПоступления <= ТаблицаГраниц.ДокументПоступления
				   |					ИНАЧЕ ДокументыПрихода.Период < ТаблицаГраниц.Период
				   |				КОНЕЦ
				   |
				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РегистрАналитикаНоменклатуры
				   |		ПО ДокументыПрихода.Номенклатура 		= РегистрАналитикаНоменклатуры.Номенклатура
				   |			И ДокументыПрихода.Характеристика 	= РегистрАналитикаНоменклатуры.Характеристика
				   |			И &СкладПолучатель					= РегистрАналитикаНоменклатуры.Склад";
				   
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаПеремещениеТоваровSNДополнение()



// Сведения о внешней обработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	//Версия
	Версия = "0.1.6";            
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Движение товаров поставщиков");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Движение товаров поставщиков [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Движение товаров поставщиков [" + Версия + "]", "Движение товаров поставщиков", "ОткрытиеФормы", Ложь, "Движение товаров поставщиков");
	ДобавитьКоманду(ТаблицаКоманд, "Регл. обновление прайс-листов [" + Версия + "]", "ВыполнитьДвиженияПоПартиям();", "ВызовСерверногоМетода");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(ИдентификаторКоманды) Экспорт
	Если ТипЗнч(ИдентификаторКоманды) = Тип("Строка") Тогда
		Выполнить(ИдентификаторКоманды);
	КонецЕсли;
КонецПроцедуры
