
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
		
	Если Не ПроверитьВходныеПараметры(ОбъектыНазначенияМассив) Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьРасчетДолиСтоимости(ОбъектыНазначенияМассив[0]);
	
	ОповеститьОбИзменении(ОбъектыНазначенияМассив[0]);
	Если ВладелецФормы <> Неопределено Тогда
		Попытка
			ВладелецФормы.Прочитать();
		Исключение
			// ничего не делаем, если у формы нет метода Прочитать()
		КонецПопытки;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ВыполнитьРасчетДолиСтоимости(ДокументРазборки)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВходнаяЦена = ПолучитьВходнуюЦену();
	Если ВходнаяЦена = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодготовитьТекст("Не удалось получить входную цену."));
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаРасчетДолиСтоимости();
	
	Запрос.УстановитьПараметр("ВалютаУпрУчета", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВходнаяЦена", ВходнаяЦена);
	Запрос.УстановитьПараметр("Ссылка", ДокументРазборки);

	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатЗапроса[РезультатЗапроса.ВГраница() - 3].Пустой() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодготовитьТекст("Не удалось получить данные для расчена доли стоимостей комплектующих."));
		Возврат;
	КонецЕсли;
	
	ТаблицаДолейСтоимости  = РезультатЗапроса[РезультатЗапроса.ВГраница() - 3].Выгрузить();
	ДокументРазборкиОбъект = ДокументРазборки.ПолучитьОбъект();
	Товары 				   = ДокументРазборкиОбъект.Товары;
	
	Для каждого СтрокаТаблицы Из Товары Цикл
		
	    СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");			
		СтруктураПоиска.Вставить("Номенклатура", СтрокаТаблицы.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика", СтрокаТаблицы.Характеристика);
		
		РезультатыПоиска = ТаблицаДолейСтоимости.НайтиСтроки(СтруктураПоиска);
		Если РезультатыПоиска.Количество() > 0 Тогда
			СтрокаТаблицы.ДоляСтоимости = СтрокаТаблицы.Количество * РезультатыПоиска[0].ДоляСтоимости;
		КонецЕсли;
		
	КонецЦикла; 
	
	ДокументРазборкиОбъект.Записать(РежимЗаписиДокумента.Запись);
	ДокументРазборкиОбъект.Прочитать();
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапросаРасчетДолиСтоимости()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(Курс / Кратность КАК ЧИСЛО(15, 4)) 	КАК Курс,
	               |	Валюта 											КАК Валюта,
	               |	Период 											КАК Период
	               |ПОМЕСТИТЬ КурсыВалют
	               |ИЗ
	               |	РегистрСведений.КурсыВалют
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КурсыВалют.Курс														КАК Курс,
	               |	КурсыВалют.Валюта													КАК Валюта,
	               |	КурсыВалют.Период 													КАК НачалоПериода,
	               |	МИНИМУМ(ЕСТЬNULL(КурсыВалютКопия.Период, ДАТАВРЕМЯ(3999, 1, 1))) 	КАК КонецПериода
	               |ПОМЕСТИТЬ ТаблицаКурсов
	               |ИЗ
	               |	КурсыВалют КАК КурсыВалют
	               |		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалютКопия
	               |		ПО (КурсыВалютКопия.Период > КурсыВалют.Период)
	               |			И (КурсыВалютКопия.Валюта = КурсыВалют.Валюта)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	КурсыВалют.Период,
	               |	КурсыВалют.Курс,
	               |	КурсыВалют.Валюта
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	КурсыВалют.Валюта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ КурсыВалют
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Ссылка.Номенклатура					КАК Номенклатура,
	               |	Ссылка.Характеристика				КАК Характеристика,
	               |	СерийныйНомер						КАК СерийныйНомер
	               |ПОМЕСТИТЬ СерийныеНомераКомплектов
	               |ИЗ
	               |	Документ.СборкаТоваров.СерийныеНомераКомплектов
	               |ГДЕ
	               |	Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СерийныеНомераКомплектов.Номенклатура		КАК Номенклатура,
	               |	СерийныеНомераКомплектов.Характеристика		КАК Характеристика,
	               |	СерийныеНомераКомплектов.СерийныйНомер		КАК СерийныйНомер,	
	               |	ВЫБОР
	               |		КОГДА СерийныеНомераНоменклатурыОбороты.Регистратор ССЫЛКА Документ.СборкаТоваров
	               |			ТОГДА СерийныеНомераНоменклатурыОбороты.Регистратор
	               |		КОГДА СерийныеНомераНоменклатурыОбороты.Регистратор ССЫЛКА Документ.ПриходныйОрдерНаТовары
	               |			ТОГДА ВЫРАЗИТЬ(СерийныеНомераНоменклатурыОбороты.Регистратор КАК Документ.ПриходныйОрдерНаТовары).Распоряжение
	               |	КОНЕЦ КАК ДокументСборки
	               |ПОМЕСТИТЬ ТаблицаДокументовСборки
	               |ИЗ
	               |	РегистрНакопления.СерийныеНомераНоменклатуры.Обороты(
	               |			,
	               |			,
	               |			Регистратор,
	               |			СерийныеНомера В
	               |				(ВЫБРАТЬ
	               |					СерийныеНомераКомплектов.СерийныйНомер
	               |				ИЗ
	               |					СерийныеНомераКомплектов КАК СерийныеНомераКомплектов)) КАК СерийныеНомераНоменклатурыОбороты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СерийныеНомераКомплектов КАК СерийныеНомераКомплектов
	               |		ПО СерийныеНомераНоменклатурыОбороты.Номенклатура = СерийныеНомераКомплектов.Номенклатура
	               |			И СерийныеНомераНоменклатурыОбороты.Характеристика = СерийныеНомераКомплектов.Характеристика
	               |ГДЕ
	               |	СерийныеНомераНоменклатурыОбороты.КоличествоПриход > 0
	               |	И ВЫБОР
	               |			КОГДА СерийныеНомераНоменклатурыОбороты.Регистратор ССЫЛКА Документ.СборкаТоваров
	               |				ТОГДА ИСТИНА
	               |			КОГДА СерийныеНомераНоменклатурыОбороты.Регистратор ССЫЛКА Документ.ПриходныйОрдерНаТовары
	               |				ТОГДА ВЫРАЗИТЬ(СерийныеНомераНоменклатурыОбороты.Регистратор КАК Документ.ПриходныйОрдерНаТовары).Распоряжение ССЫЛКА Документ.СборкаТоваров
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ СерийныеНомераКомплектов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Номенклатура														КАК Номенклатура,
	               |	Характеристика														КАК Характеристика,
	               |	ВЫРАЗИТЬ(ДокументСборки КАК Документ.СборкаТоваров) 				КАК СборкаТоваров,
	               |	КОЛИЧЕСТВО(ВЫРАЗИТЬ(ДокументСборки КАК Документ.СборкаТоваров)) 	КАК КоличествоСборок,
	               |	ВЫРАЗИТЬ(ДокументСборки КАК Документ.СборкаТоваров).Дата 			КАК ДатаСборки
	               |ПОМЕСТИТЬ КоличествоСборокПоДокументам
	               |ИЗ
	               |	ТаблицаДокументовСборки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Характеристика,
	               |	ВЫРАЗИТЬ(ДокументСборки КАК Документ.СборкаТоваров),
	               |	ВЫРАЗИТЬ(ДокументСборки КАК Документ.СборкаТоваров).Дата
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	КоличествоСборокПоДокументам.СборкаТоваров		КАК СборкаТоваров,
	               |	КоличествоСборокПоДокументам.КоличествоСборок	КАК КоличествоСборок,
	               |	КоличествоСборокПоДокументам.ДатаСборки			КАК ДатаСборки,
	               |	СборкаТоваровТовары.Номенклатура				КАК Номенклатура,
	               |	СборкаТоваровТовары.Характеристика				КАК Характеристика
	               |ПОМЕСТИТЬ ТаблицаНоменклатурыПоСборкам
	               |ИЗ
	               |	КоличествоСборокПоДокументам КАК КоличествоСборокПоДокументам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК СборкаТоваровТовары
	               |		ПО КоличествоСборокПоДокументам.СборкаТоваров = СборкаТоваровТовары.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаДокументовСборки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ КоличествоСборокПоДокументам
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЦеныНоменклатуры.Период				КАК Период,
	               |	ЦеныНоменклатуры.Номенклатура		КАК Номенклатура,
	               |	ЦеныНоменклатуры.Характеристика		КАК Характеристика,
	               |	ВЫБОР ЦеныНоменклатуры.Упаковка
	               |		КОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА ЦеныНоменклатуры.Цена
	               |		ИНАЧЕ ЦеныНоменклатуры.Цена * ЦеныНоменклатуры.Упаковка.Коэффициент
	               |	КОНЕЦ 								КАК Цена,
	               |	ЦеныНоменклатуры.Валюта 			КАК Валюта
	               |ПОМЕСТИТЬ ЦеныКомплетующихВалюта
	               |ИЗ
	               |	ТаблицаНоменклатурыПоСборкам КАК ТаблицаНоменклатурыПоСборкам
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |		ПО ТаблицаНоменклатурыПоСборкам.Номенклатура = ЦеныНоменклатуры.Номенклатура
	               |			И (ЦеныНоменклатуры.ВидЦены = &ВходнаяЦена)
	               |			И ТаблицаНоменклатурыПоСборкам.Характеристика = ЦеныНоменклатуры.Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЦеныКомплетующихВалюта.Период			КАК Период,
	               |	ЦеныКомплетующихВалюта.Номенклатура		КАК Номенклатура,
	               |	ЦеныКомплетующихВалюта.Характеристика	КАК Характеристика,
	               |	ВЫБОР
	               |		КОГДА ЦеныКомплетующихВалюта.Валюта = &ВалютаУпрУчета
	               |			ТОГДА ЦеныКомплетующихВалюта.Цена
	               |		ИНАЧЕ ЦеныКомплетующихВалюта.Цена * (ТаблицаКурсовЦен.Курс / ТаблицаКурсовУпр.Курс)
	               |	КОНЕЦ 									КАК Цена
	               |ПОМЕСТИТЬ ЦеныКомплектующих
	               |ИЗ
	               |	ЦеныКомплетующихВалюта КАК ЦеныКомплетующихВалюта
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовЦен
	               |		ПО ЦеныКомплетующихВалюта.Валюта = ТаблицаКурсовЦен.Валюта
	               |			И ЦеныКомплетующихВалюта.Период >= ТаблицаКурсовЦен.НачалоПериода
	               |			И ЦеныКомплетующихВалюта.Период < ТаблицаКурсовЦен.КонецПериода
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаКурсов КАК ТаблицаКурсовУпр
	               |		ПО (ТаблицаКурсовУпр.Валюта = &ВалютаУпрУчета)
	               |			И ЦеныКомплетующихВалюта.Период >= ТаблицаКурсовУпр.НачалоПериода
	               |			И ЦеныКомплетующихВалюта.Период < ТаблицаКурсовУпр.КонецПериода
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ЦеныКомплетующихВалюта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаКурсов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЦеныКомплектующих.Цена 													КАК Цена,
	               |	ЦеныКомплектующих.Номенклатура											КАК Номенклатура,
	               |	ЦеныКомплектующих.Характеристика										КАК Характеристика,
	               |	ЦеныКомплектующих.Период 												КАК НачалоПериода,
	               |	МИНИМУМ(ЕСТЬNULL(ЦеныКомплектующихКопия.Период, ДАТАВРЕМЯ(3999, 1, 1))) КАК КонецПериода
	               |ПОМЕСТИТЬ ТаблицаЦенНаКомлектующиеНастающая
	               |ИЗ
	               |	ЦеныКомплектующих КАК ЦеныКомплектующих
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныКомплектующих КАК ЦеныКомплектующихКопия
	               |		ПО (ЦеныКомплектующихКопия.Период > ЦеныКомплектующих.Период)
	               |			И (ЦеныКомплектующихКопия.Номенклатура = ЦеныКомплектующих.Номенклатура)
	               |			И (ЦеныКомплектующихКопия.Характеристика = ЦеныКомплектующих.Характеристика)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЦеныКомплектующих.Период,
	               |	ЦеныКомплектующих.Цена,
	               |	ЦеныКомплектующих.Номенклатура,
	               |	ЦеныКомплектующих.Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаНоменклатурыПоСборкам.Номенклатура		КАК Номенклатура,
	               |	ТаблицаНоменклатурыПоСборкам.Характеристика		КАК Характеристика,
	               |	СУММА(ТаблицаНоменклатурыПоСборкам.КоличествоСборок * ТаблицаЦенНаКомлектующиеНастающая.Цена) / СУММА(ТаблицаНоменклатурыПоСборкам.КоличествоСборок) * 100 КАК ДоляСтоимости
	               |ИЗ
	               |	ТаблицаНоменклатурыПоСборкам КАК ТаблицаНоменклатурыПоСборкам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаЦенНаКомлектующиеНастающая КАК ТаблицаЦенНаКомлектующиеНастающая
	               |		ПО ТаблицаНоменклатурыПоСборкам.Номенклатура = ТаблицаЦенНаКомлектующиеНастающая.Номенклатура
	               |			И ТаблицаНоменклатурыПоСборкам.Характеристика = ТаблицаЦенНаКомлектующиеНастающая.Характеристика
	               |			И ТаблицаНоменклатурыПоСборкам.ДатаСборки >= ТаблицаЦенНаКомлектующиеНастающая.НачалоПериода
	               |			И ТаблицаНоменклатурыПоСборкам.ДатаСборки < ТаблицаЦенНаКомлектующиеНастающая.КонецПериода
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаНоменклатурыПоСборкам.Номенклатура,
	               |	ТаблицаНоменклатурыПоСборкам.Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаНоменклатурыПоСборкам
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ЦеныКомплектующих
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТаблицаЦенНаКомлектующиеНастающая";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Функция ПолучитьВходнуюЦену()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВидЦены
	                      |ИЗ
	                      |	РегистрСведений.ALPS_ВидыЦен
	                      |ГДЕ
	                      |	Входная = ИСТИНА");
						  
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.ВидЦены, Неопределено);
	
КонецФункции


&НаКлиенте
Функция ПроверитьВходныеПараметры(ОбъектыНазначенияМассив)
	
	Если ТипЗнч(ОбъектыНазначенияМассив) <> Тип("Массив") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодготовитьТекст("Не удалось получить массив назначений."));
		Возврат Ложь;
	КонецЕсли; 
	
	Если ОбъектыНазначенияМассив.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодготовитьТекст("Массв назначений не заполнен."));
		Возврат Ложь;
	КонецЕсли; 
	
	ДокументСборка = ОбъектыНазначенияМассив[0];
	
	Если ТипЗнч(ДокументСборка) <> Тип("ДокументСсылка.СборкаТоваров") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодготовитьТекст("Операция доступна только для документа «Сборка товаров»."));
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ПроверитьСтатусДокумента(ДокументСборка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодготовитьТекст("Операция доступна только для документа «Сборка товаров» из видом операции «Разборка на комплектующие»."));
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьСтатусДокумента(ДокументСсылка)
	Если ДокументСсылка.ТипОперации <> Перечисления.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции



&НаКлиентеНаСервереБезКонтекста
Функция ПодготовитьТекст(знач ТекстСообщения)
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()), ТекстСообщения);
КонецФункции

#КонецОбласти