
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);
	ЗаказКлиента = Параметры.ЗаказКлиента;
	ЗаполнитьТаблицуТовары();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТовары()
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗаказКлиентаТовары.Номенклатура,
	                      |	ЗаказКлиентаТовары.Упаковка,
	                      |	ЗаказКлиентаТовары.КоличествоУпаковок,
	                      |	ЗаказКлиентаТовары.Количество
	                      |ИЗ
	                      |	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	                      |ГДЕ
	                      |	ЗаказКлиентаТовары.Ссылка = &ЗаказКлиента
	                      |	И НЕ ЗаказКлиентаТовары.Отменено");
						  
	Запрос.УстановитьПараметр("ЗаказКлиента", ЗаказКлиента);
	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры // ЗаполнитьТаблицуТовары()


&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры


&НаКлиенте
Процедура СоздатьДокумент(Команда)
	
	ДокСсылка = СоздатьЗаказНаПеремещениеНаСервере();
	Если ДокСсылка = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Создать документ заказ на перемещение не получилось. Позвоните на 777";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	ПоказатьОповещениеПользователя("Заказ на перемещение", ПолучитьНавигационнуюСсылку(ДокСсылка), Строка(ДокСсылка), БиблиотекаКартинок.Информация32);
	ОткрытьЗначение(ДокСсылка);
	
КонецПроцедуры


&НаСервере
Функция СоздатьЗаказНаПеремещениеНаСервере()

	УстановитьПривилегированныйРежим(Истина);
	
	ДокОбъект = Документы.ЗаказНаПеремещение.СоздатьДокумент();
	ДокОбъект.Заполнить(Неопределено);
	
	ДокОбъект.Дата 			= ТекущаяДата();
	ДокОбъект.Статус    	= ПредопределенноеЗначение("Перечисление.СтатусыВнутреннихЗаказов.КВыполнению");
	ДокОбъект.Комментарий   = СоздатьКомментарийДляДокумента();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗаказКлиента.Организация,
						  |	ЗаказКлиента.Организация КАК ОрганизацияПолучатель,
	                      |	ЗаказКлиента.Подразделение,
	                      |	ЗаказКлиента.Менеджер КАК Ответственный,
	                      |	ЗаказКлиента.Склад КАК СкладПолучатель,
	                      |	&Склад КАК СкладОтправитель
	                      |ИЗ
	                      |	Документ.ЗаказКлиента КАК ЗаказКлиента
	                      |ГДЕ
	                      |	ЗаказКлиента.Ссылка = &ЗаказКлиента");
						  
	Запрос.УстановитьПараметр("Склад", Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d3409-40c2-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("ЗаказКлиента", ЗаказКлиента);
	
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДокОбъект, Выборка);
	КонецЕсли;
	
	Если ДокОбъект.СкладОтправитель = ДокОбъект.СкладПолучатель Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Склад отправитель не должен быть равен складу получателю";
		Сообщение.Сообщить(); 
		Возврат Неопределено;
	КонецЕсли;
	
	Для каждого СтрокаТЧ Из Товары Цикл	
		Если СтрокаТЧ.Флаг Тогда
			НоваяСтрока = ДокОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
		КонецЕсли;
	КонецЦикла;
		
	ДокОбъект.РассчитатьНачалоОтгрузки();
	Попытка
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	НаборЗаписей = РегистрыСведений.Регламент_Автоперемещения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ЗаказКлиента.Установить(ЗаказКлиента);
	НаборЗаписей.Отбор.ЗаказНаПеремещение.Установить(ДокОбъект.Ссылка);
	
		Запись 						= НаборЗаписей.Добавить();
		Запись.ЗаказКлиента 		= ЗаказКлиента;
		Запись.ЗаказНаПеремещение 	= ДокОбъект.Ссылка;
		
	НаборЗаписей.Записать();
	
	Возврат ДокОбъект.Ссылка;
	
КонецФункции // СоздатьЗаказНаПеремещениеНаСервере()

&НаСервере
Функция СоздатьКомментарийДляДокумента()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстКомментария = ""; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Товары.Флаг КАК Флаг,
	               |	Товары.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ КешТовары
	               |ИЗ
	               |	&Товары КАК Товары
	               |ГДЕ
	               |	Товары.Флаг
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	КешТовары.Номенклатура.ВидНоменклатуры.Наименование КАК Наименование
	               |ИЗ
	               |	КешТовары КАК КешТовары";
				   
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТекстКомментария = ТекстКомментария + Выборка.Наименование + "
		|";
	КонецЦикла; 
	
	ТекстКомментария = ТекстКомментария + "
	|" + ПолучитьНавигационнуюСсылку(ЗаказКлиента);
	
	Возврат ТекстКомментария;

КонецФункции // СоздатьКомментарийДляДокумента()
 