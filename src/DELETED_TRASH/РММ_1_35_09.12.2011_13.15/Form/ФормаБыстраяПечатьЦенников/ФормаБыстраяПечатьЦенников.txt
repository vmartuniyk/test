&НаСервереБезКонтекста
Функция ктсПолучитьСписокСтандартныхЦенников()
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрСтандартныхЦенников.Наименование,
	|	РегистрСтандартныхЦенников.ПоУмолчанию
	|ИЗ
	|	РегистрСведений.ktcСтандартныеШаблоныЦенников КАК РегистрСтандартныхЦенников
	|УПОРЯДОЧИТЬ ПО
	|	РегистрСтандартныхЦенников.Наименование ВОЗР";
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	СписокЗначений = Новый СписокЗначений;
	
	Пока Выборка.Следующий() Цикл
		
		СписокЗначений.Добавить(Выборка.Наименование);
		
	КонецЦикла;
	
	Возврат СписокЗначений;
	
КонецФункции

&НаСервереБезКонтекста
Функция ктсПолучитьПараметрыНоменклатуры(СписокНоменклатуры, ДатаФормированияЦенников, ВидЦеныСсылка="", ИмяШаблонаЦенника, СтандартныйШаблон = Ложь, ИндивидуальныйШаблон = Ложь)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Код КАК Код,
	|	ВложенныйЗапрос.Артикул КАК Артикул,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Родитель КАК Родитель,
	|	ВложенныйЗапрос.Наименование КАК Наименование,
	|	ВложенныйЗапрос.НаименованиеПолное КАК НаименованиеПолное,
	|	ВложенныйЗапрос.ВходнаяЦена КАК ВходнаяЦена,
	|	СвойствоГарантия.Значение КАК Гарантия,
	|	СвойствоПроизводитель.Значение КАК Производитель,";
	
	
	Если НЕ ПустаяСтрока(ВидЦеныСсылка) Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	РегистрЦеныНоменклатуры.Цена КАК Цена,
		|	РегистрЦеныНоменклатуры.Валюта КАК Валюта,";
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ИмяШаблонаЦенника) Тогда
		
		Если СтандартныйШаблон Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|	РегистрСтандартныеЦенники.ТабДокумент КАК ТабДокумент,";
			
		ИначеЕсли ИндивидуальныйШаблон Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|	РегистрПерсональныеЦенники.ТабДокумент КАК ТабДокумент,";
			
		КонецЕсли;
			
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	ВложенныйЗапрос.КоличествоПерсональныхШаблонов КАК КоличествоПерсональныхШаблонов
	|ИЗ
	|	(
	|		ВЫБРАТЬ
	|			СпрНоменклатура.Код КАК Код,
	|			СпрНоменклатура.Артикул КАК Артикул,
	|			СпрНоменклатура.Ссылка КАК Номенклатура,
	|			СпрНоменклатура.Родитель КАК Родитель,
	|			СпрНоменклатура.Наименование КАК Наименование,
	|			СпрНоменклатура.НаименованиеПолное КАК НаименованиеПолное,
	|			ЕСТЬNULL(РегистрВхЦен.Цена, 0) * КурсДолар.Курс КАК ВходнаяЦена,
	|			КОЛИЧЕСТВО(ПерсональныеЦенникиКоличество.Наименование) КАК КоличествоПерсональныхШаблонов
	|		ИЗ
	|			Справочник.Номенклатура КАК СпрНоменклатура
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ktcПерсональныеШаблоныЦенников КАК ПерсональныеЦенникиКоличество
	|		ПО
	|			ПерсональныеЦенникиКоличество.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,
	|												ВидЦены = &ВходнаяЦена
	|											И	Номенклатура В (&СписокНоменклатуры)
	|											И	Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК РегистрВхЦен
    |		ПО	
	|			СпрНоменклатура.Ссылка = РегистрВхЦен.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(,Валюта = &ВалютаДоллар) КАК КурсДолар
	|		ПО
	|			(ИСТИНА)
    |
	|		ГДЕ
	|			СпрНоменклатура.Ссылка В (&СписокНоменклатуры)
	|			
	|		СГРУППИРОВАТЬ ПО
	|			СпрНоменклатура.Код,
	|			СпрНоменклатура.Ссылка,
	|			СпрНоменклатура.Родитель,
	|			РегистрВхЦен.Цена,
	|			КурсДолар.Курс
	|	) КАК ВложенныйЗапрос
	|";
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК СвойствоГарантия
	|ПО
	|	СвойствоГарантия.Ссылка = ВложенныйЗапрос.Номенклатура
	|И	СвойствоГарантия.Свойство.Наименование = &Гарантия
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК СвойствоПроизводитель
	|ПО
	|	СвойствоПроизводитель.Ссылка = ВложенныйЗапрос.Номенклатура
	|И	СвойствоПроизводитель.Свойство.Наименование = &Производитель";
	
	
	Если НЕ ПустаяСтрока(ВидЦеныСсылка) Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,) КАК РегистрЦеныНоменклатуры
		|ПО
		|	РегистрЦеныНоменклатуры.ВидЦены = &ВидЦены
		|И	РегистрЦеныНоменклатуры.Номенклатура = ВложенныйЗапрос.Номенклатура
		|И	РегистрЦеныНоменклатуры.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)";
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ИмяШаблонаЦенника) Тогда
		
		Если СтандартныйШаблон Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ktcСтандартныеШаблоныЦенников КАК РегистрСтандартныеЦенники
			|ПО
			|	РегистрСтандартныеЦенники.Наименование = &ИмяШаблонаЦенника";
		ИначеЕсли ИндивидуальныйШаблон Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ktcПерсональныеШаблоныЦенников КАК РегистрПерсональныеЦенники
			|ПО
			|	РегистрПерсональныеЦенники.Наименование = &ИмяШаблонаЦенника";
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	Запрос.УстановитьПараметр("ВидЦены", ВидЦеныСсылка);
	Запрос.УстановитьПараметр("ИмяШаблонаЦенника", ИмяШаблонаЦенника);
	Запрос.УстановитьПараметр("Гарантия", "Гарантія");
	Запрос.УстановитьПараметр("Производитель", "Виробник");
	Запрос.УстановитьПараметр("ВалютаДоллар", Справочники.Валюты.НайтиПоКоду("840"));
	Запрос.УстановитьПараметр("ВходнаяЦена", ктсПолучитьВходнуюЦену());
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса 		= Запрос.Выполнить();
	Выборка 				= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	МассивРезультатов   	= Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПередачи = Новый Структура;
		СтруктураПередачи.Вставить("Код", Формат(Число(Выборка.Код), "ЧГ=0"));
		СтруктураПередачи.Вставить("Артикул", Выборка.Артикул);
		СтруктураПередачи.Вставить("Номенклатура", Выборка.Номенклатура);
		СтруктураПередачи.Вставить("ВходнаяЦена", Выборка.ВходнаяЦена);
		СтруктураПередачи.Вставить("Родитель", Выборка.Родитель);
		СтруктураПередачи.Вставить("Наименование", Выборка.Наименование);
		СтруктураПередачи.Вставить("НаименованиеПолное", Выборка.НаименованиеПолное);
		СтруктураПередачи.Вставить("Гарантия", Выборка.Гарантия);
		СтруктураПередачи.Вставить("ДатаФормирЦен", Формат(ДатаФормированияЦенников, "ДЛФ=Д"));
		СтруктураПередачи.Вставить("Производитель", Выборка.Производитель);
		СтруктураПередачи.Вставить("КоличествоЦенников", 1);
		Если НЕ ПустаяСтрока(ВидЦеныСсылка) Тогда
			СтруктураПередачи.Вставить("Цена", Выборка.Цена);
			СтруктураПередачи.Вставить("Валюта", Выборка.Валюта);
		Иначе
			СтруктураПередачи.Вставить("Цена", 0);
		КонецЕсли;
		СтруктураПередачи.Вставить("КоличествоПерсональныхШаблонов", Выборка.КоличествоПерсональныхШаблонов);
		
		Если НЕ ПустаяСтрока(ИмяШаблонаЦенника) Тогда
			
			Если СтандартныйШаблон Тогда
				
				СтруктураПередачи.Вставить("СтандартныйШаблон", Выборка.ТабДокумент.Получить());
				
			ИначеЕсли ИндивидуальныйШаблон Тогда
				
				СтруктураПередачи.Вставить("ПерсональныйШаблон", Выборка.ТабДокумент.Получить());
				
			КонецЕсли;
				
			
		КонецЕсли;
		
		МассивРезультатов.Добавить(СтруктураПередачи);
		
	КонецЦикла;
	
	Возврат МассивРезультатов;
	
КонецФункции

&НаСервереБезКонтекста
Функция ктсПолучитьВходнуюЦену()
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	УстановитьПривилегированныйРежим(Истина);
	
	Наименование = "Вхідна";

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВидыЦен.Ссылка
		|ИЗ
		|	Справочник.ВидыЦен КАК ВидыЦен
		|ГДЕ
		|	ВидыЦен.Наименование = &Наименование";

	Запрос.УстановитьПараметр("Наименование", Наименование);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
		
	КонецЦикла;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат Справочники.ВидыНоменклатуры.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Функция ктсПолучитьМакетыПерсональныхЦенников(Номенклатура)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрПерсональныеЦенники.Наименование КАК Наименование,
	|	РегистрПерсональныеЦенники.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.ktcПерсональныеШаблоныЦенников КАК РегистрПерсональныеЦенники
	|ГДЕ
	|	РегистрПерсональныеЦенники.Номенклатура  = &Номенклатура
	|И	РегистрПерсональныеЦенники.ПоУмолчанию = ИСТИНА";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса 	= Запрос.Выполнить();
	Выборка				= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Наименование;
		
	КонецЕсли;
	
	Попытка
		ОбъектНоменклатуры = Номенклатура.ПолучитьОбъект();
	Исключение
		Возврат "";
	КонецПопытки;
	
	Если НЕ ОбъектНоменклатуры.Родитель = Неопределено Тогда
		
		Возврат ктсПолучитьМакетыПерсональныхЦенников(ОбъектНоменклатуры.Родитель)
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервереБезКонтекста
Функция ктсПолучитьСписокПерсональныхЦенников(Номенклатура)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрПерсональныеЦенники.Наименование КАК Наименование,
	|	РегистрПерсональныеЦенники.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.ktcПерсональныеШаблоныЦенников КАК РегистрПерсональныеЦенники
	|ГДЕ
	|	РегистрПерсональныеЦенники.Номенклатура = &СписокНоменклатуры";
	
	Запрос.УстановитьПараметр("СписокНоменклатуры", Номенклатура);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса 	= Запрос.Выполнить();
	Выборка	= РезультатЗапроса.Выбрать();
	
	СписокРезультатов = Новый СписокЗначений;
	
	Пока Выборка.Следующий() Цикл
		СписокРезультатов.Добавить(Выборка.Наименование);
	КонецЦикла;
		
	Возврат СписокРезультатов;
	
КонецФункции

&НаСервереБезКонтекста
Функция ктсЗагрузитьТабличныйДокументИЗРегистра(НаименованиеШаблона)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрСтандартныеЦенники.ТабДокумент КАК ТабДокумент
	|ИЗ
	|	РегистрСведений.ktcСтандартныеШаблоныЦенников КАК РегистрСтандартныеЦенники
	|ГДЕ
	|	РегистрСтандартныеЦенники.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", НаименованиеШаблона);
	Запрос.Текст = ТекстЗапроса;
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	РезультатЗапроса 	= Запрос.Выполнить();
	Выборка 			= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Если Выборка.Следующий() Тогда
		
		ТабДокумент = Выборка.ТабДокумент.Получить();
		
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

&НаСервереБезКонтекста
Функция ктсЗагрузитьТабличныйДокументИЗРегистраПер(НаименованиеШаблона, НоменклатураСсылка)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрСтандартныеЦенники.ТабДокумент КАК ТабДокумент
	|ИЗ
	|	РегистрСведений.ktcПерсональныеШаблоныЦенников КАК РегистрСтандартныеЦенники
	|ГДЕ
	|	РегистрСтандартныеЦенники.Наименование = &Наименование
	|	РегистрСтандартныеЦенники.Номенклатура = &Номенклатура";
	
	Запрос.УстановитьПараметр("Наименование", НаименованиеШаблона);
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
	Запрос.Текст = ТекстЗапроса;
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	РезультатЗапроса 	= Запрос.Выполнить();
	Выборка 			= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Если Выборка.Следующий() Тогда
		
		ТабДокумент = Выборка.ТабДокумент.Получить();
		
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции



&НаСервере
Процедура ктсЗаполнитьСписокНоменклатуры(МассивНоменклатуры)
	
	НомерСтроки = 1;
	Для Каждого ЭлементНоменклатуры ИЗ МассивНоменклатуры Цикл
		
		НоваяСтрока = СписокНоменклатуры.Добавить();
		НоваяСтрока.НомерСтроки = НомерСтроки;
		НоваяСтрока.Код = ЭлементНоменклатуры.Код;
		НоваяСтрока.Номенклатура = ЭлементНоменклатуры.Номенклатура;
		НоваяСтрока.Родитель = ЭлементНоменклатуры.Родитель;
		НоваяСтрока.Цена = ЭлементНоменклатуры.Цена;
		НоваяСтрока.КоличествоШаблонов = ЭлементНоменклатуры.КоличествоПерсональныхШаблонов;
		НоваяСтрока.КоличествоЦенников = ЭлементНоменклатуры.КоличествоЦенников;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ктсЗаполнитьСписокШаблонов(ТипШаблонов)
	
	ТаблицаНоменклатуры = РеквизитФормыВЗначение("СписокНоменклатуры", Тип("ТаблицаЗначений"));
	
	Если ТипШаблонов = "Индивидуальный для группы" Тогда
		
		МассивМакетов = Новый Массив;
		
		Для Каждого СтрокаТаблицы ИЗ ТаблицаНоменклатуры Цикл
			
			Буффер = ктсПолучитьМакетыПерсональныхЦенников(СтрокаТаблицы.Родитель);
				
			МассивМакетов.Добавить(Буффер);
					
		КонецЦикла;
		
		ТаблицаНоменклатуры.ЗагрузитьКолонку(МассивМакетов, "ШаблонГруппы");
		
	ИначеЕсли ТипШаблонов = "Индивидуальный для номенклатуры" Тогда 
		
		МассивНоменклатуры = ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура");
		МассивМакетов = Новый Массив;
		Для Каждого Номенклатура ИЗ МассивНоменклатуры Цикл
			Буффер = ктсПолучитьМакетыПерсональныхЦенников(Номенклатура);	
			МассивМакетов.Добавить(Буффер);
		КонецЦикла;
		ТаблицаНоменклатуры.ЗагрузитьКолонку(МассивМакетов, "ИндивидуальныйШаблон");
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ТаблицаНоменклатуры, "СписокНоменклатуры");	
	
КонецПроцедуры

&НаСервере
Функция ктсПечатьЦенников()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЦенников = Новый ТабличныйДокумент;
	НаборЦенников.ПолеСверху = 0;
	НаборЦенников.ПолеСлева = 0;
	НаборЦенников.ПолеСнизу = 0;
	НаборЦенников.ПолеСправа = 0;
	Защита = Истина;
	
	ктсУстановкаПараметровПечати(НаборЦенников);
	
	Если МакетЦенника = "Индивидуальный для группы" Тогда
		
		МассивДокументов = ктсПечатьИндивидуальногоДляГруппы();
		Возврат МассивДокументов;
		
	ИначеЕсли МакетЦенника = "Индивидуальный для номенклатуры" Тогда
		
		МассивДокументов = ктсПечатьИндивидуальногоДляНоменлатуры(НаборЦенников);
		Возврат МассивДокументов;
		
	Иначе
		
		ктсПечатьСтандарт(НаборЦенников);
		
	КонецЕсли;
	
	Возврат НаборЦенников;
	
КонецФункции

&НаСервере
Процедура ктсУстановкаПараметровПечати(ТабДокумент)
	
	Если НЕ ПустаяСтрока(ОрСтраницы) Тогда
		ТабДокумент.ОриентацияСтраницы = ?(ОрСтраницы = "Ландшафт",ОриентацияСтраницы.Ландшафт,ОриентацияСтраницы.Портрет);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Формат) Тогда
		ТабДокумент.РазмерСтраницы = Строка(Формат);
	КонецЕсли;
	
	ТабДокумент.МасштабПечати = Масштаб;
	
КонецПроцедуры

&НаСервере
Процедура ктсПечатьСтандарт(НаборЦенников)
	
	УстановитьБезопасныйРежим(Истина);
	
	ТаблицаНоменклатуры = РеквизитФормывЗначение("СписокНоменклатуры", Тип("ТаблицаЗначений"));
	
	СтрокаТабличныйДокумент = Новый ТабличныйДокумент;
	
	ктсУстановкаПараметровПечати(СтрокаТабличныйДокумент);
	
	МассивНоменклатуры = ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура");
	
	НоменклатураСПараметрами = ктсПолучитьПараметрыНоменклатуры(МассивНоменклатуры, ДатаФормированияЦенника, ВидЦены, МакетЦенника, Истина, Ложь);
	
	Индекс = 0;
	
	Для Каждого ЭлементНоменклатура ИЗ СписокНоменклатуры Цикл
		
		Для КоличествоЭлементов = 0 ПО ЭлементНоменклатура.КоличествоЦенников - 1 Цикл
		
			Макет = НоменклатураСПараметрами[ЭлементНоменклатура.НомерСтроки - 1].СтандартныйШаблон;
			Макет = Макет.ПолучитьОбласть("ВертТело|ГорТело");
			ктсУстановкаПараметровПечати(Макет);
			
			ПараметрыДляЗаполения = ктсПолучитьПараметрыНоменклатуры(ЭлементНоменклатура.Номенклатура, ДатаФормированияЦенника, ВидЦены,"");
			Макет.Параметры.Заполнить(ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()]);
			Макет.Параметры.Цена = ЭлементНоменклатура.Цена;
			
			Если ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()].ВходнаяЦена = 0 Тогда
				ПроцентНаценки = 0;
			Иначе
				ПроцентНаценки = (Число(ЭлементНоменклатура.Цена)/ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()].ВходнаяЦена - 1) * 100;
			КонецЕсли;
			ПроцентМенеджера = ктсПолучитьПроценМенеджера(ПроцентНаценки);
			Макет.Параметры.Код = Макет.Параметры.Код + "-" + Строка(ПроцентМенеджера);
			
			Если НЕ СтрокаТабличныйДокумент.ПроверитьПрисоединение(Макет) Тогда
				СтрокаТабличныйДокумент.ВывестиВертикальныйРазделительСтраниц();
			КонецЕсли;
			СтрокаТабличныйДокумент.Присоединить(Макет);
			Индекс = Индекс + 1;
			
			Если Индекс = КоличествоВстроке Тогда
				
				Если НЕ НаборЦенников.ПроверитьВывод(СтрокаТабличныйДокумент) Тогда
					НаборЦенников.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				НаборЦенников.Вывести(СтрокаТабличныйДокумент);
				СтрокаТабличныйДокумент = Новый ТабличныйДокумент;
				ктсУстановкаПараметровПечати(СтрокаТабличныйДокумент);
				Индекс = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если НЕ НаборЦенников.ПроверитьВывод(СтрокаТабличныйДокумент) Тогда
		НаборЦенников.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	НаборЦенников.Вывести(СтрокаТабличныйДокумент);
	
КонецПроцедуры

&НаСервере
Функция ктсПечатьИндивидуальногоДляНоменлатуры(НаборЦенников)
	
	//УстановитьБезопасныйРежим(Истина);
	//
	//СтрокаТабличныйДокумент = Новый ТабличныйДокумент;
	//ктсУстановкаПараметровПечати(СтрокаТабличныйДокумент);
	//СтрокаТабличныйДокумент.Защита = Истина;
	//	
	//Индекс = 0;
	//
	//Для Каждого ЭлементНоменклатура ИЗ СписокНоменклатуры Цикл
	//	
	//	Если ПустаяСтрока(ЭлементНоменклатура.ИндивидуальныйШаблон) Тогда
	//		Продолжить;
	//	КонецЕсли;
	//	
	//	ПараметрыНоменклатуры = ктсПолучитьПараметрыНоменклатуры(ЭлементНоменклатура.Номенклатура, ДатаФормированияЦенника, ВидЦены, ЭлементНоменклатура.ИндивидуальныйШаблон, Ложь, Истина);
	//	
	//	Для КоличествоЭлементов = 0 ПО ЭлементНоменклатура.КоличествоЦенников - 1 Цикл
	//		
	//		Макет = ПараметрыНоменклатуры[0].ПерсональныйШаблон;
	//		Макет = Макет.ПолучитьОбласть("ВертТело|ГорТело");
	//		ктсУстановкаПараметровПечати(Макет);
	//		
	//		ПараметрыДляЗаполения = ктсПолучитьПараметрыНоменклатуры(ЭлементНоменклатура.Номенклатура, ДатаФормированияЦенника, ВидЦены,"");
	//		Макет.Параметры.Заполнить(ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()]);
	//		Макет.Параметры.Цена = ЭлементНоменклатура.Цена;
	//		Макет.Защита = Истина;
	//		
	//		Если ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()].ВходнаяЦена = 0 Тогда
	//			ПроцентНаценки = 0;
	//		Иначе
	//			ПроцентНаценки = (Число(ЭлементНоменклатура.Цена)/ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()].ВходнаяЦена - 1) * 100;
	//		КонецЕсли;

	//		ПроцентМенеджера = ктсПолучитьПроценМенеджера(ПроцентНаценки);
	//		Макет.Параметры.Код = Макет.Параметры.Код + "-" + Строка(ПроцентМенеджера);
	//		
	//		Если НЕ СтрокаТабличныйДокумент.ПроверитьПрисоединение(Макет) Тогда
	//			СтрокаТабличныйДокумент.ВывестиВертикальныйРазделительСтраниц();
	//		КонецЕсли;
	//		СтрокаТабличныйДокумент.Присоединить(Макет);
	//		Индекс = Индекс + 1;
	//		
	//		Если Индекс = КоличествоВстроке Тогда
	//			
	//			Если НЕ НаборЦенников.ПроверитьВывод(СтрокаТабличныйДокумент) Тогда
	//				НаборЦенников.ВывестиГоризонтальныйРазделительСтраниц();
	//			КонецЕсли;
	//			НаборЦенников.Вывести(СтрокаТабличныйДокумент);
	//			СтрокаТабличныйДокумент = Новый ТабличныйДокумент;
	//			СтрокаТабличныйДокумент.Защита = Истина;
	//			ктсУстановкаПараметровПечати(СтрокаТабличныйДокумент);
	//			Индекс = 0;
	//			
	//		КонецЕсли;
	//		
	//	КонецЦикла;
	//	
	//КонецЦикла;
	//
	//Если НЕ НаборЦенников.ПроверитьВывод(СтрокаТабличныйДокумент) Тогда
	//	НаборЦенников.ВывестиГоризонтальныйРазделительСтраниц();
	//КонецЕсли;
	//НаборЦенников.Вывести(СтрокаТабличныйДокумент);
	
	УстановитьБезопасныйРежим(Истина);
	
	МассивДокументов = Новый Массив;
	
	Индекс = 0;
	
	Для Каждого ЭлементНоменклатура ИЗ СписокНоменклатуры Цикл
		
		Если ПустаяСтрока(ЭлементНоменклатура.ИндивидуальныйШаблон) Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыРодителя = ктсПолучитьПараметрыНоменклатуры(ЭлементНоменклатура.Номенклатура, ДатаФормированияЦенника, ВидЦены, ЭлементНоменклатура.ИндивидуальныйШаблон, Ложь, Истина);
		ИндексМакета = ПроверитьВхождениеДокументавМассив(МассивДокументов, ПараметрыРодителя[0].ПерсональныйШаблон, ЭлементНоменклатура.ИндивидуальныйШаблон);
		
		Для КоличествоЭлементов = 0 ПО ЭлементНоменклатура.КоличествоЦенников - 1 Цикл
			
			Макет = ПараметрыРодителя[0].ПерсональныйШаблон;
			Макет = Макет.ПолучитьОбласть("ВертТело|ГорТело");
			ктсУстановкаПараметровПечати(Макет);
			
			ПараметрыДляЗаполения = ктсПолучитьПараметрыНоменклатуры(ЭлементНоменклатура.Номенклатура, ДатаФормированияЦенника, ВидЦены,"");
			Макет.Параметры.Заполнить(ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()]);
			Макет.Параметры.Цена = ЭлементНоменклатура.Цена;
			
			Если ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()].ВходнаяЦена = 0 Тогда
				ПроцентНаценки = 0;
			Иначе
				ПроцентНаценки = (Число(ЭлементНоменклатура.Цена)/ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()].ВходнаяЦена - 1) * 100;
			КонецЕсли;

			ПроцентМенеджера = ктсПолучитьПроценМенеджера(ПроцентНаценки);
			Макет.Параметры.Код = Макет.Параметры.Код + "-" + Строка(ПроцентМенеджера);
			
			Если НЕ МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент.ПроверитьПрисоединение(Макет) Тогда
				Если НЕ МассивДокументов[ИндексМакета].Документ.ПроверитьВывод(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент) Тогда
					МассивДокументов[ИндексМакета].Документ.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				МассивДокументов[ИндексМакета].Документ.Вывести(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент);
				МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент = Новый ТабличныйДокумент;
				ктсУстановкаПараметровПечати(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент);
				МассивДокументов[ИндексМакета].ИндексСтроки = 0;
			КонецЕсли;
			МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент.Присоединить(Макет);
			МассивДокументов[ИндексМакета].ИндексСтроки = МассивДокументов[ИндексМакета].ИндексСтроки + 1;
			
			Если МассивДокументов[ИндексМакета].ИндексСтроки = КоличествоВстроке Тогда
				
				Если НЕ МассивДокументов[ИндексМакета].Документ.ПроверитьВывод(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент) Тогда
					МассивДокументов[ИндексМакета].Документ.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				МассивДокументов[ИндексМакета].Документ.Вывести(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент);
				МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент = Новый ТабличныйДокумент;
				ктсУстановкаПараметровПечати(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент);
				МассивДокументов[ИндексМакета].ИндексСтроки = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого ЭлементДокумент ИЗ МассивДокументов Цикл
		
		Если НЕ ЭлементДокумент.Документ.ПроверитьВывод(ЭлементДокумент.СтрокаТабличныйДокумент) Тогда
			ЭлементДокумент.Документ.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ЭлементДокумент.Документ.Вывести(ЭлементДокумент.СтрокаТабличныйДокумент);
		
	КонецЦикла;
	
	Возврат МассивДокументов;	
	
КонецФункции

&НаСервере
Функция ктсПолучитьПроценМенеджера(ПроцентНаценки)
	
	УстановитьПривилегированныйРежим(Истина);
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ktcПроцентыМенеджера.ЗначениеПорога) КАК ЗначениеПорога
		|ИЗ
		|	РегистрСведений.ktcПроцентыМенеджера КАК ktcПроцентыМенеджера
		|ГДЕ
		|	ktcПроцентыМенеджера.НижняяГраница < &НижняяГраница";

	Запрос.УстановитьПараметр("НижняяГраница", ПроцентНаценки);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.ЗначениеПорога
	КонецЦикла;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
    Возврат "00";
	
КонецФункции

&НаСервере
Функция ктсПечатьИндивидуальногоДляГруппы()
	
	УстановитьБезопасныйРежим(Истина);
	
	МассивДокументов = Новый Массив;
	
	Индекс = 0;
	
	Для Каждого ЭлементНоменклатура ИЗ СписокНоменклатуры Цикл
		
		Если ПустаяСтрока(ЭлементНоменклатура.ШаблонГруппы) Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыРодителя = ктсПолучитьПараметрыНоменклатуры(ЭлементНоменклатура.Родитель, ДатаформированияЦенника, ВидЦены, ЭлементНоменклатура.ШаблонГруппы, Ложь, Истина);
		ИндексМакета = ПроверитьВхождениеДокументавМассив(МассивДокументов, ПараметрыРодителя[0].ПерсональныйШаблон, ЭлементНоменклатура.ШаблонГруппы);
		
		Для КоличествоЭлементов = 0 ПО ЭлементНоменклатура.КоличествоЦенников - 1 Цикл
			
			Макет = ПараметрыРодителя[0].ПерсональныйШаблон;
			Макет = Макет.ПолучитьОбласть("ВертТело|ГорТело");
			ктсУстановкаПараметровПечати(Макет);
			
			ПараметрыДляЗаполения = ктсПолучитьПараметрыНоменклатуры(ЭлементНоменклатура.Номенклатура, ДатаФормированияЦенника, ВидЦены,"");
			Макет.Параметры.Заполнить(ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()]);
			Макет.Параметры.Цена = ЭлементНоменклатура.Цена;
			
			Если ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()].ВходнаяЦена = 0 Тогда
				ПроцентНаценки = 0;
			Иначе
				ПроцентНаценки = (Число(ЭлементНоменклатура.Цена)/ПараметрыДляЗаполения[ПараметрыДляЗаполения.ВГраница()].ВходнаяЦена - 1) * 100;
			КонецЕсли;

			ПроцентМенеджера = ктсПолучитьПроценМенеджера(ПроцентНаценки);
			Макет.Параметры.Код = Макет.Параметры.Код + "-" + Строка(ПроцентМенеджера);
			
			Если НЕ МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент.ПроверитьПрисоединение(Макет) Тогда
				Если НЕ МассивДокументов[ИндексМакета].Документ.ПроверитьВывод(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент) Тогда
					МассивДокументов[ИндексМакета].Документ.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				МассивДокументов[ИндексМакета].Документ.Вывести(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент);
				МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент = Новый ТабличныйДокумент;
				ктсУстановкаПараметровПечати(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент);
				МассивДокументов[ИндексМакета].ИндексСтроки = 0;
			КонецЕсли;
			МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент.Присоединить(Макет);
			МассивДокументов[ИндексМакета].ИндексСтроки = МассивДокументов[ИндексМакета].ИндексСтроки + 1;
			
			Если МассивДокументов[ИндексМакета].ИндексСтроки = КоличествоВстроке Тогда
				
				Если НЕ МассивДокументов[ИндексМакета].Документ.ПроверитьВывод(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент) Тогда
					МассивДокументов[ИндексМакета].Документ.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				МассивДокументов[ИндексМакета].Документ.Вывести(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент);
				МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент = Новый ТабличныйДокумент;
				ктсУстановкаПараметровПечати(МассивДокументов[ИндексМакета].СтрокаТабличныйДокумент);
				МассивДокументов[ИндексМакета].ИндексСтроки = 0;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого ЭлементДокумент ИЗ МассивДокументов Цикл
		
		Если НЕ ЭлементДокумент.Документ.ПроверитьВывод(ЭлементДокумент.СтрокаТабличныйДокумент) Тогда
			ЭлементДокумент.Документ.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ЭлементДокумент.Документ.Вывести(ЭлементДокумент.СтрокаТабличныйДокумент);
		
	КонецЦикла;
	
	Возврат МассивДокументов;
	
КонецФункции

&НаСервере
Функция ПроверитьВхождениеДокументавМассив(МассивДокументов, МакетДокумента, ИмяШаблона)
	
	Индекс = 0;
	Для Каждого ДокументИзМассива ИЗ МассивДокументов Цикл
		
		Если ДокументИзМассива.ИмяШаблона = ИмяШаблона Тогда
			
			Возврат Индекс;
			
		КонецЕсли;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
	СтруктураВМассив = Новый Структура;
	СтруктураВМассив.Вставить("ИмяШаблона", ИмяШаблона);
	СтруктураВМассив.Вставить("Документ", Новый ТабличныйДокумент);
	СтруктураВМассив.Вставить("СтрокаТабличныйДокумент", Новый ТабличныйДокумент);
	СтруктураВМассив.Вставить("ИндексСтроки", 0);
	
	ктсУстановкаПараметровПечати(СтруктураВМассив.Документ);
	ктсУстановкаПараметровПечати(СтруктураВМассив.СтрокаТабличныйДокумент);
	
	МассивДокументов.Добавить(СтруктураВМассив);
	
	Возврат МассивДокументов.ВГраница();	
	
КонецФункции



&НаКлиенте
Функция ктсСформироватьСписокМакетов()
	
	СписокМакетовИзРегистра = ктсПолучитьСписокСтандартныхЦенников();
	СписокМакетовИзРегистра.Добавить("Индивидуальный для группы");
	СписокМакетовИзРегистра.Добавить("Индивидуальный для номенклатуры");
	
	Возврат СписокМакетовИзРегистра;
	
КонецФункции

&НаКлиенте
Процедура ктсИнициализироватьФорму()
	
	Если ПустаяСтрока(Формат) Тогда
		Формат = "А4";
	КонецЕсли;
	
	Если ПустаяСтрока(ОриентацияСтраницы) Тогда
		ОриентацияСтраницы = "Портрет";
	КонецЕсли;
	
	Если КоличествоВстроке = 0 Тогда
		КоличествоВстроке = 1;
	КонецЕсли;
	
	Если Масштаб = 0 Тогда
		Масштаб = 100;
	КонецЕсли;
	
	Если ПустаяСтрока(МакетЦенника) Тогда
		СписокСтандартныхЦенников = ктсПолучитьСписокСтандартныхЦенников();
		Если СписокСтандартныхЦенников.Количество() = 0 Тогда
			ктсУстановитьВидимостьЭлементов(Истина, Ложь);
			МакетЦенника = "Индивидуальный для группы";
			ктсЗаполнитьСписокШаблонов("Индивидуальный для группы");
		Иначе
			МакетЦенника = СписокСтандартныхЦенников[0].Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ктсУстановитьВидимостьЭлементов(ДоступностьШаблонаГрупп = Ложь, ДоступностьИндивидуальногоШаблона = Ложь)
	
	ЭлСписокНоменклатуры 	= Элементы.СписокНоменклатуры;
	ЭлПодчиненныеЭлементы 	= ЭлСписокНоменклатуры.ПодчиненныеЭлементы;
	
	ШаблонГруппы 			= ЭлПодчиненныеЭлементы.СписокНоменклатурыШаблонГруппы;
	ИндвидуальныйШаблон		= ЭлПодчиненныеЭлементы.СписокНоменклатурыИндивидуальныйШаблон;
	
	ШаблонГруппы.Доступность 	= ДоступностьШаблонаГрупп;
	ШаблонГруппы.Видимость 		= ДоступностьШаблонаГрупп;
	
	ИндвидуальныйШаблон.Доступность = ДоступностьИндивидуальногоШаблона;
	ИндвидуальныйШаблон.Видимость 	= ДоступностьИндивидуальногоШаблона;
	
КонецПроцедуры

&НаКлиенте
Процедура ктсПерещитатьНоменклатуру()
	
	НомерСтроки = 1;
	Для Каждого СтрокаНоменклатура ИЗ СписокНоменклатуры Цикл
		
		СтрокаНоменклатура.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ктсПроверитьЗаполнение()
	
	Если ПустаяСтрока(МакетЦенника) Тогда
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Поле = "МакетЦенника";
		СообщениеПользователю.Текст = "Поле обязательное для заполнения.";
		СообщениеПользователю.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ПустаяСтрока(Формат) Тогда
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Поле = "Формат";
		СообщениеПользователю.Текст = "Поле обязательное для заполнения.";
		СообщениеПользователю.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ОрСтраницы) Тогда
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Поле = "ОрСтраницы";
		СообщениеПользователю.Текст = "Поле обязательное для заполнения.";
		СообщениеПользователю.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции




&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.ВидПечати = "БыстраяПечать" Тогда
	
		МассивНоменклатуры 			= Параметры.МассивНоменклатуры;
		ВидЦены						= Параметры.ВидЦены;
		НоменклатураСПараметрами 	= ктсПолучитьПараметрыНоменклатуры(МассивНоменклатуры, ДатаФормированияЦенника, ВидЦены, "");
		
		ктсЗаполнитьСписокНоменклатуры(НоменклатураСПараметрами);
		
	ИначеЕсли Параметры.ВидПечати = "ПечатьИЗКорзины" Тогда
		
		МассивНоменклатуры 			= Параметры.МассивНоменклатуры;
		СоотвествиеЦен				= Параметры.СоотвествиеЦен;
		ВидЦены						= Параметры.ВидЦены;
		СоотвествиеКоличества		= Параметры.СоотвествиеКоличества;
		НоменклатураСПараметрами 	= ктсПолучитьПараметрыНоменклатуры(МассивНоменклатуры, ДатаФормированияЦенника, ВидЦены, "");
		
		Для Каждого СтрокаНоменклатура ИЗ НоменклатураСПараметрами Цикл
			
			СтрокаНоменклатура.Цена = СоотвествиеЦен[СтрокаНоменклатура.Номенклатура];
			СтрокаНоменклатура.КоличествоЦенников = СоотвествиеКоличества[СтрокаНоменклатура.Номенклатура];
			
		КонецЦикла;
		
		ктсЗаполнитьСписокНоменклатуры(НоменклатураСПараметрами);
		
	КонецЕсли;
	
КонецПроцедуры





&НаКлиенте
Процедура МакетЦенникаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = ктсСформироватьСписокМакетов();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоВстрокеПриИзменении(Элемент)
	
	Если КоличествоВстроке < 1 Тогда
		КоличествоВстроке = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МасштабПриИзменении(Элемент)
	
	Если Масштаб < 1 Тогда
		Масштаб = 1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ктсИнициализироватьФорму();
	
	Если МакетЦенника = "Индивидуальный для группы" Тогда
		ктсУстановитьВидимостьЭлементов(Истина, Ложь);
		ктсЗаполнитьСписокШаблонов("Индивидуальный для группы");
	ИначеЕсли МакетЦенника = "Индивидуальный для номенклатуры" Тогда
		ктсЗаполнитьСписокШаблонов("Индивидуальный для номенклатуры");
		ктсУстановитьВидимостьЭлементов(Ложь, Истина);
	Иначе
		ктсУстановитьВидимостьЭлементов(Ложь, Ложь);
	КонецЕсли;
	
	ДатаФормированияЦенника = ТекущаяДата();
	
КонецПроцедуры

&НаКлиенте
Процедура МакетЦенникаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбранноеЗначение = "Индивидуальный для группы" Тогда
		ктсУстановитьВидимостьЭлементов(Истина, Ложь);
		ктсЗаполнитьСписокШаблонов("Индивидуальный для группы");
	ИначеЕсли ВыбранноеЗначение = "Индивидуальный для номенклатуры" Тогда
		ктсУстановитьВидимостьЭлементов(Ложь, Истина);
		ктсЗаполнитьСписокШаблонов("Индивидуальный для номенклатуры");
	Иначе
		ктсУстановитьВидимостьЭлементов(Ложь, Ложь);
	КонецЕсли;
	
	МакетЦенника = ВыбранноеЗначение;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПослеУдаления(Элемент)
	
	ктсПерещитатьНоменклатуру();
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ПечатьЦенниковНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЦенниковНаКлиенте() Экспорт
	
	Состояние("Формируем документы печати....");
	
	Если ктсПроверитьЗаполнение() Тогда
		
		Результаты = ктсПечатьЦенников();
		Если ТипЗнч(Результаты) = Тип("Массив") Тогда

			Для Каждого Результат ИЗ Результаты Цикл
				
				Результат.Документ.Показать();
				
			КонецЦикла;
			
		Иначе
			
			Результаты.Показать();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры




&НаКлиенте
Процедура СписокНоменклатурыИндивидуальныйШаблонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлСписокНоменклатуры = Элементы.СписокНоменклатуры;
	ТекущиеДанные = ЭлСписокНоменклатуры.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
	
		ДанныеВыбора = ктсПолучитьСписокПерсональныхЦенников(ТекущиеДанные.Номенклатура);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокНоменклатурыШаблонГруппыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлСписокНоменклатуры = Элементы.СписокНоменклатуры;
	ТекущиеДанные = ЭлСписокНоменклатуры.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
	
		ДанныеВыбора = ктсПолучитьСписокПерсональныхЦенников(ТекущиеДанные.Родитель);
		
	КонецЕсли;

	
КонецПроцедуры


&НаКлиенте
Процедура КоличествоЦенниковПриИзменении(Элемент)
	
	Для Каждого СтрокаТаблицы Из СписокНоменклатуры Цикл
		
		СтрокаТаблицы.КоличествоЦенников = КоличествоЦенников;
		
	КонецЦикла;
	
КонецПроцедуры

