
&НаКлиенте
Процедура Установить(Команда)
	
	//Если ЗначениеЗаполнено(Цена) Тогда
		
		ктсСоздатьДокумент(КлючУникальности);
		
		Закрыть();
		
	//КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЦеныВидЦеныОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Валюта = ктсПолучитьВалютуПоВидуЦены(ВыбранноеЗначение);
	Если Валюта <> Неопределено Тогда
		
		ЭлТаблицаЦен = Элементы.Цены;
		ТекущиеДанные = ЭлТаблицаЦен.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			
			ТекущиеДанные.Валюта = Валюта;
			ТекущиеДанные.ВидЦены = ВыбранноеЗначение;
			ЭлТаблицаЦен.ТекущийЭлемент = ЭлТаблицаЦен.ПодчиненныеЭлементы.ЦеныЦена;
			
		КонецЕсли;
		
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЦеныПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры



&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивВидовЦен = ктсПолучитьСписокВидовЦен();
	ктсПолучитьТаблицуСТекущимиЦенами(МассивВидовЦен, Параметры.Номенклатура);
	
КонецПроцедуры




&НаСервере
Процедура ктсСоздатьДокумент(Номенклатура)
	
	//Если ЗначениеЗаполнено(ВидЦены) Тогда	
		//ОбъектДокумента = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
		//ВидыЦен = ОбъектДокумента.ВидыЦен.Добавить();
		////ВидыЦен.ВидЦены = ВидЦены;
		//
		//Товары = ОбъектДокумента.Товары.Добавить();
		////Товары.ВидЦены = ВидЦены;
		//Товары.Номенклатура = Номенклатура;
		////Товары.Цена = Цена;
		//
		//ОбъектДокумента.Дата = ТекущаяДата();
		//ОбъектДокумента.Ответственный = ктсПолучитьПользователяЗаУникальнымИдентификатором(ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор);	
		//
		//ОбъектДокумента.Записать(РежимЗаписиДокумента.Проведение);	
	//КонецЕсли;	
	
	//ДокументСсылка = ктсПроверитьДвижениеДокументаУстановкаЦен(Номенклатура);
	//Если ДокументСсылка = Неопределено Тогда
	//	
	ктсСоздатьДокументУстановкиЦенНоменклатуры(Номенклатура);
	//	
	//Иначе
	//
	//	ктсПолучитьДокументПоСсылке(ДокументСсылка, Номенклатура)
	//	
	//КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция ктсПроверитьДвижениеДокументаУстановкаЦен(НоменклатураСсылка)
	
	ТаблицаЦен = РеквизитФормыВЗначение("Цены", Тип("ТаблицаЗначений"));
	МассивЦен = ТаблицаЦен.ВыгрузитьКолонку("ВидЦены");
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегистрЦеныНоменклатуры.Регистратор
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,) КАК РегистрЦеныНоменклатуры
	|ГДЕ
	|	РегистрЦеныНоменклатуры.Номенклатура = &Номенклатура
	|И	РегистрЦеныНоменклатуры.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|И	РегистрЦеныНоменклатуры.ВидЦены В (&ВидыЦен)";
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
	Запрос.УстановитьПараметр("ВидыЦен", МассивЦен);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Регистратор;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура ктсСоздатьДокументУстановкиЦенНоменклатуры(НоменклатураСсылка)
	
	ОбъектДокумента = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();	
	//ТаблицаЦен 		= РеквизитФормыВЗначение("Цены", Тип("ТаблицаЗначений"));
	ТаблицаЦен = Цены.Выгрузить();
	//МассивВидовЦен 	= ТаблицаЦен.ВыгрузитьКолонку("ВидЦены");
	//МассивЦен 		= ТаблицаЦен.ВыгрузитьКолонку("Цена");
	
	//ПараметрыОтбора = Новый Структура("Цена");
	
	Для Каждого СтрокаЦена Из ТаблицаЦен Цикл
		
		Если СтрокаЦена.Цена > 0 Тогда
			
			СтрокаТовары 	= ОбъектДокумента.Товары.Добавить();
			СтрокаВидыЦен 	= ОбъектДокумента.ВидыЦен.Добавить();
			
			СтрокаВидыЦен.ВидЦены = СтрокаЦена.ВидЦены;
			
			СтрокаТовары.ВидЦены 		= СтрокаЦена.ВидЦены;
			СтрокаТовары.Номенклатура 	= НоменклатураСсылка;
			СтрокаТовары.Цена 			= СтрокаЦена.Цена;	
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбъектДокумента.Дата = ТекущаяДата();
	ОбъектДокумента.Ответственный = ПараметрыСеанса.ТекущийПользователь;//ктсПолучитьПользователяЗаУникальнымИдентификатором(ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор);
	
	//ИндексВидаЦен = 0;
	//Для Каждого Цена ИЗ МассивЦен Цикл
	//	
	//	Если Цена <> 0 Тогда
	//		
	//		СтрокаТовары = ОбъектДокумента.Товары.Добавить();
	//		СтрокаВидыЦен = ОбъектДокумента.ВидыЦен.Добавить();
	//		
	//		СтрокаВидыЦен.ВидЦены = МассивВидовЦен[ИндексВидаЦен];
	//		
	//		СтрокаТовары.ВидЦены = МассивВидовЦен[ИндексВидаЦен];
	//		СтрокаТовары.Номенклатура = НоменклатураСсылка;
	//		СтрокаТовары.Цена = Цена;
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	ОбъектДокумента.Записать(РежимЗаписиДокумента.Проведение);
		
КонецПроцедуры

Процедура ктсПолучитьДокументПоСсылке(ДокументСсылка, Номенклатура)
	
	ОбъектДокумента = ДокументСсылка.Получитьобъект();
	ТаблицаЦен 	= РеквизитФормыВЗначение("Цены", Тип("ТаблицаЗначений"));
	
	ОбъектДокумента.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	
	ОбъектДокумента.Дата = ТекущаяДата();
	ОбъектДокумента.Ответственный = ктсПолучитьПользователяЗаУникальнымИдентификатором(ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор);
	
	МассивВидовЦен = ТаблицаЦен.ВыгрузитьКолонку("ВидЦены");
	Для Каждого ВидЦены ИЗ МассивВидовЦен Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ВидЦены", ВидЦены);
		РезультатыПоискаВТаблицеВидовЦенДокумента = ОбъектДокумента.ВидыЦен.НайтиСтроки(СтруктураПоиска);
		Если РезультатыПоискаВТаблицеВидовЦенДокумента.Количество() = 0 Тогда
			НоваяСтрокаВидовЦен = ОбъектДокумента.ВидыЦен.Добавить();
			НоваяСтрокаВидовЦен.ВидЦены = ВидЦены;
		КонецЕсли;
		
	КонецЦикла;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
	структураПоиска.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	
	РезультатыПоиска = ОбъектДокумента.Товары.НайтиСтроки(СтруктураПоиска);
	
	Для Каждого Результат ИЗ РезультатыПоиска Цикл
		
		ОбъектДокумента.Товары.Удалить(Результат);
		
	КонецЦикла;
	
	Для Каждого Цена ИЗ ТаблицаЦен Цикл
		НоваяСтрокаТовары = ОбъектДокумента.Товары.Добавить();
		НоваяСтрокаТовары.ВидЦены = Цена.ВидЦены;
		НоваяСтрокаТовары.Номенклатура = Номенклатура;
		НоваяСтрокаТовары.Цена = Цена.Цена;
	КонецЦикла;
	
	ОбъектДокумента.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаСервере
Функция ктсПолучитьПользователяЗаУникальнымИдентификатором(УникальныйИдентификатор)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрПользователи.Ссылка КАК Пользователь
	|ИЗ
	|	Справочник.Пользователи КАК СпрПользователи
	|ГДЕ
	|	СпрПользователи.ИдентификаторПользователяИБ = &УникальныйИдентификатор";
	Запрос.УстановитьПараметр("УникальныйИдентификатор", УникальныйИдентификатор);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Пользователь;
		
	КонецЕсли;
	
	Возврат Справочники.Пользователи.ПустаяСсылка();
	
КонецФункции




&НаСервере
Функция ктсПолучитьСписокВидовЦен()
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрВидыЦен.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыЦен КАК СпрВидыЦен
	|ГДЕ
	|	НЕ СпрВидыЦен.Наименование = ""Вхідна""";
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	МассивВидовЦен = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат МассивВидовЦен;
	
КонецФункции

&НаСервере
Процедура ктсПолучитьТаблицуСТекущимиЦенами(МассивВидовЦен, НоменклатураСсылка)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВидыЦен.Ссылка															КАК ВидЦены,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР 
	|			КОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) > 0 
	|			ТОГДА
	|				ЦеныНоменклатуры.Цена
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	КАК Число(15,2)) 														КАК Цена,
	|	ВидыЦен.ВалютаЦены														КАК Валюта
	|ИЗ
	|	Справочник.ВидыЦен КАК ВидыЦен
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура=&Номенклатура И Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ЦеныНоменклатуры
	|ПО
	|	ВидЦены = ВидыЦен.Ссылка
	|ГДЕ
	|	НЕ ВидыЦен.Наименование = ""Вхідна""";	
	//Запрос.УстановитьПараметр("ВидыЦен", МассивВидовЦен);
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатыЗапроса = Запрос.Выполнить();
	
	ТаблицаЦен = РеквизитформыВЗначение("Цены", Тип("ТаблицаЗначений"));
	ТаблицаЦен = РезультатыЗапроса.Выгрузить();
	ЗначениеВРеквизитФормы(ТаблицаЦен, "Цены");
	
	
КонецПроцедуры



&НаСервере
Функция ктсПолучитьВалютуПоВидуЦены(ВидЦены)
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрВидыЦен.ВалютаЦены КАК Валюта
	|ИЗ
	|	Справочник.ВидыЦен КАК СпрВидыЦен
	|ГДЕ
	|	СпрВидыЦен.Ссылка = &ВидЦены";
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Валюта;
		
	КонецЕсли;
	
	Возврат Неопределено
	
КонецФункции

&НаСервере
Функция ктсОтсечьвыбранныеВидыЦен()
	
	ТаблицаЦен = РеквизитФормыВЗначение("Цены", Тип("ТаблицаЗначений"));
	МассивЦен = ТаблицаЦен.ВыгрузитьКолонку("ВидЦены");
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрВидыЦен.Ссылка КАК ВидЦены
	|ИЗ
	|	Справочник.ВидыЦен КАК СпрВидыЦен
	|ГДЕ
	|	СпрВидыЦен.Ссылка НЕ В (&МассивЦен)";
	Запрос.УстановитьПараметр("МассивЦен", МассивЦен);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	СписокЦен = Новый СписокЗначений;
	
	Пока Выборка.Следующий() Цикл
		
		СписокЦен.Добавить(Выборка.ВидЦены);
		
	КонецЦикла;
	
	Возврат СписокЦен;
	
КонецФункции

&НаКлиенте
Процедура ЦеныВидЦеныНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	ДанныеВыбора = ктсОтсечьвыбранныеВидыЦен();
	
КонецПроцедуры


&НаКлиенте
Процедура ЦеныПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры
