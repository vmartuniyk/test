
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МетаданныеДокументов = Метаданные.Документы;
	
	Для Каждого Метаданное Из МетаданныеДокументов Цикл
		
		Если Метаданное.ТабличныеЧасти.Количество() = 0 ИЛИ (Метаданное.ТабличныеЧасти.Найти("Товары") = Неопределено И Метаданное.ТабличныеЧасти.Найти("Комплектующие") = Неопределено) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		Если НЕ (ПравоДоступа("Чтение", Метаданное) И ПравоДоступа("Добавление", Метаданное)) Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрока = ТаблицаМетаданных.Добавить();
		НоваяСтрока.ИндексКартинки = 0;
		НоваяСтрока.ПредставлениеМетаданного = Метаданное.Представление();
		НоваяСтрока.ИмяМетаданного = Метаданное.Имя;
					
	КонецЦикла;
	
	ВидЦены = Параметры.ВидЦены;
	
КонецПроцедуры

&НаСервере
Процедура ктсПолучитьСписокДокументов()
	
	ТаблицаДокументов.Очистить();
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "";
	
	ДоступностьКнопкиНастройкиПеремещений = Ложь;
	
	Для Каждого Строка ИЗ ТаблицаМетаданных Цикл
		
		Если Строка.Флажок Тогда
			
			Если Строка.ИмяМетаданного = "ПеремещениеТоваров" Тогда
				
				ДоступностьКнопкиНастройкиПеремещений = Истина;
				
			КонецЕсли;
			
			ТекстЗапроса = ?(ТекстЗапроса = "", "ВЫБРАТЬ РАЗРЕШЕННЫЕ", ТекстЗапроса + Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС + "ВЫБРАТЬ");
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС +
			"Документ" 			+ Строка.ИмяМетаданного + ".Дата					КАК Дата," 			+ Символы.ПС + 
			"Документ" 			+ Строка.ИмяМетаданного + ".Номер 					КАК Номер," 		+ Символы.ПС + 
			"Документ" 			+ Строка.ИмяМетаданного + ".Ссылка					КАК Ссылка," 		+ Символы.ПС +
			"ПРЕДСТАВЛЕНИЕ(""" 	+ Строка.ИмяМетаданного + """)						КАК ИмяДокумента,"; 
			
			Ответственный = "";
			Если 	Строка.ИмяМетаданного = "ВводОстатков"  								ИЛИ 
					Строка.ИмяМетаданного = "Встреча"										ИЛИ 
					Строка.ИмяМетаданного = "ЗаказНаВнутреннееПотребление"					ИЛИ 
					Строка.ИмяМетаданного = "ЗаказНаПеремещение"							ИЛИ 
					Строка.ИмяМетаданного = "ЗаказНаСборку"									ИЛИ 
					Строка.ИмяМетаданного = "ОприходованиеТоваров"							ИЛИ 
					Строка.ИмяМетаданного = "ОрдерНаОтражениеИзлишковНедостачТоваров"		ИЛИ 
					Строка.ИмяМетаданного = "ОрдерНаПеремещениеТоваров"						ИЛИ 
					Строка.ИмяМетаданного = "ОтборРазмещениеТоваров"						ИЛИ 
					Строка.ИмяМетаданного = "ОтчетОРозничныхПродажах"						ИЛИ 
					Строка.ИмяМетаданного = "ПеремещениеТоваров"							ИЛИ 
					Строка.ИмяМетаданного = "ПересортицаТоваров"							ИЛИ 
					Строка.ИмяМетаданного = "ПересчетТоваров"								ИЛИ 
					Строка.ИмяМетаданного = "ПланПродажИВнутреннегоПотребления"				ИЛИ 
					Строка.ИмяМетаданного = "ПриходныйОрдерНаТовары"						ИЛИ 
					Строка.ИмяМетаданного = "РасходныйОрдерНаТовары"						ИЛИ 
					Строка.ИмяМетаданного = "РегистрацияЦенНоменклатурыПоставщика"			ИЛИ 
					Строка.ИмяМетаданного = "СборкаТоваров"									ИЛИ 
					Строка.ИмяМетаданного = "СписаниеТоваров"								ИЛИ 
					Строка.ИмяМетаданного = "ТребованиеНакладная"							ИЛИ 
					Строка.ИмяМетаданного = "УстановкаЦенНоменклатуры"						ИЛИ
					Строка.ИмяМетаданного = "ОтражениеРезультатовПроверкиОрдераНаТовары"	Тогда
					
				Ответственный = "Документ" + Строка.ИмяМетаданного + ".Ответственный"; 
				
			ИначеЕсли 	Строка.ИмяМетаданного = "ВнесениеДенежныхСредствВКассуККМ"			ИЛИ 		
						Строка.ИмяМетаданного = "ЧекККМ"									ИЛИ
						Строка.ИмяМетаданного = "ЧекККМВозврат"								Тогда
						
				Ответственный = "Документ" + Строка.ИмяМетаданного + ".Кассир";
				
			ИначеЕсли 	Строка.ИмяМетаданного = "ВозвратТоваровОтКлиента" 					ИЛИ
						Строка.ИмяМетаданного = "ВозвратТоваровПоставщику"  				ИЛИ
						Строка.ИмяМетаданного = "ЗаказКлиента"								ИЛИ 
						Строка.ИмяМетаданного = "ЗаказПоставщику"							ИЛИ 
						Строка.ИмяМетаданного = "ЗаявкаНаВозвратТоваровОтКлиента" 			ИЛИ 
						Строка.ИмяМетаданного = "КоммерческоеПредложениеКлиенту"			ИЛИ 
						Строка.ИмяМетаданного = "ОтчетКомиссионера"							ИЛИ 
						Строка.ИмяМетаданного = "ОтчетКомиссионераОСписании"				ИЛИ 
						Строка.ИмяМетаданного = "ОтчетКомитенту"							ИЛИ 
						Строка.ИмяМетаданного = "ОтчетКомитентуОСписании"					ИЛИ 
						Строка.ИмяМетаданного = "ОтчетПоКомиссииМеждуОрганизациями"			ИЛИ 
						Строка.ИмяМетаданного = "ПоступлениеТоваровУслуг"					ИЛИ 
						Строка.ИмяМетаданного = "РеализацияТоваровУслуг"					Тогда
						
				Ответственный = "Документ" + Строка.ИмяМетаданного + ".Менеджер";
			
			ИначеЕсли Строка.ИмяМетаданного = "ЗаданиеТорговомуПредставителю" 				Тогда
				
				Ответственный = "Документ" + Строка.ИмяМетаданного + ".Куратор";
				
			ИначеЕсли Строка.ИмяМетаданного = "ПередачаТоваровМеждуОрганизациями" 			Тогда
				
				Ответственный = "Документ" + Строка.ИмяМетаданного + ".Грузоотправитель";
				
			Иначе
				
				Ответственный = "NULL";
				
			КонецЕсли;

			Ответственный = Ответственный + " КАК Ответственный" + Символы.ПС;
			
			ТекстЗапроса = ТекстЗапроса + Ответственный + "ИЗ Документ." + Строка.ИмяМетаданного + " КАК " + "Документ" + Строка.ИмяМетаданного;
			
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС + "ГДЕ Документ" + Строка.ИмяМетаданного + ".Дата МЕЖДУ &ДатаНачало И &ДатаОкончание";
			
			Если Строка.ИмяМетаданного = "ПеремещениеТоваров" Тогда
				
				Если НЕ СкладОтправитель.Пустая() Тогда
					
					ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС + "И Документ" + Строка.ИмяМетаданного + ".СкладОтправитель = &СкладОтправитель";
					Запрос.УстановитьПараметр("СкладОтправитель", СкладОтправитель);
					
				КонецЕсли;
				
				Если НЕ СкладПолучатель.Пустая() Тогда
					
					ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС + "И Документ" + Строка.ИмяМетаданного + ".СкладПолучатель = &СкладПолучатель";
					Запрос.УстановитьПараметр("СкладПолучатель", СкладПолучатель);
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
		
	Элементы.НастройкаПеремещений.Доступность = ДоступностьКнопкиНастройкиПеремещений;
	
	Если ПустаяСтрока(ТекстЗапроса) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.ПС + "УПОРЯДОЧИТЬ ПО Дата ВОЗР";
	
	Запрос.УстановитьПараметр("ДатаНачало", Период.ДатаНачала);	
	Запрос.УстановитьПараметр("ДатаОкончание", Период.ДатаОкончания);
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатыЗапроса = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Пока РезультатыЗапроса.Следующий() Цикл
		
		НоваяСтрока 				= ТаблицаДокументов.Добавить();
		НоваяСтрока.Дата 			= РезультатыЗапроса.Дата;
		НоваяСтрока.Номер 			= РезультатыЗапроса.Номер;
		НоваяСтрока.Ссылка 			= РезультатыЗапроса.Ссылка;
		НоваяСтрока.Ответственный 	= РезультатыЗапроса.Ответственный;	
		НоваяСтрока.ИмяДокумента	= РезультатыЗапроса.ИмяДокумента;
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТабличнуюЧастьТовары(СсылкаНаДокумент, ИмяДокумента)
	
	ТаблицаТовары.Очистить();
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрНоменклатура.Код КАК Код,
	|	СпрНоменклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Количество КАК Количество,
	|	РегистрЦеныНоменклатуры.Цена КАК Цена
	|ИЗ
	|	Документ." + ИмяДокумента + ".Товары КАК ТаблицаТовары
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|ПО
	|	СпрНоменклатура.Ссылка = ТаблицаТовары.Номенклатура
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,ВидЦены = &ВидЦены) КАК РегистрЦеныНоменклатуры
	|ПО
	|	РегистрЦеныНоменклатуры.Номенклатура = ТаблицаТовары.Номенклатура
	|И	РегистрЦеныНоменклатуры.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &СсылкаНаДокумент";
	
	Запрос.УстановитьПараметр("СсылкаНаДокумент", СсылкаНаДокумент);
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаТовары.Загрузить(РезультатЗапроса.Выгрузить());
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокНоменклатуры(СтруктураДокументов)
	
	Запрос = Новый Запрос;
	МассивДанных = Новый Массив;
	
	ТекстЗапроса = "";
	
	Для Каждого ЭлементДокумента ИЗ СтруктураДокументов Цикл
		
		Если Найти(ТекстЗапроса, "ВЫБРАТЬ РАЗРЕШЕННЫЕ") Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	СпрНоменклатура.Код КАК Код,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ЕСТЬNULL(РегистрЦеныНоменклатуры.Цена,0) КАК Цена
			|ИЗ
			|	Документ." + ЭлементДокумента.Ключ + ".Товары КАК ТаблицаТовары
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
			|ПО
			|	СпрНоменклатура.Ссылка = ТаблицаТовары.Номенклатура
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,ВидЦены = &ВидЦены) КАК РегистрЦеныНоменклатуры
			|ПО
			|	РегистрЦеныНоменклатуры.Номенклатура = ТаблицаТовары.Номенклатура
			|И	РегистрЦеныНоменклатуры.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|
			|ГДЕ
			|	ТаблицаТовары.Ссылка В (&СсылкаНаДокумент" + ЭлементДокумента.Ключ + ")";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СпрНоменклатура.Код КАК Код,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ЕСТЬNULL(РегистрЦеныНоменклатуры.Цена,0) КАК Цена
			|ИЗ
			|	Документ." + ЭлементДокумента.Ключ + ".Товары КАК ТаблицаТовары
			|
			|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
			|ПО
			|	СпрНоменклатура.Ссылка = ТаблицаТовары.Номенклатура
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(,ВидЦены = &ВидЦены) КАК РегистрЦеныНоменклатуры
			|ПО
			|	РегистрЦеныНоменклатуры.Номенклатура = ТаблицаТовары.Номенклатура
			|И	РегистрЦеныНоменклатуры.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
			|
			|ГДЕ
			|	ТаблицаТовары.Ссылка В (&СсылкаНаДокумент" + ЭлементДокумента.Ключ + ")";
			
		КонецЕсли;
 
			
	КонецЦикла;
	
	Для Каждого ЭлементДокумента ИЗ СтруктураДокументов Цикл
		
		Запрос.УстановитьПараметр("СсылкаНаДокумент"+ЭлементДокумента.Ключ, ЭлементДокумента.Значение);
		
	КонецЦикла;
	Запрос.УстановитьПараметр("ВидЦены", ВидЦены);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПередачи = Новый Структура;
		СтруктураПередачи.Вставить("Код", Выборка.Код);
		СтруктураПередачи.Вставить("Номенклатура", Выборка.Номенклатура);
		СтруктураПередачи.Вставить("Характеристика", Выборка.Характеристика);
		СтруктураПередачи.Вставить("Количество", Выборка.Количество);
		СтруктураПередачи.Вставить("ВидЦены", ВидЦены);
		СтруктураПередачи.Вставить("Цена", Выборка.Цена);
		СтруктураПередачи.Вставить("Сумма", Выборка.Количество * Выборка.Цена);
		
		МассивДанных.Добавить(СтруктураПередачи);
		
	КонецЦикла;
	
	Возврат МассивДанных;
	
КонецФункции

&НаСервереБезКонтекста
Функция ктсПолучитьИмяДокумента(СсылкаНаДокумент)
	
	Возврат СсылкаНадокумент.Метаданные().Имя;
	
КонецФункции





&НаКлиенте
Процедура ГруппаЗагрузкиДокументаПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ТаблицаДокументов.Очистить();
	ТаблицаТовары.Очистить();
	
	Если Период.ДатаНачала = Дата("00010101") И Период.ДатаОкончания = Дата("00010101") Тогда
		
		Период.Вариант = ВариантСтандартногоПериода.ЭтотМесяц;
		
	КонецЕсли;
	
	ГруппаЗагрузки 				= Элементы.ГруппаЗагрузкиДокумента;
	ПодчиненныеЭлементыСтраницы = ГруппаЗагрузки.ПодчиненныеЭлементы;
	
	Если ГруппаЗагрузки.ТекущаяСтраница = ПодчиненныеЭлементыСтраницы.ВыбранныеДокументы Тогда
		
		ПоказатьОповещениеПользователя("Подождите пожалуйста.",, "Формируется список документов...", БиблиотекаКартинок.Информация32);
		ктсПолучитьСписокДокументов();
		
	КонецЕсли;
	
КонецПроцедуры
 
&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого Строка ИЗ ТаблицаМетаданных Цикл
		Строка.Флажок = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого Строка ИЗ ТаблицаМетаданных Цикл
		Строка.Флажок = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	
	ТаблицаДокументовНаФорме 	= Элементы.ТаблицаДокументов;
	ТекущиеДанные 				= ТаблицаДокументовНаФорме.ТекущиеДанные;
	
	ПараметрыДокумента 	= Новый Структура("Ключ", ТекущиеДанные.Ссылка);
	ИмяДокумента		= ктсПолучитьИмяДокумента(ТекущиеДанные.Ссылка);
	ФормаДокумента 		= ПолучитьФорму("Документ."+ ИмяДокумента +".ФормаОбъекта", ПараметрыДокумента);
	
	ФормаДокумента.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Перенести(Команда)	
	
	СтруктураДокументов = ПолучитьМассивДокументов();	
	
	МассивПередачи = ПолучитьСписокНоменклатуры(СтруктураДокументов);
	
	КлючУникальности.ЗагрузитьИзДокументаНаФорме(МассивПередачи);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовПриАктивизацииСтроки(Элемент)
	
	ЭлТаблицаДокументов = Элементы.ТаблицаДокументов;
	ТекущиеДанные = ЭлТаблицаДокументов.ТекущиеДанные;
	
	Если НЕ ТекущиеДанные = Неопределено Тогда
		
		ЗагрузитьТабличнуюЧастьТовары(ТекущиеДанные.Ссылка, ТекущиеДанные.ИмяДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивДокументов()
	
	ТаблицаДокументовНаФорме 	= Элементы.ТаблицаДокументов;
	ВыделенныеСроки			 	= ТаблицаДокументовНаФорме.ВыделенныеСтроки;
	СтруктураПередачи			= Новый Структура;
	
	Для Каждого ИндексСтроки ИЗ ВыделенныеСроки Цикл
		
		ДокументСсылка = ТаблицаДокументовНаФорме.ДанныеСтроки(ИндексСтроки).Ссылка;
		ДокументИмя = ТаблицаДокументовНаФорме.ДанныеСтроки(ИндексСтроки).ИмяДокумента;
		
		Если СтруктураПередачи.Свойство(ДокументИмя) Тогда
			
			СтруктураПередачи[ДокументИмя].Добавить(ДокументСсылка);
			
		Иначе
			
			СтруктураПередачи.Вставить(ДокументИмя, Новый Массив);
			СтруктураПередачи[ДокументИмя].Добавить(ДокументСсылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураПередачи;
	
КонецФункции

&НаКлиенте
Процедура ПеренестиТовары(Команда)
	
	МассиКПередаче = ПолучитьСписокНоменклатурыКПередаче();
	КлючУникальности.ЗагрузитьИзДокументаНаФорме(МассиКПередаче);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокНоменклатурыКПередаче()
	
	ЭлТаблицаТовары = Элементы.ТаблицаТовары;
	ВыделенныеСтроки = ЭлТаблицаТовары.ВыделенныеСтроки;
	
	МассивПередачи = Новый Массив;
	
	Для Каждого ИндексСтроки ИЗ ВыделенныеСтроки Цикл
		
		СтрокаТаблицы = ЭлТаблицаТовары.ДанныеСтроки(ИндексСтроки);
		
		СтруктураПередачи = Новый Структура;
		СтруктураПередачи.Вставить("Код", СтрокаТаблицы.Код);
		СтруктураПередачи.Вставить("Номенклатура", СтрокаТаблицы.Номенклатура);
		СтруктураПередачи.Вставить("Характеристика", СтрокаТаблицы.Характеристика);
		СтруктураПередачи.Вставить("Количество", СтрокаТаблицы.Количество);
		СтруктураПередачи.Вставить("ВидЦены", ВидЦены);
		СтруктураПередачи.Вставить("Цена", СтрокаТаблицы.Цена);
		СтруктураПередачи.Вставить("Сумма", СтрокаТаблицы.Количество * СтрокаТаблицы.Цена);
		
		МассивПередачи.Добавить(СтруктураПередачи);
		
	КонецЦикла;
	
	Возврат МассивПередачи;
	
КонецФункции

&НаКлиенте
Функция ПолучитьСписокВсейНоменклатурыКПередаче()
	
	МассивПередачи = Новый Массив;
	
	Для Каждого СтрокаТаблицы ИЗ ТаблицаТовары Цикл
		
		СтруктураПередачи = Новый Структура;
		СтруктураПередачи.Вставить("Код", СтрокаТаблицы.Код);
		СтруктураПередачи.Вставить("Номенклатура", СтрокаТаблицы.Номенклатура);
		СтруктураПередачи.Вставить("Характеристика", СтрокаТаблицы.Характеристика);
		СтруктураПередачи.Вставить("Количество", СтрокаТаблицы.Количество);
		СтруктураПередачи.Вставить("ВидЦены", ВидЦены);
		СтруктураПередачи.Вставить("Цена", СтрокаТаблицы.Цена);
		СтруктураПередачи.Вставить("Сумма", СтрокаТаблицы.Количество * СтрокаТаблицы.Цена);
		
		МассивПередачи.Добавить(СтруктураПередачи);
		
	КонецЦикла;
	
	Возврат МассивПередачи;
	
КонецФункции

&НаКлиенте
Процедура ПеренестиВсеТовары(Команда)
	
	МассивКПередаче = ПолучитьСписокВсейНоменклатурыКПередаче();
	
	КлючУникальности.ЗагрузитьИзДокументаНаФорме(МассивКПередаче);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	Если Элементы.ГруппаЗагрузкиДокумента.ТекущаяСтраница = Элементы.ВыбранныеДокументы Тогда
		
		ПоказатьОповещениеПользователя("Подождите пожалуйста.",, "Формируется список документов...", БиблиотекаКартинок.Информация32);
		ктсПолучитьСписокДокументов();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПеремещений(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СкладПолучатель", СкладПолучатель);
	ПараметрыФормы.Вставить("СкладОтправитель", СкладОтправитель);
	
	Результат = ОткрытьФормуМодально("ВнешняяОбработка.РабочееМестоМенеджера.Форма.ФормаНастройкаПеремещений", ПараметрыФормы);
	
	Если Результат <> Неопределено Тогда
		
		СкладОтправитель = Результат.СкладОтправитель;
		СкладПолучатель  = Результат.СкладПолучатель;
		
		ГруппаЗагрузки 				= Элементы.ГруппаЗагрузкиДокумента;
		ПодчиненныеЭлементыСтраницы = ГруппаЗагрузки.ПодчиненныеЭлементы;
		
		Если ГруппаЗагрузки.ТекущаяСтраница = ПодчиненныеЭлементыСтраницы.ВыбранныеДокументы Тогда
			
			ПоказатьОповещениеПользователя("Подождите пожалуйста.",, "Формируется список документов...", БиблиотекаКартинок.Информация32);
			ктсПолучитьСписокДокументов();
			
		КонецЕсли;		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтруктураДокументов = ПолучитьМассивДокументов();	
	
	МассивПередачи = ПолучитьСписокНоменклатуры(СтруктураДокументов);
	
	КлючУникальности.ЗагрузитьИзДокументаНаФорме(МассивПередачи);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	МассиКПередаче = ПолучитьСписокНоменклатурыКПередаче();
	КлючУникальности.ЗагрузитьИзДокументаНаФорме(МассиКПередаче);
	
КонецПроцедуры
