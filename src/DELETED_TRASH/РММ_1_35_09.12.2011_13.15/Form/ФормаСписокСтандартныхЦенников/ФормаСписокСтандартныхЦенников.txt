
&НаКлиенте
Перем Строка;

&НаКлиенте
Процедура ДобавитьМакетИзФайла(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);    
	Диалог.Заголовок = "Выберите файл макета в формате *.mxl. Размер файла не должен превышать 500 Кб!";
	Диалог.ПолноеИмяФайла = "";
	Диалог.ПредварительныйПросмотр = Истина;
	Диалог.МножественныйВыбор = Истина;
	Диалог.Фильтр = "Формат mxl (*.mxl)|*.mxl|"; 
	
	Если Диалог.Выбрать() Тогда								
		МассивФайлов = Диалог.ВыбранныеФайлы;
		
		Для Каждого ФайлВыбора Из МассивФайлов Цикл 			
			ФайлТемп = Новый Файл(ФайлВыбора);
			Сообщить("Размер Файла " + ФайлТемп.ИмяБезРасширения + " = " + Окр(ФайлТемп.Размер()/1024,0) + " Кбайт");
			Если ФайлТемп.Размер() > 512000 Тогда
				Сообщить("Слишком большой размер файла!");
				Продолжить;
			КонецЕсли;
			
			ИмяФайла = СтрЗаменить(Лев(ФайлВыбора,СтрДлина(ФайлВыбора)-4),Диалог.Каталог,"");
			
			Флажок = Ложь;
			
			Адрес = "";
			ктсПоместитьФайлВВремХранилище(Адрес, ФайлВыбора);
			
			ктсДобавитьМакетВРегистрСведений(ИмяФайла,Флажок,ФайлВыбора,Адрес);
			
			НоваяСтрока = СписокШаблонов.Добавить();

			Если Флажок = Истина Тогда
				НоваяСтрока.ПоУмолчанию = Истина;
			КонецЕсли;
			НоваяСтрока.Наименование = ИмяФайла;
					
		КонецЦикла;
	СписокШаблонов.Сортировать("Наименование Возр");
		
	Иначе
		Сообщить("Файл макета не выбран");
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	
	ктсЗагрузитьТаблицуШаблонов();	
	
КонецПроцедуры
	
&НаКлиенте
Процедура ктсПоместитьФайлВВремХранилище(Адрес,ПолноеИмяФайла)
	
	ПоместитьФайл(Адрес,ПолноеИмяФайла,,Ложь);
	
КонецПроцедуры 

&НаКлиенте
Процедура УдалитьМакет(Команда)
	
	СпШаблонов = Элементы.СписокШаблонов;
	ТекСтрока = СпШаблонов.ТекущиеДанные;
	
	Если ТекСтрока = Неопределено Тогда
		Сообщить("Удалить макет невозможно");
	Иначе
		КоличествоМакетов = СписокШаблонов.Количество();
		
		Если КоличествоМакетов > 1 Тогда
			Если ТекСтрока.ПоУмолчанию = Истина Тогда
				Инд = СписокШаблонов.Индекс(ТекСтрока);
				
				ктсУдалитьМакетИзРегистраСведений(ТекСтрока.Наименование);
				СписокШаблонов.Удалить(ТекСтрока);
				Если Инд = КоличествоМакетов - 1  Тогда
					Инд = 0;
				КонецЕсли;
				
				НоваяСтрока = СписокШаблонов[Инд];
				НоваяСтрока.ПоУмолчанию = Истина;
				ктсИзменитьМакетВРегистре(НоваяСтрока.Наименование, Истина);
			Иначе
				ктсУдалитьМакетИзРегистраСведений(ТекСтрока.Наименование); 
				СписокШаблонов.Удалить(ТекСтрока);
			КонецЕсли;			
		
		Иначе
		ктсУдалитьМакетИзРегистраСведений(ТекСтрока.Наименование);
		СписокШаблонов.Удалить(ТекСтрока);
		КонецЕсли;			
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ктсУдалитьМакетИзРегистраСведений(ИмяФайла)
	
	Если ТипФормы = "Стандартная" Тогда
		РегистрЦенники = РегистрыСведений.ktcСтандартныеШаблоныЦенников;
	Иначе	
		РегистрЦенники = РегистрыСведений.ktcПерсональныеШаблоныЦенников;
	КонецЕсли;
	
	НаборЗаписей = РегистрЦенники.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Наименование.Установить(ИмяФайла);
	
	Если ТипФормы = "Персональная" Тогда
		НаборЗаписей.Отбор.Номенклатура.Установить(ТекущаяНоменклатура);
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоновПередУдалением(Элемент, Отказ)
	
	ТекСтрока = Элемент.ТекущиеДанные;     	 
 	ИндСтроки = СписокШаблонов.Индекс(ТекСтрока);	
	ФлажокСтроки = ТекСтрока.ПоУмолчанию;
	ктсУдалитьМакетИзРегистраСведений(ТекСтрока.Наименование);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоновПоУмолчаниюПриИзменении(Элемент)
	
	ТекСтрока = Элементы.СписокШаблонов.ТекущиеДанные;
	ПоУмолчанию = ТекСтрока.ПоУмолчанию;
	Наименование = ТекСтрока.Наименование;
	
	Если ТипФормы = "Стандартная" Тогда
		НаименованиеИзРегистра = ктсШаблонПоУмолчанию();
	Иначе	
		НаименованиеИзРегистра = ктсШаблонПоУмолчаниюДляНоменклатуры(ТекущаяНоменклатура);
	КонецЕсли;
                		
	Если ПоУмолчанию = Истина Тогда
		Если НаименованиеИзРегистра <> "" Тогда
			ктсИзменитьМакетВРегистре(НаименованиеИзРегистра,Ложь);
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Наименование",НаименованиеИзРегистра);
			СтарыеСтроки = СписокШаблонов.НайтиСтроки(ПараметрыОтбора);
			Строка = СтарыеСтроки[0];
			Строка.ПоУмолчанию = Ложь;
		КонецЕсли;		
	КонецЕсли; 
	
	ктсИзменитьМакетВРегистре(Наименование, Истина);
	Элементы.СписокШаблонов.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоновПослеУдаления(Элемент)
	
	Если ФлажокУдаленнойСтроки Тогда
		КоличествоМакетов = СписокШаблонов.Количество();
		
		Если КоличествоМакетов > 1 Тогда
			Если ИндУлаленнойСтроки >= КоличествоМакетов - 1  Тогда
				ИндУлаленнойСтроки = 0;
			КонецЕсли;
				
			НоваяСтрока = СписокШаблонов[ИндУлаленнойСтроки];
			НоваяСтрока.ПоУмолчанию = Истина;
			ктсИзменитьМакетВРегистре(НоваяСтрока.Наименование, Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)//
	
	//ктсОчиститьРегистрСведений();
	//СписокШаблонов.Очистить();
		
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоновПриАктивизацииСтроки(Элемент)//
	
	ТекСтрока = Элементы.СписокШаблонов.ТекущиеДанные;
		
	Если ТекСтрока = Неопределено Тогда
		ТабДок = Новый ТабличныйДокумент();
		ТабличныйДокумент = ТабДок;
	Иначе		
		Наименование = ТекСтрока.Наименование;
			
		ТабличныйДокумент = ?(ТипФормы = "Стандартная",ктсПолучитьТабДокументИзРегистра(Наименование),ктсПолучитьТабДокументИзРегистраПер(Наименование));
	КонецЕсли;
	             
КонецПроцедуры


&НаКлиенте
Процедура ТабличныйДокументПриИзменении(Элемент)

	Элементы.РедакторМакета.Видимость = Истина;	
	ФлажокИзменения = Истина;
	
	Элементы.СписокШаблонов.Доступность = Ложь;
	Элементы.ФормаОчистить.Видимость = Ложь;
	Элементы.ФормаУдалитьМакет.Видимость = Ложь;
    НаименованиеИзменненогоМакета = Элементы.СписокШаблонов.ТекущиеДанные.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьМакетВФайл(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);    
	Диалог.Заголовок = "Сохранение документа"; 	
	Диалог.ПредварительныйПросмотр = Истина;
	Диалог.Фильтр = "Формат mxl (*.mxl)|*.mxl|";  	
	
	Если Диалог.Выбрать() Тогда			
		ТабличныйДокумент.Записать(Диалог.ПолноеИмяФайла);		
	Иначе
		Сообщить("Файл макета не сохранен");
	КонецЕсли;

КонецПроцедуры  

&НаКлиенте
Процедура СписокШаблоновПередНачаломИзменения(Элемент, Отказ)
	
	ТекСтрока = Элементы.СписокШаблонов.ТекущиеДанные;
	ПоУмолчанию = ТекСтрока.ПоУмолчанию;
	Наименование = ТекСтрока.Наименование;
	
	Если ТипФормы = "Стандартная" Тогда
		НаименованиеИзРегистра = ктсШаблонПоУмолчанию();
	Иначе	
		НаименованиеИзРегистра = ктсШаблонПоУмолчаниюДляНоменклатуры(ТекущаяНоменклатура);
	КонецЕсли;
	
	Если ПоУмолчанию = Истина И НаименованиеИзРегистра = ТекСтрока.Наименование Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьМакетВРегистрСведений(Команда)
	
	Если Не ктсПроверкаРазмераФайла() Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтрока = Элементы.СписокШаблонов.ТекущиеДанные;
	ктсСохранитьТабДокументВРегистр(НаименованиеИзменненогоМакета, ТабличныйДокумент);
	
	ктсВключитьВыключитьРедакторМакета(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Ответ = Вопрос("Вы точно хотите покинуть режым редактирования",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		
		Отказ = Истина;
		
	КонецЕсли;
	
	Если ФлажокИзменения Тогда
		
		Ответ = Вопрос("Макет не сохранен! Сохранить?",РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			Если Не ктсПроверкаРазмераФайла() Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		
			ТекСтрока = Элементы.СписокШаблонов.ТекущиеДанные; 
			ктсСохранитьТабДокументВРегистр(НаименованиеИзменненогоМакета, ТабличныйДокумент);
		
		КонецЕсли;	
		
	КонецЕсли;
	
	ктсВключитьВыключитьРедакторМакета(Ложь);
	
КонецПроцедуры

&НаКлиенте
Функция ктсПроверкаРазмераФайла()
	
	ИмяТемпФала = ПолучитьИмяВременногоФайла(".mxl");
	ТабличныйДокумент.Записать(ИмяТемпФала);
	Файл = Новый Файл(ИмяТемпФала);
		
	Сообщить("Размер файла = " + Окр(Файл.Размер()/1024,0) + " Кбайт");
		
	Если Файл.Размер() > 512000 Тогда
		Сообщить("Слишком большой размер файла! Макет не будет сохранен!");
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура БезИзменений(Команда)
	
	ктсВключитьВыключитьРедакторМакета(Ложь);
	
КонецПроцедуры

Процедура ктсВключитьВыключитьРедакторМакета(Включить)
	
	Если Включить = Истина Тогда
		Элементы.РедакторМакета.Видимость = Истина;	
		ФлажокИзменения = Истина;
		
		Элементы.СписокШаблонов.Доступность = Ложь;
		Элементы.ФормаОчистить.Видимость = Ложь;
		Элементы.ФормаУдалитьМакет.Видимость = Ложь;
	Иначе
		Элементы.РедакторМакета.Видимость = Ложь;	
		ФлажокИзменения = Ложь;
		
		Элементы.СписокШаблонов.Доступность = Истина;
		Элементы.ФормаОчистить.Видимость = Истина;
		Элементы.ФормаУдалитьМакет.Видимость = Истина;
	КонецЕсли; 	
	
КонецПроцедуры

&НаСервере
Процедура ктсИзменитьМакетВРегистре(ИмяФайла, Значение)
	
	Если ТипФормы = "Стандартная" Тогда
		РегистрЦенники = РегистрыСведений.ktcСтандартныеШаблоныЦенников;
	Иначе	
		РегистрЦенники = РегистрыСведений.ktcПерсональныеШаблоныЦенников;
	КонецЕсли;
		
	НаборЗаписей = РегистрЦенники.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Наименование.Установить(ИмяФайла);
	
	Если ТипФормы = "Персональная" Тогда
		НаборЗаписей.Отбор.Номенклатура.Установить(ТекущаяНоменклатура);
	КонецЕсли;
	
	НаборЗаписей.Прочитать();
	НаборЗаписей[0].ПоУмолчанию = Значение;
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Функция ктсШаблонПоУмолчанию()
	
	Запрос = Новый Запрос("ВЫБРАТЬ 
						|	РАЗРЕШЕННЫЕ *
						|ИЗ 
						|	РегистрСведений.ktcСтандартныеШаблоныЦенников
						|ГДЕ 
						|	ПоУмолчанию = Истина
						|");
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Если Выборка.Количество() = 0 Тогда
		Результат = "";
	Иначе
		Результат = Выборка.Наименование;		
	КонецЕсли;
	Возврат Результат;
	
КонецФункции	

&НаСервере
Функция ктсШаблонПоУмолчаниюДляНоменклатуры(НоменклатураСсылка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ 
						|	РАЗРЕШЕННЫЕ *
						|ИЗ 
						|	РегистрСведений.ktcПерсональныеШаблоныЦенников
						|ГДЕ 
						|	ПоУмолчанию = Истина
						|И	Номенклатура = &Номенклатура
						|");
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);					
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Если Выборка.Количество() = 0 Тогда
		Результат = "";
	Иначе
		Результат = Выборка.Наименование;		
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ктсПолучитьТабДокументИзРегистра(Наименование)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
					|	РАЗРЕШЕННЫЕ *
					|ИЗ
					|	РегистрСведений.ktcСтандартныеШаблоныЦенников
					|ГДЕ
					|	Наименование = &Наименование
					|");
	Запрос.УстановитьПараметр("Наименование", Наименование);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Если Выборка.Количество()<> 0 Тогда
		ТабДокумент = Выборка.ТабДокумент.Получить();
		Возврат ТабДокумент;
	Иначе
		Возврат  Неопределено;
	КонецЕсли;
		
		
КонецФункции

&НаСервере
Функция ктсПолучитьТабДокументИзРегистраПер(Наименование)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
					|	РАЗРЕШЕННЫЕ *
					|ИЗ
					|	РегистрСведений.ktcПерсональныеШаблоныЦенников
					|ГДЕ
					|	Наименование = &Наименование
					|   И
					|   Номенклатура = &Номенклатура 
					|");
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Запрос.УстановитьПараметр("Номенклатура", ТекущаяНоменклатура);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	Если Выборка.Следующий() Тогда
		ТабДокумент = Выборка.ТабДокумент.Получить();
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

&НаСервере
Процедура ктсОчиститьРегистрСведений()
	
	Если ТипФормы = "Стандартная" Тогда
		РегистрЦенники = РегистрыСведений.ktcСтандартныеШаблоныЦенников;
	Иначе	
		РегистрЦенники = РегистрыСведений.ktcПерсональныеШаблоныЦенников;
	КонецЕсли;
	
	НаборЗаписей = РегистрЦенники.СоздатьНаборЗаписей();
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ктсСохранитьТабДокументВРегистр(Наименование, ТабДокумент)
	
	Если ТипФормы = "Стандартная" Тогда
		РегистрЦенники = РегистрыСведений.ktcСтандартныеШаблоныЦенников;
	Иначе	
		РегистрЦенники = РегистрыСведений.ktcПерсональныеШаблоныЦенников;
	КонецЕсли;
	
	ХранилищеДокумента = Новый ХранилищеЗначения(ТабДокумент); 	                            
	
	НаборЗаписей = РегистрЦенники.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Наименование.Установить(Наименование);
	
	Если ТипФормы = "Персональная" Тогда
		НаборЗаписей.Отбор.Номенклатура.Установить(ТекущаяНоменклатура);
	КонецЕсли;
	
	НаборЗаписей.Прочитать();
	
	НаборЗаписей[0].ТабДокумент = ХранилищеДокумента;
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ктсЗагрузитьТаблицуШаблонов()
	
	Если ТипФормы = "Стандартная" Тогда
		ТаблицаРезультатов = ктсВыборкаИзСтандартных();
	Иначе	
		ТаблицаРезультатов = ктсВыборкаИзПерсональных();
	КонецЕсли;
	
	СписокШаблонов.Загрузить(ТаблицаРезультатов); 
	
КонецПроцедуры

&НаСервере
Функция ктсВыборкаИзСтандартных()
	
	Запрос = Новый Запрос("ВЫБРАТЬ 
						|	РАЗРЕШЕННЫЕ *
						|ИЗ 
			 			|	РегистрСведений.ktcСтандартныеШаблоныЦенников
						|УПОРЯДОЧИТЬ ПО 
						|	Наименование");
						
	ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаРезультатов;
	
КонецФункции

&НаСервере
Функция ктсВыборкаИзПерсональных()
	
	Запрос = Новый Запрос("ВЫБРАТЬ 
						|	РАЗРЕШЕННЫЕ *
						|ИЗ 
			 			|	РегистрСведений.ktcПерсональныеШаблоныЦенников
						|ГДЕ
						|	Номенклатура = &Номенклатура
						|УПОРЯДОЧИТЬ ПО 
						|	Наименование");
	Запрос.УстановитьПараметр("Номенклатура", ТекущаяНоменклатура);
						
	ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();
	Возврат ТаблицаРезультатов;
	
КонецФункции

&НаСервере
Функция ктсКоличествоМакетовВРегистре()
	
	Если ТипФормы = "Стандартная" Тогда
		ЗапросКоличество = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
						|	КОЛИЧЕСТВО(Наименование) КАК КоличествоЗаписей
						|ИЗ 
						|	РегистрСведений.ktcСтандартныеШаблоныЦенников
						|");
	Иначе	
		ЗапросКоличество = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ 
						|	КОЛИЧЕСТВО(Наименование) КАК КоличествоЗаписей
						|ИЗ 
						|	РегистрСведений.ktcПерсональныеШаблоныЦенников
						|ГДЕ
						|	Номенклатура = &Номенклатура 
						|");
		ЗапросКоличество.УстановитьПараметр("Номенклатура", ТекущаяНоменклатура);
	КонецЕсли;  
						
	РезультатЗапроса = ЗапросКоличество.Выполнить();
	ВыборкаКоличество = РезультатЗапроса.Выбрать();					
	ВыборкаКоличество.Следующий();	
		
	Возврат ВыборкаКоличество.КоличествоЗаписей;
	
КонецФункции

&НаСервере
Функция ктсВыборкаПодобныхМакетов(ИмяФайла)
	
	Если ТипФормы = "Стандартная" Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ 
							|	РАЗРЕШЕННЫЕ *
							|ИЗ 
							|	РегистрСведений.ktcСтандартныеШаблоныЦенников
							|ГДЕ 
							|	Наименование ПОДОБНО &ИмяФайла
							|УПОРЯДОЧИТЬ ПО 
							|	Наименование
							|");
	Иначе
        Запрос = Новый Запрос("ВЫБРАТЬ 
							|	РАЗРЕШЕННЫЕ *
							|ИЗ 
							|	РегистрСведений.ktcПерсональныеШаблоныЦенников
							|ГДЕ
							|	Номенклатура = &Номенклатура 
							|	И
							|	Наименование ПОДОБНО &ИмяФайла
							|УПОРЯДОЧИТЬ ПО 
							|	Наименование
							|");
		Запрос.УстановитьПараметр("Номенклатура", ТекущаяНоменклатура);
	КонецЕсли;
	Запрос.УстановитьПараметр("ИмяФайла", ИмяФайла + "%");
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Возврат Выборка;
	
КонецФункции

&НаСервере
Функция ктсНомерМакетаКопии(Строка, ИмяФайла)
	
	Строка = СтрЗаменить(Строка,ИмяФайла,"");
	Если Строка = "" Тогда
		Строка = "1";		
	Иначе
		Строка = Прав(Строка, СтрДлина(Строка)-1);
		Инд = Число(Строка) + 1;
		Строка = Строка(Инд);
	КонецЕсли;
	Возврат Строка;
	
КонецФункции

&НаСервере
Процедура ктсДобавитьМакетВРегистрСведений(ИмяФайла,Флажок,ФайлВыбора,Адрес)
	
	Если ТипФормы = "Стандартная" Тогда
		РегистрЦенники = РегистрыСведений.ktcСтандартныеШаблоныЦенников;
	Иначе	
		РегистрЦенники = РегистрыСведений.ktcПерсональныеШаблоныЦенников;
	КонецЕсли;	
		
	НаборЗаписей = РегистрЦенники.СоздатьНаборЗаписей(); 	
	НоваяЗапись = НаборЗаписей.Добавить();

	КоличествоМакетовВРегистре = ктсКоличествоМакетовВРегистре();
	
	Выборка = ктсВыборкаПодобныхМакетов(ИмяФайла);
		
	Флажок = Ложь;

	Если Выборка.Количество() = 0 Тогда	
		Если КоличествоМакетовВРегистре = 0 Тогда 
			НоваяЗапись.ПоУмолчанию = Истина;
			Флажок = Истина;
		КонецЕсли;
		
		НоваяЗапись.Наименование = ИмяФайла; 
	Иначе
		НомерМакета = ктсНомерМакетаКопии(Выборка[Выборка.Количество()-1].Наименование, ИмяФайла);
		НоваяЗапись.Наименование = ИмяФайла + "_" + НомерМакета ;
	КонецЕсли;
	
	ХранилищеДокумента = Новый ХранилищеЗначения(ктсЗагрузитьТабДокИзФайла(ФайлВыбора,Адрес));
	
	НоваяЗапись.ТабДокумент = ХранилищеДокумента;
	
	ИмяФайла = НоваяЗапись.Наименование;
	
	Если ТипФормы = "Персональная" Тогда
		НоваяЗапись.Номенклатура = ТекущаяНоменклатура;
	КонецЕсли;
	
	
	НаборЗаписей.Записать(Ложь);
	
КонецПроцедуры

&НаСервере
Функция ктсЗагрузитьТабДокИзФайла(ПолноеИмяФайла,Адрес)
	
	ИмяВременогофайла = ПолучитьИмяВременногоФайла(".mxl");	
	Файл = ПолучитьИзВременногоХранилища(Адрес);
	Файл.Записать(ИмяВременогофайла);
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.Прочитать(ИмяВременогофайла);
	Возврат ТабДок;
	
КонецФункции




