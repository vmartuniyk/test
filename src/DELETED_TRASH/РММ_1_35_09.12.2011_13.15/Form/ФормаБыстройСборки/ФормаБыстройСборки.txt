// СЕРВЕРНЫЙ КОНТЕКСТ
// ИСПОЛЬЗУЕТСЯ ДЛЯ ИНИЦИАЛИЗАЦИИ И ПРЕРЕНАПРАВЛЕНИЯ НА СЕРВЕР


&НаСервере
Процедура ИнициализироватьНаСервере()
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;

	УстановитьПривилегированныйРежим(Истина);
	
	// Поиск группы "Персональные компьютеры"
	СсылкаНаГруппу = Справочники.Номенклатура.НайтиПоКоду("00000006406");
	Если НЕ СсылкаНаГруппу.Пустая() Тогда
		ГруппаНоменклатуры = СсылкаНаГруппу;
	КонецЕсли;
	
	
	// Поиск вида номенклатуры
	СсылкаНаВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Персональні комп’ютери");
	Если Не СсылкаНаВидНоменклатуры.Пустая() Тогда
		ВидНоменклатуры = СсылкаНаВидНоменклатуры;
	КонецЕсли;
	
	
	ТЗ_Корзина = ЗначениеИзСтрокиВнутр(Параметры.Корзина);
	СписокНоменклатуры.Загрузить(ТЗ_Корзина);
	
	Индекс = 1;
	Для Каждого СтрокаТч ИЗ СписокНоменклатуры Цикл
		СтрокаТч.НомерСтроки = Индекс;
		Индекс = Индекс + 1;
		СтрокаТч.НачальноеКоличество = СтрокаТч.Количество;
	КонецЦикла;
	
	Склад 		= Справочники.Склады.НайтиПоНаименованию(Параметры.Склад);
	Организация = Параметры.Организация;
	
	Если Не РольДоступна("ПолныеПрава") Тогда
		Элементы.ВидНоменклатуры.ТолькоПросмотр = Истина;
		Элементы.ГруппаНоменклатуры.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	КоличествоКомплектов = 1;
	
	ИспользоватьСерийныеНомера = Истина;
	
	
	ПеренаправитьНаСервер("ПолучитьКоличествоПоФакту", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры

&НаСервере
Процедура ПеренаправитьНаСервер(Команда = "" , Номенклатура, Комплектация, СтрокаОшибки, КодОшибки)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НачатьТранзакцию();
	
	Если ПустаяСтрока(Команда) Тогда
		
		// Проверяем имя команды на создание номенклатуры
		Если Не ПустаяСтрока(НаименованиеНоменклатуры) Тогда
			
			// Выполняем поиск позиции.
			ЭлементНоменклатура = Справочники.Номенклатура.НайтиПоНаименованию(СокрЛП(НаименованиеНоменклатуры));
			Если НЕ ЭлементНоменклатура.Пустая() Тогда
				КодОшибки = 1;
				СтрокаОшибки = "Номенклатура с таким наименованием уже существует.";
			    ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
			
			ЭлементНоменклатура = Справочники.Номенклатура.СоздатьЭлемент();
			
			мНаименованиеНоменклатуры = СокрЛП(НаименованиеНоменклатуры);
			
			ЭлементНоменклатура.Родитель 					= ГруппаНоменклатуры;
			ЭлементНоменклатура.Наименование 				= Сред(мНаименованиеНоменклатуры, 1, 100);
			ЭлементНоменклатура.НаименованиеПолное  		= мНаименованиеНоменклатуры;
			ЭлементНоменклатура.ЕдиницаИзмерения			= Справочники.ЕдиницыИзмерения.НайтиПоНаименованию("шт");
			ЭлементНоменклатура.ВидНоменклатуры				= ВидНоменклатуры;
			ЭлементНоменклатура.ТипНоменклатуры				= Перечисления.ТипыНоменклатуры.Товар;
			ЭлементНоменклатура.СтавкаНДС					= Перечисления.СтавкиНДС.НДС20;
			ЭлементНоменклатура.ИспользоватьСерийныеНомера  = ИспользоватьСерийныеНомера;
			
			Если СтрДлина(мНаименованиеНоменклатуры) > 100 Тогда
				ЭлементНоменклатура.Описание = мНаименованиеНоменклатуры;								
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(Артикул) Тогда
				ЭлементНоменклатура.Артикул = СокрЛП(Артикул);
			КонецЕсли;
			
			Если Не ПустаяСтрока(Гарантия) Тогда
				НоваяСтрока = ЭлементНоменклатура.ДополнительныеРеквизиты.Добавить();
				НоваяСтрока.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию("Гарантія");
				НоваяСтрока.Значение = Гарантия;
			КонецЕсли;
			
			ЭлементНоменклатура.Записать();
			
			Номенклатура = ЭлементНоменклатура.Ссылка;	
		КонецЕсли;
		
		
		
				
		Если СписокНоменклатуры.Количество() > 0 Тогда
			

			Если ПустаяСтрока(НаименованиеНоменклатуры) Тогда
				КодОшибки = 3;
				СтрокаОшибки = "Для заполнения комплектации необходимо создать номенклатурную позицыю.";
		    	ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;

			
			НоменклатураРодитель = Номенклатура;
			
			ЭлементКомплектации = Справочники.ВариантыКомплектацииНоменклатуры.СоздатьЭлемент();
			ЭлементКомплектации.Наименование = НоменклатураРодитель.Наименование;
			ЭлементКомплектации.Владелец = НоменклатураРодитель;
			ЭлементКомплектации.Основной = Истина;
			
			Для Каждого СтрокаТЧ ИЗ СписокНоменклатуры Цикл
				
				Если Не ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
					КодОшибки = 9;
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Необходимо заполнить номенклатуру.";
					Сообщение.Поле = "СписокНоменклатуры["+Строка(СтрокаТЧ.НомерСтроки-1)+"].Номенклатура";
					Сообщение.Сообщить();
					Возврат;
				КонецЕсли;
				
				Если СтрокаТЧ.Количество = 0 Тогда
					КодОшибки = 10;
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Необходимо заполнить количество.";
					Сообщение.Поле = "СписокНоменклатуры["+Строка(СтрокаТЧ.НомерСтроки-1)+"].Количество";
					Сообщение.Сообщить();
					Возврат;
				КонецЕсли;
				
				НоваяСтрока = ЭлементКомплектации.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
				НоваяСтрока.КоличествоУпаковок = СтрокаТЧ.Количество / ?(КоличествоКомплектов=0, 1, КоличествоКомплектов);
				
			КонецЦикла;
			
			ЭлементКомплектации.Записать();
										
		Иначе
			
			КодОшибки = 2;
			СтрокаОшибки = "Необходимо заполнить список номенклатуры.";
		    ОтменитьТранзакцию();
			Возврат;
			
		КонецЕсли;
		
		
		
		Если СоздатьДокументСборка Тогда
			
			Если Не ЗначениеЗаполнено(Номенклатура) Тогда
				КодОшибки = 4;
				СтрокаОшибки = "Для для создания документа Сборки необходимо указать комплект.";
		    	ОтменитьТранзакцию();
				Возврат;
			КонецЕсли;
			
			Если СписокНоменклатуры.Количество() = 0 Тогда
				
				КодОшибки = 5;
				СтрокаОшибки = "Для для создания документа Сборки необходимо заполнить список номенклатуры.";
		    	ОтменитьТранзакцию();
				Возврат;
				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Организация) Тогда
				
				КодОшибки = 6;
				СтрокаОшибки = "Необходимо заполнить Организацию.";
				ОтменитьТранзакцию();
				Возврат;
				
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Склад) Тогда
				
				КодОшибки = 7;
				СтрокаОшибки = "Необходимо заполнить Склад.";
				ОтменитьТранзакцию();
				Возврат;
				
			КонецЕсли;
			
			Для Каждого СтрокаТЧ ИЗ СписокНоменклатуры Цикл
				Если Не ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
					КодОшибки = 8;
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Необходимо заполнить номенклатуру.";
					Сообщение.Поле = "СписокНоменклатуры["+Строка(СтрокаТЧ.НомерСтроки-1)+"].Номенклатура";
					Сообщение.Сообщить();
					ОтменитьТранзакцию();
					Возврат;
				КонецЕсли;
				
				Если СтрокаТЧ.Количество = 0 Тогда
					КодОшибки = 9;
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Необходимо заполнить количество.";
					Сообщение.Поле = "СписокНоменклатуры["+Строка(СтрокаТЧ.НомерСтроки-1)+"].Количество";
					Сообщение.Сообщить();
					ОтменитьТранзакцию();
					Возврат;
				КонецЕсли;
				
				Если СтрокаТЧ.Количество > СтрокаТЧ.КоличествоПоФакту Тогда
					КодОшибки = 10;
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Количество превышает свободный остаток.";
					Сообщение.Поле = "СписокНоменклатуры["+Строка(СтрокаТЧ.НомерСтроки-1)+"].Количество";
					Сообщение.Сообщить();
					ОтменитьТранзакцию();
					Возврат;
				КонецЕсли;
			КонецЦикла;


			//Номенклатура = Номенклатура;
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ВариантыКомплектацииНоменклатурыТовары.Ссылка
			               |ИЗ
			               |	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
			               |ГДЕ
			               |	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец = &Номенклатура";
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Комплектация = ?(Выборка.Следующий(), Выборка.Ссылка, Справочники.ВариантыКомплектацииНоменклатуры.ПустаяСсылка());
			
		КонецЕсли;
		
	ИначеЕсли Команда = "ПроставитьНомераСтрок" Тогда
		
		Индекс = 1;
		Для Каждого СтрокаТЧ ИЗ СписокНоменклатуры Цикл
			СтрокаТЧ.НомерСтроки = Индекс;
			Индекс = Индекс+1;
		КонецЦикла;
		
	ИначеЕсли Команда = "ПолучитьКоличествоПоФакту" Тогда
				
		Если Не ЗначениеЗаполнено(Организация) ИЛИ Не ЗначениеЗаполнено(Склад) Тогда
			Для Каждого СтрокаТЧ ИЗ СписокНоменклатуры Цикл
				СтрокаТЧ.КоличествоПоФакту = 0;
			КонецЦикла;
		Иначе
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	СписокНоменкчлатуры.НомерСтроки,
			               |	СписокНоменкчлатуры.Номенклатура,
			               |	СписокНоменкчлатуры.Упаковка,
			               |	СписокНоменкчлатуры.ЕдиницаИзмерения,
			               |	СписокНоменкчлатуры.Количество,
						   |	СписокНоменкчлатуры.НачальноеКоличество
			               |ПОМЕСТИТЬ ТабНоменклатура
			               |ИЗ
			               |	&СписокНоменклатуры КАК СписокНоменкчлатуры
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ТабНоменклатура.НомерСтроки,
			               |	ТабНоменклатура.Номенклатура,
			               |	ТабНоменклатура.Упаковка,
			               |	ТабНоменклатура.ЕдиницаИзмерения,
			               |	ТабНоменклатура.Количество,
						   |	(ЕСТЬNULL(ТоварыОрганизацийОстатки.ВНаличииОстаток, 0)-ЕСТЬNULL(ТоварыОрганизацийОстатки.ВРезервеОстаток, 0))/ЕСТЬNULL(ТабНоменклатура.Упаковка.Коэффициент, 1) КАК КоличествоПоФакту,
						   |	ТабНоменклатура.НачальноеКоличество
			               |ИЗ
			               |	ТабНоменклатура КАК ТабНоменклатура
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(
			               |				,
			               |				Номенклатура В
			               |						(ВЫБРАТЬ
			               |							ТабНоменклатура.Номенклатура
			               |						ИЗ
			               |							ТабНоменклатура КАК ТабНоменклатура)
			               |					И Склад = &Склад) КАК ТоварыОрганизацийОстатки
			               |		ПО ТабНоменклатура.Номенклатура = ТоварыОрганизацийОстатки.Номенклатура";
						   
			ТЗ_СписокНоменклатуры = РеквизитФормыВЗначение("СписокНоменклатуры", Тип("ТаблицаЗначений"));
			
			Запрос.УстановитьПараметр("СписокНоменклатуры", ТЗ_СписокНоменклатуры);
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("Склад", Склад);
			
			ЗначениеВРеквизитФормы(ТЗ_СписокНоменклатуры, "СписокНоменклатуры");
			
			СписокНоменклатуры.Загрузить(Запрос.Выполнить().Выгрузить());
			
		КонецЕсли;
		
	ИначеЕсли Команда = "ПересчетатьПоКомплекту" Тогда
		
		Для Каждого СтрокаТЧ ИЗ СписокНоменклатуры Цикл
			СтрокаТЧ.Количество = СтрокаТЧ.НачальноеКоличество * КоличествоКомплектов;
		КонецЦикла;
		
		ПеренаправитьНаСервер("ПолучитьКоличествоПоФакту" , Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
		
	КонецЕсли;	
		
	КодОшибки = 0;
	Номенклатура = ?(ЗначениеЗаполнено(Номенклатура), Номенклатура, Справочники.Номенклатура.ПустаяСсылка());
	
	ЗафиксироватьТранзакцию();
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ктсСформироватьСписокУпаковок(Номенклатура, ДанныеВыбора)
	
	Запрос = Новый Запрос();
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(СпрУпаковки.Ссылка, НЕОПРЕДЕЛЕНО) КАК Упаковка,
	|	ПРЕДСТАВЛЕНИЕ(СпрУпаковки.Ссылка) КАК УпаковкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(СпрНоменклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиНоменклатуры КАК СпрУпаковки
	|		ПО (СпрУпаковки.Владелец = ВЫБОР
	|				КОГДА СпрНоменклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|					ТОГДА СпрНоменклатура.Ссылка
	|				КОГДА СпрНоменклатура.НаборУпаковок <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|					ТОГДА СпрНоменклатура.НаборУпаковок
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Номенклатура
	|   И НЕ СпрУпаковки.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	СпрУпаковки.Коэффициент,
	|	СпрУпаковки.Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Запрос.Текст = ТекстЗапроса;
	
	ДанныеВыбора.Добавить(Номенклатура.ЕдиницаИзмерения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Упаковка <> Неопределено Тогда
			
			ДанныеВыбора.Добавить(Выборка.Упаковка);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры



//////////////////////////////////////////////////////////////////////////////////////////




// СЕРВЕРНЫЙ КОНТРЕКСТ
// ОБРАБОТЧИКИ ФОРМЫ НА СЕРВЕРЕ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////



// КОНТЕКСТА КЛИЕНТА
// ПОЛЬЗОАТЕЛЬСКИЕ ФУНКЦИИ

&НаКлиенте
Функция ПеренаправитьНаКлиент()
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;
	
	ПеренаправитьНаСервер("", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
	
	Если КодОшибки = 1 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрокаОшибки;
		Сообщение.Поле = "НаименованиеНоменклатуры";
		Сообщение.Сообщить();		
		
	ИначеЕсли КодОшибки = 2 Тогда	
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрокаОшибки;
		Сообщение.Поле = "СписокНоменклатуры";
		Сообщение.Сообщить();
		
	ИначеЕсли КодОшибки = 3 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрокаОшибки;
		Сообщение.Поле = "НаименованиеНоменклатуры";
		Сообщение.Сообщить();
		
	ИначеЕсли КодОшибки = 4 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрокаОшибки;
		Сообщение.Поле = "НаименованиеНоменклатуры";
		Сообщение.Сообщить();
		
	ИначеЕсли КодОшибки = 5 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрокаОшибки;
		Сообщение.Поле = "СписокНоменклатуры";
		Сообщение.Сообщить();
		
	ИначеЕсли КодОшибки = 6 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрокаОшибки;
		Сообщение.Поле = "Организация";
		Сообщение.Сообщить();
		
	ИначеЕсли КодОшибки = 7 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрокаОшибки;
		Сообщение.Поле = "Склад";
		Сообщение.Сообщить();
		
	ИначеЕсли КодОшибки = 8 Тогда
		
		
		
	ИначеЕсли КодОшибки = 9 Тогда
		
		
		
	ИначеЕсли КодОшибки = 10 Тогда
		
		
		
	Иначе
		
		КодОшибки = 0;
		
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			Если ОткрытьКарточкуНоменклатуры Тогда
				ОткрытьЗначение(Номенклатура);
			КонецЕсли;
			ПоказатьОповещениеПользователя(
					"Номенклатура создана.",
					ПолучитьНавигационнуюСсылку(Номенклатура),
					Строка(Номенклатура),
					БиблиотекаКартинок.Информация32);
		КонецЕсли;
		
		Если СоздатьДокументСборка Тогда
			
			ФормаДокумента 	= ПолучитьФорму("Документ.СборкаТоваров.Форма.ФормаДокумента", , ,Новый УникальныйИдентификатор);
			ОбъектФормы		= ФормаДокумента.Объект;
			
			ОбъектФормы.Организация 		= Организация;
			ОбъектФормы.Склад				= Склад;
			ОбъектФормы.Количество  		= КоличествоКомплектов;
			ОбъектФормы.КоличествоУпаковок  = КоличествоКомплектов;
			ОбъектФормы.Номенклатура		= Номенклатура;
			ОбъектФормы.ВариантКомплектации	= Комплектация;
			
			Для Каждого СтрокаТЧ ИЗ СписокНоменклатуры Цикл
								
				НоваяСтрока = ОбъектФормы.Товары.Добавить();
				
				НоваяСтрока.Номенклатура 		= СтрокаТЧ.Номенклатура;
				НоваяСтрока.Упаковка			= СтрокаТЧ.Упаковка;
				НоваяСтрока.Количество 			= СтрокаТЧ.Количество;
				НоваяСтрока.КоличествоУпаковок  = СтрокаТЧ.Количество
				
			КонецЦикла;
			
			ФормаДокумента.Открыть();
			
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат КодОшибки;
	
КонецФункции


&НаКлиенте
Процедура ПроверитьУстановкуФлагаСборки()
	
	Элементы.КоличествоКомплектов.Доступность 	= СоздатьДокументСборка;
	Элементы.Склад.Доступность 					= СоздатьДокументСборка;
	Элементы.Организация.Доступность 			= СоздатьДокументСборка;
		
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////////////////




// КОНТЕКСТ КЛИЕНТА
// ОБРАБОТЧИКИ ФОРМЫ НА КИЛИЕНТЕ

&НаКлиенте
Процедура ВыполнитьДействие(Команда)
	
	КодОшибки = ПеренаправитьНаКлиент();
	
	Если КодОшибки = 0 Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокНоменклатурыПослеУдаления(Элемент)
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;
	
	ПеренаправитьНаСервер("ПроставитьНомераСтрок", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПриИзменении(Элемент)
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;
	
	ПеренаправитьНаСервер("ПроставитьНомераСтрок", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;
	
	ПеренаправитьНаСервер("ПроставитьНомераСтрок", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыНоменклатураПриИзменении(Элемент)
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;
	
	ПеренаправитьНаСервер("ПолучитьКоличествоПоФакту", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры 

&НаКлиенте
Процедура СписокНоменклатурыКоличествоПриИзменении(Элемент)
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;
	
	ПеренаправитьНаСервер("ПолучитьКоличествоПоФакту", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;
	
	ПеренаправитьНаСервер("ПолучитьКоличествоПоФакту", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;
	
	ПеренаправитьНаСервер("ПолучитьКоличествоПоФакту", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыУпаковкаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ЭлСписокНоменклатуры = Элементы.СписокНоменклатуры;
	ТекущиеДанные = ЭлСписокНоменклатуры.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ДанныеВыбора = Новый Массив;
		ктсСформироватьСписокУпаковок(ТекущиеДанные.Номенклатура, ДанныеВыбора);
		
		Элементы.СписокНоменклатурыУпаковка.СписокВыбора.ЗагрузитьЗначения(ДанныеВыбора);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыУпаковкаПриИзменении(Элемент)
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;
	
	ПеренаправитьНаСервер("ПолучитьКоличествоПоФакту", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПроверитьУстановкуФлагаСборки();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументСборкаПриИзменении(Элемент)
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;

	ПроверитьУстановкуФлагаСборки();
	
	ПеренаправитьНаСервер("ПолучитьКоличествоПоФакту", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры


&НаКлиенте
Процедура ОчиститьСписокНоменклатуры(Команда)
	
	СписокНоменклатуры.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоКомплектовПриИзменении(Элемент)
	
	Перем Номенклатура, СтрокаОшибки, КодОшибки, Комплектация;
	
	ПеренаправитьНаСервер("ПересчетатьПоКомплекту", Номенклатура, Комплектация, СтрокаОшибки, КодОшибки);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////////////