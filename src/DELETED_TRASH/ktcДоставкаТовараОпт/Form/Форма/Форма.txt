
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьТаблицу();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьТаблицу()
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		|	ТоварыКОтгрузке.ДокументОтгрузки					КАК Ссылка,
		|	ТоварыКОтгрузке.ДокументОтгрузки.Дата				КАК Дата,
		|	ТоварыКОтгрузке.ДокументОтгрузки.Номер				КАК Номер,	
		|	СпрПартнеры.Ссылка 									КАК Партнер,
		|	ТоварыКОтгрузке.ДокументОтгрузки.Контрагент			КАК Контрагент,
		|	ТоварыКОтгрузке.Склад								КАК Склад,
		|	ТоварыКОтгрузке.ДокументОтгрузки.АдресДоставки      КАК АдресДоставки,
		|	Кинф.Представление									КАК НомерТелефона,
		|	ТоварыКОтгрузке.ДокументОтгрузки.Комментарий      	КАК Комментарий,
		|	СпрПартнеры.БизнесРегион.Родитель					КАК Направление,
		|	СпрПартнеры.БизнесРегион 							КАК БизнесРегион,
		|	СпрПартнеры.ОсновнойМенеджер						КАК ОсновнойМенеджер, "
		+?(ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РасчетыСКлиентами), 
		"
		|	ЗапросДолга.СуммаКонечныйДолг						КАК Долг, ",
		"
		|	0						КАК Долг, ") +
		"
		|	NULL												КАК Відгр,
		|	NULL												КАК Дост
		|Из
		|	Справочник.Партнеры	КАК СпрПартнеры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Остатки() КАК ТоварыКОтгрузке
		|		ПО ТоварыКОтгрузке.ДокументОтгрузки.Партнер = СпрПартнеры.Ссылка
		|		
		|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Партнеры.КонтактнаяИнформация КАК Кинф
		|ПО	Кинф.Ссылка = СпрПартнеры.Ссылка
		|И	Кинф.Вид    = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонПартнера)
		| "
		+?(ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.РасчетыСКлиентами), "
		|ЛЕВОЕ СОЕДИНЕНИЕ 
		|		(ВЫБРАТЬ
		|			Аналитика.Партнер, 
		|			ЕСТЬNULL(СуммаОстаток, 0) КАК СуммаКонечныйДолг
		|		ИЗ	РегистрНакопления.РасчетыСКлиентами.Остатки КАК РасчетыСКлиентами
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|				ПО	Аналитика.КлючАналитики = РасчетыСКлиентами.АналитикаУчетаПоПартнерам
		|		) КАК ЗапросДолга
		|ПО ЗапросДолга.Партнер = СпрПартнеры.Ссылка ", " ") + 
		"
        |
        |"
		+?(Направление.Пустая(), " ", "ГДЕ СпрПартнеры.БизнесРегион.Родитель = &Направление ") +
		" "
		+?(БизнесРегион.Пустая(), " ", " И СпрПартнеры.БизнесРегион = &Регион ") +
		"
		|УПОРЯДОЧИТЬ ПО СпрПартнеры.БизнесРегион.Родитель Возр, СпрПартнеры.БизнесРегион Возр, СпрПартнеры.Ссылка Возр	
        |
		|";
	Запрос.УстановитьПараметр("Направление", Направление);
	Запрос.УстановитьПараметр("Регион", БизнесРегион);
	Запрос.Текст = ТекстЗапроса;
	ТаблицаДоставки.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНаправления()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ 
				|	Ссылка
				|ИЗ	
				|	Справочник.БизнесРегионы
				|ГДЕ 
				|	Родитель = ЗНАЧЕНИЕ(Справочник.БизнесРегионы.ПустаяСсылка)
				|";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Функция ПолучитьРегионы()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ 
				|	Ссылка
				|ИЗ	
				|	Справочник.БизнесРегионы
				|ГДЕ 
				|	Родитель = &Направление
				|";
	Запрос.УстановитьПараметр("Направление", Направление);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции



// Обработчики формы на клииенте
&НаКлиенте
Процедура ТаблицаДоставкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	ОткрытьЗначение(Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьРеализаций(Команда)
	
	ПараметрКоманды = Новый Массив;
	Для Каждого ЭлементИзТаблицы Из ТаблицаДоставки Цикл
		ПараметрКоманды.Добавить(ЭлементИзТаблицы.Ссылка);
		//ПараметрКоманды.Добавить(Элементы.ТаблицаДоставки.ТекущиеДанные.Ссылка);
	КонецЦикла;
		
	Если УправлениеПечатьюКлиент.ПроверитьДокументыПроведены(ПараметрКоманды, ЭтаФорма) Тогда
		
		СписокБС = ktcФормированиеПечатныхФорм.ПолучитьСписокБанковскихСчетов();
        БС = Неопределено;
		Пока БС = Неопределено Цикл
			БС = СписокБС.ВыбратьЭлемент("Выбор банковского счета");	
		КонецЦикла;
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Обработка.ktcПечатьДополнительныхФорм",
			"ВидатковаНакладна",
			ПараметрКоманды,
			Неопределено,
			Новый Структура("БанковскийСчет", БС.Значение)
		);
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДокументы(Команда)
	
	ТаблицаДоставки.Очистить();
	ОбновитьТаблицу();
	
КонецПроцедуры






&НаКлиенте
Процедура НаправлениеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элементы.Направление.СписокВыбора.Очистить();
	Элементы.Направление.СписокВыбора.ЗагрузитьЗначения(ПолучитьНаправления());	
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеОчистка(Элемент, СтандартнаяОбработка)
	
	ОбновитьТаблицу();	
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеПриИзменении(Элемент)
	
	Если Направление.Пустая() Тогда
		Элементы.БизнесРегион.Доступность = Ложь;
		БизнесРегион = Неопределено;
	Иначе
		Элементы.БизнесРегион.Доступность = Истина;		
	КонецЕсли;
	
	ОбновитьТаблицу();
	
КонецПроцедуры




&НаКлиенте
Процедура БизнесРегионНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элементы.БизнесРегион.СписокВыбора.Очистить();
	Элементы.БизнесРегион.СписокВыбора.ЗагрузитьЗначения(ПолучитьРегионы());	
	
КонецПроцедуры

&НаКлиенте
Процедура БизнесРегионОчистка(Элемент, СтандартнаяОбработка)
	
	ОбновитьТаблицу();
	
КонецПроцедуры

&НаКлиенте
Процедура БизнесРегионПриИзменении(Элемент)
	
	ОбновитьТаблицу();	
	
КонецПроцедуры

	








//&НаКлиенте
//Процедура ОтобратьПоТекущемуЗначению(Команда)
//	
//	ТекущаяСтрока = Элементы.ТаблицаДоставки.ТекущаяСтрока;
//	ТекущиеДанные = Элементы.ТаблицаДоставки.ТекущиеДанные;
//	
//	Если ТекущаяСтрока = Неопределено Тогда
//		Возврат;
//	КонецЕсли;
//	
//	Направление 	= Элементы.ТаблицаДоставки.ТекущиеДанные.Направление;
//	ЭлементыОтбора 	= ТаблицаДоставки.Отбор.Элементы;
//	ДостуныеПоля	= ТаблицаДоставки.Отбор.ДоступныеПоляОтбора.Элементы.Найти("Направление");
//	ПолеНаправление = ДостуныеПоля.Поле;
//	
//	НовыйЭлемент = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//	НовыйЭлемент.ВидСравнения  = ВидСравненияКомпоновкиДанных.Равно;
//	НовыйЭлемент.ЛевоеЗначение = ПолеНаправление;
//	НовыйЭлемент.ПравоеЗначение = Направление;
//	
//КонецПроцедуры

//&НаКлиенте
//Процедура ОтключитьОтбор(Команда)
//	
//	ЭлементыОтбора = ТаблицаДоставки.Отбор.Элементы;
//	
//	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
//		
//		ЭлементОтбора.Использование = Ложь;
//		
//	КонецЦикла;
//	
//КонецПроцедуры




