&НаКлиенте
Перем юТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
    юТест = ЮнитТестирование;
    
    ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("Тест_ПроверитьНаличиеФормыВводаФормулы");
	ВсеТесты.Добавить("Тест_ПроверитьОткрытияФормы");
	ВсеТесты.Добавить("Тест_ПроверитьОткрытиеСПараметромСотудникИСущестующуюФормулу");
	
	ОписаниеТеста = Новый Структура("ПредставлениеТеста, ИмяТеста,Транзакция,Параметр", "Проверка знания элемента формули <ПродажиПоСотруднику>", 
			"ТестДолжен_ЗнатьЭлементФормулы", Истина, "ПродажиПоСотруднику");
	ВсеТесты.Добавить(ОписаниеТеста);
	
	ОписаниеТеста = Новый Структура("ПредставлениеТеста, ИмяТеста,Транзакция,Параметр", "Проверка знания элемента формули <ПродажиПоСотруднику>", 
			"ТестДолжен_ЗнатьЭлементФормулы", Истина, "ПродажиПоПодразделению");
	ВсеТесты.Добавить(ОписаниеТеста);
	
	
	ВсеТесты.Добавить("Тест_ФормаДолжнаЗнатьОПоказателе");
	ВсеТесты.Добавить("Тест_ПроверитьВалидациюФормулы"); //Тут параметрический тест, и передаем в параметрах различные формулы. 
	ВсеТесты.Добавить("Тест_ПроверитьНевернуюВалидациюФормулы"); //Самый последний тест "негативные тесты", самые сложные и все варианты не предусмотришь, поэтому их оставлюят нереализованными. 
	

    Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура Тест_ПроверитьРавно() Экспорт
    юТест.ПроверитьРавенство(2, 2, "Ошибка неравенства");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ОжиданиеЗапускТеста", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОжиданиеЗапускТеста()
	
	
	ФормуНашли = Ложь;
	ФормаxUnitFor1c = Неопределено;
	
	Окна = ПолучитьОкна();
	Для каждого Окн Из Окна Цикл
		Если ТипЗнч(Окн) = Тип("ОкноКлиентскогоПриложения") Тогда
			Если Найти(Строка(Окн.Заголовок), "xUnitFor1C")>0 Тогда
				ФормуНашли = Истина;
				ФормаxUnitFor1c = Окн.ПолучитьСодержимое();
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ФормуНашли Тогда
		
		МассивТестов = ПолучитьСписокТестов(ФормаxUnitFor1c);
		Тест_ПроверитьРавно();
		
	КонецЕсли;
	
КонецПроцедуры
