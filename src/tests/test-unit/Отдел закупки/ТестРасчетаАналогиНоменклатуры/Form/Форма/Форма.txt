//&НаКлиенте//Перем юТест;//&НаКлиенте//Перем ЮнитТестированиеИмя;//&НаКлиенте//Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт//    юТест = ЮнитТестирование;//	//	ЮнитТестированиеИмя = ЮнитТестирование.МетаданныеИмя();//    //    ВсеТесты = Новый Массив;//	//	ОписаниеТеста = Новый Структура("ПредставлениеТеста, ИмяТеста,Транзакция,Параметр", "Проверим для пустой ссылки на справочник вернет пустую строку", //			"Тест_ДолженДляПустойСсылкиВернутьПустуюТаблицу", Истина);//	ВсеТесты.Добавить(ОписаниеТеста);//	////	//ОписаниеТеста = Новый Структура("ПредставлениеТеста, ИмяТеста,Транзакция,Параметр", "Проверка знания элемента формули <ПродажиПоСотруднику>", //	//		"ТестДолжен_ЗнатьЭлементФормулы", Истина, "ПродажиПоПодразделению");//	//ВсеТесты.Добавить(ОписаниеТеста);//	////	////	//ВсеТесты.Добавить("Тест_ФормаДолжнаЗнатьОПоказателе");//	//ВсеТесты.Добавить("Тест_ПроверитьВалидациюФормулы"); //Тут параметрический тест, и передаем в параметрах различные формулы. //	//ВсеТесты.Добавить("Тест_ПроверитьНевернуюВалидациюФормулы"); //Самый последний тест "негативные тесты", самые сложные и все варианты не предусмотришь, поэтому их оставлюят нереализованными. //	////    Возврат ВсеТесты;//КонецФункции//&НаСервереБезКонтекста//Процедура ПроверитьФормулуНаСервере(ТекстФормулы, Знач Ю)//	//	юТест = ВнешниеОбработки.Создать(Ю);//	//	Результат = git_РасчетЗарплаты.ПараметрыВыполненияФормулы(ТекстФормулы);//	Если Результат.ПоказателиФормулы.Количество() = 0 Тогда//		ВызватьИсключение "Не удалось распарсить формулу";		//	Иначе //		Сообщить(Результат.ПоказателиФормулы[0]);//	КонецЕсли; //КонецПроцедуры //&НаКлиенте//Процедура Тест_ПроверитьРазборФормулы_ЗПДней() Экспорт//	ПроверитьФормулуНаСервере("[ЗП_ДнейВМесяце]*5", ЮнитТестированиеИмя); //КонецПроцедуры//&НаКлиенте//Процедура Тест_ПроверитьРазборКурсаВалют() Экспорт//	ПроверитьФормулуНаСервере("[ЗП_КурсВалют]*5", ЮнитТестированиеИмя);//	ПроверитьФормулуНаСервере("[ЗП_КурсВалют_грн]*5", ЮнитТестированиеИмя);//КонецПроцедуры//&НаКлиенте//Процедура ПриОткрытии(Отказ)//	//	ПодключитьОбработчикОжидания("ОжиданиеЗапускТеста", 1, Истина);//	//КонецПроцедуры//&НаКлиенте//Процедура ОжиданиеЗапускТеста()//	//	//	ФормуНашли = Ложь;//	ФормаxUnitFor1c = Неопределено;//	//	Окна = ПолучитьОкна();//	Для каждого Окн Из Окна Цикл//		Если ТипЗнч(Окн) = Тип("ОкноКлиентскогоПриложения") Тогда//			Если Найти(Строка(Окн.Заголовок), "xUnitFor1C")>0 Тогда//				ФормуНашли = Истина;//				ФормаxUnitFor1c = Окн.ПолучитьСодержимое();//			КонецЕсли;//		КонецЕсли;//		//	КонецЦикла;//	//	Если ФормуНашли Тогда//		//		МассивТестов = ПолучитьСписокТестов(ФормаxUnitFor1c);//		ПроверитьФормулуНаСервере("[ЗП_ДнейВМесяце]*5", ЮнитТестированиеИмя); //		//	КонецЕсли;//	//КонецПроцедуры