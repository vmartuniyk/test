
#Область ИнтерфейсАвтоматическихТестов

Перем ЮнитТест;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СпиокТестов = Новый Массив;	
	Возврат СпиокТестов;
	
КонецФункции

#КонецОбласти


#Область ПрограмныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Как работает дата актуализации даты оплаты.
//
// ОБЩИЕ ПОЛОЖЕНИЯ
// 1. Изменение проводим только для документов выписаных на партнеров
// 	  в которых установлен сегмент - Партнеры, покупатели оптового отдела.
// 2. Считается, что у всех соглашениях и этапах графика оплаты установлен
//    только один етап, и если он не "Кредит после отгрузки" то такой
//    документ можно игнорировать.
// 3. Календари в рассчете не используем, поскольку выходные дни на 
//    рассчет пени не влияют.
// 4. Если текущая дата больше или равна дате первой отгрузки + отстрочка
//    тогда прекращаем перерасчет для таких заказов / реализаций.
//
// ПРОЦЕДУРА РАССЧЕТА
//
// ДЛЯ РЕАЛИЗАЦИЙ ТОВАРОВ И УСЛУГ.
// 1. Если у нас ордерный склад. 
//		1.1. Если на основании РТиУ нету расходных ордеров тогда для
//			 реализации необходимо пересчитать дату по графику, начиная
//			 из сегодняшнего дня.
//		1.2. Если реализация находится в месте (укомплектовано или
//			 погружено в машину). Тогда нужно посчитать стоимость 
//			 товара в месте и дату рассчета брать как дату комплектации
//			 или отгрузки партнеру (но здесь нужно исключить только 
//			 долю стоимости номенклатуры которая не отгружена партнеру).
//      1.3. Если по реализации есть расходный ордер и нету места
//			 тогда для рассчета среднезвешенной даты берем дату ордера 
//			 (но здесь нужно исключить только долю стоимости номенклатуры
//			 которая не отгружена партнеру).
//      1.4. Для рассчета остатка отгрузки выбираем неотгруженную номенклатуру.
//		1.5. Возвраты на основании реализаций считаются по средневзвешенному
//   	     только минусуют по формуле.
//
// 2. Если у нас безордерный склад. Для реализаций не на основании заказов 
//    дату платежа не перещитываем.
//
// ДЛЯ ЗАКАЗОВ КЛИЕНТОВ.
// 1. Если у нас ордерный склад.
//		1.1. Если на основании ЗК нету документов то такой заказ
//			 не перепроводится.
//		1.2. Если реализация на основнии заказа клиента входит в место
//			 (место укомплектовано или в машыне, отгружено партнеру) тогда для реализации
//           необходимо брать стоимость номенклатуры из места и дату
//			 движения места (но здесь нужно исключить только долю стоимости номенклатуры
//			 которая не отгружена партнеру).
//		1.3. Если реализация на основании заказа клиента не входит в 
//			 место доставки тогда дату берем по расходному ордеру
//			 (но здесь нужно исключить только долю стоимости номенклатуры
//			 которая не отгружена партнеру).
//		1.4. Возвраты на основании реализаций считаются по средневзвешенному
//   	     только минусуют по формуле.
//
// 2. Если ордерный склад.
//		2.1. Рассчет проходит по реализация отгруженным по заказу.
//
// ПРИМЕР РАССЧЕТА НА ОСНОВАНИИ ЗАКАЗА КЛИЕНТА
// Заказ на 1000 грн, (01.01), кредит 10 дней.
// - РТиУ1   (02.01), 200 грн
// - РТиУ2   (05.01), 500 грн
// - Возврат (06.01), 500 грн
// - РТиУ3	 (09.01), 300 грн
//
// Текущая дата		Как считаем (округляем к меньшему)
// 01.01			10.01 - автоматически при создании заказа
// 02.01			(12.01 - 02.01)*0.2 + (10 * 0.8) + 02.01 = 12.01
// 03.01			(12.01 - 03.01)*0.2 + (10 * 0.8) + 03.01 = 12.01
// 04.01			(12.01 - 04.01)*0.2 + (10 * 0.8) + 04.01 = 13.01
// 05.01			(12.01 - 05.01)*0.2 + (15.01 - 05.01)*0.5 + (10 * 0.3) + 05.01 = 14.01
// 06.01			(12.01 - 06.01)*0.2 + (15.01 - 06.01)*0.5 - (16.01 - 06.01)*0.5 + (10 * 0.3) + 06.01 = 09.01
// 07.01			(12.01 - 07.01)*0.2 + (15.01 - 07.01)*0.5 - (16.01 - 07.01)*0.5 + (10 * 0.3) + 07.01 = 10.01
// 08.01			(12.01 - 08.01)*0.2 + (15.01 - 08.01)*0.5 - (16.01 - 08.01)*0.5 + (10 * 0.3) + 08.01 = 11.01
// 09.01			(12.01 - 09.01)*0.2 + (15.01 - 09.01)*0.5 - (16.01 - 09.01)*0.5 + (19.01 - 09.01)*0.3 + 09.01 = 12.01

// Точка входа регламентного задания "Актуализация расчета даты расчета пени".
// Процедура сначала проводит запись документов (реализаций и заказов клиента)
// в регистр для контроля таких документом.
// После, по данных регистра (старых и новых) проводит реперасчет даты отгрузки
// или этапа графика оплаты.
//
Процедура ВыполнитьАктуализацию() Экспорт
							
	ОбновитьКешПересчета();
	АктуализироватьОплатыРеализаций();
	АктуализироватьОплатыЗаказовКлиентов();
		
КонецПроцедуры

#КонецОбласти 


#Область СлужебныеПроцедурыИФункции

#Область ТекстыЗапросов

Функция ТекстЗапросаАктуализацииРеализаций()

	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Для начала получаем вид входной цены на основании
	|// которого будем проводить процентные рассчеты
	|// отгруженного товара.
	|// Одного вида цен будет достаточно.
	|////////////////////////////////////////////////////////////////////////////////
	|// 0.
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВидЦены КАК ВидЦены
	|ПОМЕСТИТЬ ВидЦеныВходная
	|ИЗ
	|	РегистрСведений.ALPS_ВидыЦен
	|ГДЕ
	|	Входная = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Так как цены могут быть в разных валютах
	|// выберем актуалные курсы валют.
	|////////////////////////////////////////////////////////////////////////////////
	|// 1.
	|ВЫБРАТЬ
	|	Валюта КАК Валюта,
	|	ВЫРАЗИТЬ(Курс / Кратность КАК Число(15, 4)) КАК Курс
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ТекущаяДата, )
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем из кеша таблицу релизаций товаров
	|// для которых необходимо провести перерасчет даты отгрузки.
	|// Такие РТиУ будут только из ордерных складов.
	|////////////////////////////////////////////////////////////////////////////////
	|// 2.
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Документ КАК Документ.РеализацияТоваровУслуг) КАК Документ
	|ПОМЕСТИТЬ ТаблицаРеализаций
	|ИЗ
	|	РегистрСведений.Пеня_ДокументыДляПересчета
	|ГДЕ
	|	Документ ССЫЛКА Документ.РеализацияТоваровУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем список всей номенклатуры реализаций в количественном виде.
	|// Необходимо для дальныейшего рассчета доли стоимости отгруженных
	|// товаров, товаров которые еще не отгрузили и товаров которые
	|// доставили или еще едут.
	|// Так же расчитаем среднюю цену за позицию номенклатуры по реализации товаров.
	|////////////////////////////////////////////////////////////////////////////////
	|// 3.
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Продажи.ЗаказКлиента 		КАК Документ.РеализацияТоваровУслуг) КАК Документ,
	|	РегистрАналитика.Номенклатура   	КАК Номенклатура,
	|	СУММА(Продажи.КоличествоОборот) 	КАК Количество,
	|	ВЫРАЗИТЬ(СУММА(Продажи.СуммаВыручкиОборот) / СУММА(Продажи.КоличествоОборот) КАК ЧИСЛО(15, 2))	КАК Цена
	|ПОМЕСТИТЬ ВсяНоменклатураРеализаций
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|							,
	|							,
	|							,
	|							ЗаказКлиента В 
	|							(
	|								ВЫБРАТЬ
	|									Документ
	|								ИЗ
	|									ТаблицаРеализаций
	|							)) КАК Продажи
	|							
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РегистрАналитика
	|		ПО Продажи.АналитикаУчетаНоменклатуры = РегистрАналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(Продажи.ЗаказКлиента КАК Документ.РеализацияТоваровУслуг),
	|	Номенклатура
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем стоимость неотгруженной номенклатуры реализаций.
	|// Тоесть ту номенклатуру на которую еще не создали расходный
	|// ордер, и она еще на складе.
	|////////////////////////////////////////////////////////////////////////////////
	|// 4.
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Отгрузка.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Дата    КАК Дата,
	|	ВЫРАЗИТЬ(Отгрузка.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг) 		КАК Документ,
	|	СУММА(Отгрузка.КОтгрузкеОстаток * ЕСТЬNULL(ТаблицаЦен.Цена, 0))					КАК Сумма
	|ПОМЕСТИТЬ ДоляНеОтгруженныхРеализаций
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|						,
	|						ДокументОтгрузки В 
	|						(
	|							ВЫБРАТЬ
	|								Документ
	|							ИЗ
	|								ТаблицаРеализаций
	|						)) КАК Отгрузка
	|						
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсяНоменклатураРеализаций КАК ТаблицаЦен
	|		ПО ВЫРАЗИТЬ(Отгрузка.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг) = ТаблицаЦен.Документ
	|			И Отгрузка.Номенклатура = ТаблицаЦен.Номенклатура
	|ГДЕ
	|	Отгрузка.КОтгрузкеОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(Отгрузка.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Дата,
	|	ВЫРАЗИТЬ(Отгрузка.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим стоимость всей реализации (необходимо для процентного рассчета,
	|// даты отгрузки по графику).
	|////////////////////////////////////////////////////////////////////////////////
	|// 5.
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Документ 											КАК Документ,
	|	СУММА(ТаблицаНоменклатуры.Количество * ТаблицаНоменклатуры.Цена)    	КАК Сумма
	|ПОМЕСТИТЬ СтоимостьВсехДокументовРеализации
	|ИЗ
	|	ВсяНоменклатураРеализаций КАК ТаблицаНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	Документ
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем все расходные ордера по данных реализациях, они необходимы
	|// для получения мест, которые были отгружены или неотгруены партнеру.
	|////////////////////////////////////////////////////////////////////////////////
	|// 6.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(Регистратор КАК Документ.РасходныйОрдерНаТовары) 		КАК Документ,
	|	ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг) 	КАК Распоряжение
	|ПОМЕСТИТЬ ТаблицаОрдеров
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
	|								,
	|								,
	|								Регистратор,
	|								ДокументОтгрузки В 
	|								(
	|									ВЫБРАТЬ
	|										Документ
	|									ИЗ
	|										ТаблицаРеализаций	
	|								))
	|ГДЕ
	|	Регистратор ССЫЛКА Документ.РасходныйОрдерНаТовары
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем таблицу документов по местам для предварительной оптимизации
	|////////////////////////////////////////////////////////////////////////////////
	|// 7.
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары) КАК Документ,
	|	МестаПоДокументам.Место КАК Место
	|ПОМЕСТИТЬ ТабилцаМестаПоДокументам
	|ИЗ
	|	РегистрСведений.МестаПоДокументам КАК МестаПоДокументам
	|ГДЕ
	|	ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары) В 
	|	(
	|		ВЫБРАТЬ
	|			Документ
	|		ИЗ
	|			ТаблицаОрдеров
	|	)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем таблицу соответствий Место - Расходный ордер.
	|////////////////////////////////////////////////////////////////////////////////
	|// 8.
	|ВЫБРАТЬ
	|	ТаблицаОрдеров.Документ 		КАК Документ,
	|	ТаблицаОрдеров.Распоряжение     КАК Распоряжение,
	|	МестаПоДокументам.Место 		КАК Место
	|ПОМЕСТИТЬ ТаблицаМест          
	|ИЗ
	|	ТаблицаОрдеров КАК ТаблицаОрдеров
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабилцаМестаПоДокументам КАК МестаПоДокументам
	|		ПО МестаПоДокументам.Документ = ТаблицаОрдеров.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим список мест, которые имеют статус Комплектация завершена,
	|// Погружено в машыну и Отгружено партнеру. Необходимо для рассчета даты
	|// от которой будем проводить рассчет средневзвешенной отстрочки.
	|////////////////////////////////////////////////////////////////////////////////
	|// 9.
	|ВЫБРАТЬ
	|	Места.Период 				КАК Дата,
	|	Места.Место 				КАК Место,
	|	ТаблицаМест.Распоряжение 	КАК Документ
	|ПОМЕСТИТЬ МестаДоставленыеПартнеру
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест.СрезПоследних(
	|							,
	|							Место В
	|							(
	|								ВЫБРАТЬ
	|									Место
	|								ИЗ
	|									ТаблицаМест	
	|							)) КАК Места
	|							
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаМест КАК ТаблицаМест
	|		ПО Места.Место = ТаблицаМест.Место
	|ГДЕ
	|	Места.СтатусОтгрузки В (
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.КомплектацияЗавершена),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ПогруженоВМашину))
	|					
	|ИНДЕКСИРОВАТЬ ПО
	|	Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Из доставленных мест выберем количественые значения номенклатуры
	|// которая приехала партнеру.
	|////////////////////////////////////////////////////////////////////////////////
	|// 10.
	|ВЫБРАТЬ
	|	ДоставленныеМеста.Дата 			КАК Дата,
	|	ДоставленныеМеста.Место 		КАК Место,
	|	ДоставленныеМеста.Документ 		КАК Документ,
	|	МестаНоменклатуры.Номенклатура 	КАК Номенклатура,
	|	МестаНоменклатуры.Количество	КАК Количество
	|ПОМЕСТИТЬ НоменклатураМест
	|ИЗ
	|	МестаДоставленыеПартнеру КАК ДоставленныеМеста
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестаНоменклатуры КАК МестаНоменклатуры
	|		ПО ДоставленныеМеста.Место = МестаНоменклатуры.Место
	|		
	|ИНДЕКСИРОВАТЬ ПО 
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем цены номенклатуры (нужно получить сумму для расчета доли даты в доставке).
	|////////////////////////////////////////////////////////////////////////////////
	|// 11.
	|ВЫБРАТЬ
	|	НоменклатураМест.Дата 			КАК Дата,
	|	НоменклатураМест.Место 			КАК Место,
	|	НоменклатураМест.Документ 		КАК Документ,
	|	СУММА(НоменклатураМест.Количество * ТаблицаЦен.Цена) КАК Сумма
	|ПОМЕСТИТЬ СуммыПоМестам
	|ИЗ
	|	НоменклатураМест КАК НоменклатураМест
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсяНоменклатураРеализаций КАК ТаблицаЦен
	|		ПО НоменклатураМест.Документ 		= ТаблицаЦен.Документ
	|			И НоменклатураМест.Номенклатура = ТаблицаЦен.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураМест.Дата,
	|	НоменклатураМест.Место,
	|	НоменклатураМест.Документ
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим список ордеров, которые не входят в места, или входит в отмененные места.
	|// Напомню что все номенклатура места полностью входит в ордер,
	|// тоесть полуукомплетованных ордеров нету.
	|////////////////////////////////////////////////////////////////////////////////
	|// 12.
	|ВЫБРАТЬ
	|	Документ 		КАК Документ,
	|	Распоряжение	КАК Распоряжение
	|ПОМЕСТИТЬ ОрдераНеВМестах
	|ИЗ
	|	ТаблицаМест
	|ГДЕ
	|	Место НЕ В (ВЫБРАТЬ Место ИЗ СуммыПоМестам)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим номенклатуру для ордеров без мест.
	|////////////////////////////////////////////////////////////////////////////////
	|// 13.
	|ВЫБРАТЬ
	|	ОрдераНеВМестах.Документ 		КАК Документ,
	|	ОрдераНеВМестах.Распоряжение	КАК Распоряжение,
	|	ТоварыОрдера.Номенклатура		КАК Номенклатура,
	|	ТоварыОрдера.Количество         КАК Количество
	|ПОМЕСТИТЬ НоменклатураОрдеров
	|ИЗ
	|	ОрдераНеВМестах КАК ОрдераНеВМестах
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.Товары КАК ТоварыОрдера
	|		ПО ОрдераНеВМестах.Документ = ТоварыОрдера.Ссылка
	|		
	|ИНДЕКСИРОВАТЬ ПО 
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим ценовое представление номенклатуры в ордерах
	|////////////////////////////////////////////////////////////////////////////////
	|// 14.
	|ВЫБРАТЬ
	|	НоменклатураОрдеров.Документ.Дата 	КАК Дата,
	|	НоменклатураОрдеров.Распоряжение	КАК Распоряжение,
	|	СУММА(НоменклатураОрдеров.Количество * ТаблицаЦенРеализаций.Цена) КАК Сумма
	|ПОМЕСТИТЬ СуммаПоОрдерам
	|ИЗ
	|	НоменклатураОрдеров КАК НоменклатураОрдеров
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсяНоменклатураРеализаций КАК ТаблицаЦенРеализаций
	|		ПО НоменклатураОрдеров.Распоряжение	   = ТаблицаЦенРеализаций.Документ
	|			И НоменклатураОрдеров.Номенклатура = ТаблицаЦенРеализаций.Номенклатура
	|		
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураОрдеров.Документ,
	|	НоменклатураОрдеров.Распоряжение
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим возвраты созданные на основании реализаций.
	|////////////////////////////////////////////////////////////////////////////////
	|// 15.
	|ВЫБРАТЬ
	|	ТаблицаРеализаций.Документ 	КАК Документ,
	|	ТоварыВозврата.Ссылка 		КАК Возврат,
	|	ТоварыВозврата.Номенклатура КАК Номенклатура,
	|	ТоварыВозврата.Количество 	КАК Количество
	|ПОМЕСТИТЬ НоменклатураВозвратов
	|ИЗ
	|	ТаблицаРеализаций КАК ТаблицаРеализаций
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ТоварыВозврата
	|		ПО ТаблицаРеализаций.Документ = ВЫРАЗИТЬ(ТоварыВозврата.ДокументРеализации КАК Документ.РеализацияТоваровУслуг)
	|
	|ИНДЕКСИРОВАТЬ ПО	
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим суммовое выражениЕ возвратов клиентов.
	|////////////////////////////////////////////////////////////////////////////////
	|// 16.
	|ВЫБРАТЬ
	|	НоменклатураВозвратов.Возврат.Дата	КАК Дата,
	|	НоменклатураВозвратов.Документ 		КАК Документ,
	|	НоменклатураВозвратов.Возврат  		КАК Возврат,
	|	СУММА(НоменклатураВозвратов.Количество * ТаблицаЦенРеализаций.Цена) КАК Сумма
	|ПОМЕСТИТЬ СуммыПоВозвратам
	|ИЗ
	|	НоменклатураВозвратов КАК НоменклатураВозвратов
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсяНоменклатураРеализаций КАК ТаблицаЦенРеализаций
	|		ПО НоменклатураВозвратов.Документ		 = ТаблицаЦенРеализаций.Документ
	|			И НоменклатураВозвратов.Номенклатура = ТаблицаЦенРеализаций.Номенклатура
	|		
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураВозвратов.Документ,
	|	НоменклатураВозвратов.Возврат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем графики оплаты по соглашению для реализаций.
	|////////////////////////////////////////////////////////////////////////////////
	|// 17.
	|ВЫБРАТЬ
	|	ТаблицаРеализаций.Документ 					КАК Документ,
	|	МАКСИМУМ(ЕСТЬNULL(ЭтапыГрафика.Сдвиг, 0)) 	КАК Сдвиг
	|ПОМЕСТИТЬ ТаблицаСдвигов
	|ИЗ
	|	ТаблицаРеализаций КАК ТаблицаРеализаций
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиОплаты.Этапы КАК ЭтапыГрафика
	|		ПО ТаблицаРеализаций.Документ.Соглашение.ГрафикОплаты = ЭтапыГрафика.Ссылка
	|			И ЭтапыГрафика.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыКлиентом.КредитПослеОтгрузки)
	|			
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРеализаций.Документ
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Выполняем результирующий расчет дат отгрузки.
	|////////////////////////////////////////////////////////////////////////////////
	|// 18.
	|ВЫБРАТЬ
	| 	ВложенныйЗапрос.Документ											 									 						КАК Документ,
	| 	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ДниОтстрочки) + 0.5 КАК ЧИСЛО(15)) - 1), ДЕНЬ) 	КАК ДатаПлатежа
	|ИЗ
	|(
	|	ВЫБРАТЬ
	|		ТаблицаСдвигов.Документ КАК Документ,
	|		РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммыПоМестам.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) * СуммыПоМестам.Сумма / СтоимостьРеализаций.Сумма КАК ДниОтстрочки,
	|		ВЫБОР	
	|			КОГДА РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммыПоМестам.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) < 0 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЗапретПересчета // Если от даты первой отгрузки пройшло времени больше чем размер отстрочки - запрещать пересчет даты
	|	ИЗ
	|		ТаблицаСдвигов КАК ТаблицаСдвигов
	|	
	|			ЛЕВОЕ СОЕДИНЕНИЕ СуммыПоМестам КАК СуммыПоМестам
	|			ПО ТаблицаСдвигов.Документ = СуммыПоМестам.Документ
	|		
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВсехДокументовРеализации КАК СтоимостьРеализаций
	|			ПО ТаблицаСдвигов.Документ = СтоимостьРеализаций.Документ
	|		
	|	ГДЕ
	|		НЕ СуммыПоМестам.Дата ЕСТЬ NULL
	|		И ЕСТЬNULL(СтоимостьРеализаций.Сумма, 0) <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТаблицаСдвигов.Документ КАК Документ,
	|		РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммаПоОрдерам.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) * СуммаПоОрдерам.Сумма / СтоимостьРеализаций.Сумма,
	|		ВЫБОР	
	|			КОГДА РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммаПоОрдерам.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) < 0 
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЗапретПересчета // Если от даты первой отгрузки пройшло времени больше чем размер отстрочки - запрещать пересчет даты
	|	ИЗ
	|		ТаблицаСдвигов КАК ТаблицаСдвигов
	|	
	|			ЛЕВОЕ СОЕДИНЕНИЕ СуммаПоОрдерам КАК СуммаПоОрдерам
	|			ПО ТаблицаСдвигов.Документ = СуммаПоОрдерам.Распоряжение
	|		
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВсехДокументовРеализации КАК СтоимостьРеализаций
	|			ПО ТаблицаСдвигов.Документ = СтоимостьРеализаций.Документ
	|		
	|	ГДЕ
	|		НЕ СуммаПоОрдерам.Дата ЕСТЬ NULL
	|		И ЕСТЬNULL(СтоимостьРеализаций.Сумма, 0) <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТаблицаСдвигов.Документ КАК Документ,
	|		-РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммыПоВозвратам.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) * СуммыПоВозвратам.Сумма / СтоимостьРеализаций.Сумма,
	|		0 // По возвратам - всегда пересчет
	|	ИЗ
	|		ТаблицаСдвигов КАК ТаблицаСдвигов
	|	
	|			ЛЕВОЕ СОЕДИНЕНИЕ СуммыПоВозвратам КАК СуммыПоВозвратам
	|			ПО ТаблицаСдвигов.Документ = СуммыПоВозвратам.Документ
	|		
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВсехДокументовРеализации КАК СтоимостьРеализаций
	|			ПО ТаблицаСдвигов.Документ = СтоимостьРеализаций.Документ
	|		
	|	ГДЕ
	|		НЕ СуммыПоВозвратам.Документ ЕСТЬ NULL
	|		И ЕСТЬNULL(СтоимостьРеализаций.Сумма, 0) <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТаблицаСдвигов.Документ КАК Документ,
	|		СУММА(ТаблицаСдвигов.Сдвиг * ДоляНеОтгруженныхРеализаций.Сумма / СтоимостьРеализаций.Сумма),
	|		0 // по неотгруженным товарам всегда пересчет
	|	ИЗ
	|		ТаблицаСдвигов КАК ТаблицаСдвигов
	|	
	|			ЛЕВОЕ СОЕДИНЕНИЕ ДоляНеОтгруженныхРеализаций КАК ДоляНеОтгруженныхРеализаций
	|			ПО ТаблицаСдвигов.Документ = ДоляНеОтгруженныхРеализаций.Документ
	|		
	|			ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВсехДокументовРеализации КАК СтоимостьРеализаций
	|			ПО ТаблицаСдвигов.Документ = СтоимостьРеализаций.Документ
	|		
	|	ГДЕ
	|		НЕ ДоляНеОтгруженныхРеализаций.Дата ЕСТЬ NULL
	|		И ЕСТЬNULL(СтоимостьРеализаций.Сумма, 0) <> 0
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаСдвигов.Документ
	|) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Документ
	|
	|ИМЕЮЩИЕ СУММА(ВложенныйЗапрос.ЗапретПересчета) = 0 // Проверка не прошло ли от первой отгрузки времени больше нежели отстрочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Полностью отгруженные реализации нужно исключить из рестра кеширования.
	|////////////////////////////////////////////////////////////////////////////////
	|// 19.
	|ВЫБРАТЬ
	|	Документ КАК Документ
	|ИЗ
	|	ТаблицаРеализаций
	|ГДЕ
	|	Документ НЕ В (ВЫБРАТЬ Документ ИЗ ДоляНеОтгруженныхРеализаций)
	|;
	|
	|УНИЧТОЖИТЬ ТаблицаСдвигов;
	|УНИЧТОЖИТЬ СуммыПоВозвратам;
	|УНИЧТОЖИТЬ НоменклатураВозвратов;
	|УНИЧТОЖИТЬ СуммаПоОрдерам;
	|УНИЧТОЖИТЬ НоменклатураОрдеров;
	|УНИЧТОЖИТЬ ОрдераНеВМестах;
	|УНИЧТОЖИТЬ СуммыПоМестам;
	|УНИЧТОЖИТЬ НоменклатураМест;
	|УНИЧТОЖИТЬ МестаДоставленыеПартнеру;
	|УНИЧТОЖИТЬ ТабилцаМестаПоДокументам;
	|УНИЧТОЖИТЬ ТаблицаМест;
	|УНИЧТОЖИТЬ ТаблицаОрдеров;
	|УНИЧТОЖИТЬ СтоимостьВсехДокументовРеализации;
	|УНИЧТОЖИТЬ ДоляНеОтгруженныхРеализаций;
	|УНИЧТОЖИТЬ ВсяНоменклатураРеализаций;
	|УНИЧТОЖИТЬ ТаблицаРеализаций;
	|УНИЧТОЖИТЬ ВидЦеныВходная;
	|УНИЧТОЖИТЬ КурсыВалют;
	|";
	
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаАктуализации()

Функция ТекстЗапросаАктуализацииЗаказов()
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем из кеша таблицу заказов
	|// для которых необходимо провести перерасчет даты.
	|////////////////////////////////////////////////////////////////////////////////
	|// 0.
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Документ КАК Документ.ЗаказКлиента) КАК Документ
	|ПОМЕСТИТЬ ТаблицаЗаказовПредварительная
	|ИЗ
	|	РегистрСведений.Пеня_ДокументыДляПересчета
	|ГДЕ
	|	Документ ССЫЛКА Документ.ЗаказКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем список всей номенклатуры заказов в количественном виде.
	|// Необходимо для дальныейшего рассчета доли стоимости отгруженных
	|// товаров, товаров которые еще не отгрузили и товаров которые
	|// доставили или еще едут.
	|////////////////////////////////////////////////////////////////////////////////
	|// 1.
	|ВЫБРАТЬ
	|	ЗаказКлиента 			КАК Документ,
	|	Номенклатура 			КАК Номенклатура,
	|	СУММА(ЗаказаноПриход)  	КАК Количество,
	|	ВЫРАЗИТЬ(СУММА(СуммаПриход) / СУММА(ЗаказаноПриход) КАК ЧИСЛО(15, 2)) КАК Цена
	|ПОМЕСТИТЬ ВсяНоменклатураЗаказов
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Обороты(
	|					,
	|					,
	|					,
	|					ЗаказКлиента В 
	|					(
	|						ВЫБРАТЬ
	|							Документ
	|						ИЗ
	|							ТаблицаЗаказовПредварительная
	|					))
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента,
	|	Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получем список реализаций выписаных по заказам клиентов
	|////////////////////////////////////////////////////////////////////////////////
	|// 2.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаказКлиента) 		  КАК ЗаказКлиента,
	|	ВЫРАЗИТЬ(Регистратор КАК Документ.РеализацияТоваровУслуг) КАК Документ
	|ПОМЕСТИТЬ РеализацииПоЗаказам
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|							,
	|							,
	|							Регистратор,
	|							ЗаказКлиента В 
	|							(
	|								ВЫБРАТЬ	
	|									Документ
	|								ИЗ
	|									ТаблицаЗаказовПредварительная
	|							))
	|							
	|ГДЕ
	|	Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Нужно отсечь заказы клиентов по которым не было реализаций.
	|// Для таких заказов даты пересчитывать не нужно.
	|////////////////////////////////////////////////////////////////////////////////
	|// 3.
	|ВЫБРАТЬ
	|	Заказы.Документ КАК Документ
	|ПОМЕСТИТЬ ТаблицаЗаказов
	|ИЗ
	|	ТаблицаЗаказовПредварительная КАК Заказы
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеализацииПоЗаказам КАК РеализацииПоЗаказам
	|		ПО Заказы.Документ = РеализацииПоЗаказам.ЗаказКлиента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем стоимость неотгруженной номенклатуры заказов.
	|// Тоесть номенклатуру на которую еще не выписали реализацию
	|// или не провели расходный ордер на реализацию по заказу.
	|////////////////////////////////////////////////////////////////////////////////
	|// 4.
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Документ 										 КАК Документ,
	|	СУММА(ВложенныйЗапрос.Количество * ЕСТЬNULL(ТаблицаЦен.Цена, 0)) КАК Сумма
	|ПОМЕСТИТЬ ДоляНеОтгруженныхЗаказов
	|ИЗ
	|	(
	|		ВЫБРАТЬ
	|			ВЫРАЗИТЬ(ЗаказКлиента КАК Документ.ЗаказКлиента) КАК Документ,
	|			Номенклатура 		КАК Номенклатура,
	|			ЗаказаноОстаток     КАК Количество
	|		ИЗ	
	|			РегистрНакопления.ЗаказыКлиентов.Остатки(
	|							,
	|							ЗаказКлиента В 
	|							(
	|								ВЫБРАТЬ	
	|									Документ
	|								ИЗ
	|									ТаблицаЗаказов
	|							))
	|							
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			РеализацииПоЗаказам.ЗаказКлиента 	КАК Документ,
	|			ОтгрузкаТоваров.Номенклатура    	КАК Номенклатура,
	|			ОтгрузкаТоваров.КОтгрузкеОстаток    КАК Количество
	|		ИЗ
	|			РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|							,
	|							ДокументОтгрузки В
	|							(
	|								ВЫБРАТЬ
	|									Документ
	|								ИЗ
	|									РеализацииПоЗаказам
	|							)) КАК ОтгрузкаТоваров
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеализацииПоЗаказам КАК РеализацииПоЗаказам
	|				ПО ВЫРАЗИТЬ(ОтгрузкаТоваров.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг) = РеализацииПоЗаказам.Документ
	|	) КАК ВложенныйЗапрос
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсяНоменклатураЗаказов КАК ТаблицаЦен
	|		ПО  Вложенныйзапрос.Документ = ТаблицаЦен.Документ
	|			И ВложенныйЗапрос.Номенклатура = ТаблицаЦен.Номенклатура
	|		
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Документ
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим стоимость всего заказа (необходимо для процентного рассчета,
	|// даты отгрузки по графику).
	|////////////////////////////////////////////////////////////////////////////////
	|// 5.
	|ВЫБРАТЬ
	|	Документ 					КАК Документ,
	|	СУММА(Количество * Цена)    КАК Сумма
	|ПОМЕСТИТЬ СтоимостьВсехДокументовЗаказов
	|ИЗ
	|	ВсяНоменклатураЗаказов
	|
	|СГРУППИРОВАТЬ ПО
	|	Документ
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем все расходные ордера по данных реализациях, они необходимы
	|// для получения мест, которые были отгружены или неотгруены партнеру.
	|// Для складов из безордерных складов дату счиатем по реализациям.
	|////////////////////////////////////////////////////////////////////////////////
	|// 6.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(ОтгрузкаТоваров.Регистратор КАК Документ.РасходныйОрдерНаТовары) 		КАК Документ,
	|	РеализацииПоЗаказам.ЗаказКлиента 												КАК Распоряжение,
	|	ОтгрузкаТоваров.Номенклатура													КАК Номенклатура,
	|	ОтгрузкаТоваров.КОтгрузкеРасход													КАК Количество
	|ПОМЕСТИТЬ ТаблицаОрдеров
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
	|								,
	|								,
	|								Регистратор,
	|								ДокументОтгрузки В 
	|								(
	|									ВЫБРАТЬ
	|										Документ
	|									ИЗ
	|										РеализацииПоЗаказам	
	|								)) КАК ОтгрузкаТоваров
	|								
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеализацииПоЗаказам КАК РеализацииПоЗаказам
	|		ПО ВЫРАЗИТЬ(ОтгрузкаТоваров.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг) = РеализацииПоЗаказам.Документ
	|ГДЕ
	|	ОтгрузкаТоваров.Регистратор ССЫЛКА Документ.РасходныйОрдерНаТовары
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем таблицу места по документам для правильного построения
	|// количественных показателей номенклатуры по местам.
	|////////////////////////////////////////////////////////////////////////////////
	|// 7.
	|ВЫБРАТЬ
	|	Документ КАК Документ,
	|	Место КАК Место
	|ПОМЕСТИТЬ МестаПоДокументам
	|ИЗ
	|	РегистрСведений.МестаПоДокументам
	|ГДЕ
	|	 ВЫРАЗИТЬ(Документ КАК Документ.РасходныйОрдерНаТовары) В (ВЫБРАТЬ Документ ИЗ ТаблицаОрдеров)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем таблицу соответвий Место - Расходный ордер.
	|////////////////////////////////////////////////////////////////////////////////
	|// 8.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаОрдеров.Документ 		КАК Документ,
	|	ТаблицаОрдеров.Распоряжение		КАК Распоряжение,
	|	МестаПоДокументам.Место 		КАК Место
	|ПОМЕСТИТЬ ТаблицаМест          
	|ИЗ
	|	ТаблицаОрдеров КАК ТаблицаОрдеров
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестаПоДокументам КАК МестаПоДокументам
	|		ПО МестаПоДокументам.Документ = ТаблицаОрдеров.Документ
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим список мест, которые имеют статус Комплектация завершена,
	|// Погружено в машыну и Отгружено партнеру. Необходимо для рассчета даты
	|// от которой будем проводить рассчет средневзвешенной отстрочки.
	|////////////////////////////////////////////////////////////////////////////////
	|// 9.
	|ВЫБРАТЬ
	|	Места.Период 				КАК Дата,
	|	Места.Место 				КАК Место
	|ПОМЕСТИТЬ МестаДоставленыеПартнеру
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест.СрезПоследних(
	|							,
	|							Место В
	|							(
	|								ВЫБРАТЬ
	|									Место
	|								ИЗ
	|									ТаблицаМест	
	|							)) КАК Места
	|							
	|ГДЕ
	|	Места.СтатусОтгрузки В (
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.КомплектацияЗавершена),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ОтгруженоПартнеру),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыОтгрузкиМест.ПогруженоВМашину))
	|					
	|ИНДЕКСИРОВАТЬ ПО
	|	Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Так как у нас некоторые места могут комплетоваться по нескольким закам клиентам,
	|// для расчета доли стоимости товара которые едет клиенту будем брать данные
	|// из расходного ордера. Из места берем только дату.
	|////////////////////////////////////////////////////////////////////////////////
	|// 10.
	|ВЫБРАТЬ
	|	ТаблицаОрдеров.Распоряжение КАК Распоряжение,
	|	ТаблицаОрдеров.Номенклатура КАК Номенклатура,
	|	ТаблицаОрдеров.Количество 	КАК Количество,
	|	ТаблицаМест.Место			КАК Место
	|ПОМЕСТИТЬ МестаПоРаспоряжениям
	|ИЗ
	|	ТаблицаОрдеров КАК ТаблицаОрдеров
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаМест КАК ТаблицаМест
	|		ПО ТаблицаОрдеров.Документ = ТаблицаМест.Документ
	|		
	|ИНДЕКСИРОВАТЬ ПО
	|	Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем количественные показатели номенклатуры из расходных ордеров.
	|////////////////////////////////////////////////////////////////////////////////
	|// 11.
	|ВЫБРАТЬ
	|	ДоставленныеМеста.Дата КАК Дата,
	|	МестаПоРаспоряжениям.Распоряжение КАК Документ,
	|	МестаПоРаспоряжениям.Номенклатура КАК Номенклатура,
	|	СУММА(МестаПоРаспоряжениям.Количество) КАК Количество
	|ПОМЕСТИТЬ НоменклатураМест
	|ИЗ
	|	МестаПоРаспоряжениям КАК МестаПоРаспоряжениям
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МестаДоставленыеПартнеру КАК ДоставленныеМеста
	|		ПО МестаПоРаспоряжениям.Место = ДоставленныеМеста.Место
	|		
	|СГРУППИРОВАТЬ ПО
	|	ДоставленныеМеста.Дата,
	|	МестаПоРаспоряжениям.Распоряжение,
	|	МестаПоРаспоряжениям.Номенклатура
	|	
	|ИНДЕКСИРОВАТЬ ПО	
	|	Документ,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем цены номенклатуры (нужно получить сумму для расчета доли даты в доставке).
	|////////////////////////////////////////////////////////////////////////////////
	|// 12.
	|ВЫБРАТЬ
	|	НоменклатураМест.Дата 			КАК Дата,
	|	НоменклатураМест.Документ 		КАК Документ,
	|	СУММА(НоменклатураМест.Количество * ТаблицаЦен.Цена) КАК Сумма
	|ПОМЕСТИТЬ СуммыПоМестам
	|ИЗ
	|	НоменклатураМест КАК НоменклатураМест
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсяНоменклатураЗаказов КАК ТаблицаЦен
	|		ПО НоменклатураМест.Документ = ТаблицаЦен.Документ
	|			И НоменклатураМест.Номенклатура = ТаблицаЦен.Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураМест.Дата,
	|	НоменклатураМест.Документ
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим список ордеров, которые не входят в места, или входит в отмененные места.
	|// Напомню что все номенклатура места полностью входит в ордер,
	|// тоесть полуукомплетованных ордеров нету.
	|////////////////////////////////////////////////////////////////////////////////
	|// 13.
	|ВЫБРАТЬ
	|	Документ 		КАК Документ,
	|	Распоряжение	КАК Распоряжение
	|ПОМЕСТИТЬ ОрдераНеВМестах
	|ИЗ
	|	ТаблицаМест
	|ГДЕ
	|	Место НЕ В (ВЫБРАТЬ Место ИЗ СуммыПоМестам)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим номенклатуру для ордеров без мест.
	|////////////////////////////////////////////////////////////////////////////////
	|// 14.
	|ВЫБРАТЬ
	|	ОрдераНеВМестах.Документ 		КАК Документ,
	|	ОрдераНеВМестах.Распоряжение	КАК Распоряжение,
	|	ТоварыОрдера.Номенклатура		КАК Номенклатура,
	|	ТоварыОрдера.Количество         КАК Количество
	|ПОМЕСТИТЬ НоменклатураОрдеров
	|ИЗ
	|	ОрдераНеВМестах КАК ОрдераНеВМестах
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.Товары КАК ТоварыОрдера
	|		ПО ОрдераНеВМестах.Документ = ТоварыОрдера.Ссылка
	|		
	|ИНДЕКСИРОВАТЬ ПО 
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим ценовое представление номенклатуры в ордерах
	|////////////////////////////////////////////////////////////////////////////////
	|// 15.
	|ВЫБРАТЬ
	|	НоменклатураОрдеров.Документ.Дата 	КАК Дата,
	|	НоменклатураОрдеров.Распоряжение	КАК Распоряжение,
	|	СУММА(НоменклатураОрдеров.Количество * ЕСТЬNULL(ТаблицаЦенЗаказов.Цена, 0)) КАК Сумма
	|ПОМЕСТИТЬ СуммаПоОрдерам
	|ИЗ
	|	НоменклатураОрдеров КАК НоменклатураОрдеров
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсяНоменклатураЗаказов КАК ТаблицаЦенЗаказов
	|		ПО  НоменклатураОрдеров.Распоряжение = ТаблицаЦенЗаказов.Документ
	|			И НоменклатураОрдеров.Номенклатура = ТаблицаЦенЗаказов.Номенклатура
	|		
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураОрдеров.Документ,
	|	НоменклатураОрдеров.Распоряжение
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим возвраты созданные на основании заказов.
	|////////////////////////////////////////////////////////////////////////////////
	|// 16.
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Продажи.ЗаказКлиента КАК Документ.ЗаказКлиента) 			КАК Документ,
	|	ВЫРАЗИТЬ(Продажи.Регистратор КАК Документ.ВозвратТоваровОтКлиента)	КАК Возврат,
	|	РегистрАналитика.Номенклатура 										КАК Номенклатура,
	|	Продажи.КоличествоОборот 											КАК Количество
	|ПОМЕСТИТЬ НоменклатураВозвратов
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|							,
	|							,
	|							Регистратор,
	|							ЗаказКлиента В 
	|							(
	|								ВЫБРАТЬ
	|									Документ
	|								ИЗ
	|									ТаблицаЗаказов
	|							)) КАК Продажи
	|							
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК РегистрАналитика
	|		ПО Продажи.АналитикаУчетаНоменклатуры = РегистрАналитика.КлючАналитики
	|ГДЕ
	|	Продажи.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|
	|ИНДЕКСИРОВАТЬ ПО	
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получим суммовое выражениЕ возвратов клиентов.
	|////////////////////////////////////////////////////////////////////////////////
	|// 17.
	|ВЫБРАТЬ
	|	НоменклатураВозвратов.Возврат.Дата	КАК Дата,
	|	НоменклатураВозвратов.Документ 		КАК Документ,
	|	НоменклатураВозвратов.Возврат  		КАК Возврат,
	|	СУММА(НоменклатураВозвратов.Количество * ЕСТЬNULL(ТаблицаЦенЗаказов.Цена,0)) КАК Сумма
	|ПОМЕСТИТЬ СуммыПоВозвратам
	|ИЗ
	|	НоменклатураВозвратов КАК НоменклатураВозвратов
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВсяНоменклатураЗаказов КАК ТаблицаЦенЗаказов
	|		ПО НоменклатураВозвратов.Документ = ТаблицаЦенЗаказов.Документ
	|			И НоменклатураВозвратов.Номенклатура = ТаблицаЦенЗаказов.Номенклатура
	|		
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураВозвратов.Документ,
	|	НоменклатураВозвратов.Возврат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем реализации из безордерных складов, так как в случае создания заказа
	|// из такого склада мы расчет даты оплаты проводим по датам реализаций.
	|////////////////////////////////////////////////////////////////////////////////
	|// 18.
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Продажи.ЗаказКлиента КАК Документ.ЗаказКлиента) КАК Документ,
	|	ВЫРАЗИТЬ(Продажи.Регистратор КАК Документ.РеализацияТоваровУслуг) КАК Реализация,
	|	АналитикаНоменклатуры.Номенклатура 	КАК Номенклатура,
	|	Продажи.КоличествоОборот 			КАК Количество
	|ПОМЕСТИТЬ РеализацииИзБезордерныхСкладов
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|								,
	|								,
	|								Регистратор,
	|								ЗаказКлиента В 
	|								(
	|									ВЫБРАТЬ
	|										Документ
	|									ИЗ
	|										ТаблицаЗаказов
	|								)) КАК Продажи
	|													
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО Продажи.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.КлючАналитики
	|			И АналитикаНоменклатуры.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке = ЛОЖЬ
	|		
	|		
	|ГДЕ
	|	Продажи.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Проведем рассчет сумм реализаций из безордерных складов
	|////////////////////////////////////////////////////////////////////////////////
	|// 19.
	|ВЫБРАТЬ
	|	ТаблицаРеализаций.Документ 			КАК Документ,
	|	ТаблицаРеализаций.Реализация.Дата   КАК Дата,
	|	СУММА(ТаблицаРеализаций.Количество * ЕСТЬNULL(ТаблицаЦенЗаказов.Цена, 0)) КАК Сумма
	|ПОМЕСТИТЬ СуммыПоРеализациям
	|ИЗ
	|	РеализацииИзБезордерныхСкладов КАК ТаблицаРеализаций
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсяНоменклатураЗаказов КАК ТаблицаЦенЗаказов
	|		ПО ТаблицаРеализаций.Документ = ТаблицаЦенЗаказов.Документ
	|			И ТаблицаРеализаций.Номенклатура = ТаблицаЦенЗаказов.Номенклатура
	|		
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРеализаций.Документ,
	|	ТаблицаРеализаций.Реализация
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Нам нужно определить брать ли этапы графика оплаты из соглашения в 
	|// заказе клиента или из графика оплаты в самому заказе.
	|// Приоритет по заказам.
	|////////////////////////////////////////////////////////////////////////////////
	|// 20.
	|ВЫБРАТЬ
	|	Документ 					КАК Документ,
	|	Документ.ГрафикОплаты     	КАК График
	|ПОМЕСТИТЬ ГрафикиОплатПоЗаказам
	|ИЗ
	|	ТаблицаЗаказов
	|ГДЕ
	|	Документ.ГрафикОплаты <> ЗНАЧЕНИЕ(Справочник.ГрафикиОплаты.ПустаяСсылка)
	|	
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|   Документ 							КАК Документ,
	|   Документ.Соглашение.ГрафикОплаты    КАК График
	|ИЗ
	|	ТаблицаЗаказов
	|ГДЕ
	|	Документ.ГрафикОплаты = ЗНАЧЕНИЕ(Справочник.ГрафикиОплаты.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Получаем первые этапы из графиков оплаты партнеров.
	|////////////////////////////////////////////////////////////////////////////////
	|// 21.
	|ВЫБРАТЬ
	|	ГрафикиОплатПоЗаказам.Документ 				КАК Документ,
	|	МАКСИМУМ(ЕСТЬNULL(ЭтапыГрафика.Сдвиг, 0)) 	КАК Сдвиг
	|ПОМЕСТИТЬ ТаблицаСдвигов
	|ИЗ
	|	ГрафикиОплатПоЗаказам КАК ГрафикиОплатПоЗаказам
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГрафикиОплаты.Этапы КАК ЭтапыГрафика
	|		ПО ГрафикиОплатПоЗаказам.График = ЭтапыГрафика.Ссылка
	|			И ЭтапыГрафика.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыКлиентом.КредитПослеОтгрузки)
	|
	|СГРУППИРОВАТЬ ПО
	|	ГрафикиОплатПоЗаказам.Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГрафикиОплатПоЗаказам.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Выполняем результирующий расчет дат отгрузки.
	|////////////////////////////////////////////////////////////////////////////////
	|// 22.
	|ВЫБРАТЬ
	| 	ВложенныйЗапрос.Документ											 									 					  КАК Документ,
	| 	НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&ТекущаяДата, ДЕНЬ, ВЫРАЗИТЬ(СУММА(ВложенныйЗапрос.ДниОтстрочки) + 0.5 КАК ЧИСЛО(15)) - 1), ДЕНЬ) КАК ДатаПлатежа
	|ИЗ
	|	(
	|		ВЫБРАТЬ
	|			ТаблицаСдвигов.Документ КАК Документ,
	|			РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммыПоМестам.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) * СуммыПоМестам.Сумма / СтоимостьЗаказов.Сумма КАК ДниОтстрочки,
	|			ВЫБОР	
	|				КОГДА РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммыПоМестам.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) < 0 
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ЗапретПересчета // Если от даты первой отгрузки пройшло времени больше чем размер отстрочки - запрещать пересчет даты
	|		ИЗ
	|			ТаблицаСдвигов КАК ТаблицаСдвигов
	|	
	|				ЛЕВОЕ СОЕДИНЕНИЕ СуммыПоМестам КАК СуммыПоМестам
	|				ПО ТаблицаСдвигов.Документ = СуммыПоМестам.Документ
	|		
	|				ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВсехДокументовЗаказов КАК СтоимостьЗаказов
	|				ПО ТаблицаСдвигов.Документ = СтоимостьЗаказов.Документ
	|				
	|		ГДЕ
	|			НЕ СуммыПоМестам.Дата ЕСТЬ NULL
	|			И ЕСТЬNULL(СтоимостьЗаказов.Сумма, 0) <> 0
	|				
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаСдвигов.Документ КАК Документ,
	|			РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммаПоОрдерам.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) * СуммаПоОрдерам.Сумма / СтоимостьЗаказов.Сумма,
	|			ВЫБОР	
	|				КОГДА РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммаПоОрдерам.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) < 0 
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ЗапретПересчета // Если от даты первой отгрузки пройшло времени больше чем размер отстрочки - запрещать пересчет даты
	|		ИЗ
	|			ТаблицаСдвигов КАК ТаблицаСдвигов
	|	
	|				ЛЕВОЕ СОЕДИНЕНИЕ СуммаПоОрдерам КАК СуммаПоОрдерам
	|				ПО ТаблицаСдвигов.Документ = СуммаПоОрдерам.Распоряжение
	|		
	|				ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВсехДокументовЗаказов КАК СтоимостьЗаказов
	|				ПО ТаблицаСдвигов.Документ = СтоимостьЗаказов.Документ
	|		
	|		ГДЕ
	|			НЕ СуммаПоОрдерам.Дата ЕСТЬ NULL
	|			И ЕСТЬNULL(СтоимостьЗаказов.Сумма, 0) <> 0
	|			
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			ТаблицаСдвигов.Документ КАК Документ,
	|			РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммыПоРеализациям.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) * СуммыПоРеализациям.Сумма / СтоимостьЗаказов.Сумма,
	|			ВЫБОР	
	|				КОГДА РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммыПоРеализациям.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) < 0 
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ЗапретПересчета // Если от даты первой отгрузки пройшло времени больше чем размер отстрочки - запрещать пересчет даты
	|		ИЗ
	|			ТаблицаСдвигов КАК ТаблицаСдвигов
	|	
	|				ЛЕВОЕ СОЕДИНЕНИЕ СуммыПоРеализациям КАК СуммыПоРеализациям
	|				ПО ТаблицаСдвигов.Документ = СуммыПоРеализациям.Документ
	|		
	|				ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВсехДокументовЗаказов КАК СтоимостьЗаказов
	|				ПО ТаблицаСдвигов.Документ = СтоимостьЗаказов.Документ
	|		
	|		ГДЕ
	|			НЕ СуммыПоРеализациям.Дата ЕСТЬ NULL
	|			И ЕСТЬNULL(СтоимостьЗаказов.Сумма, 0) <> 0
	|			
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ
	|			ТаблицаСдвигов.Документ КАК Документ,
	|			-РАЗНОСТЬДАТ(&ТекущаяДата, ДОБАВИТЬКДАТЕ(СуммыПоВозвратам.Дата, ДЕНЬ,ТаблицаСдвигов.Сдвиг), ДЕНЬ) * СуммыПоВозвратам.Сумма / СтоимостьЗаказов.Сумма,
	|			0 // По возвратам - всегда пересчет
	|		ИЗ
	|			ТаблицаСдвигов КАК ТаблицаСдвигов
	|	
	|				ЛЕВОЕ СОЕДИНЕНИЕ СуммыПоВозвратам КАК СуммыПоВозвратам
	|				ПО ТаблицаСдвигов.Документ = СуммыПоВозвратам.Документ
	|		
	|				ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВсехДокументовЗаказов КАК СтоимостьЗаказов
	|				ПО ТаблицаСдвигов.Документ = СтоимостьЗаказов.Документ
	|		
	|		ГДЕ
	|			НЕ СуммыПоВозвратам.Дата ЕСТЬ NULL
	|			И ЕСТЬNULL(СтоимостьЗаказов.Сумма, 0) <> 0
	|			
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ
	|			ТаблицаСдвигов.Документ КАК Документ,
	|			СУММА(ТаблицаСдвигов.Сдвиг * ДоляНеОтгруженныхЗаказов.Сумма / СтоимостьЗаказов.Сумма),
	|			0 // по неотгруженным товарам всегда пересчет
	|		ИЗ
	|			ТаблицаСдвигов КАК ТаблицаСдвигов
	|	
	|				ЛЕВОЕ СОЕДИНЕНИЕ ДоляНеОтгруженныхЗаказов КАК ДоляНеОтгруженныхЗаказов
	|				ПО ТаблицаСдвигов.Документ = ДоляНеОтгруженныхЗаказов.Документ
	|		
	|				ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьВсехДокументовЗаказов КАК СтоимостьЗаказов
	|				ПО ТаблицаСдвигов.Документ = СтоимостьЗаказов.Документ
	|		
	|		ГДЕ
	|			НЕ ДоляНеОтгруженныхЗаказов.Документ ЕСТЬ NULL
	|			И ЕСТЬNULL(СтоимостьЗаказов.Сумма, 0) <> 0
	|	
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаСдвигов.Документ
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Документ
	|
	|	ИМЕЮЩИЕ СУММА(ВложенныйЗапрос.ЗапретПересчета) = 0 // Проверка не прошло ли от первой отгрузки времени больше нежели отстрочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Полностью отгруженные заказы нужно исключить из рестра кеширования.
	|////////////////////////////////////////////////////////////////////////////////
	|// 23.
	|ВЫБРАТЬ
	|	Документ КАК Документ
	|ИЗ
	|	ТаблицаЗаказов
	|ГДЕ
	|	Документ НЕ В (ВЫБРАТЬ Документ ИЗ ДоляНеОтгруженныхЗаказов)
	|;
	|
	|УНИЧТОЖИТЬ ГрафикиОплатПоЗаказам;
	|УНИЧТОЖИТЬ СуммыПоРеализациям;
	|УНИЧТОЖИТЬ РеализацииИзБезордерныхСкладов;
	|УНИЧТОЖИТЬ СуммыПоВозвратам;
	|УНИЧТОЖИТЬ НоменклатураВозвратов;
	|УНИЧТОЖИТЬ СуммаПоОрдерам;
	|УНИЧТОЖИТЬ НоменклатураОрдеров;
	|УНИЧТОЖИТЬ ОрдераНеВМестах;
	|УНИЧТОЖИТЬ СуммыПоМестам;
	|УНИЧТОЖИТЬ НоменклатураМест;
	|УНИЧТОЖИТЬ МестаПоДокументам;
	|УНИЧТОЖИТЬ МестаПоРаспоряжениям;
	|УНИЧТОЖИТЬ МестаДоставленыеПартнеру;
	|УНИЧТОЖИТЬ ТаблицаМест;
	|УНИЧТОЖИТЬ ТаблицаОрдеров;
	|УНИЧТОЖИТЬ СтоимостьВсехДокументовЗаказов;
	|УНИЧТОЖИТЬ ДоляНеОтгруженныхЗаказов;
	|УНИЧТОЖИТЬ РеализацииПоЗаказам;	
	|УНИЧТОЖИТЬ ВсяНоменклатураЗаказов;
	|УНИЧТОЖИТЬ ТаблицаЗаказовПредварительная;
	|УНИЧТОЖИТЬ ТаблицаЗаказов;";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаКешПересчета()
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Кешироватся должны документы партнеров, которые входять
	|// в состав сегметна <Партнеры, покупатели оптового отдела>
	|// 0.
	|ВЫБРАТЬ
	|	Ссылка КАК Партнер
	|ПОМЕСТИТЬ ТаблицаПартнеры
	|ИЗ
	|	Справочник.Партнеры
	|ГДЕ
	|	ГруппаДоступа = &ГруппаДоступа
	|	И ПометкаУдаления = ЛОЖЬ
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Партнер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Блок получения документов по местах:
	|// - которые лежат на складе
	|// - которые едут в машыне
	|// 
	|////////////////////////////////////////////////////////////////////////////////
	|// 1.
	|ВЫБРАТЬ
	|	Место КАК Место
	|ПОМЕСТИТЬ ПогруженныеМеста
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест.СрезПоследних
	|ГДЕ
	|	СтатусОтгрузки = &СтатусМестоПогружено
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 2.
	|ВЫБРАТЬ
	|	Ссылка КАК ДокументПоездка
	|ПОМЕСТИТЬ ДокументыПоездки
	|ИЗ
	|	Документ.ПоездкаЗаМаршрутом 
	|ГДЕ
	|	СтатусПоездки = ЗНАЧЕНИЕ(Перечисление.КТС_СтатусыПоездки.ВПроцессе)
	|	И Проведен 	  = ИСТИНА
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоездка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 3.
	|ВЫБРАТЬ
	|	РегистрПоездка.МестоДоставки КАК Место
	|ПОМЕСТИТЬ ПогруженныеМестаПоДокументу
	|ИЗ
	|	РегистрСведений.ПоездкаЗаМаршрутом КАК РегистрПоездка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыПоездки КАК ДокументыПоездки
	|		ПО РегистрПоездка.ДокументПоездки = ДокументыПоездки.ДокументПоездка
	|ГДЕ
	|	РегистрПоездка.ЭтоЗадача = ЛОЖЬ
	|	И РегистрПоездка.ИсключеноИзДоставки = ЛОЖЬ
	|	И РегистрПоездка.Архивное = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 4.
	|ВЫБРАТЬ
	|	ПогруженныеМеста.Место КАК Место
	|ПОМЕСТИТЬ ТаблицаПогруженныхМест
	|ИЗ
	|	ПогруженныеМеста КАК ПогруженныеМеста
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПогруженныеМестаПоДокументу КАК ПогруженныеМестаПоДокументу
	|		ПО ПогруженныеМеста.Место = ПогруженныеМестаПоДокументу.Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 5.
	|ВЫБРАТЬ
	|	Место КАК Место
	|ПОМЕСТИТЬ ТаблицаУкомплектованныхМест
	|ИЗ
	|	РегистрСведений.ОтгрузкаМест.СрезПоследних(,)
	|ГДЕ
	|	СтатусОтгрузки = &СтатусМестоУкомплектовано
	|	И Место.Архивный = ЛОЖЬ
	|	И ВариантМаршрута.НеАктивен = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 6.
	|ВЫБРАТЬ
	|	Место КАК Место
	|ПОМЕСТИТЬ ТаблицаМест
	|ИЗ
	|	ТаблицаПогруженныхМест
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Место
	|ИЗ
	|	ТаблицаУкомплектованныхМест
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Место
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 7.
	|УНИЧТОЖИТЬ ПогруженныеМеста;
	|// 8.
	|УНИЧТОЖИТЬ ДокументыПоездки;
	|// 9.
	|УНИЧТОЖИТЬ ПогруженныеМестаПоДокументу;
	|// 10.
	|УНИЧТОЖИТЬ ТаблицаПогруженныхМест;
	|// 11.
	|УНИЧТОЖИТЬ ТаблицаУкомплектованныхМест;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 12.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.РасходныйОрдерНаТовары
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары).Распоряжение
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.КТС_ОтгрузкаТоваров
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.КТС_ОтгрузкаТоваров).Распоряжение
	|	КОНЕЦ КАК Документ.РеализацияТоваровУслуг) КАК Документ
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	ТаблицаМест КАК ТаблицаМест
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестаПоДокументам КАК МестаПоДокументам
	|		ПО ТаблицаМест.Место = МестаПоДокументам.Место
	|ГДЕ
	|	ВЫБОР
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.РасходныйОрдерНаТовары
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары).Распоряжение ССЫЛКА Документ.РеализацияТоваровУслуг
	|		КОГДА МестаПоДокументам.Документ ССЫЛКА Документ.КТС_ОтгрузкаТоваров
	|			ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.КТС_ОтгрузкаТоваров).Распоряжение ССЫЛКА Документ.РеализацияТоваровУслуг
	|	КОНЕЦ
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|// Получаем заказы которые едут в местах
	|////////////////////////////////////////////////////////////////////////////////
	|// 13.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ // Сюда добавить закази которые не в поездках но которые нужно пересчитать.
	|	ВЫРАЗИТЬ(ТоварыРеализаций.ЗаказКлиента КАК Документ.ЗаказКлиента) КАК Документ
	|ПОМЕСТИТЬ ТаблицаЗаказов
	|ИЗ
	|	(
	|		ВЫБРАТЬ
	|			ТаблицаДокументов.Документ КАК Документ
	|		ИЗ
	|			ТаблицаДокументов КАК ТаблицаДокументов
	|				
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПартнеры КАК ТаблицаПартнеры
	|				ПО ТаблицаДокументов.Документ.Партнер = ТаблицаПартнеры.Партнер
	|		ГДЕ
	|			Документ.РеализацияПоЗаказам = ИСТИНА
	|			
	|		ОБЪЕДИНИТЬ
	|		
	|		// Получаем заказы на основании которых были созданы РТиУ но не отгружены.
	|		ВЫБРАТЬ
	|			ВЫРАЗИТЬ(РегистрОтгрузки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг) КАК Документ
	|		ИЗ
	|			РегистрНакопления.ТоварыКОтгрузке.Остатки(, ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг) КАК РегистрОтгрузки
	|				
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПартнеры КАК ТаблицаПартнеры
	|				ПО ВЫРАЗИТЬ(РегистрОтгрузки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Партнер = ТаблицаПартнеры.Партнер
	|	
	|ГДЕ
	|	ВЫРАЗИТЬ(РегистрОтгрузки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).РеализацияПоЗаказам = ИСТИНА
	|	И КОтгрузкеОстаток > 0			
	|	) КАК ВложенныйЗапрос	
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК ТоварыРеализаций
	|		ПО ВложенныйЗапрос.Документ = ТоварыРеализаций.Ссылка
	|;
	|
	|// Получаем список реализаций которые едут
	|////////////////////////////////////////////////////////////////////////////////
	|// 14.
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Документ КАК Документ
	|ПОМЕСТИТЬ РеализацииВПоездке
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПартнеры КАК ТаблицаПартнеры
	|		ПО ТаблицаДокументов.Документ.Партнер = ТаблицаПартнеры.Партнер
	|	
	|ГДЕ
	|	ТаблицаДокументов.Документ.РеализацияПоЗаказам = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 15.
	|УНИЧТОЖИТЬ ТаблицаДокументов;
	|
	|// В список документов дожны попадать частично 
	|// отгруженные РТиУ из ордерного склада
	|////////////////////////////////////////////////////////////////////////////////
	|// 16.
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(РегистрОтгрузки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг) КАК Документ
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|							,
	|							ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг) КАК РегистрОтгрузки
	|							
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПартнеры КАК ТаблицаПартнеры
	|		ПО ВЫРАЗИТЬ(РегистрОтгрузки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).Партнер = ТаблицаПартнеры.Партнер
	|ГДЕ
	|	РегистрОтгрузки.КОтгрузкеОстаток > 0
	|	И ВЫРАЗИТЬ(РегистрОтгрузки.ДокументОтгрузки КАК Документ.РеализацияТоваровУслуг).РеализацияПоЗаказам = ЛОЖЬ
	|
	|// Должны попадать реализации которые едут партнеру
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документ КАК Документ
	|ИЗ
	|	РеализацииВПоездке
	|	
	|// Должны попадать заказы клиенту, которые едут / или укомплектованы
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документ КАК Документ
	|ИЗ
	|	ТаблицаЗаказов
	|	
	|// Должны попадать заказы, которые не полностью отгружены
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(РегистрЗаказы.ЗаказКлиента КАК Документ.ЗаказКлиента) КАК ЗаказКлиента
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Остатки(,) КАК РегистрЗаказы
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПартнеры КАК ТаблицаПартнеры
	|		ПО ВЫРАЗИТЬ(РегистрЗаказы.ЗаказКлиента КАК Документ.ЗаказКлиента).Партнер   = ТаблицаПартнеры.Партнер
	|			И ВЫРАЗИТЬ(РегистрЗаказы.ЗаказКлиента КАК Документ.ЗаказКлиента).Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// 17.
	|УНИЧТОЖИТЬ ТаблицаПартнеры;
	|// 18.
	|УНИЧТОЖИТЬ РеализацииВПоездке;
	|// 19.
	|УНИЧТОЖИТЬ ТаблицаЗаказов;";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти


// Процедура выполняет поиск документов в которых необходимо 
// пересчитать или дату платежа (если это реализация товаров 
// и услуг) или обновить этапы графика оплаты.
// Если у нас в этапах графика оплаты первый этап не "кредит после
// отгрузки" тогда такой документ игнорируеться.
//
Процедура ОбновитьКешПересчета()
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= ТекстЗапросаКешПересчета();
	
	Запрос.УстановитьПараметр("ГруппаДоступа", ктс_ПредопределенныеЗначенияПовтИсп.ГруппаДоступаПартнерОптовогоОтдела());
	Запрос.УстановитьПараметр("СтатусМестоПогружено", Перечисления.СтатусыОтгрузкиМест.ПогруженоВМашину);
	Запрос.УстановитьПараметр("СтатусМестоУкомплектовано", Перечисления.СтатусыОтгрузкиМест.КомплектацияЗавершена);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Если РезультатыЗапроса[16].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатыЗапроса[16].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.Пеня_ДокументыДляПересчета.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(Выборка.Документ);
		
		Запись 				= НаборЗаписей.Добавить();
		Запись.Документ 	= Выборка.Документ;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура актуализирует даты оплаты в реализациях товаров по графику,
// а также очищает регистр по актуализции при необходимости.
//
Процедура АктуализироватьОплатыРеализаций()
	
	Запрос 		 = Новый Запрос;
	Запрос.Текст = ТекстЗапросаАктуализацииРеализаций();
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ВалютаУпрУчета", Константы.ВалютаУправленческогоУчета.Получить());
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаДаты		  = РезультатыЗапроса[18].Выбрать();
	ВыборкаДокументы  = РезультатыЗапроса[19].Выбрать();
	
	// TODO удалить при деплое, для дебага
	ТелоПисьма = "";
	
	Пока ВыборкаДаты.Следующий() Цикл
		
		ДокументОбъект = ВыборкаДаты.Документ.ПолучитьОбъект();
		
		Если ДокументОбъект.ДатаПлатежа = ВыборкаДаты.ДатаПлатежа Тогда
			Продолжить;
		КонецЕсли;
		
		ДокументОбъект.ДатаПлатежа = ВыборкаДаты.ДатаПлатежа;
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(ВыборкаДаты.Документ);
			ТемаПисьма  = НСтр("ru='[ПЕНЯ] Не удалось изменить дату платежа в документе.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ТекстПисьма = НСтр("ru='Документ: %1'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ТекстПисьма = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПисьма, НавигационнаяСсылка);
			ОповеститьОтделТехническойПоддержки(ТемаПисьма, ТекстПисьма);
			ЗафиксироватьСобытиеВЖурналеРегистрации(ТемаПисьма, ВыборкаДаты.Документ, УровеньЖурналаРегистрации.Ошибка);
		КонецПопытки;
		
		// TODO удалить при деплое, для дебага
		ТелоПисьма = ТелоПисьма + ВыборкаДаты.Документ + " " + Строка(ПолучитьНавигационнуюСсылку(ВыборкаДаты.Документ)) + Символы.ПС;
		
	КонецЦикла;
	
	// TODO удалить при деплое, для дебага
	БиблиотекаОбработок = git_ПереопределениеОбработчиковСервер.ПолучитьВнешнийОбъектПоИмени("Библиотека внешних обработок");
	Кому = Новый Массив;   
	Кому.Добавить(Новый Структура("Адрес, Представление", "akomar@ktc-ua.com",	""));
	ПараметрыПисьма = БиблиотекаОбработок.СформироватьПараметрыПисьма("Измененные документы", ТелоПисьма, Кому, , , , , , ТипТекстаПочтовогоСообщения.HTML);
	БиблиотекаОбработок.ОтправитьСообщениеПоSMTP(Справочники.УчетныеЗаписиЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор("5a8d021b-4548-4020-8cab-9ae6f06c8bf7")), ПараметрыПисьма);
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.Пеня_ДокументыДляПересчета.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(ВыборкаДокументы.Документ);
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура актуализирует даты оплаты в заказх клиентов по графику,
// а также очищает регистр по актуализции при необходимости.
//
Процедура АктуализироватьОплатыЗаказовКлиентов()
	
	Запрос 		 = Новый Запрос;
	Запрос.Текст = ТекстЗапросаАктуализацииЗаказов();
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаДаты		  = РезультатыЗапроса[22].Выбрать();
	ВыборкаДокументы  = РезультатыЗапроса[23].Выбрать();
	
	// TODO удалить при деплое, для дебага
	ТелоПисьма = "";
	
	Пока ВыборкаДаты.Следующий() Цикл
		
		ДокументОбъект = ВыборкаДаты.Документ.ПолучитьОбъект();
		
		Этапы = ДокументОбъект.ЭтапыГрафикаОплаты;
		
		Если Этапы.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Этапы[0].ДатаПлатежа = ВыборкаДаты.ДатаПлатежа Тогда
			Продолжить;
		КонецЕсли;
		
		Этапы[0].ДатаПлатежа = ВыборкаДаты.ДатаПлатежа;
		
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(ВыборкаДаты.Документ);
			ТемаПисьма  = НСтр("ru='[ПЕНЯ] Не удалось изменить дату платежа в документе.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ТекстПисьма = НСтр("ru='Документ: %1'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
			ТекстПисьма = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПисьма, НавигационнаяСсылка);
			ОповеститьОтделТехническойПоддержки(ТемаПисьма, ТекстПисьма);
			ЗафиксироватьСобытиеВЖурналеРегистрации(ТемаПисьма, ВыборкаДаты.Документ, УровеньЖурналаРегистрации.Ошибка);
		КонецПопытки;
		
		// TODO удалить при деплое, для дебага
		ТелоПисьма = ТелоПисьма + ВыборкаДаты.Документ + " " + Строка(ПолучитьНавигационнуюСсылку(ВыборкаДаты.Документ)) + Символы.ПС;
		
	КонецЦикла;
	
	// TODO удалить при деплое, для дебага
	БиблиотекаОбработок = git_ПереопределениеОбработчиковСервер.ПолучитьВнешнийОбъектПоИмени("Библиотека внешних обработок");
	Кому = Новый Массив;   
	Кому.Добавить(Новый Структура("Адрес, Представление", "akomar@ktc-ua.com",	""));
	ПараметрыПисьма = БиблиотекаОбработок.СформироватьПараметрыПисьма("Измененные документы", ТелоПисьма, Кому, , , , , , ТипТекстаПочтовогоСообщения.HTML);
	БиблиотекаОбработок.ОтправитьСообщениеПоSMTP(Справочники.УчетныеЗаписиЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор("5a8d021b-4548-4020-8cab-9ae6f06c8bf7")), ПараметрыПисьма);
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.Пеня_ДокументыДляПересчета.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(ВыборкаДокументы.Документ);
		НаборЗаписей.Записать();
		
	КонецЦикла;

	
КонецПроцедуры





// Отправляет сообщение на 777 о проблеме
//
// Параметры:
// ТемаПисьма   	- Строка 		- Тема письма в техническую поддрежку.
// ТекстПисьма  	- Строка 		- Тело письма в техническую поддрежку.
//
Процедура ОповеститьОтделТехническойПоддержки(ТемаПисьма, ТекстПисьма)
	
	БиблиотекаОбработок = git_ПереопределениеОбработчиковСервер.ПолучитьВнешнийОбъектПоИмени("Библиотека внешних обработок");
	Кому = Новый Массив;   
	Кому.Добавить(Новый Структура("Адрес, Представление", "777@ktc-ua.com",	"Отдел технической суперподдержки"));
	ПараметрыПисьма = БиблиотекаОбработок.СформироватьПараметрыПисьма(ТемаПисьма, ТекстПисьма, Кому, , , , , , ТипТекстаПочтовогоСообщения.HTML);
	БиблиотекаОбработок.ОтправитьСообщениеПоSMTP(Справочники.УчетныеЗаписиЭлектроннойПочты.ПолучитьСсылку(Новый УникальныйИдентификатор("5a8d021b-4548-4020-8cab-9ae6f06c8bf7")), ПараметрыПисьма);
	
КонецПроцедуры

// Запись сообщения в журнал регистрации
// 
// Параметры:
// ОписаниеОшибки 			 - Строка 						- Описание ошибки, которая возникла.
// Ссылка					 - Произвольный 				- Любая ссылка на объект информационной базы.
// УровеньЖурналаРегистрации - УровеньЖурналаРегистрации    - Уровень журнала регистрации.
//
Процедура ЗафиксироватьСобытиеВЖурналеРегистрации(ОписаниеОшибки, Ссылка, УровеньЖурналаРегистрации)

	ЗаписьЖурналаРегистрации(НСтр("ru = 'Актуализация даты расчета пени.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации, 
		,
		Ссылка,
		ОписаниеОшибки);	
		
	КонецПроцедуры
	
Процедура ОповеститьВSlack(СообщениеSlack)
    
    МассивПрикреплений = Новый Массив;
    СтруктураПрикреплений = git_Slack.ПолучитьСтруктуруПрикреплений();
    СтруктураПрикреплений.Вставить("fallback",  "Уведомление");
    СтруктураПрикреплений.Вставить("text",      "Дата: " + ТекущаяДата());
    СтруктураПрикреплений.Вставить("pretext",   СообщениеSlack);
    СтруктураПрикреплений.Вставить("color",     "#3399FF");
    МассивПрикреплений.Добавить(СтруктураПрикреплений);

    СтруктураДанных = git_Slack.ПолучитьПустуюСтруктуруДанных();
    СтруктураДанных.Вставить("username",    "Base (yt11)");
    СтруктураДанных.Вставить("icon_emoji",  ":jack_o_lantern:");
    СтруктураДанных.Вставить("channel",     "#test_channel");
    СтруктураДанных.Вставить("attachments", МассивПрикреплений);
    git_Slack.ОтправитьДанные("ktchat.slack.com", "x2VEjiOJKl2UnSA5t2DinjEt", СтруктураДанных);
    
КонецПроцедуры // ОповеститьВSlack()


#КонецОбласти


#Область СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "3.3.14";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Регл. актуализация даты расчета пени [" + Версия + "]");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Регл. актуализация даты расчета пени [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "Регл. актуализация даты расчета пени [" + Версия + "]", "ВыполнитьАктуализацию();", "ВызовСерверногоМетода");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(Индентификатор) Экспорт
	Выполнить(Индентификатор);	
КонецПроцедуры

#КонецОбласти 