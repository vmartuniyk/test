
#Область ПрограммныйИнтерфейс

Процедура ВыполнитьРассылку() Экспорт
	
	Запрос 					= Новый Запрос;
	Запрос.Текст 			= ПолучитьТекстЗапросаРассылкиSMS();
	УстановитьПараметрыЗапроса(Запрос);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаДокументов = РезультатЗапроса[11].Выгрузить();
	Для Каждого Элемент Из ТаблицаДокументов Цикл 
		ДокументОбъект = Элемент.ДокументПоездки.ПолучитьОбъект();
		ДокументОбъект.СМСОтправленная = Истина;
		Попытка
			ДокументОбъект.Записать();
		Исключение
			Возврат;
		КонецПопытки;
	КонецЦикла;
	
	ТаблицаРезультат = РезультатЗапроса[10].Выгрузить();
	Для Каждого Строка Из ТаблицаРезультат Цикл
		
		Если Строка.СуммаUSD = 0 И Строка.СуммаUAH = 0 Тогда
			Продолжить;	
		КонецЕсли;
		
		НомерТелефона = ОтправкаСМСПартнеру.ОбработатьНомерТелефона(ВыполнитьПредварительнуюОбработкуНомераТелефона(Строка.Телефон));
		Если НомерТелефона = Неопределено Тогда
			НомерТелефона = ОтправкаСМСПартнеру.ОбработатьНомерТелефона(ВыполнитьПредварительнуюОбработкуНомераТелефона(Строка.МобТелефон));
		КонецЕсли;
		
		Если НомерТелефона = Неопределено Тогда 
			НомерТелефона = ОтправкаСМСПартнеру.ОбработатьНомерТелефона(ВыполнитьПредварительнуюОбработкуНомераТелефона(Строка.МобТелефонДоп));
		КонецЕсли;
		
		Если НомерТелефона = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстСообщения = НСтр("ru = 'B2B доставка, %1 місць, прохання підготувати %2 у.о., %3 грн'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, 
																				Формат(Строка.КвоМест, "ЧЦ=15"), 
																				Формат(Строка.СуммаUSD, "ЧДЦ=2; ЧРД=."), 
																				Формат(Строка.СуммаUAH, "ЧДЦ=2; ЧРД=."));
		
		ШаблонСообщенияSMS = git_Templates.ПолучитьШаблонСообщениеSMS();
		ШаблонСообщенияSMS.Автор = ПараметрыСеанса.ТекущийПользователь;
		ШаблонСообщенияSMS.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		ШаблонСообщенияSMS.Тема = НСтр("ru = 'Отправка SMS партнерам по отгрузкам'");
		ШаблонСообщенияSMS.Комментарий = НСтр("ru = 'Отправка SMS партнерам по отгрузкам'");
		ШаблонСообщенияSMS.ТекстСообщения = ТекстСообщения;
		
		НоваяСтрока 						= ШаблонСообщенияSMS.Адресаты.Добавить();
		НоваяСтрока.Контакт 				= Строка.Партнер;
		НоваяСтрока.КакСвязаться 			= "+38" + НомерТелефона;
		НоваяСтрока.НомерДляОтправки 		= НомерТелефона;
		НоваяСтрока.ПредставлениеКонтакта 	= Строка(Строка.Партнер);
		НоваяСтрока.СостояниеСообщения 		= Перечисления.СостоянияСообщенияSMS.Исходящее;

		СтруктураОшибок = Новый Структура;
		ДокументОбъект = git_Objcon.СоздатьДокумент("СообщениеSMS", ШаблонСообщенияSMS, СтруктураОшибок); 
		
		Если СтруктураОшибок.Количество() = 0 И ДокументОбъект <> Неопределено Тогда
			
			Попытка
				ДокументОбъект.Записать();	
			Исключение
			  	Продолжить;
			КонецПопытки;
		Иначе
			git_Objcon.ЗафиксироватьОшибкиВЖР("Ошибка при отправке SMS", СтруктураОшибок, Истина);
			Продолжить;
		КонецЕсли;
		
	КонецЦикла;
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьПараметрыЗапроса(Запрос)

	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ПустаяДата", Дата(1,1,1));
	Запрос.УстановитьПараметр("Организация", Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор("0fba8a92-4010-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("8d0c642a-1f3a-11e2-9d4d-001e673c80fc")));
	Запрос.УстановитьПараметр("ТипКонтактнойИнформацииМобТелефон", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("ВидКонтактнойИнформацииМобТелефон", Справочники.ВидыКонтактнойИнформации.ПолучитьСсылку(Новый УникальныйИдентификатор("7da99962-488d-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("ТипКонтактнойИнформацииМобТелефонДоп", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("ВидКонтактнойИнформацииМобТелефонДоп", Справочники.ВидыКонтактнойИнформации.ПолучитьСсылку(Новый УникальныйИдентификатор("a8ec65fe-c74a-11e1-9d4d-001e673c80fc")));
    Запрос.УстановитьПараметр("СкладПартнер", Справочники.КТС_ГеографическиеРасположенияПартнеров.ПолучитьСсылку(Новый УникальныйИдентификатор("2081c4ab-2a5d-11e3-bb25-001e673c80fc")));
	Запрос.УстановитьПараметр("ВалютаУпрУчета", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
КонецПроцедуры // УстановитьПараметрыЗапроса()


Функция ПолучитьТекстЗапросаРассылкиSMS()

	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////
		// 0.
		|ВЫБРАТЬ
	   	|	ПоездкаЗаМаршрутом.Ссылка КАК ДокументПоездки
	   	|ПОМЕСТИТЬ КешПоездокЗаДень
	   	|ИЗ
	   	|	Документ.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом
	   	|ГДЕ
	   	|	ПоездкаЗаМаршрутом.Дата >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	   	|И 	ПоездкаЗаМаршрутом.Дата <= КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	   	|И 	ПоездкаЗаМаршрутом.Проведен 		= Истина
	   	|И 	ПоездкаЗаМаршрутом.СтатусПоездки 	= ЗНАЧЕНИЕ(Перечисление.КТС_СтатусыПоездки.ВПроцессе)
	   	|И 	ПоездкаЗаМаршрутом.ВидПоездки 		= ЗНАЧЕНИЕ(Перечисление.КТС_ВидыПоездки.ОсновнаяПоездка)
	   	|И 	ПоездкаЗаМаршрутом.СМСОтправленная 	= Ложь
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПоездки
	   	|;
		////////////////////////////////////////////////////////////////////////////////
		// 1.
	   	|ВЫБРАТЬ
	   	|	КТС_ФиксацияПрохожденияМаршрута.ДокументПоездки КАК ДокументПоездки
	   	|ПОМЕСТИТЬ КешПоездок
	   	|ИЗ
		|	КешПоездокЗаДень КАК КешПоездокЗаДень
		|
	   	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КТС_ФиксацияПрохожденияМаршрута КАК КТС_ФиксацияПрохожденияМаршрута
		|ПО	КТС_ФиксацияПрохожденияМаршрута.ДокументПоездки = КешПоездокЗаДень.ДокументПоездки	
		|И	КТС_ФиксацияПрохожденияМаршрута.Статус 			= ЗНАЧЕНИЕ(Перечисление.КТС_СтатусыПрохожденияМаршрута.ОтгрузкаЗавершена)
		|И 	КТС_ФиксацияПрохожденияМаршрута.СкладПартнер 	= &СкладПартнер
		|И 	РАЗНОСТЬДАТ(КТС_ФиксацияПрохожденияМаршрута.Период, &ТекущаяДата, МИНУТА) >= 20
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПоездки	
	   	|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешПоездокЗаДень;
		////////////////////////////////////////////////////////////////////////////////
		// 3.
	   	|ВЫБРАТЬ
	   	|	ПоездкаЗаМаршрутом.ДокументПоездки КАК ДокументПоездки,
	   	|	ВЫРАЗИТЬ(ПоездкаЗаМаршрутом.Owner КАК Справочник.Партнеры) КАК Партнер,
		|	КОЛИЧЕСТВО(ПоездкаЗаМаршрутом.МестоДоставки) КАК КвоМест
	   	|ПОМЕСТИТЬ ОбъектыДоставки
	   	|ИЗ
		|	КешПоездок КАК КешПоездок	
		|
	   	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом
		|ПО	ПоездкаЗаМаршрутом.ДокументПоездки 		= КешПоездок.ДокументПоездки
		|И	ПоездкаЗаМаршрутом.ИсключеноИзДоставки 	= Ложь
		|И  ПоездкаЗаМаршрутом.ПогруженоВМашину    <> &ПустаяДата
		|И	ПоездкаЗаМаршрутом.Owner Ссылка Справочник.Партнеры
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоездкаЗаМаршрутом.ДокументПоездки,
		|	ВЫРАЗИТЬ(ПоездкаЗаМаршрутом.Owner КАК Справочник.Партнеры)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партнер	
	   	|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешПоездок;
		////////////////////////////////////////////////////////////////////////////////
		// 5.
	   	|ВЫБРАТЬ
	   	|	КонтактнаяИнформация.Ссылка КАК Партнер,
	   	|	КонтактнаяИнформация.Представление КАК email
	   	|ПОМЕСТИТЬ КешEmailПартнеров
	   	|ИЗ
	   	|	Справочник.Партнеры.КонтактнаяИнформация КАК КонтактнаяИнформация
	   	|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыДоставки КАК ОбъектыДоставки
	   	|ПО КонтактнаяИнформация.Ссылка = ОбъектыДоставки.Партнер
	   	|И 	КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	   	|И 	КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailПартнера)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партнер
	   	|;
		////////////////////////////////////////////////////////////////////////////////
		// 6.
	   	|ВЫБРАТЬ
	   	|	КонтактнаяИнформация.Ссылка КАК Партнер,
	   	|	КонтактнаяИнформация.Представление КАК Телефон
	   	|ПОМЕСТИТЬ КешТелефоныПартнеров
	   	|ИЗ
	   	|	Справочник.Партнеры.КонтактнаяИнформация КАК КонтактнаяИнформация
	   	|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыДоставки КАК ОбъектыДоставки
	   	|ПО КонтактнаяИнформация.Ссылка = ОбъектыДоставки.Партнер
	   	|И  КонтактнаяИнформация.Тип 	= ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	   	|И  КонтактнаяИнформация.Вид 	= ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонПартнера)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партнер	
	   	|;
		////////////////////////////////////////////////////////////////////////////////
		// 7.
	   	|ВЫБРАТЬ
	   	|	КонтактнаяИнформация.Ссылка КАК Партнер,
	   	|	КонтактнаяИнформация.Представление КАК МобТелефон
	   	|ПОМЕСТИТЬ КешМобТелефоныПартнеров
	   	|ИЗ
	   	|	Справочник.Партнеры.КонтактнаяИнформация КАК КонтактнаяИнформация
	   	|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыДоставки КАК ОбъектыДоставки
	   	|ПО КонтактнаяИнформация.Ссылка = ОбъектыДоставки.Партнер
	   	|И 	КонтактнаяИнформация.Тип 	= ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	   	|И 	КонтактнаяИнформация.Вид 	= &ВидКонтактнойИнформацииМобТелефон
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партнер
	   	|;
		////////////////////////////////////////////////////////////////////////////////
		// 8.
	   	|ВЫБРАТЬ
	   	|	КонтактнаяИнформация.Ссылка КАК Партнер,
	   	|	КонтактнаяИнформация.Представление КАК МобТелефонДоп
	   	|ПОМЕСТИТЬ КешМобТелефоныПартнеровДоп
	   	|ИЗ
	   	|	Справочник.Партнеры.КонтактнаяИнформация КАК КонтактнаяИнформация
	   	|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыДоставки КАК ОбъектыДоставки
	   	|ПО КонтактнаяИнформация.Ссылка = ОбъектыДоставки.Партнер
	   	|И 	КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	   	|И 	КонтактнаяИнформация.Вид = &ВидКонтактнойИнформацииМобТелефонДоп
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партнер
	   	|;
		////////////////////////////////////////////////////////////////////////////////
		// 9.
	   	|ВЫБРАТЬ
	   	|	ДопРеквизиты.Ссылка КАК Партнер,
	   	|	ДопРеквизиты.Значение КАК ОтправлятьСМС
	   	|ПОМЕСТИТЬ КешФлагОтправкиСМС
	   	|ИЗ
	   	|	Справочник.Партнеры.ДополнительныеРеквизиты КАК ДопРеквизиты
	   	|		
	   	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОбъектыДоставки КАК ОбъектыДоставки
	   	|ПО ДопРеквизиты.Ссылка   = ОбъектыДоставки.Партнер
	   	|И 	ДопРеквизиты.Свойство = &Свойство
		|И  ДопРеквизиты.Значение = Истина
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Партнер
	   	|;
		////////////////////////////////////////////////////////////////////////////////
		// 10.
	   	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	   	|	ОбъектыДоставки.Партнер 								КАК Партнер,
	   	|	IsNull(КешEmailПартнеров.email, """") 					КАК email,
	   	|	IsNull(КешТелефоныПартнеров.Телефон, """") 				КАК Телефон,
	   	|	IsNull(КешМобТелефоныПартнеров.МобТелефон, """") 		КАК МобТелефон,
	   	|	IsNull(КешМобТелефоныПартнеровДоп.МобТелефонДоп, """") 	КАК МобТелефонДоп,
		|	СУММА(	ВЫБОР
		|				КОГДА ПоездкаЗаМаршрутомФинансы.Валюта = &ВалютаУпрУчета
		|				ТОГДА 	ВЫБОР
	   	|							КОГДА ЕСТЬNULL(ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером, NULL) = NULL
	   	|								ТОГДА 0
	   	|							КОГДА ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером = 1
	   	|								ТОГДА 0
	   	|							КОГДА ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером < 0
	   	|								ТОГДА 0
	   	|							КОГДА ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером = 0
	   	|								ТОГДА ПоездкаЗаМаршрутомФинансы.СуммаУчета
	   	|							ИНАЧЕ ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером
	   	|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		 ) КАК СуммаUSD,
		|	СУММА(	ВЫБОР
		|				КОГДА ПоездкаЗаМаршрутомФинансы.Валюта = &ВалютаРеглУчета
		|				ТОГДА 	ВЫБОР
	   	|							КОГДА ЕСТЬNULL(ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером, NULL) = NULL
	   	|								ТОГДА 0
	   	|							КОГДА ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером = 1
	   	|								ТОГДА 0
	   	|							КОГДА ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером < 0
	   	|								ТОГДА 0
	   	|							КОГДА ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером = 0
	   	|								ТОГДА ПоездкаЗаМаршрутомФинансы.СуммаУчета
	   	|							ИНАЧЕ ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером
	   	|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|		 ) КАК СуммаUAH,
	   	|	ОбъектыДоставки.ДокументПоездки КАК ДокументПоездки,
	   	|	ОбъектыДоставки.КвоМест КАК КвоМест
	   	|ИЗ
	   	|	ОбъектыДоставки КАК ОбъектыДоставки
	   	|
	   	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоездкаЗаМаршрутомФинансы КАК ПоездкаЗаМаршрутомФинансы
	   	|ПО ОбъектыДоставки.ДокументПоездки = ПоездкаЗаМаршрутомФинансы.ДокументПоездки
	   	|И 	ОбъектыДоставки.Партнер 		= ПоездкаЗаМаршрутомФинансы.Партнер
	   	|
	   	|ЛЕВОЕ СОЕДИНЕНИЕ КешEmailПартнеров КАК КешEmailПартнеров
	   	|ПО ОбъектыДоставки.Партнер = КешEmailПартнеров.Партнер
		|
	   	|ЛЕВОЕ СОЕДИНЕНИЕ КешТелефоныПартнеров КАК КешТелефоныПартнеров
	   	|ПО ОбъектыДоставки.Партнер = КешТелефоныПартнеров.Партнер
		|
	   	|ЛЕВОЕ СОЕДИНЕНИЕ КешМобТелефоныПартнеров КАК КешМобТелефоныПартнеров
	   	|ПО ОбъектыДоставки.Партнер = КешМобТелефоныПартнеров.Партнер
		|
	   	|ЛЕВОЕ СОЕДИНЕНИЕ КешМобТелефоныПартнеровДоп КАК КешМобТелефоныПартнеровДоп
	   	|ПО ОбъектыДоставки.Партнер = КешМобТелефоныПартнеровДоп.Партнер
		|
	   	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешФлагОтправкиСМС КАК ФлагОтправкиСМС
	   	|ПО ОбъектыДоставки.Партнер = ФлагОтправкиСМС.Партнер
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъектыДоставки.Партнер,		
		|   IsNull(КешEmailПартнеров.email, """"),
	   	|	IsNull(КешТелефоныПартнеров.Телефон, """"),
	   	|	IsNull(КешМобТелефоныПартнеров.МобТелефон, """"),
	   	|	IsNull(КешМобТелефоныПартнеровДоп.МобТелефонДоп, """"),
		|   ОбъектыДоставки.ДокументПоездки,
	   	|	ОбъектыДоставки.КвоМест
	   	|;
		////////////////////////////////////////////////////////////////////////////////
		// 11.
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОбъектыДоставки.ДокументПоездки
		|ИЗ
		|	ОбъектыДоставки КАК ОбъектыДоставки
		|		
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешФлагОтправкиСМС КАК ФлагОтправкиСМС
		|ПО ОбъектыДоставки.Партнер = ФлагОтправкиСМС.Партнер
		|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешEmailПартнеров;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешТелефоныПартнеров;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешМобТелефоныПартнеров;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешМобТелефоныПартнеровДоп;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОбъектыДоставки;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КешФлагОтправкиСМС;
		////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаРассылкиSMS()

Функция ВыполнитьПредварительнуюОбработкуНомераТелефона(Знач НомерТелефона)
	
	ОбработанныйНомер = СтрЗаменить(НомерТелефона, 	   "(", "");
	ОбработанныйНомер = СтрЗаменить(ОбработанныйНомер, ")", "");
	ОбработанныйНомер = СтрЗаменить(ОбработанныйНомер, "+", "");
	ОбработанныйНомер = СтрЗаменить(ОбработанныйНомер, " ", "");
	Возврат ОбработанныйНомер;	
	
КонецФункции // ВыполнитьПредварительнуюОбработкуНомераТелефона()

#КонецОбласти

#Область  СведенияОВнешнейОбработке

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "1.2.19";
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Регл. рассылка смс партнерам по отгрузкам [" + Версия + "]");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Регл. рассылка смс партнерам по отгрузкам [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "Регл. рассылка смс партнерам по отгрузкам [" + Версия + "]", "ВыполнитьРассылку();", "ВызовСерверногоМетода");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(Индентификатор) Экспорт
	Выполнить(Индентификатор);	
КонецПроцедуры

#КонецОбласти
