////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    ДокументСсылка = Параметры.СсылкаНаДокумент;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();

КонецПроцедуры


&НаКлиенте
Процедура ОтправитьПисьмо(Команда)
	
    // Получим список адресатов
	ИмяОбщейФормы = "ОбщаяФорма.АдреснаяКнига";
	Результат = ОткрытьФормуМодально(ИмяОбщейФормы);
	Если (ТипЗнч(Результат) <> Тип("Массив")) И (ТипЗнч(Результат) <> Тип("Соответствие")) Тогда
		Возврат;
	КонецЕсли;
		ЗаполнитьПодобранныхПолучателей(Результат);
		
	Если ЗначениеЗаполнено(Профиль) Тогда 
		ОтправитьПисьмоНаСервере(ТекстШаблонаhtml);
	Иначе 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не заповнен профиль отправителя";
		Сообщение.Поле	= "Профиль";
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПодобранныхПолучателей(Результат)

	Для Каждого Элемент Из Результат Цикл
		СписокАдресЭП.Добавить(Элемент.Адрес,Элемент.Представление);
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Функция ПолучателейБольшеОдного(Получатель)
	Если ТипЗнч(Получатель) = Тип("Массив") Или ТипЗнч(Получатель) = Тип("СписокЗначений") Тогда
		Возврат Получатель.Количество() > 1;
	Иначе
		Возврат ОбщегоНазначенияКлиентСервер.АдресаЭлектроннойПочтыИзСтроки(Получатель).Количество() > 1;
	КонецЕсли;
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Выводит на форму сформированный HTMLДокумент
&НаСервере
Процедура ПоказатьHTMLДокумент(Текст)
	
	ПолеHTML = Текст;

КонецПроцедуры

//Формирует HTMLДокумент
&НаСервере
Процедура СформироватьHTMLДокументНаСервере()
	
	ЭтотОбьект = РеквизитФормыВЗначение("Объект");
	ТаблицаТовары = ПолучитьДанныеРассылки(ДокументСсылка);
	ТекстБлокШапка = "
	|	<html>
	|	<head>
	|	<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
	|	<meta http-equiv=""X-UA-Compatible"" content=""IE=EmulateIE7"" />
	|	<style type=""text/css"">
	|	body{margin:0px;padding:8px;overflow:hidden;width:100%;height:100%;}p{line-height:1.15;margin:0px;}ol,ul{margin-top:0px;margin-bottom:0px;}img{border: none;}
	|	</style>
	|	</head>
	|	<body>
	|	Компанія  КТС, м. Рівне<br>  				
	|	пропонує Вам ознайомитись із пропозицією по наступним позиціям:<br>				
	|	<p> <br>
	|	<table border=""1"">
	|	<tr>
	|	<td >№</td><td>Номенклатура:</td><td>Ціна</td>
	|	</tr>
	|	";

	ТекстБлокТело = "";
	Для Каждого Елемент из ТаблицаТовары Цикл 
		ТекстБлокТело = ТекстБлокТело+"<tr>	<td>"+Елемент.НомерСтроки+"</td><td>"+Елемент.Номенклатура+"</td><td>"+Елемент.Цена+"</td></tr>";
	КонецЦикла;

	ТекстБлокТело = ТекстБлокТело+"
	|	</Table>
	|	</p><br>"; 
	
	Если ДокументСсылка.Склад.ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад Тогда 	
		ТекстБлокПодвал="
		|	<br><B>
		|	Виникли питання? Телефонуйте на наш колл-центр (0362) 46-02-46<br>					
		|	Детальний опис товару: www.ktc-ua.com<br>					
		|	Замовлення можна зробити у менеджера, або на порталі order-b2b.com<B><br>					
		|	</body>
		|	</html>";
	Иначе 
		Тема = "Для роздрібу - "+Тема;
		ТекстБлокПодвал="
		|	<br>
		|	</body>
		|	</html>";
	КонецЕсли;		
	ТекстШаблонаhtml = ТекстБлокШапка+ ТекстБлокТело+ТекстБлокПодвал;
	ПоказатьHTMLДокумент(ТекстШаблонаhtml);

КонецПроцедуры

//Возвращает данные из которых формируется таблица в HTMLДокументе
&НаСервере
Функция ПолучитьДанныеРассылки(ДокументСсылка)

	Гарантия = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("a3e0fd0e-4712-11e0-9f98-001517115d85"));
	Если ДокументСсылка.Склад.ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад Тогда 
		ВидЦены = Справочники.ВидыЦен.ПолучитьСсылку(Новый УникальныйИдентификатор("8bdf84fc-404c-11e0-9f98-001517115d85"));
	Иначе 
		ВидЦены = Справочники.ВидыЦен.ПолучитьСсылку(Новый УникальныйИдентификатор("8bdf84ff-404c-11e0-9f98-001517115d85"));
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗаказПоставщикуТовары.НомерСтроки,
	|	ЗаказПоставщикуТовары.Номенклатура,
	|	ЗаказПоставщикуТовары.Количество
	|ПОМЕСТИТЬ КешНоменклатуры
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|ГДЕ
	|	ЗаказПоставщикуТовары.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыДляСравнения.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыДляСравнения.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатурыДляСравнения.Цена КАК Цена
	|ПОМЕСТИТЬ КешЦеныНоменклатурыДляСравнения
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&ДатаЦен,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						КешНоменклатуры.Номенклатура
	|					ИЗ
	|						КешНоменклатуры)
	|				И ВидЦены = &ВидЦены) КАК ЦеныНоменклатурыДляСравнения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизиты.Ссылка КАК Номенклатура,
	|	ДополнительныеРеквизиты.Значение КАК Гарантия
	|ПОМЕСТИТЬ КешГарантия
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка В
	|			(ВЫБРАТЬ
	|				КешНоменклатуры.Номенклатура
	|			ИЗ
	|				КешНоменклатуры)
	|	И ДополнительныеРеквизиты.Свойство = &Гарантия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КешЦеныНоменклатурыДляСравнения.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(КешГарантия.Гарантия, """") КАК Гарантия,
	|	КешНоменклатуры.НомерСтроки,
	|	КешНоменклатуры.Номенклатура,
	|	КешНоменклатуры.Количество
	|ИЗ
	|	КешНоменклатуры КАК КешНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ КешГарантия КАК КешГарантия
	|		ПО КешНоменклатуры.Номенклатура = КешГарантия.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ КешЦеныНоменклатурыДляСравнения КАК КешЦеныНоменклатурыДляСравнения
	|		ПО КешНоменклатуры.Номенклатура = КешЦеныНоменклатурыДляСравнения.Номенклатура");

	Запрос.УстановитьПараметр("ДокументСсылка",		ДокументСсылка);
	Запрос.УстановитьПараметр("ДатаЦен",			ТекущаяДата());
    Запрос.УстановитьПараметр("ВидЦены",			ВидЦены);
	Запрос.УстановитьПараметр("Гарантия",			Гарантия);
	
	РезультатЗапроса  	= Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
	КонецФункции

//Обновляет поле форматированного документа
&НаСервере
Процедура ОбновитьНаСервере()
	
	Перем html_string;               
    attach = Новый Структура;
    Текстовка.ПолучитьHTML(html_string, attach);
    ТекстДок = Новый ТекстовыйДокумент;
    ТекстДок.ДобавитьСтроку(html_string);                   
	     
	НовыйДок 	= Новый ТекстовыйДокумент();
	НомерСтроки = 1;
	ТекстБлокТекстовка = "";
	ПрочитаннаяСтрока = ТекстДок.ПолучитьСтроку(НомерСтроки);
	Пока ПрочитаннаяСтрока<>"</body>" Цикл 
		Если СокрЛП(ПрочитаннаяСтрока) ="<body>" Тогда
			Пока ПрочитаннаяСтрока<>"</body>" Цикл
				НомерСтроки = НомерСтроки+1;
				ПрочитаннаяСтрока = ТекстДок.ПолучитьСтроку(НомерСтроки);
				ТекстБлокТекстовка = ТекстБлокТекстовка+ ПрочитаннаяСтрока;
			КонецЦикла;
		Иначе 	
			    НомерСтроки = НомерСтроки+1;
				ПрочитаннаяСтрока = ТекстДок.ПолучитьСтроку(НомерСтроки);
		КонецЕсли;
	КонецЦикла;	
	
	ТекстШаблонаhtml =ТекстБлокШапка+ТекстБлокТело+Лев(ТекстБлокТекстовка,СтрДлина(ТекстБлокТекстовка)-СтрДлина("</body>"))+ТекстБлокПодвал;
	ПолеHTML = ТекстШаблонаhtml;
	
КонецПроцедуры

//Отправляет HTMLДокумент 
&НаСервере
Процедура ОтправитьПисьмоНаСервере(ТекстШаблонаhtml)
	
    СтруктураПисьма = ТекстШаблонаhtml;
	Тело = ТекстШаблонаhtml;
	
	Кому = Новый Массив; 
	Для Каждого Элемент Из СписокАдресЭП Цикл 
		Если не ПустаяСтрока(Элемент.Значение) Тогда 
			Кому.Добавить(Новый Структура("Адрес, Представление", Элемент.Значение, Элемент.Представление));
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПисьма = Новый Структура("Тема, Тело, Кому, Профиль", Тема, Тело, Кому, Профиль);
	ПараметрыПисьма = ktcОбщийМодульПротоколов.СформироватьПараметрыПисьма(СтруктураПисьма.Тема, СтруктураПисьма.Тело, СтруктураПисьма.Кому, , , , , , ТипТекстаПочтовогоСообщения.HTML);
	ktcОбщийМодульПротоколов.ОтправитьСообщениеПоSMTP(СтруктураПисьма.Профиль, ПараметрыПисьма);
	
КонецПроцедуры


// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
    	
	ПараметрыФормы = Новый Структура("СсылкаНаДокумент",ОбъектыНазначенияМассив[0]);
	ФормаОтправки = ОткрытьФорму("ВнешняяОбработка.ОтправкаПисьма.Форма.ФормаОтправкаПисьма", ПараметрыФормы);

КонецПроцедуры 


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьHTMLДокументНаСервере();
	
КонецПроцедуры

