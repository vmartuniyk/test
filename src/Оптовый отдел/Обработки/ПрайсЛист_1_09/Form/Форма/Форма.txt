
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 Бренд = Ложь;
	 ПоАктуальности = Истина;
	//ПолучитьНастройкиПриСтарте();
	
КонецПроцедуры


// Действия элементов формы
&НаКлиенте
Процедура Сформировать(Команда)
	
	Если ктсОбработчикЗаполненияВидовЦен() Тогда
		ктсПеренаправитьФормированиеПрайсаНаСервер();
		ПолеПрайс.Показать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВидовЦенОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СписокВидовЦен.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладыОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Склады.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаНоменклатурыОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ГруппыНоменклатуры.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПустыхЦен(Команда)
	
	Если ктсОбработчикЗаполненияПоискаПустыхЦен() Тогда
		ТабличныйДокумент = ктсПоискПустыхЦенПеренаправитьНаСервер();
		ТабличныйДокумент.Показать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаНоменклатурыДляПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ГруппаНоменклатурыДляПоиска.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыЦенДляПоискаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВидыЦенДляПоиска.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПустыхГарантий(Команда)
	
	Если ктсОбработчикЗаполненияПоискаПустыхГарантий() Тогда
		
		ТабличныйДокумент = ктсПоискПустыхГарантийРПеренаправитьНаСервер();
		ТабличныйДокумент.Показать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	//СтруктураНастроек = ктсСформироватьСтруктуруКПередаче();
	//СохранитьОтмеченныеНастройкиПриЗакрытии(СтруктураНастроек);
	
КонецПроцедуры




// Мои обработчики на клиенте

&НаКлиенте
Функция ктсОбработчикЗаполненияВидовЦен()
	
	Возврат 	ктсПроверкаЗаполненияВидовЦен() 
			И 	ктсПроверкаЗаполненияВидовСкладов() 
			И  	ктсПроверкаЗаполненияГруппНоменлатуры();	
	
КонецФункции

// Проверка правильности заполнения реквизитов формы
&НаКлиенте
Функция ктсПроверкаЗаполненияВидовЦен()
	
	Если ЗначениеЗаполнено(СписокВидовЦен) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ктсСообщениеПользователю("СписокВидовЦен", "Поле обязательное для заполнения!");
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Функция ктсПроверкаЗаполненияВидовСкладов()
	
	Если ЗначениеЗаполнено(Склады) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ктсСообщениеПользователю("Склады", "Поле обязательное для заполнения!");
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Функция ктсПроверкаЗаполненияГруппНоменлатуры()
	
	Если ЗначениеЗаполнено(ГруппыНоменклатуры) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ктсСообщениеПользователю("ГруппыНоменклатуры", "Поле обязательное для заполнения!");
	Возврат Ложь;
	
	
КонецФункции

&НаКлиенте
Процедура ктсСообщениеПользователю(Поле, Сообщение)
	
	СообщениеПользователю = Новый СообщениеПользователю;
	СообщениеПользователю.Текст = Сообщение;
	СообщениеПользователю.Поле = Поле;
	СообщениеПользователю.Сообщить();
	
КонецПроцедуры


&НаКлиенте
Функция ктсОбработчикЗаполненияПоискаПустыхЦен()
	
	Возврат  ктсПроверкаЗаполненияВидовЦенДляПоиска() И ктсПроверкаЗаполненияГруппНоменлатурыДляПоиска();
	
КонецФункции

&НаКлиенте
Функция ктсПроверкаЗаполненияВидовЦенДляПоиска()
	
	Если ЗначениеЗаполнено(ВидыЦенДляПоиска) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ктсСообщениеПользователю("ВидыЦенДляПоиска", "Поле обязательное для заполнения!");
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Функция ктсПроверкаЗаполненияГруппНоменлатурыДляПоиска()
	
	Если ЗначениеЗаполнено(ГруппаНоменклатурыДляПоиска) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ктсСообщениеПользователю("ГруппаНоменклатурыДляПоиска", "Поле обязательное для заполнения!");
	Возврат Ложь;
	
	
КонецФункции


&НаКлиенте
Функция ктсОбработчикЗаполненияПоискаПустыхГарантий()
	
	Если ЗначениеЗаполнено(ГруппаНоменклатурыДляПоиска) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	ктсСообщениеПользователю("ГруппаНоменклатурыДляПоиска", "Поле обязательное для заполнения!");
	Возврат Ложь;	
	
КонецФункции





// Мои обработчики на сервере
&НаСервере
Процедура ктсПеренаправитьФормированиеПрайсаНаСервер()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПолеПрайс.Очистить();
	ПолеПрайс.ФиксацияСверху = 16;
	
	ктсИнициализацияШапокНаСервере();
	
	МакетПрайсЛиста = ктсПолучитьМакетПрайсЛиста();
	
	ктсУстановитьШиринуКолонок(МакетПрайсЛиста);
	
	ПолеПрайс.Вывести(ктсПолучитьШапкуПрайсЛиста(МакетПрайсЛиста));
	
	ПолеПрайс.Вывести(ктсПолучитьШапкуТаблицы(МакетПрайсЛиста));
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = ктсСформироватьЗапрос();
	
	ктсУстановитьПараметрыЗапроса(Запрос);
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатыЗарпоса = Запрос.Выполнить();
	
	Выборка = РезультатыЗарпоса.Выбрать();
	
	ПолеПрайс.Вывести(ктсОбработкаВыборкаЗапроса(Выборка, МакетПрайсЛиста));
	
КонецПроцедуры

// Макет прайс листа
&НаСервере
Функция ктсПолучитьМакетПрайсЛиста()
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	Макет = ОбъектОбработки.ПолучитьМакет("Прайс");
	
	Возврат Макет;
	
КонецФункции

// Шапка прайс листа (Логотип и Легенда)
&НаСервере
Функция ктсПолучитьШапкуПрайсЛиста(Макет)
	
	Секция = Макет.ПолучитьОбласть("ЛогоЛегенда");
	Секция.Параметры.ДатаФормированияПрайсЛиста = Формат(ТекущаяДата(), "ДЛФ=ДД");
	
	Возврат Секция;
	
КонецФункции

// Шапка таблицы прайс листа (Код, Артикул ..... )
&НаСервере
Функция ктсПолучитьШапкуТаблицы(Макет)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВалютаУпрУчета = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Для ИндексСтрокиТаблицы = 0 ПО ТаблицаШапокМакета.Количество()-1 Цикл
		
		Если ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование <> "Цена" Тогда
			
			ИмяОбласти = "ШапкаТаблицы|"+ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование;
			
			Секция = Макет.ПолучитьОбласть(ИмяОбласти);
			ТабличныйДокумент.Присоединить(Секция);
			
		Иначе
			
			ИмяОбласти = "ШапкаТаблицы|"+ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование;
			Для Каждого ВидЦены ИЗ СписокВидовЦен Цикл
				
				Секция = Макет.ПолучитьОбласть(ИмяОбласти);
				Секция.Параметры.ИмяЦены = Строка(ВидЦены);
				Секция.Параметры.Валюта = Строка(ВидЦены.Значение.ВалютаЦены);
				ТабличныйДокумент.Присоединить(Секция);
				
				Если ЗначениеЗаполнено(ВидЦены.Значение) Тогда
					Если ТипЗнч(ВидЦены.Значение) = Тип("СправочникСсылка.ВидыЦен") Тогда
						Если ВидЦены.Значение.ВалютаЦены = ВалютаУпрУчета Тогда
							Секция = Макет.ПолучитьОбласть(ИмяОбласти);
							Секция.Параметры.ИмяЦены = Строка(ВидЦены);
							Секция.Параметры.Валюта = Строка(ВалютаРеглУчета);
							ТабличныйДокумент.Присоединить(Секция);	
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент
	
КонецФункции

// Валюты по списку цен
&НаСервере
Функция ктсПолучитьВалютыИзСпискаЦен(СписокЦен)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивВидовЦен = Новый Массив;
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СправочникВидЦен.ВалютаЦены.Наименование КАК Валюта
	|ИЗ
	|	Справочник.ВидыЦен КАК СправочникВидЦен
	|ГДЕ
	|	СправочникВидЦен.Ссылка В (&СписокВидовЦен)";
	
	Запрос.УстановитьПараметр("СписокВидовЦен", СписокЦен);
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	Пока Выборка.Следующий() Цикл
		МассивВидовЦен.Добавить(Выборка.Валюта);
	КонецЦикла;
	
	Возврат МассивВидовЦен
	
КонецФункции




// Настройка ширины колонок
&НаСервере
Процедура ктсУстановитьШиринуКолонок(Макет)
	
	ВалютаУпрУчета = Константы.ВалютаУправленческогоУчета.Получить();
	
	ИндексКолонкиДокумента = 1;
	Для Индекс = 0 По ТаблицаШапокМакета.Количество()-1 Цикл
		
		Если ТаблицаШапокМакета[Индекс].Наименование = "Код" ИЛИ ТаблицаШапокМакета[Индекс].Наименование = "Артикул" ИЛИ ТаблицаШапокМакета[Индекс].Наименование = "Наименование" Тогда
			
			ИндексКолонкиДокумента = ИндексКолонкиДокумента + 1;
			Продолжить;
			
		КонецЕсли;
		
		Если ТаблицаШапокМакета[Индекс].Наименование = "Цена" Тогда
			
			Для Каждого ВидЦены ИЗ СписокВидовЦен Цикл
				
				 
				ИмяОбласти = "C"+ИндексКолонкиДокумента;
				ктсУстановитьШиринуКолонкиДокумента(Макет, ИмяОбласти, Индекс);	
				
				ИндексКолонкиДокумента = ИндексКолонкиДокумента + 1;
				
				Если ЗначениеЗаполнено(ВидЦены.Значение) Тогда
					Если ТипЗнч(ВидЦены.Значение) = Тип("СправочникСсылка.ВидыЦен") Тогда
						Если ВидЦены.Значение.ВалютаЦены = ВалютаУпрУчета Тогда
							ИмяОбласти = "C"+ИндексКолонкиДокумента;
							ктсУстановитьШиринуКолонкиДокумента(Макет, ИмяОбласти, Индекс);	
							
							ИндексКолонкиДокумента = ИндексКолонкиДокумента + 1;	
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			Продолжить;
			
		КонецЕсли;
		
		ИмяОбласти = "C"+ИндексКолонкиДокумента;
		ктсУстановитьШиринуКолонкиДокумента(Макет, ИмяОбласти, Индекс);
		
		ИндексКолонкиДокумента = ИндексКолонкиДокумента + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ктсУстановитьШиринуКолонкиДокумента(Макет, ИмяОбласти, ИндексТаблицы)
	
	Если ШиринаПоляЦены = 0 И ТаблицаШапокМакета[ИндексТаблицы].Наименование = "Цена" Тогда
		Макет.Область(ИмяОбласти).ШиринаКолонки = ТаблицаШапокМакета[ИндексТаблицы].Ширина;
	ИначеЕсли ШиринаПоляЦены <> 0 И ТаблицаШапокМакета[ИндексТаблицы].Наименование = "Цена" Тогда
		Макет.Область(ИмяОбласти).ШиринаКолонки = ШиринаПоляЦены;
	КонецЕсли;
	
КонецПроцедуры



// Запросы и БД
&НаСервере
Функция ктсСформироватьЗапрос()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.ЭтоГруппа
	|ПОМЕСТИТЬ КешГруппНоменклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В ИЕРАРХИИ(&ГруппыНоменклатуры)
	|	И НЕ Номенклатура.ПометкаУдаления
	|;
	|
	////////////////////////////////////////////////////////////////////////////////
	//
	|ВЫБРАТЬ
	|	КешГруппНоменклатура.Ссылка КАК Номенклатура,
	|	""""								КАК ЧастьНаименования,
	|	КешГруппНоменклатура.ЭтоГруппа КАК ЭтоГруппа
	|ПОМЕСТИТЬ КешНоменклатуры
	|ИЗ
	|	КешГруппНоменклатура КАК КешГруппНоменклатура
	|ГДЕ
	|	КешГруппНоменклатура.ЭтоГруппа
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СвободныеОстатки.Номенклатура,
	|	ПОДСТРОКА(СвободныеОстатки.Номенклатура.Наименование, 1, 1),
	|	ЛОЖЬ
	|ИЗ
	|	РегистрНакопления.СвободныеОстатки.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						КешГруппНоменклатура.Ссылка
	|					ИЗ
	|						КешГруппНоменклатура
	|					ГДЕ
	|						ЭтоГруппа = Ложь)
	|				И Склад В (&Склады)) КАК СвободныеОстатки
	|ГДЕ
	|	СвободныеОстатки.ВНаличииОстаток <> 0
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТоварыКПоступлению.Номенклатура,
	|	ПОДСТРОКА(ТоварыКПоступлению.Номенклатура.Наименование, 1, 1),
	|	ЛОЖЬ
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Остатки(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						КешГруппНоменклатура.Ссылка
	|					ИЗ
	|						КешГруппНоменклатура
	|					ГДЕ
	|						ЭтоГруппа = Ложь)
	|				И Склад В (&Склады)) КАК ТоварыКПоступлению
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура 	КАК Номенклатура,
	|	ЦеныНоменклатуры.ВидЦены 		КАК ВидЦены,
	|	ЦеныНоменклатуры.Цена 			КАК Цена,
	|	ЦеныНоменклатуры.Валюта 		КАК Валюта
	|ПОМЕСТИТЬ КешТекущиеЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						КешНоменклатуры.Номенклатура
	|					ИЗ
	|						КешНоменклатуры)
	|				И ВидЦены В (&СписокВидовЦен)) КАК ЦеныНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыДляСравнения.Номенклатура 	КАК Номенклатура,
	|	ЦеныНоменклатурыДляСравнения.ВидЦены 		КАК ВидЦены,
	|	ЦеныНоменклатурыДляСравнения.Цена 			КАК Цена,
	|	ЦеныНоменклатурыДляСравнения.Валюта			КАК Валюта
	|ПОМЕСТИТЬ КешЦеныНоменклатурыДляСравнения
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&ДатаСравненияЦен,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						КешНоменклатуры.Номенклатура
	|					ИЗ
	|						КешНоменклатуры)
	|				И ВидЦены В (&СписокВидовЦен)) КАК ЦеныНоменклатурыДляСравнения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизиты.Ссылка 		КАК Номенклатура,
	|	ДополнительныеРеквизиты.Значение 	КАК Гарантия
	|ПОМЕСТИТЬ КешГарантия
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка В
	|			(ВЫБРАТЬ
	|				КешНоменклатуры.Номенклатура
	|			ИЗ
	|				КешНоменклатуры)
	|	И ДополнительныеРеквизиты.Свойство = &Гарантия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	//------------------------------ОжидаемыеНаСкладе
	|	ВЫБРАТЬ
	|		ОжидаемыеНаСкладе.Номенклатура КАК Номенклатура,
	|		ОжидаемыеНаСкладе.Склад КАК Склад,
	|		ОжидаемыеНаСкладе.КПоступлениюОстаток КАК КПоступлениюОстаток
	|	ПОМЕСТИТЬ КешОжидаемыНаСкладах
	|	ИЗ
	|		РегистрНакопления.ТоварыКПоступлению.Остатки(
	|				,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|							КешНоменклатуры.Номенклатура
	|						ИЗ
	|							КешНоменклатуры)
	|					И Склад В (&Склады) И  Склад <> &ГуртовыйСклад) КАК ОжидаемыеНаСкладе
	|	ИНДЕКСИРОВАТЬ ПО
	|		Номенклатура
	|	;
	|	
	//----------------------------СвободныеОстатки
	|	ВЫБРАТЬ
	|		СвободныеОстатки.Номенклатура КАК Номенклатура,
	|		СвободныеОстатки.Склад КАК Склад,
	|		СвободныеОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|		СвободныеОстатки.ВРезервеОстаток КАК ВРезервеОстаток
	|	ПОМЕСТИТЬ КешСвободныеНаСкладах
	|	ИЗ
	|		РегистрНакопления.СвободныеОстатки.Остатки(
	|				,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|							КешНоменклатуры.Номенклатура
	|						ИЗ
	|							КешНоменклатуры)
	|					И Склад В (&Склады)) КАК СвободныеОстатки
	|					
	|	ИНДЕКСИРОВАТЬ ПО
	|		Номенклатура
	|	;
	|	
	//----------------------------СвободныеОстаткиОпт
	|	ВЫБРАТЬ
	|		СвободныеОстатки.Номенклатура 		КАК Номенклатура,
	|		СвободныеОстатки.ВНаличииОстаток 	КАК ВНаличииОстаток,
	|		СвободныеОстатки.ВРезервеОстаток 	КАК ВРезервеОстаток
	|	ПОМЕСТИТЬ КешСвободныеНаСкладеОпт
	|	ИЗ
	|		РегистрНакопления.СвободныеОстатки.Остатки(
	|				,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|							КешНоменклатуры.Номенклатура
	|						ИЗ
	|							КешНоменклатуры)
	|					И  Склад = &ГуртовыйСклад) КАК СвободныеОстатки
	|	ИНДЕКСИРОВАТЬ ПО
	|		Номенклатура
	|	
	|	;
	////////////////////////////////////////////////////////////////////////////////
	|	ВЫБРАТЬ 
	|	       	КешНоменклатуры.Номенклатура КАК Номенклатура,
	|	       	 	
	|	   	 	ВЫБОР
	|				КОГДА КешНоменклатуры.ЧастьНаименования = ""<""
	|				ТОГДА ""БВ""
	|				КОГДА ((ЕСТЬNULL(СвободныеОстатки.ВНаличииОстаток,0) - ЕСТЬNULL(СвободныеОстатки.ВРезервеОстаток,0)) <= 0) И (КешНоменклатуры.Номенклатура В (&НоменклатураАкция)) И (КешНоменклатуры.Номенклатура В (&НоменклатураНовый)) И (ЕСТЬNULL(СвободныеОстатки.ВРезервеОстаток,0) > 0)
	|				ТОГДА ""А/N/R""
	|				КОГДА ((ЕСТЬNULL(СвободныеОстатки.ВНаличииОстаток,0) - ЕСТЬNULL(СвободныеОстатки.ВРезервеОстаток,0)) <= 0) И (КешНоменклатуры.Номенклатура В (&НоменклатураАкция)) И (КешНоменклатуры.Номенклатура В (&НоменклатураНовый)) И (ЕСТЬNULL(ОжидаемыеНаСкладе.КПоступлениюОстаток, 0) > 0)
	|				ТОГДА ""А/N/W""
	|				КОГДА ((ЕСТЬNULL(СвободныеОстатки.ВНаличииОстаток,0) - ЕСТЬNULL(СвободныеОстатки.ВРезервеОстаток,0)) <= 0)  И (КешНоменклатуры.Номенклатура В (&НоменклатураНовый)) И (ЕСТЬNULL(ОжидаемыеНаСкладе.КПоступлениюОстаток, 0) > 0)
	|				ТОГДА ""N/W""
	|				КОГДА ((ЕСТЬNULL(СвободныеОстатки.ВНаличииОстаток,0) - ЕСТЬNULL(СвободныеОстатки.ВРезервеОстаток,0)) <= 0)  И (КешНоменклатуры.Номенклатура В (&НоменклатураАкция)) И (ЕСТЬNULL(СвободныеОстатки.ВРезервеОстаток,0) > 0)
	|				ТОГДА ""А/R""
	|				КОГДА ((ЕСТЬNULL(СвободныеОстатки.ВНаличииОстаток,0) - ЕСТЬNULL(СвободныеОстатки.ВРезервеОстаток,0)) <= 0)  И (КешНоменклатуры.Номенклатура В (&НоменклатураАкция)) И (ЕСТЬNULL(ОжидаемыеНаСкладе.КПоступлениюОстаток, 0) > 0)
	|				ТОГДА ""А/W""
	|				КОГДА ((ЕСТЬNULL(СвободныеОстатки.ВНаличииОстаток,0) - ЕСТЬNULL(СвободныеОстатки.ВРезервеОстаток,0)) <= 0)  И (КешНоменклатуры.Номенклатура В (&НоменклатураАкция))
	|				ТОГДА ""А/Z""
	|				КОГДА (КешНоменклатуры.Номенклатура В (&НоменклатураНовый) И КешНоменклатуры.Номенклатура В (&НоменклатураАкция))
	|				ТОГДА ""А/N""
	|				КОГДА КешНоменклатуры.Номенклатура В (&НоменклатураАкция)
	|				ТОГДА ""А""
	|				КОГДА КешНоменклатуры.Номенклатура В (&НоменклатураНовый) И (ЕСТЬNULL(СвободныеОстатки.ВНаличииОстаток,0) - ЕСТЬNULL(СвободныеОстатки.ВРезервеОстаток,0)) = 0 И ЕСТЬNULL(ОжидаемыеНаСкладе.КПоступлениюОстаток, 0) = 0
	|				ТОГДА ""N/Z""
	|						
	|							КОГДА ЕСТЬNULL(КешСвободныеНаСкладеОпт.ВНаличииОстаток, 0) - ЕСТЬNULL(КешСвободныеНаСкладеОпт.ВРезервеОстаток, 0) > 0
	|							ТОГДА 
	|									ВЫБОР
	|											КОГДА	ЕСТЬNULL(КешСвободныеНаСкладеОпт.ВНаличииОстаток, 0) - ЕСТЬNULL(КешСвободныеНаСкладеОпт.ВРезервеОстаток, 0)  = 1
	|											ТОГДА   ""+""
	|											КОГДА	ЕСТЬNULL(КешСвободныеНаСкладеОпт.ВНаличииОстаток, 0) - ЕСТЬNULL(КешСвободныеНаСкладеОпт.ВРезервеОстаток, 0) <= 4
	|											ТОГДА   ""++""
	|											КОГДА	ЕСТЬNULL(КешСвободныеНаСкладеОпт.ВНаличииОстаток, 0) - ЕСТЬNULL(КешСвободныеНаСкладеОпт.ВРезервеОстаток, 0) <= 19
	|											ТОГДА   ""+++""
	|											КОГДА	ЕСТЬNULL(КешСвободныеНаСкладеОпт.ВНаличииОстаток, 0) - ЕСТЬNULL(КешСвободныеНаСкладеОпт.ВРезервеОстаток, 0) <= 99
	|											ТОГДА   ""++++""
	|											ИНАЧЕ   ""+++++""
	|					  				КОНЕЦ
	|	                       КОГДА  ЕСТЬNULL(СвободныеОстаткиРозница.ВНаличииОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиРозница.ВРезервеОстаток, 0) > 0
	|	                       ТОГДА";
	
    ТекстШаблонаСклад ="
	|									КОГДА ЕСТЬNULL(СвободныеОстаткиСклад%Индекс%.ВНаличииОстаток, 0) - ЕСТЬNULL(СвободныеОстаткиСклад%Индекс%.ВРезервеОстаток, 0) > 0
	|									ТОГДА ""%Склад%""";

	Индекс = 0;
	Пока  Индекс <= Склады.Количество()-1 Цикл 
		ТекстШаблона = СтрЗаменить(ТекстШаблонаСклад,"%Индекс%",Индекс);
		ТекстШаблона = СтрЗаменить(ТекстШаблона,"%Склад%",Склады[Индекс].Значение);
		ТекстЗапроса = ТекстЗапроса+"
		|	                       		ВЫБОР"
		+ТекстШаблона		
		+?(Индекс = Склады.Количество()-1," "," +
		|	                       			ВЫБОР ");
		НовыйИндекс = Индекс+1;
		Пока НовыйИндекс <= Склады.Количество()-1 Цикл   
			ТекстШаблона = СтрЗаменить(ТекстШаблонаСклад,"%Индекс%",НовыйИндекс);
			ТекстШаблона = СтрЗаменить(ТекстШаблона,"%Склад%",",");
			ТекстЗапроса = ТекстЗапроса+ТекстШаблона;
			НовыйИндекс = НовыйИндекс+1;
         КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса+"
		|		                   	 		 ИНАЧЕ """"
		|			                   		 КОНЕЦ";
		 
		ТекстЗапроса = ТекстЗапроса+"" 
		+?(Индекс = Склады.Количество()-1," ","
		|	                   	 		 ИНАЧЕ """"
		|		                   		 КОНЕЦ 
		|+ ")+"";
		Индекс = Индекс+1;
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса+"
	|		                    	                   				  		
	|	
	|			        КОГДА ЕСТЬNULL(СвободныеОстатки.ВРезервеОстаток,0) > 0
	|					ТОГДА ""R""
	|					КОГДА ЕСТЬNULL(ОжидаемыеНаСкладе.КПоступлениюОстаток, 0) > 0
	|					ТОГДА ""W""
	|					ИНАЧЕ ""Z""
	|				КОНЕЦ КАК СпецКолонка
	|   ПОМЕСТИТЬ   КешСпецКолонка
	|					
	|	ИЗ
	|			КешНоменклатуры КАК КешНоменклатуры
	|			
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(
	|				,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|						КешНоменклатуры.Номенклатура
	|					ИЗ
	|						КешНоменклатуры)
	|				И Склад В (&Склады, &ГуртовыйСклад)) КАК СвободныеОстатки
	|	ПО СвободныеОстатки.Номенклатура = КешНоменклатуры.Номенклатура	
	|       
	|	ЛЕВОЕ СОЕДИНЕНИЕ КешОжидаемыНаСкладах КАК ОжидаемыеНаСкладе
	|	ПО ОжидаемыеНаСкладе.Номенклатура = КешНоменклатуры.Номенклатура	
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ КешСвободныеНаСкладеОпт КАК КешСвободныеНаСкладеОпт
	|	ПО 	КешСвободныеНаСкладеОпт.Номенклатура = КешНоменклатуры.Номенклатура";
	
	
	ТекстШаблона ="
	|	ЛЕВОЕ СОЕДИНЕНИЕ КешСвободныеНаСкладах КАК СвободныеОстаткиСклад%Индекс% 
	|	ПО СвободныеОстаткиСклад%Индекс%.Номенклатура  = КешНоменклатуры.Номенклатура
	|	И  СвободныеОстаткиСклад%Индекс%.Склад 		= &Склад%Индекс%";	
		
	Индекс = 0;	
	Пока  Индекс <= Склады.Количество()-1 Цикл 
		ТекстЗапроса = ТекстЗапроса+СтрЗаменить(ТекстШаблона,"%Индекс%",Индекс);
		Индекс = Индекс+1;
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса+"			
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СвободныеОстатки.Остатки(
	|				,
	|				Номенклатура В
	|						(ВЫБРАТЬ
	|							КешНоменклатуры.Номенклатура
	|						ИЗ
	|							КешНоменклатуры)
	|					И Склад В (&Склады)) КАК СвободныеОстаткиРозница
	|	ПО 	 СвободныеОстаткиРозница.Номенклатура = КешНоменклатуры.Номенклатура 
	|; 	";
	
	ТекстШаблонаЦены = " 
	|ВЫБРАТЬ
	|	Кеш%Актуальной%Номенклатуры.Номенклатура,
	|	КешЦены%Актуальной%НоменклатурыДляСравнения.ВидЦены,
	|	КешЦены%Актуальной%НоменклатурыДляСравнения.Цена,
	|	КешЦены%Актуальной%НоменклатурыДляСравнения.Валюта
	|ПОМЕСТИТЬ СтарыеЦены%Актуальной%%ВидЦены%
	|ИЗ
	|	Кеш%Актуальной%Номенклатуры КАК Кеш%Актуальной%Номенклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешЦены%Актуальной%НоменклатурыДляСравнения КАК КешЦены%Актуальной%НоменклатурыДляСравнения
	|		ПО (КешЦены%Актуальной%НоменклатурыДляСравнения.Номенклатура = Кеш%Актуальной%Номенклатуры.Номенклатура)
	|ГДЕ
	|	КешЦены%Актуальной%НоменклатурыДляСравнения.ВидЦены = &ВидЦены%ВидЦены%
	|;
	|ВЫБРАТЬ
	|	Кеш%Актуальной%Номенклатуры.Номенклатура,
	|	КешТекущиеЦены%Актуальной%Номенклатуры.ВидЦены,
	|	КешТекущиеЦены%Актуальной%Номенклатуры.Цена,
	|	КешТекущиеЦены%Актуальной%Номенклатуры.Валюта
	|ПОМЕСТИТЬ Цены%Актуальной%%ВидЦены%
	|ИЗ
	|	Кеш%Актуальной%Номенклатуры КАК Кеш%Актуальной%Номенклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешТекущиеЦены%Актуальной%Номенклатуры КАК КешТекущиеЦены%Актуальной%Номенклатуры
	|		ПО (КешТекущиеЦены%Актуальной%Номенклатуры.Номенклатура = Кеш%Актуальной%Номенклатуры.Номенклатура)
	|ГДЕ
	|	КешТекущиеЦены%Актуальной%Номенклатуры.ВидЦены = &ВидЦены%ВидЦены%
	|	; ";

	Для Каждого ВидЦены Из СписокВидовЦен Цикл
		ТекстШаблона =	СтрЗаменить(ТекстШаблонаЦены,"%Актуальной%","");
		ТекстЗапроса =	ТекстЗапроса + СтрЗаменить(ТекстШаблона,"%ВидЦены%",ктсОбработкаИменПараметров(Строка(ВидЦены)));
	КонецЦикла;

    // Выбор актуальной номенклатуры 
	Если ПоАктуальности Тогда 
	 	 ТекстЗапроса = ТекстЗапроса +
		 "ВЫБРАТЬ
		 |	КешГруппНоменклатура.Ссылка КАК Номенклатура
		 |ПОМЕСТИТЬ КешАктуальности
		 |ИЗ
		 |	КешГруппНоменклатура КАК КешГруппНоменклатура
		 |ГДЕ
		 |	НЕ КешГруппНоменклатура.Ссылка В
		 |				(ВЫБРАТЬ
		 |					КешНоменклатуры.Номенклатура
		 |				ИЗ
		 |					КешНоменклатуры)
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ALPS_АктуальностьНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		 |	ALPS_АктуальностьНоменклатурыСрезПоследних.Номенклатура.ЭтоГруппа КАК ЭтоГруппа
		 |ПОМЕСТИТЬ КешАктуальнойНоменклатуры
		 |ИЗ
		 |	РегистрСведений.ALPS_АктуальностьНоменклатуры.СрезПоследних(
		 |			&ТекущаяДата,
		 |				Номенклатура В
		 |					(ВЫБРАТЬ
		 |						КешАктуальности.Номенклатура
		 |					ИЗ
		 |						КешАктуальности)) КАК ALPS_АктуальностьНоменклатурыСрезПоследних
		 |			ГДЕ
		 |				ALPS_АктуальностьНоменклатурыСрезПоследних.Актуально
		 |				И ALPS_АктуальностьНоменклатурыСрезПоследних.ГарантияДоставки
		 |
		 |ИНДЕКСИРОВАТЬ ПО
		 |	Номенклатура
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ЦеныНоменклатуры.Номенклатура 	КАК Номенклатура,
		 |	ЦеныНоменклатуры.ВидЦены 		КАК ВидЦены,
		 |	ЦеныНоменклатуры.Цена 			КАК Цена,
		 |	ЦеныНоменклатуры.Валюта 		КАК Валюта
		 |ПОМЕСТИТЬ КешТекущиеЦеныАктуальнойНоменклатуры
		 |ИЗ
		 |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		 |			,
		 |			Номенклатура В
		 |					(ВЫБРАТЬ
		 |						КешАктуальнойНоменклатуры.Номенклатура
		 |					ИЗ
		 |						КешАктуальнойНоменклатуры)
		 |				И ВидЦены В (&СписокВидовЦен)) КАК ЦеныНоменклатуры
		 |
		 |ИНДЕКСИРОВАТЬ ПО
		 |	Номенклатура,
		 |	ВидЦены
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ЦеныНоменклатурыДляСравнения.Номенклатура 	КАК Номенклатура,
		 |	ЦеныНоменклатурыДляСравнения.ВидЦены 		КАК ВидЦены,
		 |	ЦеныНоменклатурыДляСравнения.Цена 			КАК Цена,
		 |	ЦеныНоменклатурыДляСравнения.Валюта 		КАК Валюта
		 |ПОМЕСТИТЬ КешЦеныАктуальнойНоменклатурыДляСравнения
		 |ИЗ
		 |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		 |			&ДатаСравненияЦен,
		 |			Номенклатура В
		 |					(ВЫБРАТЬ
		 |						КешАктуальнойНоменклатуры.Номенклатура
		 |					ИЗ
		 |						КешАктуальнойНоменклатуры)
		 |				И ВидЦены В (&СписокВидовЦен)) КАК ЦеныНоменклатурыДляСравнения
		 |
		 |ИНДЕКСИРОВАТЬ ПО
		 |	Номенклатура,
		 |	ВидЦены
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ДополнительныеРеквизиты.Ссылка КАК Номенклатура,
		 |	ДополнительныеРеквизиты.Значение КАК Гарантия
		 |ПОМЕСТИТЬ КешАктуальнойГарантия
		 |ИЗ
		 |	Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
		 |ГДЕ
		 |	ДополнительныеРеквизиты.Ссылка В
		 |			(ВЫБРАТЬ
		 |				КешАктуальнойНоменклатуры.Номенклатура
		 |			ИЗ
		 |				КешАктуальнойНоменклатуры)
		 |	И ДополнительныеРеквизиты.Свойство = &Гарантия
		 |
		 |ИНДЕКСИРОВАТЬ ПО
		 |	Номенклатура
		 |;	";
		 
		 Для Каждого ВидЦены Из СписокВидовЦен Цикл
			ТекстШаблона =	СтрЗаменить(ТекстШаблонаЦены,"%Актуальной%","Актуальной"); 
			ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстШаблона,"%ВидЦены%",ктсОбработкаИменПараметров(Строка(ВидЦены)));
		КонецЦикла;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +"
	| ВЫБРАТЬ
	|	КешНоменклатуры.Номенклатура.Код КАК Код,
	|	КешНоменклатуры.Номенклатура.Ссылка КАК Номенклатура,
	|	КешНоменклатуры.Номенклатура.Код КАК ОписаниеНаСайте,"
	+?(Бренд,"КешНоменклатуры.Номенклатура.Производитель КАК Бренд,", "")+ "
	|	КешНоменклатуры.Номенклатура.Артикул КАК Артикул,
	|	ВЫБОР
	|	    КОГДА КешНоменклатуры.Номенклатура.ЭтоГруппа ТОГДА КешНоменклатуры.Номенклатура.Наименование
	|		ИНАЧЕ  КешНоменклатуры.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК Наименование,
	|	КешНоменклатуры.ЭтоГруппа КАК ЭтоГруппа,
	|	ЕСТЬNULL(КешГарантия.Гарантия, "" "") КАК Гарантия,
	|	КешСпецКолонка.СпецКолонка КАК СпецКолонка,";
	
	Позицыя = 0;
	ТекстШаблонаЦены ="
 	//|	ЕСТЬNULL(Цены%Актуальной%%ВидЦены%.Цена, 0) КАК Цена%Актуальной%%ВидЦены%,
	|	ВЫБОР
	|		КОГДА Цены%Актуальной%%ВидЦены%.ВидЦены.ВалютаЦены = &ВалютаРеглУчета
	|			ТОГДА IsNull(Цены%Актуальной%%ВидЦены%.Цена, 0)
	|		КОГДА Цены%Актуальной%%ВидЦены%.Валюта = &ВалютаУпрУчета
	|			ТОГДА IsNull(Цены%Актуальной%%ВидЦены%.Цена, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Цена%Актуальной%%ВидЦены%,
	|
	|	ВЫБОР
	|		КОГДА Цены%Актуальной%%ВидЦены%.ВидЦены.ВалютаЦены = &ВалютаРеглУчета
	|			ТОГДА 0
	|		КОГДА Цены%Актуальной%%ВидЦены%.Валюта = &ВалютаРеглУчета 
	|			ТОГДА IsNull(Цены%Актуальной%%ВидЦены%.Цена, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Цена%Актуальной%%ВидЦены%ГРН,
	|
	//|	ЕСТЬNULL(СтарыеЦены%Актуальной%%ВидЦены%.Цена, 0) КАК СтараяЦена%Актуальной%%ВидЦены%,
	|	ВЫБОР
	|		КОГДА Цены%Актуальной%%ВидЦены%.ВидЦены.ВалютаЦены = &ВалютаРеглУчета
	|		ТОГДА	ВЫБОР
	|					КОГДА Цены%Актуальной%%ВидЦены%.Цена < СтарыеЦены%Актуальной%%ВидЦены%.Цена
	|					ТОГДА &СтрелкаВниз
	|					КОГДА Цены%Актуальной%%ВидЦены%.Цена > СтарыеЦены%Актуальной%%ВидЦены%.Цена
	|					ТОГДА &СтрелкаВверх
	|					ИНАЧЕ "" ""
	|				КОНЕЦ
	|		КОГДА Цены%Актуальной%%ВидЦены%.Валюта = СтарыеЦены%Актуальной%%ВидЦены%.Валюта	
	|		ТОГДА 	ВЫБОР
	|					КОГДА Цены%Актуальной%%ВидЦены%.Цена < СтарыеЦены%Актуальной%%ВидЦены%.Цена
	|					ТОГДА &СтрелкаВниз
	|					КОГДА Цены%Актуальной%%ВидЦены%.Цена > СтарыеЦены%Актуальной%%ВидЦены%.Цена
	|					ТОГДА &СтрелкаВверх
	|					ИНАЧЕ "" ""
	|				КОНЕЦ	
	|		ИНАЧЕ "" "" 
	|	КОНЕЦ КАК ИзменениеЦены%Актуальной%%ВидЦены%,
	|
	|	ВЫБОР
	|		КОГДА Цены%Актуальной%%ВидЦены%.ВидЦены.ВалютаЦены = &ВалютаРеглУчета
	|		ТОГДА "" ""
	|		КОГДА Цены%Актуальной%%ВидЦены%.Валюта = &ВалютаРеглУчета
	|		ТОГДА 	ВЫБОР
	|					КОГДА Цены%Актуальной%%ВидЦены%.Цена < СтарыеЦены%Актуальной%%ВидЦены%.Цена
	|					ТОГДА &СтрелкаВниз
	|					КОГДА Цены%Актуальной%%ВидЦены%.Цена > СтарыеЦены%Актуальной%%ВидЦены%.Цена
	|					ТОГДА &СтрелкаВверх
	|					ИНАЧЕ "" ""
	|				КОНЕЦ	
	|		ИНАЧЕ "" "" 
	|	КОНЕЦ КАК ИзменениеЦены%Актуальной%%ВидЦены%ГРН
	|";
		
	Для Каждого ВидЦены Из СписокВидовЦен Цикл
		Позицыя = Позицыя+1;
		ТекстШаблона = СтрЗаменить(ТекстШаблонаЦены,"%Актуальной%","");
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстШаблона,"%ВидЦены%",ктсОбработкаИменПараметров(Строка(ВидЦены)))
		+?(Позицыя = СписокВидовЦен.Количество()и СписокВидовЦен.Количество()>=1," ","  ,")+" ";
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса +"
	|ИЗ
	|	КешНоменклатуры КАК КешНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ КешГарантия КАК КешГарантия
	|		ПО (КешГарантия.Номенклатура = КешНоменклатуры.Номенклатура)";
	
	ТекстШаблонаЦеныЛевоеСоединение =			
	"
	|		ЛЕВОЕ СОЕДИНЕНИЕ Цены%Актуальной%%ВидЦены% КАК Цены%Актуальной%%ВидЦены%
	|		ПО (Цены%Актуальной%%ВидЦены%.Номенклатура = Кеш%Актуальной%Номенклатуры.Номенклатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтарыеЦены%Актуальной%%ВидЦены% КАК СтарыеЦены%Актуальной%%ВидЦены%
	|		ПО (СтарыеЦены%Актуальной%%ВидЦены%.Номенклатура = Кеш%Актуальной%Номенклатуры.Номенклатура)";

	Для Каждого ВидЦены Из СписокВидовЦен Цикл
			ТекстШаблона = СтрЗаменить(ТекстШаблонаЦеныЛевоеСоединение,"%Актуальной%","");
			ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстШаблона,"%ВидЦены%",ктсОбработкаИменПараметров(Строка(ВидЦены)))

	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса +"
	|		ЛЕВОЕ СОЕДИНЕНИЕ КешСпецКолонка КАК КешСпецКолонка
	|		ПО (КешСпецКолонка.Номенклатура = КешНоменклатуры.Номенклатура)";
	
	
	 // Обьединяем результаты
    Если ПоАктуальности Тогда 
		ТекстЗапроса = ТекстЗапроса +
		"	ОБЪЕДИНИТЬ		
		|	ВЫБРАТЬ
		|		КешАктуальнойНоменклатуры.Номенклатура.Код,
		|		КешАктуальнойНоменклатуры.Номенклатура,
		|		КешАктуальнойНоменклатуры.Номенклатура.Код,"
		+?(Бренд,"КешАктуальнойНоменклатуры.Номенклатура.Производитель КАК Бренд,", "")+ "
		|		КешАктуальнойНоменклатуры.Номенклатура.Артикул,
		|		ВЫБОР
		|			КОГДА КешАктуальнойНоменклатуры.Номенклатура.ЭтоГруппа
		|				ТОГДА КешАктуальнойНоменклатуры.Номенклатура.Наименование
		|			ИНАЧЕ КешАктуальнойНоменклатуры.Номенклатура.НаименованиеПолное
		|		КОНЕЦ,
		|		КешАктуальнойНоменклатуры.ЭтоГруппа,
		|		ЕСТЬNULL(КешГарантия.Гарантия, "" ""),
		|		""V"" ,";
		
		Позицыя = 0;
		
		Для Каждого ВидЦены Из СписокВидовЦен Цикл
			Позицыя = Позицыя+1;	
			ТекстШаблона = СтрЗаменить(ТекстШаблонаЦены,"%Актуальной%","Актуальной");
			ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстШаблона,"%ВидЦены%",ктсОбработкаИменПараметров(Строка(ВидЦены)))
					   +?(Позицыя = СписокВидовЦен.Количество()и СписокВидовЦен.Количество()>=1," ","  ,")+" ";
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса +"
		|	ИЗ
		|		КешАктуальнойНоменклатуры КАК КешАктуальнойНоменклатуры
		|			ЛЕВОЕ СОЕДИНЕНИЕ КешАктуальнойГарантия КАК КешГарантия
		|			ПО (КешГарантия.Номенклатура = КешАктуальнойНоменклатуры.Номенклатура)";
		
		Для Каждого ВидЦены Из СписокВидовЦен Цикл
			ТекстШаблона = СтрЗаменить(ТекстШаблонаЦеныЛевоеСоединение,"%Актуальной%","Актуальной");
			ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстШаблона,"%ВидЦены%",ктсОбработкаИменПараметров(Строка(ВидЦены)))
		КонецЦикла;
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +"УПОРЯДОЧИТЬ ПО Номенклатура ИЕРАРХИЯ, Номенклатура АВТОУПОРЯДОЧИВАНИЕ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура ктсУстановитьПараметрыЗапроса(ЗапросСсылка)
	
	МассивНоменклатураАкция = ктсПолучитьАкцию();
	Для Каждого ЭлементМассивНоменклатураАкция Из НоменклатураАкция Цикл
		
		МассивНоменклатураАкция.Добавить(ЭлементМассивНоменклатураАкция.Значение);
		
	КонецЦикла;
	ЗапросСсылка.УстановитьПараметр("НоменклатураАкция", МассивНоменклатураАкция);
	
	МассивНоменклатураНовый = Новый Массив;
	Для Каждого ЭлементМассивНоменклатураНовый Из НоменклатураНовый Цикл
		
		МассивНоменклатураНовый.Добавить(ЭлементМассивНоменклатураНовый.Значение);
		
	КонецЦикла;
	ЗапросСсылка.УстановитьПараметр("НоменклатураНовый", МассивНоменклатураНовый);
	ЗапросСсылка.УстановитьПараметр("ГуртовыйСклад", Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d3409-40c2-11e0-9f98-001517115d85")));

	ЗапросСсылка.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	ЗапросСсылка.УстановитьПараметр("ДатаСравненияЦен", ДатаСравненияЦен);
	
	МассивВидовЦен = Новый Массив;
	Для Каждого ВидЦены ИЗ СписокВидовЦен Цикл
		МассивВидовЦен.Добавить(Справочники.ВидыЦен.НайтиПоНаименованию(ВидЦены.Значение));
		ЗапросСсылка.УстановитьПараметр("ВидЦены"+ктсОбработкаИменПараметров(Строка(ВидЦены)), Справочники.ВидыЦен.НайтиПоНаименованию(ВидЦены.Значение));
		
	КонецЦикла;
	
	ИндексСклада = 0;
	МассивСкладов = Новый Массив;
	Для Каждого Склад Из Склады Цикл
		
		МассивСкладов.Добавить(Справочники.Склады.НайтиПоНаименованию(Склад.Значение));
		
		ЗапросСсылка.УстановитьПараметр("Склад" + ИндексСклада, Справочники.Склады.НайтиПоНаименованию(Склад.Значение));
		
		ИндексСклада = ИндексСклада + 1;
		
	КонецЦикла;
	
	ЗапросСсылка.УстановитьПараметр("Склады", МассивСкладов);
	
	МассивНоменклатуры = Новый Массив;
	Для Каждого ГруппаНоменклатуры Из ГруппыНоменклатуры Цикл
		
		МассивНоменклатуры.Добавить(ГруппаНоменклатуры.Значение);
		
	КонецЦикла;
    Гарантия  = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("a3e0fd0e-4712-11e0-9f98-001517115d85"));
 
	ЗапросСсылка.УстановитьПараметр("ГруппыНоменклатуры", ГруппыНоменклатуры);
	
	ЗапросСсылка.УстановитьПараметр("СписокВидовЦен", МассивВидовЦен);
	ЗапросСсылка.УстановитьПараметр("Гарантия", Гарантия);
	ЗапросСсылка.УстановитьПараметр("ГуртовыйСклад", Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d3409-40c2-11e0-9f98-001517115d85")));
    ЗапросСсылка.УстановитьПараметр("СтрелкаВверх","↑");
	ЗапросСсылка.УстановитьПараметр("СтрелкаВниз","↓");
	ЗапросСсылка.УстановитьПараметр("ВалютаУпрУчета", Константы.ВалютаУправленческогоУчета.Получить());
	ЗапросСсылка.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
КонецПроцедуры

&НаСервере
Функция ктсОбработкаИменПараметров(ИмяПараметра)
	
	Буфер = ИмяПараметра;
	
	Буфер = СтрЗаменить(Буфер, ",", "");
	Буфер = СтрЗаменить(Буфер, ".", "");
	Буфер = СтрЗаменить(Буфер, " ", "");
	
	Возврат Буфер;
	
КонецФункции

&НаСервере
Функция ктсОбработкаЭлементаВыборкиЗапроса(Выборка, Макет)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ВалютаУпрУчета = Константы.ВалютаУправленческогоУчета.Получить();
	
	ГоризонтальнаяОбласть = ктсПолучитьИмяОбластиЗаСпецКолонкой(Выборка.СпецКолонка);
	
	Для ИндексСтрокиТаблицы = 0 ПО ТаблицаШапокМакета.Количество()-1 Цикл
		
		Если ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование = "ОписаниеНаСайте" Тогда

			ИмяОбласти = ГоризонтальнаяОбласть+"|"+ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование;
			
			Секция = Макет.ПолучитьОбласть(ИмяОбласти);
			
			Секция.Параметры[ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование] = "http://www.ktc-ua.com/id/" + Формат(Число(Выборка[ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование]), "ЧГ=0");
			ТабличныйДокумент.Присоединить(Секция);
		//ИначеЕсли ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование = "СпецКолонка" Тогда

		//	ИмяОбласти = ГоризонтальнаяОбласть+"|"+ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование;
		//	
		//	Секция = Макет.ПолучитьОбласть(ИмяОбласти);
		//	
		//	Запрос = Новый Запрос(ПолучитьТекстЗапросаНаличиеДругиеСклады());
		//	МассивСкладов = Новый Массив;
		//	Для Каждого Склад Из Склады Цикл
		// 		МассивСкладов.Добавить(Справочники.Склады.НайтиПоНаименованию(Склад.Значение));
		//	КонецЦикла;
		//			  
		//	Запрос.УстановитьПараметр("Склад",МассивСкладов);
		//	Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.ПолучитьСсылку(Новый УникальныйИдентификатор("102d8b7a-6c19-11e0-be8f-001517115d85")));
		//	Запрос.УстановитьПараметр("Номенклатура", Выборка["Номенклатура"]);
		//	Запрос.УстановитьПараметр("ГуртовыйСклад", Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d3409-40c2-11e0-9f98-001517115d85")));
		//	ВыборкаРезультат = Запрос.Выполнить().Выбрать();
		//	
		//	СпеКолонкаТекст = "";
		//	Пока ВыборкаРезультат.Следующий() Цикл 
		//		 СпеКолонкаТекст = СпеКолонкаТекст+ВыборкаРезультат.УникальныйИдентификатор+"   ";
		//	КонецЦикла;
		//	 
		//	Запрос = Новый Запрос( ПолучитьТекстЗапросаНаличиеГуртовойСклад());
		//	Запрос.УстановитьПараметр("Номенклатура", Выборка["Номенклатура"]);
		//	Запрос.УстановитьПараметр("ГуртовыйСклад", Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("d10d3409-40c2-11e0-9f98-001517115d85")));
		//	ВыборкаРезультат = Запрос.Выполнить().Выбрать();
		//	ВыборкаРезультат.Следующий();
		//	
		//	СпеКолонкаТекст = ?(ПустаяСтрока(ВыборкаРезультат.Спец),СпеКолонкаТекст,ВыборкаРезультат.Спец);
		//	
		//	Секция.Параметры[ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование] = ?(Выборка[ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование] = "+",СпеКолонкаТекст,Выборка[ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование]);
		//	ТабличныйДокумент.Присоединить(Секция);
		//	
		ИначеЕсли ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование <> "Цена" Тогда
		
			ИмяОбласти = ГоризонтальнаяОбласть+"|"+ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование;
			
			Секция = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование <> "Отступ" Тогда
				Секция.Параметры[ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование] = Выборка[ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование];
			КонецЕсли;
			ТабличныйДокумент.Присоединить(Секция);
						
		Иначе
			//СоответсвиеВалют = ктсПолучитьВалютыИзСпискаЦен(СписокВидовЦен);
		
			ИмяОбласти = ГоризонтальнаяОбласть+"|"+ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование;
			Для Каждого ВидЦены ИЗ СписокВидовЦен Цикл
				
				Секция = Макет.ПолучитьОбласть(ИмяОбласти);
				Стрелка = Выборка["ИзменениеЦены"+ктсОбработкаИменПараметров(Строка(ВидЦены))];
				Если Стрелка = "↑" Тогда
					Секция.ТекущаяОбласть.ЦветТекста = Новый Цвет(255, 65, 181);
				КонецЕсли;
				Если Стрелка = "↓" Тогда
					Секция.ТекущаяОбласть.ЦветТекста = Новый Цвет(66, 190, 123);
				КонецЕсли;
				Секция.Параметры.Цена = Формат(Выборка["Цена"+ктсОбработкаИменПараметров(Строка(ВидЦены))],"ЧДЦ=2")  + " " + Стрелка;
				ТабличныйДокумент.Присоединить(Секция);
				
				Если ЗначениеЗаполнено(ВидЦены.Значение) Тогда
					Если ТипЗнч(ВидЦены.Значение) = Тип("СправочникСсылка.ВидыЦен") Тогда
						Если ВидЦены.Значение.ВалютаЦены = ВалютаУпрУчета Тогда
							
							Секция = Макет.ПолучитьОбласть(ИмяОбласти);
							Стрелка = Выборка["ИзменениеЦены"+ктсОбработкаИменПараметров(Строка(ВидЦены)) + "ГРН"];
							Если Стрелка = "↑" Тогда
								Секция.ТекущаяОбласть.ЦветТекста = Новый Цвет(255, 65, 181);
							КонецЕсли;
							Если Стрелка = "↓" Тогда
								Секция.ТекущаяОбласть.ЦветТекста = Новый Цвет(66, 190, 123);
							КонецЕсли;
							Секция.Параметры.Цена = Формат(Выборка["Цена"+ктсОбработкаИменПараметров(Строка(ВидЦены)) + "ГРН"],"ЧДЦ=2")  + " " + Стрелка;
							ТабличныйДокумент.Присоединить(Секция);
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли; 
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
				
КонецФункции

&НаСервере
Функция ктсПолучитьИмяОбластиЗаСпецКолонкой(СпецКолонка)
	
	Если Найти(СпецКолонка, "БВ") Тогда
		Возврат "ДанныеБВ";
	КонецЕсли;
	Если Найти(СпецКолонка, "N") Тогда
		Возврат "ДанныеНовый";
	КонецЕсли;
	
	Возврат "Данные";
	
КонецФункции

&НаСервере
Функция ктсОбработкаГруппыВыборкиЗапроса(Выборка, Макет, УровеньВыборки)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	СтруктураГруппы = ктсПолучитьИмяОбластиЗаУровнемВыборки(УровеньВыборки);
	
	Для ИндексСтрокиТаблицы = 0 ПО ТаблицаШапокМакета.Количество()-1 Цикл
		
		Если ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование <> "Цена" Тогда
		
			ИмяОбласти = СтруктураГруппы.ИмяОбласти+"|"+ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование;
			
			Секция = Макет.ПолучитьОбласть(ИмяОбласти);
			Если ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование = "Артикул" Тогда
				Секция.Параметры.Наименование =  СтруктураГруппы.Пробели+Выборка["Наименование"];
			КонецЕсли;
			
			Если ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование = "Бренд" Тогда
				Секция.Параметры.Бренд =  "";
			КонецЕсли;
			
			
			ТабличныйДокумент.Присоединить(Секция);
		
		Иначе
			//СоответсвиеВалют = ктсПолучитьВалютыИзСпискаЦен(СписокВидовЦен);
		
			Индекс = 0;
			ИмяОбласти = СтруктураГруппы.ИмяОбласти+"|"+ТаблицаШапокМакета[ИндексСтрокиТаблицы].Наименование;
			Для Каждого ВидЦены ИЗ СписокВидовЦен Цикл
				
				Секция = Макет.ПолучитьОбласть(ИмяОбласти);
				ТабличныйДокумент.Присоединить(Секция);
				
				Индекс = Индекс + 1;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;

	
КонецФункции

&НаСервере
Функция ктсПолучитьИмяОбластиЗаУровнемВыборки(УровеньВыборки)
	
	//Если УровеньВыборки = Неопределено Тогда УровеньВыборки = 0 КонецЕсли;
	
	ИмяОбласти = Неопределено;
	Если УровеньВыборки = 0 Тогда
		ИмяОбласти = "Группы";
	ИначеЕсли УровеньВыборки = 1 Тогда
		ИмяОбласти = "ГруппыУ1";
	Иначе
		ИмяОбласти = "ГруппыУ2";
	КонецЕсли;
	
	Пробели = "  ";
	Для ИндексПробелов = 0 ПО УровеньВыборки Цикл
		Пробели = Пробели + "  ";
	КонецЦикла;
	
	СтруктураПередачи = Новый Структура;
	СтруктураПередачи.Вставить("ИмяОбласти", ИмяОбласти);
	СтруктураПередачи.Вставить("Пробели", Пробели);
	
	Возврат СтруктураПередачи;
		
КонецФункции

&НаСервере
Функция ктсОбработкаВыборкаЗапроса(Выборка, Макет)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	
	ТекущийРодитель = Неопределено;
	СоответсвиеУровней = Новый Соответствие;
	
	КешГрупп = Новый Массив;
	СдвигУровня = 0;
	
	Пока Выборка.Следующий() Цикл
		
		//Если Строка(Выборка.Наименование) = "_КТС товари" Тогда
		//	СдвигУровня = 1;
		//	Выборка.Следующий();
		//КонецЕсли;
		
		Если Выборка.ЭтоГруппа Тогда
			
			Если КешГрупп.ВГраница() = -1 Тогда
				
				СтруктураКешырования = Новый Структура;
				СтруктураКешырования.Вставить("Документ", ктсОбработкаГруппыВыборкиЗапроса(Выборка, Макет, Выборка.Уровень() - СдвигУровня));
				СтруктураКешырования.Вставить("Уровень", Выборка.Уровень() - СдвигУровня);
				
				КешГрупп.Добавить(СтруктураКешырования);
				
			Иначе
				
				Если КешГрупп[КешГрупп.ВГраница()].Уровень < Выборка.Уровень() - СдвигУровня Тогда
					
					СтруктураКешырования = Новый Структура;
					СтруктураКешырования.Вставить("Документ", ктсОбработкаГруппыВыборкиЗапроса(Выборка, Макет, Выборка.Уровень() - СдвигУровня));
					СтруктураКешырования.Вставить("Уровень", Выборка.Уровень() - СдвигУровня);
				
					КешГрупп.Добавить(СтруктураКешырования);
					
				Иначе
					
					//КешГрупп.Очистить();
																
					Пока КешГрупп.Количество() - 1 >= Выборка.Уровень() - СдвигУровня Цикл
							КешГрупп.Удалить(КешГрупп.Количество() - 1);
					КонецЦикла;
					
					СтруктураКешырования = Новый Структура;
					СтруктураКешырования.Вставить("Документ", ктсОбработкаГруппыВыборкиЗапроса(Выборка, Макет, Выборка.Уровень() - СдвигУровня));
					СтруктураКешырования.Вставить("Уровень", Выборка.Уровень() - СдвигУровня);
				
					КешГрупп.Добавить(СтруктураКешырования);
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			Для Каждого Группа ИЗ КешГрупп Цикл
				
				ТабличныйДокумент.Вывести(Группа.Документ, Группа.Уровень);
				
			КонецЦикла;
			
			КешГрупп.Очистить();
			
			ТабличныйДокумент.Вывести(ктсОбработкаЭлементаВыборкиЗапроса(Выборка, Макет), Выборка.Уровень() - СдвигУровня);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервере
Функция ПолучитьЗначениеУникальногоИдентификатораСклада(Склад)
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СкладыКонтактнаяИнформация.Представление КАК Идентификатор
	|ИЗ
	|	Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяИнформация
	|ГДЕ
	|	СкладыКонтактнаяИнформация.Вид = &Вид
	|	И СкладыКонтактнаяИнформация.Ссылка = &Склад");
	Запрос.УстановитьПараметр("Вид",Справочники.ВидыКонтактнойИнформации.ПолучитьСсылку(Новый УникальныйИдентификатор("102d8b7a-6c19-11e0-be8f-001517115d85")));
	Запрос.УстановитьПараметр("Склад",Склад);
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();

	Если ВыборкаЗапроса.Следующий() Тогда 
		Возврат ВыборкаЗапроса.Идентификатор;
	Иначе 
		Возврат "Не задан";
	КонецЕсли;
 КонецФункции

&НаСервере
Функция ктсПолучитьАкцию()
	
	МассивЗначений = Новый Массив;
	
	Запрос = Новый Запрос;
	ТексЗапроса = "
	|ВЫБРАТЬ
	|	ДополнительныеСведения.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|ГДЕ
	|	ДополнительныеСведения.Значение В
	|	(
	|		ВЫБРАТЬ 
	|			ЗначениеСвойств.Ссылка
	|		ИЗ
	|			Справочник.ЗначенияСвойствОбъектов КАК ЗначениеСвойств
	|		ГДЕ
	|			ЗначениеСвойств.Наименование = &Акция
	|	)";
	
	Запрос.УстановитьПараметр("Акция", "Акція");
	Запрос.Текст = ТексЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Таблица = РезультатЗапроса.Выгрузить();
	
	МассивЗначений = Таблица.ВыгрузитьКолонку("Объект");
	
	Возврат МассивЗначений;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаНаличиеГуртовойСклад()
	
	Возврат
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СвободныеОстатки.ВНаличииОстаток = 1
	|			ТОГДА ""+""
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СвободныеОстатки.ВНаличииОстаток <= 4
	|					ТОГДА ""++""
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СвободныеОстатки.ВНаличииОстаток <= 19
	|							ТОГДА ""+++""
	|						ИНАЧЕ ВЫБОР
	|								КОГДА СвободныеОстатки.ВНаличииОстаток <= 99
	|									ТОГДА ""++++""
	|								ИНАЧЕ ""+++++""
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК Спец
	|   ИЗ
	|	РегистрНакопления.СвободныеОстатки.Остатки(
	|			,
	|			Номенклатура = &Номенклатура
	|				И Склад = &ГуртовыйСклад) КАК СвободныеОстатки
	|   ГДЕ СвободныеОстатки.ВНаличииОстаток<>0";
		
КонецФункции

							  
// Инициализацыя на сервере
&НаСервере
Процедура ктсИнициализацияШапокНаСервере()
	
	ТаблицаШапокМакета.Очистить();
	
	НоваяСтрока = ТаблицаШапокМакета.Добавить();
	НоваяСтрока.Наименование = "Отступ";
	НоваяСтрока.Ширина = 0.64;
	
	НоваяСтрока = ТаблицаШапокМакета.Добавить();
	НоваяСтрока.Наименование = "Код";
	НоваяСтрока.Ширина = 10;
	
	НоваяСтрока = ТаблицаШапокМакета.Добавить();
	НоваяСтрока.Наименование = "Артикул";
	НоваяСтрока.Ширина = 10;
	
	НоваяСтрока = ТаблицаШапокМакета.Добавить();
	НоваяСтрока.Наименование = "Наименование";
	НоваяСтрока.Ширина = 70;
	Если Бренд Тогда 
		НоваяСтрока = ТаблицаШапокМакета.Добавить();
		НоваяСтрока.Наименование = "Бренд";
		НоваяСтрока.Ширина = 13;
	КонецЕсли;
	
	НоваяСтрока = ТаблицаШапокМакета.Добавить();
	НоваяСтрока.Наименование = "Цена";
	НоваяСтрока.Ширина = 10;
	
	НоваяСтрока = ТаблицаШапокМакета.Добавить();
	НоваяСтрока.Наименование = "Гарантия";
	НоваяСтрока.Ширина = 10;
	
	НоваяСтрока = ТаблицаШапокМакета.Добавить();
	НоваяСтрока.Наименование = "СпецКолонка";
	НоваяСтрока.Ширина = 5.5;
	
	НоваяСтрока = ТаблицаШапокМакета.Добавить();
	НоваяСтрока.Наименование = "ОписаниеНаСайте";
	НоваяСтрока.Ширина = 13;

	
КонецПроцедуры


// Поиск пустых цен на сервере
&НаСервере
Функция  ктсПоискПустыхЦенПеренаправитьНаСервер()
	
	ТекстЗапроса = ктсСформироватьЗапросПоискаПустыхЦен();
	
	Запрос = Новый Запрос;
	
	ктсУстановитьПараметрыЗапросаПоискаПустыхЦен(Запрос);
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатыЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатыЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);	
	
	ТабличныйДокумент = ктсВывестиРезультатыЗапросаПустыхЦен(Выборка);
	
	Возврат ТабличныйДокумент;
		
КонецФункции

&НаСервере
Функция ктсСформироватьЗапросПоискаПустыхЦен()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникНоменклатура.Код КАК Код,";
	
	Для Каждого ВидЦены ИЗ ВидыЦенДляПоиска Цикл
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБОР
		|	КОГДА РегистрЦен" + ктсОбработкаИменПараметров(Строка(ВидЦены)) + ".Цена > 0
		|	ТОГДА РегистрЦен" + ктсОбработкаИменПараметров(Строка(ВидЦены)) + ".Цена
		|	ИНАЧЕ ""-""
		|КОНЕЦ КАК Цена" + ктсОбработкаИменПараметров(Строка(ВидЦены)) + ",";
		
	КонецЦикла; 
	
	ТекстЗапроса = ТекстЗапроса + "	
	|	СправочникНоменклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура";
	
	Для Каждого ВидЦены ИЗ ВидыЦенДляПоиска Цикл
		
		ТекстЗапроса = ТекстЗапроса + "
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ), ВидЦены = &ВидЦены" + ктсОбработкаИменПараметров(Строка(ВидЦены)) + ") КАК РегистрЦен" + ктсОбработкаИменПараметров(Строка(ВидЦены)) + "
		|	ПО
		|		РегистрЦен" + ктсОбработкаИменПараметров(Строка(ВидЦены)) + ".Номенклатура = СправочникНоменклатура.Ссылка
		|	И   РегистрЦен" +  ктсОбработкаИменПараметров(Строка(ВидЦены)) + ".Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)"; 
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ГДЕ 
	|	СправочникНоменклатура.ЭтоГруппа = Ложь
	|И	СправочникНоменклатура.Ссылка В ИЕРАРХИИ(&ГруппаНоменклатурыДляПоиска)
	|И (";
	
	КоличествоЦиклов = 0;
	Для Каждого ВидЦены ИЗ ВидыЦенДляПоиска Цикл
		
		Если КоличествоЦиклов Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ИЛИ  РегистрЦен" + ктсОбработкаИменПараметров(Строка(ВидЦены)) + ".Цена <= 0";
		Иначе
			ТекстЗапроса = ТекстЗапроса + "
			|  РегистрЦен" + ктсОбработкаИменПараметров(Строка(ВидЦены)) + ".Цена <= 0";
		КонецЕсли;
		
		КоличествоЦиклов = КоличествоЦиклов + 1;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + ")";
	
	Возврат ТекстЗапроса;
	
Конецфункции

&НаСервере
Процедура ктсУстановитьПараметрыЗапросаПоискаПустыхЦен(Запрос)
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	МассивГруппНоменклатуры = Новый Массив;
	Для Каждого НоменклатураДляПоиска ИЗ ГруппаНоменклатурыДляПоиска Цикл
		МассивГруппНоменклатуры.Добавить(НоменклатураДляПоиска.Значение);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ГруппаНоменклатурыДляПоиска", МассивГруппНоменклатуры);
	
	Для Каждого ВидЦены ИЗ ВидыЦенДляПоиска Цикл
		
		Запрос.УстановитьПараметр("ВидЦены" + ктсОбработкаИменПараметров(Строка(ВидЦены)), ВидЦены.Значение);
		
	КонецЦикла
	
КонецПроцедуры

&НаСервере
Функция ктсВывестиРезультатыЗапросаПустыхЦен(Выборка)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбъектФормы = РеквизитФормыВЗначение("Объект");
	Макет = ОбъектФормы.ПолучитьМакет("МакетПустыхЦен");
	
	Буффер = Новый ТабличныйДокумент;
	Секция = Макет.ПолучитьОбласть("Заголовок|Код");	
	Буффер.Присоединить(Секция);
	
	Секция = Макет.ПолучитьОбласть("Заголовок|Номенклатура");
	Буффер.Присоединить(Секция);
	
	Для Каждого ВидЦены ИЗ ВидыЦенДляПоиска Цикл
		
		Секция = Макет.ПолучитьОбласть("Заголовок|Цена");
		Секция.Параметры.Цена = Строка(ВидЦены);
		Буффер.Присоединить(Секция);
		
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(Буффер);
	
	Пока Выборка.Следующий() Цикл
		
		Буффер = Новый ТабличныйДокумент;
		Секция = Макет.ПолучитьОбласть("Данные|Код");
		Секция.Параметры.Код = Выборка.Код;
		Буффер.Присоединить(Секция);
		
		Секция = Макет.ПолучитьОбласть("Данные|Номенклатура");
		Секция.Параметры.Номенклатура = Выборка.Номенклатура;
		Буффер.Присоединить(Секция);
		
		Для Каждого ВидЦены ИЗ ВидыЦенДляПоиска Цикл
			
			Секция = Макет.ПолучитьОбласть("Данные|Цена");
			Секция.Параметры.Цена = Выборка["Цена" + ктсОбработкаИменПараметров(Строка(ВидЦены))];
			Буффер.Присоединить(Секция);
		
		КонецЦикла;
		
		
		ТабличныйДокумент.Вывести(Буффер);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции



// Поиск пустых гарантий на сервере
&НаСервере
Функция ктсПоискПустыхГарантийРПеренаправитьНаСервер()
	
	ТекстЗапроса = ктсСформироватьЗапросПоискаПустыхГарантий();
	
	Запрос = Новый Запрос;
	
	ктсУстановитьПараметрыЗапросаПоискаПустыхГарантий(Запрос);
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатыЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатыЗапроса.Выбрать(ОбходРезультатаЗапроса.Прямой);
	
	ТабличныйДокумент = ктсВывестиРезультатыЗапросаПустыхГарантий(Выборка);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

&НаСервере
Функция ктсСформироватьЗапросПоискаПустыхГарантий()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникНоменклатура.Код КАК Код,
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	ДополнительныеРеквизитыНоменклатуры.Значение КАК ЗначениеГарантии
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДополнительныеРеквизитыНоменклатуры
	|ПО
	|	ДополнительныеРеквизитыНоменклатуры.Ссылка = СправочникНоменклатура.ССылка
	|И 	ДополнительныеРеквизитыНоменклатуры.Свойство В
	|										(
	|											ВЫБРАТЬ
	|												ДРИС.Ссылка
	|											ИЗ
	|												ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДРИС
	|											ГДЕ
	|												ДРИС.Наименование = &Гарантия
	|										)
	|ГДЕ
	|	СправочникНоменклатура.Ссылка В ИЕРАРХИИ(&ГруппаПоискаНоменклатуры)
	|И 	СправочникНоменклатура.ЭтоГруппа = Ложь";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура ктсУстановитьПараметрыЗапросаПоискаПустыхГарантий(Запрос)
	
	МассивГруппНоменклатуры = Новый Массив;
	Для Каждого НоменклатураДляПоиска ИЗ ГруппаНоменклатурыДляПоиска Цикл
		МассивГруппНоменклатуры.Добавить(НоменклатураДляПоиска.Значение);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ГруппаПоискаНоменклатуры", МассивГруппНоменклатуры);
	
	Запрос.УстановитьПараметр("Гарантия", "Гарантія");
	
КонецПроцедуры

&НаСервере
Функция ктсВывестиРезультатыЗапросаПустыхГарантий(Выборка)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбъектФормы = РеквизитФормыВЗначение("Объект");
	Макет = ОбъектФормы.ПолучитьМакет("МакетПустыхГарантий");
	
	Секция = Макет.ПолучитьОбласть("Заголовок");
	ТабличныйДокумент.Вывести(Секция);
	
	Пока Выборка.Следующий() Цикл
		
		Если ПустаяСтрока(Выборка.ЗначениеГарантии) Тогда
			
			Секция = Макет.ПолучитьОбласть("Данные");
			Секция.Параметры.Код = Выборка.Код;
			Секция.Параметры.Номенклатура = Выборка.Номенклатура;
			ТабличныйДокумент.Вывести(Секция);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции


&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ШиринаПоляЦены", ШиринаПоляЦены);
	Настройки.Вставить("ВидыЦенДляПоиска", ВидыЦенДляПоиска);
	Настройки.Вставить("ГруппаНоменклатурыДляПоиска", ГруппаНоменклатурыДляПоиска);
	Настройки.Вставить("ГруппыНоменклатуры", ГруппыНоменклатуры);
	Настройки.Вставить("ДатаСравненияЦен", ДатаСравненияЦен);
	Настройки.Вставить("НоменклатураАкция", НоменклатураАкция);
	Настройки.Вставить("НоменклатураНовый", НоменклатураНовый);
	Настройки.Вставить("Склады", Склады);
	Настройки.Вставить("ФайлЛегенды", ФайлЛегенды);
	Настройки.Вставить("ФайлЛоготипа", ФайлЛоготипа);
	Настройки.Вставить("СписокВидовЦен", СписокВидовЦен);
	
КонецПроцедуры


&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ШиринаПоляЦены = Настройки["ШиринаПоляЦены"];
	ВидыЦенДляПоиска = Настройки["ВидыЦенДляПоиска"];
	ГруппаНоменклатурыДляПоиска = Настройки["ГруппаНоменклатурыДляПоиска"];
	ГруппыНоменклатуры = Настройки["ГруппыНоменклатуры"];
	ДатаСравненияЦен = Настройки["ДатаСравненияЦен"];
	НоменклатураАкция = Настройки["НоменклатураАкция"];
	НоменклатураНовый = Настройки["НоменклатураНовый"];
	Склады = Настройки["Склады"];
	ФайлЛегенды = Настройки["ФайлЛегенды"];
	ФайлЛоготипа = Настройки["ФайлЛоготипа"];
	СписокВидовЦен = Настройки["СписокВидовЦен"];
	
КонецПроцедуры






&НаКлиенте
Процедура СкладыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокСкладов", Склады);
	
	Результат = ОткрытьФормуМодально("ВнешняяОбработка.ПрайсЛист.Форма.ФормаСписокСкладов", ПараметрыФормы);
	
	Если Результат <> Неопределено Тогда
		
		Склады.ЗагрузитьЗначения(Результат);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокВидовЦенНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокВидовЦен", СписокВидовЦен);
	
	Результат = ОткрытьФормуМодально("ВнешняяОбработка.ПрайсЛист.Форма.ФормаСписокЦен", ПараметрыФормы);
	
	Если Результат <> Неопределено Тогда
		
		СписокВидовЦен.ЗагрузитьЗначения(Результат);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВидыЦенДляПоискаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокВидовЦен", ВидыЦенДляПоиска);
	
	Результат = ОткрытьФормуМодально("ВнешняяОбработка.ПрайсЛист.Форма.ФормаСписокЦен", ПараметрыФормы);
	
	Если Результат <> Неопределено Тогда
		
		ВидыЦенДляПоиска.ЗагрузитьЗначения(Результат);
		
	КонецЕсли;
	
КонецПроцедуры

