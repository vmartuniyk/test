#Область ИнтерфейсАвтоматическихТестов

&НаКлиенте
Перем ЮнитТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест = ЮнитТестирование;
	
	СписокТестов = Новый Массив;
	СписокТестов.Добавить("Тест_ПроверитьТекстЗапросаАдресСписокНоменклатуры");
	СписокТестов.Добавить("Тест_ПроверитьТекстЗапросаАдресСерийныеНомера");
	
	Возврат СписокТестов;
	
КонецФункции


&НаКлиенте
Процедура Тест_ПроверитьТекстЗапросаАдресСписокНоменклатуры() Экспорт
	ТекстЗапроса =ПолучитьТекстЗапросаАдресСписокНоменклатуры();
	ЮнитТест.ПроверитьТип(ТекстЗапроса, Тип("Строка"));
КонецПроцедуры



&НаКлиенте
Процедура Тест_ПроверитьТекстЗапросаАдресСерийныеНомера() Экспорт
	ТекстЗапроса =ПолучитьТекстЗапросаАдресСерийныеНомера();
	ЮнитТест.ПроверитьТип(ТекстЗапроса, Тип("Строка"));
КонецПроцедуры

#КонецОбласти



&НаКлиенте
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив) Экспорт
	
	СоздатьЗадачуНаМаршрут(ОбъектыНазначенияМассив[0]); 

КонецПроцедуры // ВыполнитьКоманду()


// Создает задачу на маршрут
//
// Параметры
//  ДокументСсылка  - ДокументСсылка.РеализацияТоваровИУслуг - ссылка на документ реализации товаров и услуг
//
&НаКлиенте
Процедура СоздатьЗадачуНаМаршрут(ДокументСсылка)
	
	ПараметрыФормы = ПолучитьПараметрыФормы(ДокументСсылка);
	ОткрытьФорму("ВнешняяОбработка." + ПараметрыФормы.АдресОбъекта + ".Форма.ФормаСпискаНоменклатуры" , ПараметрыФормы);

КонецПроцедуры // ПолучитьСписокНоменклатуры()

// Получает параметры формы
//
// Параметры:
//  ДокументСсылка  - ДокументСсылка.РеализацияТоваровИУслуг - ссылка на документ реализации товаров и услуг
//
// Возвращаемое значение:
//   Структура   	- структура данных для передачи в внешнюю обаботку
//
&НаСервере
Функция ПолучитьПараметрыФормы(ДокументСсылка)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДокументСсылка"			, ДокументСсылка);
	ПараметрыФормы.Вставить("АдресСписокНоменклатуры"	, ПолучитьАдресСписокНоменклатуры(ДокументСсылка));
	ПараметрыФормы.Вставить("АдресСерийныеНомера"		, ПолучитьАдресСерийныеНомера(ДокументСсылка));
	ПараметрыФормы.Вставить("АдресОбъекта"				, git_ПереопределениеОбработчиковСервер.ПолучитьИмяВнешнегоОбъекта("Задачи на маршрут"));
	Возврат ПараметрыФормы;
	
КонецФункции


// Помещает таблицу Товары во временное хранилище
//
// Параметры:
//  ДокументСсылка  - ДокументСсылка.РеализацияТоваровИУслуг - ссылка на документ реализации товаров и услуг
//
// Возвращаемое значение:
//   Строка   		- адрес временного хранилища
//
&НаСервере
Функция ПолучитьАдресСписокНоменклатуры(ДокументСсылка)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос 			= Новый Запрос();
	Запрос.Текст	= ПолучитьТекстЗапросаАдресСписокНоменклатуры();
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
						  
	Возврат ПоместитьВоВременноеХранилище(Запрос.Выполнить().Выгрузить(), УникальныйИдентификатор);


КонецФункции // Получить()


// Текст запроса для получения адреса внутреннего хранилища списка номенклатуры
//
// Параметры:
//
// Возвращаемое значение:
//   Строка   - Текст запроса
//
&НаСервере
Функция ПолучитьТекстЗапросаАдресСписокНоменклатуры()

		Возврат
	             "ВЫБРАТЬ
	             |	РеализацияТоваровУслугТовары.Номенклатура,
	             |	РеализацияТоваровУслугТовары.Упаковка,
	             |	РеализацияТоваровУслугТовары.КоличествоУпаковок КАК Количество,
	             |	РеализацияТоваровУслугТовары.КлючСвязиСерийныхНомеров,
	             |	РеализацияТоваровУслугТовары.Номенклатура.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера
	             |ИЗ
	             |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	             |ГДЕ
	             |	РеализацияТоваровУслугТовары.Ссылка = &Ссылка
	             |	И РеализацияТоваровУслугТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)";


КонецФункции // ПолучитьТекстЗапросаАдресСписокНоменклатуры()


// Помещает серийные номера во временное хранилище
//
// Параметры:
//  ДокументСсылка  - ДокументСсылка.РеализацияТоваровИУслуг - ссылка на документ реализации товаров и услуг
//
// Возвращаемое значение:
//   Строка   		- адрес временного хранилища
//
&НаСервере
Функция ПолучитьАдресСерийныеНомера(ДокументСсылка)

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос 			= Новый Запрос();
	Запрос.Текст	= ПолучитьТекстЗапросаАдресСерийныеНомера();
			
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
						  
	Возврат ПоместитьВоВременноеХранилище(Запрос.Выполнить().Выгрузить(),УникальныйИдентификатор);


КонецФункции // Получить()
 

// Текст запроса для получения адреса внутреннего хранилища списка номенклатуры
//
// Параметры:
//
// Возвращаемое значение:
//   Строка   - Текст запроса
//
&НаСервере
Функция ПолучитьТекстЗапросаАдресСерийныеНомера()

		Возврат
				"ВЫБРАТЬ
				|	РТиУ.Номенклатура,
				|	РТиУ.Упаковка,
				|	РТиУ.КлючСвязиСерийныхНомеров,
				|	РТиУ.КоличествоУпаковок,
				|	СН.СерийныеНомера КАК СерийныйНомер
				|ИЗ
				|	Документ.РеализацияТоваровУслуг.Товары КАК РТиУ
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СерийныеНомераНоменклатуры КАК СН
				|		ПО РТиУ.Номенклатура					= СН.Номенклатура
				|			И РТиУ.Склад 						= СН.Склад
				|			И РТиУ.Ссылка						= СН.Регистратор
				|			И (РТиУ.Ссылка 						= &Ссылка)
				|			И РТиУ.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
                |
				|ОБЪЕДИНИТЬ ВСЕ
 				|
				|ВЫБРАТЬ
				|	РТиУ.Номенклатура,
				|	РТиУ.Упаковка,
				|	РТиУ.КлючСвязиСерийныхНомеров,
				|	РТиУ.КоличествоУпаковок,
				|	СН.СерийныеНомера
				|ИЗ
				|	Документ.РеализацияТоваровУслуг.Товары КАК РТиУ
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СерийныеНомераНоменклатуры КАК СН
				|		ПО РТиУ.Номенклатура					= СН.Номенклатура
				|			И РТиУ.Склад 						= СН.Склад
				|			И РТиУ.Ссылка 						= СН.Регистратор.Распоряжение
				|			И (РТиУ.Ссылка 						= &Ссылка)
				|			И РТиУ.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)";


КонецФункции // ПолучитьТекстЗапросаАдресСписокНоменклатуры()

