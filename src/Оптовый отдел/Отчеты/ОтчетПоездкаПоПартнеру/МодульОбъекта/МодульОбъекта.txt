
#Область ПрограмныйИнтерфейс

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)	
	
	СтандартнаяОбработка = Ложь;
	
	УстановитьПривилегированныйРежим(Истина);
	
		
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	ПараметрыДанных = НастройкиКомпоновкиДанных.ПараметрыДанных;
	
	НаборДанныех = ПолучитьНаборДанных(ПараметрыДанных);
	СтруктураНабораДанных = Новый Структура;
	СтруктураНабораДанных.Вставить("Отчет", НаборДанныех);
	 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных, ДанныеРасшифровки);
		
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, СтруктураНабораДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедуриИФункции

Функция ПолучитьНаборДанных(ПараметрыДанных)
	
	Запрос 		 	= Новый Запрос;
	ТекстЗапроса 	= ПолучитьТекстЗапросаНаборДанных();
	Запрос.Текст 	= ТекстЗапроса;
	Запрос.УстановитьПараметр("ОтделОптовыхПродаж", Справочники.СтруктураПредприятия.ПолучитьСсылку(Новый УникальныйИдентификатор("ebe6f508-3ffd-11e0-9f98-001517115d85")));
	Запрос.УстановитьПараметр("ВалютаУпрУчета", 	Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРеглУчета", 	Константы.ВалютаРегламентированногоУчета.Получить());

	Для Каждого Элемент Из ПараметрыДанных.Элементы Цикл
		
		Если ТипЗнч(Элемент.Значение) = Тип("СтандартнаяДатаНачала") Тогда
			Запрос.УстановитьПараметр(Строка(Элемент.Параметр), Элемент.Значение.Дата);
		Иначе
			Запрос.УстановитьПараметр(Строка(Элемент.Параметр), Элемент.Значение);	
		КонецЕсли;
				
	КонецЦикла;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьНаборДанных()

Функция ПолучитьТекстЗапросаНаборДанных()
	
	ТекстЗапроса = "
		////////////////////////////////////////////////////////////////////////////////
		// 0. Выбор активных документов по поездке
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
       	|	РегистрДокПоездка.ДокументПоездки КАК ДокументПоездки
       	|ПОМЕСТИТЬ ДокПоездки
       	|ИЗ
       	|	РегистрСведений.ПоездкаЗаМаршрутомФинансы КАК РегистрДокПоездка
       	|ГДЕ
       	|	РегистрДокПоездка.ДокументПоездки.Проведен 			= ИСТИНА
       	|И 	РегистрДокПоездка.ДокументПоездки.ПометкаУдаления 	= ЛОЖЬ
       	|И 	РегистрДокПоездка.ДокументПоездки.СтатусПоездки 	= ЗНАЧЕНИЕ(Перечисление.КТС_СтатусыПоездки.ВПроцессе)
       	|И 	НАЧАЛОПЕРИОДА(РегистрДокПоездка.ДокументПоездки.Дата, ДЕНЬ) <= &НачалоДня
       	|
       	|ИНДЕКСИРОВАТЬ ПО
       	|	ДокументПоездки
       	|;
	    ////////////////////////////////////////////////////////////////////////////////
		// 1. Получаем места и долги по поездке
       	|ВЫБРАТЬ РАЗЛИЧНЫЕ
       	|	ПоездкаЗаМаршрутомФинансы.ДокументПоездки 	КАК ДокументПоездки,
       	|	ПоездкаЗаМаршрутомФинансы.Партнер 			КАК Партнер,
       	|	СУММА(	ВЫБОР
		|				КОГДА ПоездкаЗаМаршрутомФинансы.Валюта = &ВалютаУпрУчета 
		|				ТОГДА 	ВЫБОР
       	|							КОГДА IsNull(ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером, 0) = 1
       	|								ТОГДА 0
       	|							КОГДА IsNull(ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером, 0) <> 0
       	|								И IsNull(ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером, 0) <> 1
       	|								ТОГДА ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером
       	|							ИНАЧЕ ПоездкаЗаМаршрутомФинансы.СуммаУчета
       	|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК СуммаКОплатеUSD,
		|	СУММА(	ВЫБОР
		|				КОГДА ПоездкаЗаМаршрутомФинансы.Валюта = &ВалютаРеглУчета 
		|				ТОГДА 	ВЫБОР
       	|							КОГДА IsNull(ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером, 0) = 1
       	|								ТОГДА 0
       	|							КОГДА IsNull(ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером, 0) <> 0
       	|								И IsNull(ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером, 0) <> 1
       	|								ТОГДА ПоездкаЗаМаршрутомФинансы.СуммаНазначеннаяМенеджером
       	|							ИНАЧЕ ПоездкаЗаМаршрутомФинансы.СуммаУчета
       	|						КОНЕЦ
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК СуммаКОплатеUAH,
       	|	ПоездкаЗаМаршрутомФинансы.Партнер.ОсновнойМенеджер КАК ОсновнойМенеджер,
       	|	IsNull(ПоездкаЗаМаршрутом.МестоДоставки, ЗНАЧЕНИЕ(Справочник.МестаДоставки.ПустаяСсылка)) КАК МестоДоставки
       	|ПОМЕСТИТЬ ПартнерыКОплате
       	|ИЗ
       	|	РегистрСведений.ПоездкаЗаМаршрутомФинансы КАК ПоездкаЗаМаршрутомФинансы
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокПоездки КАК ДокПоездки
		|ПО	ДокПоездки.ДокументПоездки = ПоездкаЗаМаршрутомФинансы.ДокументПоездки
	   	|
       	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом
       	|ПО ПоездкаЗаМаршрутомФинансы.ДокументПоездки = ПоездкаЗаМаршрутом.ДокументПоездки
       	|И 	ПоездкаЗаМаршрутомФинансы.Партнер 		  = ВЫРАЗИТЬ(ПоездкаЗаМаршрутом.Owner КАК Справочник.Партнеры)
		|
       	|ГДЕ
       	| 	ПоездкаЗаМаршрутомФинансы.Партнер.ОсновнойМенеджер.ТекущееПодразделение = &ОтделОптовыхПродаж
       	|И 	IsNull(ПоездкаЗаМаршрутом.ИсключеноИзДоставки, ИСТИНА) = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоездкаЗаМаршрутомФинансы.ДокументПоездки,
       	|	ПоездкаЗаМаршрутомФинансы.Партнер,
		|   ПоездкаЗаМаршрутомФинансы.Партнер.ОсновнойМенеджер,
       	|	IsNull(ПоездкаЗаМаршрутом.МестоДоставки, ЗНАЧЕНИЕ(Справочник.МестаДоставки.ПустаяСсылка))
       	|;
		////////////////////////////////////////////////////////////////////////////////
		// 2. Поездки и места в маршрутах за сегодня
	    |ВЫБРАТЬ
	    |	ПоездкаЗаМаршрутом.ДокументПоездки КАК ДокументПоездки,
	   	|	ПоездкаЗаМаршрутом.МестоДоставки КАК МестоДоставки
	    |ПОМЕСТИТЬ ПоездкиЗаСегодня
	    |ИЗ
	    |	РегистрСведений.ПоездкаЗаМаршрутом КАК ПоездкаЗаМаршрутом
		|
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокПоездки КАК ДокПоездки
		|ПО	ДокПоездки.ДокументПоездки = ПоездкаЗаМаршрутом.ДокументПоездки
	   	|
       	|ГДЕ
       	|ПоездкаЗаМаршрутом.Owner ССЫЛКА Справочник.Партнеры
       	|И ВЫРАЗИТЬ(ПоездкаЗаМаршрутом.Owner КАК Справочник.Партнеры).ОсновнойМенеджер.ТекущееПодразделение = &ОтделОптовыхПродаж
       	|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ДокПоездки; 
		////////////////////////////////////////////////////////////////////////////////
		// 4. Места по документам
       	|ВЫБРАТЬ
       	|	ПоездкиЗаСегодня.ДокументПоездки КАК ДокументПоездки,
       	|	ПоездкиЗаСегодня.МестоДоставки 	 КАК МестоДоставки, 
       	|	МестаПоДокументам.Документ 		 КАК Документ
       	|ПОМЕСТИТЬ МестаПоДокументам
       	|ИЗ
       	|	ПоездкиЗаСегодня КАК ПоездкиЗаСегодня
	   	|
       	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестаПоДокументам КАК МестаПоДокументам
       	|ПО ПоездкиЗаСегодня.МестоДоставки = МестаПоДокументам.Место
	   	|
       	|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПоездкиЗаСегодня;
		////////////////////////////////////////////////////////////////////////////////
		// 6.
       	|ВЫБРАТЬ
       	|	МестаПоДокументам.ДокументПоездки,
       	|	МестаПоДокументам.МестоДоставки,
		|	ВЫБОР
		|		КОГДА ТипЗначения(МестаПоДокументам.Документ) = ТИП(Документ.РасходныйОрдерНаТовары)
		|		ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары).Распоряжение
		|		КОГДА ТипЗначения(МестаПоДокументам.Документ) = ТИП(Документ.КТС_ОтгрузкаТоваров)
		|		ТОГДА ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.КТС_ОтгрузкаТоваров).Распоряжение
		|		ИНАЧЕ NULL
		|	КОНЕЦ КАК ДокументРеализации,
	   	|	ВЫБОР
		|		КОГДА IsNull(РасходныйОрдерНаТоварыТовары.Номенклатура, ""Неопределено"") <> ""Неопределено""
		|		ТОГДА РасходныйОрдерНаТоварыТовары.Номенклатура
		|		КОГДА IsNull(КТС_ОтгрузкаТоваровТовары.Номенклатура, ""Неопределено"") <> ""Неопределено""
		|		ТОГДА КТС_ОтгрузкаТоваровТовары.Номенклатура
		|		ИНАЧЕ NULL
		|	КОНЕЦ КАК Номенклатура, 
		|	ВЫБОР
		|		КОГДА IsNull(РасходныйОрдерНаТоварыТовары.КоличествоУпаковок, ""Неопределено"") <> ""Неопределено""
		|		ТОГДА РасходныйОрдерНаТоварыТовары.КоличествоУпаковок
		|		КОГДА IsNull(КТС_ОтгрузкаТоваровТовары.Количество, ""Неопределено"") <> ""Неопределено""
		|		ТОГДА КТС_ОтгрузкаТоваровТовары.Количество
		|		ИНАЧЕ NULL
		|	КОНЕЦ КАК КоличествоУпаковок
       	|ПОМЕСТИТЬ ОтгруженаНоменклатура
       	|ИЗ
       	|	МестаПоДокументам КАК МестаПоДокументам
	   	|
       	|ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.Товары КАК РасходныйОрдерНаТоварыТовары
       	|ПО ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.РасходныйОрдерНаТовары) = РасходныйОрдерНаТоварыТовары.Ссылка
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ Документ.КТС_ОтгрузкаТоваров.Товары КАК КТС_ОтгрузкаТоваровТовары
       	|ПО ВЫРАЗИТЬ(МестаПоДокументам.Документ КАК Документ.КТС_ОтгрузкаТоваров) = КТС_ОтгрузкаТоваровТовары.Ссылка
	   	|
       	|ГДЕ
       	|	 РасходныйОрдерНаТоварыТовары.НеОтгружать = 0
		|ИЛИ КТС_ОтгрузкаТоваровТовары.НеОтгружать = 0
       	|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ МестаПоДокументам;
		////////////////////////////////////////////////////////////////////////////////
		// 8.
       	|ВЫБРАТЬ
       	|	ОтгруженаНоменклатура.ДокументПоездки,
       	|	ОтгруженаНоменклатура.МестоДоставки,
       	|	ОтгруженаНоменклатура.ДокументРеализации,
       	|	ОтгруженаНоменклатура.Номенклатура,
       	|	МАКСИМУМ(ОтгруженаНоменклатура.КоличествоУпаковок) КАК КоличествоУпаковок,
       	//|	СРЕДНЕЕ(РТУТовары.Цена) КАК Цена
		|	СРЕДНЕЕ(ВЫБОР
		|				КОГДА РТУТовары.Ссылка.Валюта = &ВалютаУпрУчета 
		|				ТОГДА РТУТовары.Цена
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ЦенаUSD,
		|	СРЕДНЕЕ(ВЫБОР
		|				КОГДА РТУТовары.Ссылка.Валюта = &ВалютаРеглУчета 
		|				ТОГДА РТУТовары.Цена
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ЦенаUAH
       	|ПОМЕСТИТЬ ЦенаТовараСДокументаПродаж
       	|ИЗ
       	|	ОтгруженаНоменклатура КАК ОтгруженаНоменклатура
       	|		
	   	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РТУТовары
       	|ПО ВЫРАЗИТЬ(ОтгруженаНоменклатура.ДокументРеализации КАК Документ.РеализацияТоваровУслуг) = РТУТовары.Ссылка
       	|И 	ОтгруженаНоменклатура.Номенклатура = РТУТовары.Номенклатура
       	|
       	|СГРУППИРОВАТЬ ПО
       	|	ОтгруженаНоменклатура.ДокументПоездки,
       	|	ОтгруженаНоменклатура.МестоДоставки,
       	|	ОтгруженаНоменклатура.ДокументРеализации,
       	|	ОтгруженаНоменклатура.Номенклатура
       	|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОтгруженаНоменклатура;
		////////////////////////////////////////////////////////////////////////////////
		// 10.
       	|ВЫБРАТЬ
       	|	ПартнерыКОплате.ДокументПоездки,
       	|	ПартнерыКОплате.МестоДоставки,
       	|	ПартнерыКОплате.Партнер,
       	|	ПартнерыКОплате.СуммаКОплатеUSD,
	   	|   ПартнерыКОплате.СуммаКОплатеUAH,
       	|	ПартнерыКОплате.ОсновнойМенеджер,
       	|	IsNull(ЦенаТовараСДокументаПродаж.ДокументРеализации, ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)) КАК ДокументРеализации,
       	|	IsNull(ЦенаТовараСДокументаПродаж.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
       	|	IsNull(ЦенаТовараСДокументаПродаж.КоличествоУпаковок, 0) КАК Количество,
       	|	IsNull(ЦенаТовараСДокументаПродаж.ЦенаUSD, 0) КАК ЦенаUSD,
		|	IsNull(ЦенаТовараСДокументаПродаж.ЦенаUAH, 0) КАК ЦенаUAH,
       	|	IsNull(ЦенаТовараСДокументаПродаж.ДокументПоездки.Водитель, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК Водитель,
       	|	IsNull(ЦенаТовараСДокументаПродаж.ДокументПоездки.ВариантМаршрута, ЗНАЧЕНИЕ(Справочник.ВариантыМаршрутов.ПустаяСсылка)) КАК ВариантМаршрута
       	|ИЗ
       	|	ПартнерыКОплате КАК ПартнерыКОплате
	   	|
       	|ЛЕВОЕ СОЕДИНЕНИЕ ЦенаТовараСДокументаПродаж КАК ЦенаТовараСДокументаПродаж
       	|ПО 	ПартнерыКОплате.ДокументПоездки = ЦенаТовараСДокументаПродаж.ДокументПоездки
       	|И 	ВЫБОР
       	|		КОГДА ПартнерыКОплате.МестоДоставки = ЗНАЧЕНИЕ(Справочник.МестаДоставки.ПустаяСсылка)
       	|		ТОГДА ИСТИНА
       	|		ИНАЧЕ ПартнерыКОплате.МестоДоставки = ЦенаТовараСДокументаПродаж.МестоДоставки
       	|	КОНЕЦ
	   	|;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПартнерыКОплате;
		////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ЦенаТовараСДокументаПродаж;
		////////////////////////////////////////////////////////////////////////////////
		|";
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область СведенияОВнешнемОтчете

Функция СведенияОВнешнейОбработке() Экспорт
	
	Версия = "1.0.10";
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
	ПараметрыРегистрации = Новый Структура;
	
	// Объявим еще одну переменную, которая нам потребуется ниже
	МассивНазначений = Новый Массив;
	
	// Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
	// Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
	ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");
	
	// Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
	// Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
	// которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	
	// Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Наименование", "Отчет поездка по партнеру");
	
	// Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	
	// Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
	ПараметрыРегистрации.Вставить("Версия", Версия);    
	ПараметрыРегистрации.Вставить("Информация", "Отчет поездка по партнеру");
	
	// Создадим таблицу команд (подробнее смотрим ниже)
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	// Добавим команду в таблицу
	ДобавитьКоманду(ТаблицаКоманд, "Отчет поездка по партнеру", "ФормаОтчета", "ОткрытиеФормы", Ложь, "");
	
	// Сохраним таблицу команд в параметры регистрации обработки
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	// Теперь вернем системе наши параметры
	Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()
	
	// Создадим пустую таблицу команд и колонки в ней
	Команды = Новый ТаблицаЗначений;
	
	// Как будет выглядеть описание печатной формы для пользователя
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 
	
	// Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	
	// Тут задается, как должна вызваться команда обработки
	// Возможные варианты:
	// - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
	// - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
	// - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	
	// Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	
	// Для печатной формы должен содержать строку ПечатьMXL 
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	// Добавляем команду в таблицу команд по переданному описанию.
	// Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

#КонецОбласти
