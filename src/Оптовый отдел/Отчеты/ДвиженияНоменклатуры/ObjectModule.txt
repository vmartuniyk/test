Процедура ОтчетИнициализация(Партнер) Экспорт
	
	УникальныйИд = Новый УникальныйИдентификатор("a3e0fd0e-4712-11e0-9f98-001517115d85");
	Гарантия = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(УникальныйИд);	
	
	ПостроительОтчета.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	NULL КАК ФинДок
	|ПОМЕСТИТЬ РеализацииТоваровУслуг
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Партнер = &Партнер
	|	И РеализацияТоваровУслуг.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	РасходныйОрдерНаТовары.Распоряжение КАК ФинДок
	|ПОМЕСТИТЬ РасходныеОрдераНаТовары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА РасходныйОрдерНаТовары.Распоряжение ССЫЛКА Документ.РеализацияТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(РасходныйОрдерНаТовары.Распоряжение КАК Документ.РеализацияТоваровУслуг).Партнер = &Партнер
	|			КОГДА РасходныйОрдерНаТовары.Распоряжение ССЫЛКА Документ.ВозвратТоваровПоставщику
	|				ТОГДА ВЫРАЗИТЬ(РасходныйОрдерНаТовары.Распоряжение КАК Документ.ВозвратТоваровПоставщику).Партнер = &Партнер
	|		КОНЕЦ
	|	И РасходныйОрдерНаТовары.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	ПриходныйОрдерНаТовары.Распоряжение КАК ФинДок
	|ПОМЕСТИТЬ ПриходныеОрдераНаТовары
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ПриходныйОрдерНаТовары.Распоряжение ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|				ТОГДА ВЫРАЗИТЬ(ПриходныйОрдерНаТовары.Распоряжение КАК Документ.ВозвратТоваровОтКлиента).Партнер = &Партнер
	|			КОГДА ПриходныйОрдерНаТовары.Распоряжение ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|				ТОГДА ВЫРАЗИТЬ(ПриходныйОрдерНаТовары.Распоряжение КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).Партнер = &Партнер
	|			КОГДА ПриходныйОрдерНаТовары.Распоряжение ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|				ТОГДА ВЫРАЗИТЬ(ПриходныйОрдерНаТовары.Распоряжение КАК Документ.ПоступлениеТоваровУслуг).Партнер = &Партнер
	|		КОНЕЦ
	|	И ПриходныйОрдерНаТовары.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РТиУ.Номенклатура
	|ПОМЕСТИТЬ КешНоменклатуры
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РТиУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РеализацииТоваровУслуг КАК РеализацииТоваровУслуг
	|		ПО (РеализацииТоваровУслуг.Ссылка = РТиУ.Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	РОнТ.Номенклатура
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.Товары КАК РОнТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасходныеОрдераНаТовары КАК РасходныеОрдераНаТовары
	|		ПО (РасходныеОрдераНаТовары.Ссылка = РОнТ.Ссылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПОнТ.Номенклатура
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары.Товары КАК ПОнТ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриходныеОрдераНаТовары КАК ПриходныеОрдераНаТовары
	|		ПО (ПриходныеОрдераНаТовары.Ссылка = ПОнТ.Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РТиУ.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизиты.Ссылка КАК Номенклатура,
	|	ДополнительныеРеквизиты.Значение КАК Гарантия
	|ПОМЕСТИТЬ КешГарантия
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка В
	|			(ВЫБРАТЬ
	|				КешНоменклатуры.Номенклатура
	|			ИЗ
	|				КешНоменклатуры)
	|	И ДополнительныеРеквизиты.Свойство = &Гарантия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацииТоваровУслуг.Ссылка КАК Ссылка,
	|	""КУПЛЕН"" КАК Статус,
	|	РеализацииТоваровУслуг.ФинДок КАК ФинДок
	|ПОМЕСТИТЬ КешСсылок
	|ИЗ
	|	РеализацииТоваровУслуг КАК РеализацииТоваровУслуг
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	РасходныеОрдераНаТовары.Ссылка,
	|	""КУПЛЕН"",
	|	РасходныеОрдераНаТовары.ФинДок
	|ИЗ
	|	РасходныеОрдераНаТовары КАК РасходныеОрдераНаТовары
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ПриходныеОрдераНаТовары.Ссылка,
	|	""ВОЗВРАЩЕН"",
	|	ПриходныеОрдераНаТовары.ФинДок
	|ИЗ
	|	ПриходныеОрдераНаТовары КАК ПриходныеОрдераНаТовары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерийныеНомераНоменклатуры.Регистратор КАК СкладДок,
	|	СерийныеНомераНоменклатуры.Номенклатура КАК Номенклатура,
	|	СерийныеНомераНоменклатуры.СерийныеНомера
	|ПОМЕСТИТЬ КешСерийНоменклатуры
	|ИЗ
	|	РегистрНакопления.СерийныеНомераНоменклатуры КАК СерийныеНомераНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешСсылок КАК КешСсылок
	|		ПО (КешСсылок.Ссылка = СерийныеНомераНоменклатуры.Регистратор)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СкладДок,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КешСсылок.Статус,
	|	ТоварыНаСкладах.Период КАК ДатаОтгрузки,
	|	КешСсылок.ФинДок,
	|	ТоварыНаСкладах.Регистратор КАК СкладДок,
	|	ТоварыНаСкладах.Номенклатура.Родитель КАК Группа,
	|	ТоварыНаСкладах.Номенклатура.Артикул КАК Артикул,
	|	ТоварыНаСкладах.Номенклатура.Код КАК Код,
	|	ТоварыНаСкладах.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(КешГарантия.Гарантия, """") КАК Гарантия,
	|	КешСерийНоменклатуры.СерийныеНомера КАК СерийныйНомер
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Обороты(
	|			,
	|			,
	|			Регистратор,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					КешНоменклатуры.Номенклатура
	|				ИЗ
	|					КешНоменклатуры)) КАК ТоварыНаСкладах
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КешСсылок КАК КешСсылок
	|		ПО ТоварыНаСкладах.Регистратор = КешСсылок.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ КешСерийНоменклатуры КАК КешСерийНоменклатуры
	|		ПО ТоварыНаСкладах.Регистратор = КешСерийНоменклатуры.СкладДок
	|			И ТоварыНаСкладах.Номенклатура = КешСерийНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ КешГарантия КАК КешГарантия
	|		ПО ТоварыНаСкладах.Номенклатура = КешГарантия.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Группа,
	|	ДатаОтгрузки
	|ИТОГИ ПО
	|	Группа,
	|	Номенклатура";
	ПостроительОтчета.ЗаполнитьНастройки();
	ПостроительОтчета.ЗаполнениеРасшифровки = ВидЗаполненияРасшифровкиПостроителяОтчета.ЗначенияГруппировок;
	ПостроительОтчета.Параметры.Вставить("Партнер", Партнер);
	ПостроительОтчета.Параметры.Вставить("Гарантия", Гарантия);
	ПостроительОтчета.ТекстЗаголовка = "Отчет по движению номенклатуры";
	 	
КонецПроцедуры

Процедура ОтчетВывести(ФормаОбъекта, ТабДок) Экспорт
		
	ТабДок.Очистить();
	ПостроительОтчета.Выполнить();
	ПостроительОтчета.РазмещениеИзмеренийВСтроках 				= ТипРазмещенияИзмерений.Вместе;
	ПостроительОтчета.РазмещениеРеквизитовИзмеренийВСтроках 	= ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчета.РазмещениеРеквизитовИзмеренийВКолонках 	= ТипРазмещенияРеквизитовИзмерений.Отдельно;
	ПостроительОтчета.Макет = ПолучитьМакет("Макет");
	ПостроительОтчета.ОформитьМакет();
	ПостроительОтчета.Вывести(ТабДок);

КонецПроцедуры





Функция СведенияОВнешнейОбработке() Экспорт
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Движения номенклатуры");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", "1.2");    
    ПараметрыРегистрации.Вставить("Информация", "Дополнительный отчет 'Движения номенклатуры'");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Движения номенклатуры", "ФормаОтчета", "ОткрытиеФормы", Ложь, "");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

