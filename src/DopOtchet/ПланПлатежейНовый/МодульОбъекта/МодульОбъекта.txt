
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УстановитьПривилегированныйРежим(Истина);
	
	УстановитьПараметрыКомпоновкиДанных();
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки, , , Ложь);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);	
	
КонецПроцедуры

Процедура УстановитьПараметрыКомпоновкиДанных()
	
	ПараметрыДанных 		= КомпоновщикНастроек.Настройки.ПараметрыДанных;
	КалендарьПартнеров  	= Справочники.Календари.ПолучитьСсылку(Новый УникальныйИдентификатор("a56702cc-3ffc-11e0-9f98-001517115d85"));
	Свойство				= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("c47fc671-4af9-11e2-94af-001e673c80fc"));
	СрокиОтстрочки			= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("f23f7533-f53e-11e3-80cd-001e676b0174"));
	ПроцентыЗаПредоплату    = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("6b55a9aa-f542-11e3-80cd-001e676b0174"));
	ПроцентыЗаПросрочку		= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор("266f2702-f53f-11e3-80cd-001e676b0174"));
	
	УстановитьЗначениеПараметраКомпоновкиДанных("Календарь", КалендарьПартнеров, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ТекущаяДата", НачалоДня(ТекущаяДата()), ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ЗавтрашняяДата", КонецДня(ТекущаяДата())+1, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("Свойство", Свойство, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("СрокиОтстрочки", СрокиОтстрочки, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ПроцентыЗаПредоплату", ПроцентыЗаПредоплату, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ПроцентыЗаПросрочку", ПроцентыЗаПросрочку, ПараметрыДанных);
	
	УстановитьЗначениеПараметраКомпоновкиДанных("ВалютаУпрУчета", Константы.ВалютаУправленческогоУчета.Получить(), ПараметрыДанных);
	
КонецПроцедуры

Процедура УстановитьЗначениеПараметраКомпоновкиДанных(ИмяПараметра, ЗначениеПараметра, ПараметрыДанных) Экспорт 

	Параметр = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	
	Если Параметр = Неопределено Тогда
		ТекстСообщения = НСтр("ru='Не удалось получить параметр «%1». Обратитесь в службу технической поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, ИмяПараметра);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Параметр.Значение 		= ЗначениеПараметра;
	Параметр.Использование  = Истина;

КонецПроцедуры
