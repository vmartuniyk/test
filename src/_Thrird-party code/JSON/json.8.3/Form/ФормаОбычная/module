
Процедура ВыполнитьJSON(Кнопка)
	
	Попытка
		Исходящий = ЗаписатьJSON(ПрочитатьJSON(Входящий, ВходящийРежим), ИсходящийРежим);
		ЭлементыФормы.Исходящий.ЦветТекстаПоля = ЦветаСтиля.ЦветТекстаПоля;
	Исключение
		Исходящий = ИнформацияОбОшибке().Описание;
		ЭлементыФормы.Исходящий.ЦветТекстаПоля = ЦветаСтиля.ЦветОсобогоТекста;
	КонецПопытки;
	
КонецПроцедуры // ВыполнитьJSON()


Процедура ВходящийРежимОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры // ВходящийРежимОчистка

Процедура ИсходящийРежимОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры // ИсходящийРежимОчистка()


Процедура ПриОткрытии()
	
	Входящий = ПолучитьТекст();
	ВходящийРежим = Неопределено;
	ИсходящийРежим = Истина;
	
	ЭлементыФормы.ВходящийРежим.СписокВыбора.Добавить(Неопределено, "Автоопределение");
	ЭлементыФормы.ВходящийРежим.СписокВыбора.Добавить(Истина, "Стандарт");
	ЭлементыФормы.ВходящийРежим.СписокВыбора.Добавить(Ложь, "Альтернативный");
	
	ЭлементыФормы.ИсходящийРежим.СписокВыбора.Добавить(Истина, "Стандарт");
	ЭлементыФормы.ИсходящийРежим.СписокВыбора.Добавить(Ложь, "Альтернативный");
	
КонецПроцедуры // ПриОткрытии()


Функция ПолучитьТекст()
	
	Модуль = ЭтотОбъект;
	
	Данные = ПрочитатьJSON(Модуль.ПолучитьМакет("Макет").ПолучитьТекст(), Истина);
	
	МассивЧисел = Данные["COMSafeArray"];
	
	
	// COMSafeArray.
	COMSafeArray = Новый COMSafeArray(МассивЧисел, "VT_I4");
	
	// СписокЗначений.
	СписокЗначений = Новый СписокЗначений;
	Для Каждого Число Из МассивЧисел Цикл
		СписокЗначений.Добавить(Число, ЧислоПрописью(Число, "Л=en_US; НП=Ложь;", ",,,, 0"), Число % 2);
	КонецЦикла;
	
	// КлючИЗначение.
	Структура = Новый Структура("Key", "Value");
	Для Каждого КлючИЗначение Из Структура Цикл
		Прервать;
	КонецЦикла;
	
	// ТаблицаЗначений.
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ТаблицаЗначений.Колонки.Добавить("Выражение");
	ТаблицаЗначений.Колонки.Добавить("Результат");
	Для Каждого Число Из МассивЧисел Цикл
		СтрокаТаблицы = ТаблицаЗначений.Добавить();
		СтрокаТаблицы.Выражение = Строка(Число) + " × " + Строка(Число);
		СтрокаТаблицы.Результат = Число * Число;
	КонецЦикла;
						  
	// ДеревоЗначений.
	ДеревоЗначений = Новый ДеревоЗначений;
	ДеревоЗначений.Колонки.Добавить("Номер");
	СтрокаДерева = ДеревоЗначений.Строки.Добавить();
	СтрокаДерева.Номер = "Номер 1";
	СтрокаДерева = СтрокаДерева.Строки.Добавить();
	СтрокаДерева.Номер = "Номер 1.1";
	СтрокаДерева = ДеревоЗначений.Строки.Добавить();
	СтрокаДерева.Номер = "Номер 2";
	СтрокаДерева = СтрокаДерева.Строки.Добавить();
	СтрокаДерева.Номер = "Номер 2.1";
	
	// РезультатЗапроса.
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	1 КАК Номер,
	                      |	""Первая строка результата запроса"" КАК Значение
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	2,
	                      |	""Вторая строка результата запроса""");
	РезультатЗапроса = Запрос.Выполнить();
	
	// РезультатЗапроса.
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	// Запрос.
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""Запрос..."" КАК КтоЗдесь";
	
	// ПостроительЗапроса.
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.Текст = 
		"ВЫБРАТЬ
		|	""Построитель запроса..."" КАК КтоЗдесь";
	
	// ПостроительЗапроса.
	ПостроительОтчета = Новый ПостроительОтчета;
	ПостроительОтчета.Текст = 
		"ВЫБРАТЬ
		|	""Построитель отчета..."" КАК КтоЗдесь";
							   
	// ДвоичныеДанные.
	#Если НаСервере Тогда
	ДвоичныеДанные = Base64Значение("Qk1iAAAAAAAAAD4AAAAoAAAACQAAAAkAAAABAAEAAAAAACQAAADEDgAAxA4AAAAAAAAAAAAAAAAAAP///wD+gAAA/AAAAMCAAAC5gAAAfYAAAH2AAAB9gAAAu4AAAMeAAAA=");
	#Иначе
	ДвоичныеДанные = БиблиотекаКартинок.Лупа.ПолучитьДвоичныеДанные();
	#КонецЕсли
	
	// Картинка.
	#Если НаСервере Тогда
	Картинка = Новый Картинка(Base64Значение("Qk1iAAAAAAAAAD4AAAAoAAAACQAAAAkAAAABAAEAAAAAAAAAAAAAAAAAAAAAAAIAAAACAAAAAAAAAP///wD/gOQAnIDkAMmAAADjgP//44AzAMmAZgCcgAAA/4AAAP+A5AA="));
	#Иначе
	Картинка = БиблиотекаКартинок.Очистить;
	#КонецЕсли
	
	// ХранилищеЗначения.
	ХранилищеЗначения = Новый ХранилищеЗначения("Сохраненное в хранилище значение.");
	
	
	Данные.Вставить("СписокЗначений", СписокЗначений);
	Данные.Вставить("КлючИЗначение", КлючИЗначение);
	Данные.Вставить("ТаблицаЗначений", ТаблицаЗначений);
	Данные.Вставить("ДеревоЗначений", ДеревоЗначений);
	Данные.Вставить("Запрос", Запрос);
	Данные.Вставить("РезультатЗапроса", РезультатЗапроса);
	Данные.Вставить("ВыборкаИзРезультатаЗапроса", ВыборкаИзРезультатаЗапроса);
	Данные.Вставить("ПостроительЗапроса", ПостроительЗапроса);
	Данные.Вставить("ПостроительОтчета", ПостроительОтчета);
	Данные.Вставить("COMSafeArray", COMSafeArray);
	Данные.Вставить("ДвоичныеДанные", ДвоичныеДанные);
	Данные.Вставить("Картинка", Картинка);
	Данные.Вставить("ХранилищеЗначения", ХранилищеЗначения);
	
	Возврат ЗаписатьJSON(Данные, Истина);
	
КонецФункции // ПолучитьТекст()
