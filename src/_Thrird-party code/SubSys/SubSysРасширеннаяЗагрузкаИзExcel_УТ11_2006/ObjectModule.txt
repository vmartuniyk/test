Перем мЖирныйШрифт Экспорт;
Перем ЕстьЕдиница;
Перем ЕстьАртикул;
Перем ЕстьЦена;





Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры


Функция СведенияОВнешнейОбработке() Экспорт
	РегистрационныеДанные = Новый Структура;

	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));

	ДобавитьКоманду(Команды, "SubSys: Расширенная загрузка из Excel", "ОткрытиеФормы", "ОткрытиеФормы", , );


	РегистрационныеДанные.Вставить("Вид", "ДополнительнаяОбработка");
	РегистрационныеДанные.Вставить("Назначение", "");
	РегистрационныеДанные.Вставить("Наименование", "SubSys: Расширенная загрузка из Excel");
	РегистрационныеДанные.Вставить("Версия", "25-07-2010");
	РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь);
	РегистрационныеДанные.Вставить("Информация", "");
	РегистрационныеДанные.Вставить("Команды", Команды);

	Возврат РегистрационныеДанные;

КонецФункции






Процедура ЗаполнитьНастройки(ПростаяЗагрузкаПрайса = Ложь, ДеревоПолейЗагрузки, НастройкаПоиска, ТабличныйДокумент, СоответствияВалют) Экспорт
	ДеревоПолейЗагрузки.Строки.Очистить();

	НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
	НовСтр.ПолеЗагрузки = "Цены номенклатуры";
	НовСтр.Представление = "Цены номенклатуры";

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.ПолеЗагрузки = "ЦенаЗагрузка";
	НовСтр1.Представление = "Цена";
	НовСтр1.ВариантыСовпадений.Добавить("Цена");
	НовСтр1.ВариантыСовпадений.Добавить("Цена (Руб)");
	НовСтр1.ВариантыСовпадений.Добавить("price");
	НовСтр1.КонтрольЗаполнения = Ложь;
	НовСтр1.Поле = Истина;

	НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
	НовСтр.ПолеЗагрузки = "Аналоги номенклатуры";
	НовСтр.Представление = "Аналоги номенклатуры";

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.ПолеЗагрузки = "ИдентификаторАналогаЗагрузка";
	НовСтр1.Представление = "Идентификатор аналога";
	НовСтр1.ВариантыСовпадений.Добавить("Аналог");
	НовСтр1.КонтрольЗаполнения = Ложь;
	НовСтр1.Поле = Истина;

	НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
	НовСтр.ПолеЗагрузки = "ПоляНоменклатуры";
	НовСтр.Представление = "Поля номенклатуры";

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.ПолеЗагрузки = "ШтрихКодЗагрузка";
	НовСтр1.Представление = "Штрихкод";
	НовСтр1.ВариантыСовпадений.Добавить("Штрихкод");
	НовСтр1.ВариантыСовпадений.Добавить("штрих");
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.ПолеЗагрузки = "КодЗагрузка";
	НовСтр1.Представление = "Код";
	НовСтр1.ВариантыСовпадений.Добавить("Код");
	НовСтр1.КонтрольЗаполнения = Ложь;
	НовСтр1.КонтрольДлиныПоля = 4;
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.ПолеЗагрузки = "АртикулЗагрузка";
	НовСтр1.Представление = "Артикул";

	НовСтр1.ВариантыСовпадений.Добавить("Артикул");
	НовСтр1.ВариантыСовпадений.Добавить("article");
	НовСтр1.КонтрольЗаполнения = Ложь;
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.ПолеЗагрузки = "ПроизводительЗагрузка";
	НовСтр1.Представление = "Производитель";
	НовСтр1.ВариантыСовпадений.Добавить("Производитель");
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.ПолеЗагрузки = "НаименованиеЗагрузка";
	НовСтр1.Представление = "Номенклатура";
	НовСтр1.ВариантыСовпадений.Добавить("Номенклатура");
	НовСтр1.ВариантыСовпадений.Добавить("Наименование товара");
	НовСтр1.ВариантыСовпадений.Добавить("Наименование товаров");
	НовСтр1.ВариантыСовпадений.Добавить("Товар");
	НовСтр1.ВариантыСовпадений.Добавить("Товары");
	НовСтр1.ВариантыСовпадений.Добавить("Наименование");
	НовСтр1.ВариантыСовпадений.Добавить("Product");
	НовСтр1.КонтрольЗаполнения = Истина;
	НовСтр1.КонтрольДлиныПоля = 5;
	НовСтр1.Поле = Истина;

	Если Не ПростаяЗагрузкаПрайса Тогда
		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.ПолеЗагрузки = "НаименованиеПолноеЗагрузка";
		НовСтр1.Представление = "Наименование полное";
		НовСтр1.ВариантыСовпадений.Добавить("Наименование полное");
		НовСтр1.Поле = Истина;
	КонецЕсли;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.ПолеЗагрузки = "ЕдиницаИзмеренияЗагрузка";
	НовСтр1.Представление = "Единица";
	НовСтр1.ВариантыСовпадений.Добавить("Единица");
	НовСтр1.ВариантыСовпадений.Добавить("Единица измерения");
	НовСтр1.ВариантыСовпадений.Добавить("Ед");
	НовСтр1.ВариантыСовпадений.Добавить("Ед.");
	НовСтр1.ВариантыСовпадений.Добавить("Ед. изм.");
	НовСтр1.ВариантыСовпадений.Добавить("Ед.изм.");
	НовСтр1.ВариантыСовпадений.Добавить("ОКЕИ");
	НовСтр1.КонтрольЗаполнения = Ложь;
	НовСтр1.Поле = Истина;

	Если Не ПростаяЗагрузкаПрайса Тогда
		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.ПолеЗагрузки = "ВидНоменклатуры";
		НовСтр1.Представление = "Вид номенклатуры";
		НовСтр1.ВариантыСовпадений.Добавить("Вид номенклатуры");
		НовСтр1.Поле = Истина;

		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.ПолеЗагрузки = "ЦеноваяГруппа";
		НовСтр1.Представление = "Ценовая группа";
		НовСтр1.ВариантыСовпадений.Добавить("Ценовая группа");
		НовСтр1.Поле = Истина;

		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.ПолеЗагрузки = "Вес";
		НовСтр1.Представление = "Вес";
		НовСтр1.ВариантыСовпадений.Добавить("Вес");
		НовСтр1.Поле = Истина;

		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.ПолеЗагрузки = "Описание";
		НовСтр1.Представление = "Описание";
		НовСтр1.ВариантыСовпадений.Добавить("Описание");
		НовСтр1.Поле = Истина;

		НовСтр = НовСтр.Строки.Добавить();
		НовСтр.ПолеЗагрузки = "ИерархияНоменклатуры";
		НовСтр.Представление = "Иерархия номенклатуры";

		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.ПолеЗагрузки = "Родитель1";
		НовСтр1.Представление = "Родитель 1";
		НовСтр1.ВариантыСовпадений.Добавить("Уровень1");
		НовСтр1.Поле = Истина;

		НовСтр2 = НовСтр1.Строки.Добавить();
		НовСтр2.ПолеЗагрузки = "Родитель2";
		НовСтр2.Представление = "Родитель 2";
		НовСтр2.ВариантыСовпадений.Добавить("Уровень2");
		НовСтр2.Поле = Истина;

		НовСтр3 = НовСтр2.Строки.Добавить();
		НовСтр3.ПолеЗагрузки = "Родитель3";
		НовСтр3.Представление = "Родитель 3";
		НовСтр3.ВариантыСовпадений.Добавить("Уровень3");
		НовСтр3.Поле = Истина;

		НовСтр4 = НовСтр3.Строки.Добавить();
		НовСтр4.ПолеЗагрузки = "Родитель4";
		НовСтр4.Представление = "Родитель 4";
		НовСтр4.ВариантыСовпадений.Добавить("Уровень4");
		НовСтр4.Поле = Истина;

		НовСтр5 = НовСтр4.Строки.Добавить();
		НовСтр5.ПолеЗагрузки = "Родитель5";
		НовСтр5.Представление = "Родитель 5";
		НовСтр5.ВариантыСовпадений.Добавить("Уровень5");
		НовСтр5.Поле = Истина;

		НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
		НовСтр.ПолеЗагрузки = "ХарактеристикиНоменклатуры";
		НовСтр.Представление = "Характеристики номенклатуры";

		ТекстЗапроса = "ВЫБРАТЬ
		|	СвойстваОбъектов.Свойство КАК Реквизит
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК СвойстваОбъектов
		|ГДЕ
		|	СвойстваОбъектов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры))
		|	И (НЕ СвойстваОбъектов.Ссылка.ПометкаУдаления)
		|
		|СГРУППИРОВАТЬ ПО
		|	СвойстваОбъектов.Свойство";


		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		РезультатЗапросаНазначенияСвойств = Запрос.Выполнить();
		Выборка = РезультатЗапросаНазначенияСвойств.Выбрать();

		Пока Выборка.Следующий() Цикл
			НовСтр1 = НовСтр.Строки.Добавить();
			НовСтр1.ПолеЗагрузки = Выборка.Реквизит;
			НовСтр1.Представление = Выборка.Реквизит;
			НовСтр1.ВариантыСовпадений.Добавить("" + Выборка.Реквизит);
			НовСтр1.Значение = Выборка.Реквизит;
			НовСтр1.Поле = Истина;
		КонецЦикла;
	КонецЕсли;

	НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
	НовСтр.ПолеЗагрузки = "ДанныеДокумента";
	НовСтр.Представление = "Данные документа";

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.ПолеЗагрузки = "КоличествоЗагрузка";
	НовСтр1.Представление = "Количество";
	НовСтр1.ВариантыСовпадений.Добавить("Кол");
	НовСтр1.ВариантыСовпадений.Добавить("Кол-во");
	НовСтр1.ВариантыСовпадений.Добавить("Количество");
	НовСтр1.КонтрольЗаполнения = Истина;
	НовСтр1.Поле = Истина;

	Если Не ПростаяЗагрузкаПрайса Тогда
		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.ПолеЗагрузки = "СуммаЗагрузка";
		НовСтр1.Представление = "Сумма";
		НовСтр1.ВариантыСовпадений.Добавить("Сумма");
		НовСтр1.ВариантыСовпадений.Добавить("Сумма с учетом НДС");
		НовСтр1.ВариантыСовпадений.Добавить("Сумма (Руб)");
		НовСтр1.Поле = Истина;

		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.ПолеЗагрузки = "НомерГТД";
		НовСтр1.Представление = "Номер ГТД";
		НовСтр1.ВариантыСовпадений.Добавить("ГТД");
		НовСтр1.ВариантыСовпадений.Добавить("Номер ГТД");
		НовСтр1.Поле = Истина;

		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.ПолеЗагрузки = "СтранаПроисхождения";
		НовСтр1.Представление = "Страна происхождения";
		НовСтр1.ВариантыСовпадений.Добавить("Страна");
		НовСтр1.ВариантыСовпадений.Добавить("Страна происхождения");
		НовСтр1.Поле = Истина;

		НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
		НовСтр.ПолеЗагрузки = "ДополнительныеРеквизиты";
		НовСтр.Представление = "Дополнительные реквизиты";

		ТекстЗапроса = "ВЫБРАТЬ
		|	СвойстваОбъектов.Свойство КАК Реквизит
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК СвойстваОбъектов
		|ГДЕ
		|	СвойстваОбъектов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура))
		|	И (НЕ СвойстваОбъектов.Ссылка.ПометкаУдаления)
		|
		|СГРУППИРОВАТЬ ПО
		|	СвойстваОбъектов.Свойство";


		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		РезультатЗапросаНазначенияСвойств = Запрос.Выполнить();
		Выборка = РезультатЗапросаНазначенияСвойств.Выбрать();

		Пока Выборка.Следующий() Цикл
			НовСтр1 = НовСтр.Строки.Добавить();
			НовСтр1.ПолеЗагрузки = Выборка.Реквизит;
			НовСтр1.Представление = Выборка.Реквизит;
			НовСтр1.ВариантыСовпадений.Добавить("" + Выборка.Реквизит);
			НовСтр1.Значение = Выборка.Реквизит;
			НовСтр1.Поле = Истина;
		КонецЦикла;

		НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
		НовСтр.ПолеЗагрузки = "ДополнительныеСведенья";
		НовСтр.Представление = "Дополнительные сведенья";

		ТекстЗапроса = "ВЫБРАТЬ
		|	СвойстваОбъектов.Свойство КАК Реквизит
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК СвойстваОбъектов
		|ГДЕ
		|	СвойстваОбъектов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура))
		|	И (НЕ СвойстваОбъектов.Ссылка.ПометкаУдаления)
		|
		|СГРУППИРОВАТЬ ПО
		|	СвойстваОбъектов.Свойство";


		Запрос = Новый Запрос;
		Запрос.Текст = ТекстЗапроса;
		РезультатЗапросаНазначенияСвойств = Запрос.Выполнить();
		Выборка = РезультатЗапросаНазначенияСвойств.Выбрать();

		Пока Выборка.Следующий() Цикл
			НовСтр1 = НовСтр.Строки.Добавить();
			НовСтр1.ПолеЗагрузки = Выборка.Реквизит;
			НовСтр1.Представление = Выборка.Реквизит;
			НовСтр1.ВариантыСовпадений.Добавить("" + Выборка.Реквизит);
			НовСтр1.Значение = Выборка.Реквизит;
			НовСтр1.Поле = Истина;
		КонецЦикла;
	КонецЕсли;

	НастройкаПоиска.Очистить();

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "РегистрШтрихкод";
	НовСтр.Представление = "Регистр штрихкодов: поиск по штрихкоду";
	НовСтр.Пометка = Ложь;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникКод";
	НовСтр.Представление = "Справочник: поиск по коду";
	НовСтр.Пометка = Ложь;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникАртикул";
	НовСтр.Представление = "Справочник: поиск по артикулу";
	НовСтр.Пометка = Истина;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникАртикулПлюсНаименование";
	НовСтр.Представление = "Справочник: поиск по артикулу и наименованию вместе";
	НовСтр.Пометка = Ложь;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникАртикулВНаименовании";
	НовСтр.Представление = "Справочник: поиск по артикулу из наименования загрузки (не рекомендуется)";
	НовСтр.Пометка = Ложь;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникНаименование";
	НовСтр.Представление = "Справочник: поиск по наименованию";
	НовСтр.Пометка = Ложь;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникНаименованиеПолное";
	НовСтр.Представление = "Справочник: поиск по полному наименованию и артикулу вместе";
	НовСтр.Пометка = Ложь;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "НоменклатураКонтрагентовАртикулНаименование";
	НовСтр.Представление = "Номенклатура контрагентов: поиск по артикулу и наименованию";
	НовСтр.Пометка = Истина;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "НоменклатураКонтрагентовАртикул";
	НовСтр.Представление = "Номенклатура контрагентов: поиск по артикулу";
	НовСтр.Пометка = Истина;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "НоменклатураКонтрагентовНаименование";
	НовСтр.Представление = "Номенклатура контрагентов: поиск по наименованию";
	НовСтр.Пометка = Ложь;


	НоваяСтрВалюта = СоответствияВалют.Добавить();
	НоваяСтрВалюта.Представление = "р.";
	НоваяСтрВалюта.Валюта = Справочники.Валюты.НайтиПоКоду("643");

	НоваяСтрВалюта = СоответствияВалют.Добавить();
	НоваяСтрВалюта.Представление = "руб.";
	НоваяСтрВалюта.Валюта = Справочники.Валюты.НайтиПоКоду("643");

	НоваяСтрВалюта = СоответствияВалют.Добавить();
	НоваяСтрВалюта.Представление = "usd.";
	НоваяСтрВалюта.Валюта = Справочники.Валюты.НайтиПоКоду("840");

	НоваяСтрВалюта = СоответствияВалют.Добавить();
	НоваяСтрВалюта.Представление = "USD";
	НоваяСтрВалюта.Валюта = Справочники.Валюты.НайтиПоКоду("840");

	НоваяСтрВалюта = СоответствияВалют.Добавить();
	НоваяСтрВалюта.Представление = "$.";
	НоваяСтрВалюта.Валюта = Справочники.Валюты.НайтиПоКоду("840");

	НоваяСтрВалюта = СоответствияВалют.Добавить();
	НоваяСтрВалюта.Представление = "EUR";
	НоваяСтрВалюта.Валюта = Справочники.Валюты.НайтиПоКоду("978");

	НоваяСтрВалюта = СоответствияВалют.Добавить();
	НоваяСтрВалюта.Представление = "€";
	НоваяСтрВалюта.Валюта = Справочники.Валюты.НайтиПоКоду("978");

КонецПроцедуры





Функция глУбратьСимволы(Строка, УбиратьВсеПробелы = Ложь) Экспорт
	НоваяСтрока = Строка;
	НоваяСтрока = СтрЗаменить(НоваяСтрока, "-", " ");
	НоваяСтрока = СтрЗаменить(НоваяСтрока, "_", " ");
	НоваяСтрока = СтрЗаменить(НоваяСтрока, "(", " ");
	НоваяСтрока = СтрЗаменить(НоваяСтрока, ")", " ");
	НоваяСтрока = СтрЗаменить(НоваяСтрока, ".", " ");
	НоваяСтрока = СтрЗаменить(НоваяСтрока, ",", " ");
	НоваяСтрока = СтрЗаменить(НоваяСтрока, "/", " ");
	НоваяСтрока = СтрЗаменить(НоваяСтрока, """", " ");
	НоваяСтрока = СтрЗаменить(НоваяСтрока, "*", " ");
	НоваяСтрока = СтрЗаменить(НоваяСтрока, "=", " ");
	НоваяСтрока = СтрЗаменить(НоваяСтрока, "  ", " ");

	Если УбиратьВсеПробелы Тогда
		НоваяСтрока = СтрЗаменить(НоваяСтрока, " ", "");
	КонецЕсли;

	НоваяСтрока = СокрЛП(НоваяСтрока);

	Возврат НоваяСтрока;

КонецФункции






























Функция глУбратьКрайниеНули(Строка) Экспорт
	Строка = СокрЛП(Строка);

	Строка = СтрЗаменить(Строка, " ", "?");
	Строка = СтрЗаменить(Строка, "0", " ");
	Строка = СокрЛП(Строка);
	Строка = СтрЗаменить(Строка, " ", "0");
	Строка = СтрЗаменить(Строка, "?", "");

	Возврат Строка;

КонецФункции


Функция глРазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = "|", УбиратьСимволы = Истина, УбиратьВсеПробелы = Ложь) Экспорт
	Если УбиратьСимволы Тогда
		Стр = глУбратьСимволы(Стр, УбиратьВсеПробелы);
	КонецЕсли;

	МассивСтрок = Новый Массив;
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр, Разделитель);

			Если Поз = 0 Тогда



				СтрокаВМассив = СокрЛП(Стр);


				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;




			СтрокаВМассив = СокрЛП(Лев(Стр, Поз - 1));


			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = СокрЛ(Сред(Стр, Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр, Разделитель);

			Если Поз = 0 Тогда



				СтрокаВМассив = СокрЛП(Стр);


				МассивСтрок.Добавить(СтрокаВМассив);
				Возврат МассивСтрок;
			КонецЕсли;




			СтрокаВМассив = СокрЛП(Лев(Стр, Поз - 1));


			МассивСтрок.Добавить(СтрокаВМассив);
			Стр = Сред(Стр, Поз + ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;

КонецФункции


Функция ПолучитьКоэффициентУпаковки(ТекУпаковка) Экспорт
	Если ЗначениеЗаполнено(ТекУпаковка) Тогда
		ТекКоэффициент = ТекУпаковка.Коэффициент;
	Иначе
		ТекКоэффициент = 1;
	КонецЕсли;

	Возврат ТекКоэффициент;

КонецФункции


Процедура ПриИзмененииНоменклатуры(Строка) Экспорт
	Если Не ЗначениеЗаполнено(Строка.ЕдиницаИзмерения) Тогда
		Строка.ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения;
	КонецЕсли;

	Строка.ГруппаСправочника = Строка.Номенклатура.Родитель;

	Строка.Количество = Строка.КоличествоЗагрузка;
	Строка.Цена = Строка.ЦенаЗагрузка;

КонецПроцедуры






Процедура ОтформатироватьТабличноеПолеСервер(ТабличныйДокумент, ДеревоПолейЗагрузки) Экспорт
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Поле", Истина);
	ЗагружаемыеПоля = ДеревоПолейЗагрузки.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
	Для каждого Стр Из ЗагружаемыеПоля Цикл
		Стр.НомерКолонки = 0;
	КонецЦикла;

	Таблица = Новый ТаблицаЗначений;

	Для НомерКолонки = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
		Таблица.Колонки.Добавить("НомерКолонки" + НомерКолонки);
	КонецЦикла;

	Для НомерСтроки = 1 По ТабличныйДокумент.ВысотаТаблицы Цикл
		НовСтрока = Таблица.Добавить();

		Для НомерКолонки = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
			Значение = СокрЛП(ТабличныйДокумент.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(НомерКолонки, "ЧГ=")).Текст);

			НовСтрока["НомерКолонки" + НомерКолонки] = Значение;
		КонецЦикла;
	КонецЦикла;

	НайтиНастройкуТовара = ДеревоПолейЗагрузки.Строки.Найти("НаименованиеЗагрузка", "", Истина);
	НайтиНастройкуАртикул = ДеревоПолейЗагрузки.Строки.Найти("АртикулЗагрузка", , Истина);
	МассивВариантов = НайтиНастройкуТовара.ВариантыСовпадений;
	МассивВариантовАртикул = НайтиНастройкуАртикул.ВариантыСовпадений;

	ПерваяСтрока = Неопределено;
	Для каждого Значение Из МассивВариантов Цикл
		ПерваяСтрока = Таблица.Найти(СокрЛП(Значение));

		Если Не (ПерваяСтрока = Неопределено) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ПерваяСтрока = Неопределено Тогда
		Для каждого Значение Из МассивВариантовАртикул Цикл
			ПерваяСтрока = Таблица.Найти(СокрЛП(Значение));

			Если Не (ПерваяСтрока = Неопределено) Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	НомерПервойСтроки = 0;
	Если ПерваяСтрока = Неопределено Тогда
		Сообщить("ИНСТРУКЦИЯ. Вверху справа расположено окошко с настройками. Там есть
		|колонки. Одна из которых Варианты совпадений. Обработка
		|распознает колонки по перечисленным вариантам совпадений. На
		|наименовании стоит контроль.
		|Это означает что у вас есть таблица, в которой есть строка с названиями
		|колонок. Обработка по названиям колонок ищет варианты совпадений в
		|настройках и указывает номер колонки.
		|На номенклатуре стоит контроль - если обработка не нашла
		|колонку с названием номенклатуры выдает сообщение. Вам нужно или
		|добавить название в вариант и сохранить или переназвать колонку с
		|номенклутрой любым словом из вариантов совпадений.");

		Сообщить("Не найдена колонка с номенклатурой. Прочитайте выданное сообщение с инструкцией.");

		Возврат;
	Иначе
		НомерПервойСтроки = Таблица.Индекс(ПерваяСтрока) + 1;
	КонецЕсли;

	ТабличныйДокумент.Очистить();

	КолонкаАртикул = 0;
	КолонкаКод = 0;
	КолонкаНаименованиеНоменклатуры = 0;
	КолонкаЕдиницаИзмерения = 0;
	КолонкаЦена = 0;
	НоваяКолонка = 0;
	Для НомерКолонки = 1 По Таблица.Колонки.Количество() Цикл
		ЗначениеШапки = ПерваяСтрока["НомерКолонки" + НомерКолонки];
		Если ПустаяСтрока(ЗначениеШапки) Тогда
			Продолжить;
		КонецЕсли;
		НоваяКолонка = НоваяКолонка + 1;

		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Поле", Истина);
		ЗагружаемыеПоля = ДеревоПолейЗагрузки.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
		Для каждого Стр Из ЗагружаемыеПоля Цикл

			МассивВариантов = Стр.ВариантыСовпадений;

			Для каждого СтрПоиска Из МассивВариантов Цикл
				Если Найти(ВРег(ЗначениеШапки), ВРег(СтрПоиска)) > 0 Тогда
					Стр.НомерКолонки = НоваяКолонка;
					Стр.НомерКолонкиФайла = НомерКолонки;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	НомСтроки = 0;
	НоваяСтрока = 0;
	Для каждого Строка Из Таблица Цикл
		НомСтроки = НомСтроки + 1;
		Если НомСтроки < НомерПервойСтроки Тогда
			Продолжить;
		КонецЕсли;

		Если НомСтроки <> НомерПервойСтроки Тогда

			КонтрольЗаполнения = Ложь;

			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("КонтрольЗаполнения", Истина);
			ЗагружаемыеПоля = ДеревоПолейЗагрузки.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
			Для каждого Стр Из ЗагружаемыеПоля Цикл
				Если КонтрольЗаполнения = Истина Тогда
					Продолжить;
				КонецЕсли;
				Если Стр.НомерКолонки = 0 Тогда
					Продолжить;
				КонецЕсли;

				Значение = СокрЛП(Строка["НомерКолонки" + Стр.НомерКолонкиФайла]);

				Если ПустаяСтрока(Значение) Тогда
					КонтрольЗаполнения = Истина;
				ИначеЕсли Стр.КонтрольДлиныПоля > 0 И СтрДлина(Значение) < Стр.КонтрольДлиныПоля Тогда
					КонтрольЗаполнения = Истина;
				КонецЕсли;
			КонецЦикла;

			Если КонтрольЗаполнения = Истина Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;

		НоваяСтрока = НоваяСтрока + 1;
		НоваяКолонка = 0;

		мМинимальнаяШиринаКолонки = 14;

		Для НомерКолонки = 1 По Таблица.Колонки.Количество() Цикл
			ЗначениеШапки = ПерваяСтрока["НомерКолонки" + НомерКолонки];
			Если ПустаяСтрока(ЗначениеШапки) Тогда
				Продолжить;
			КонецЕсли;

			НоваяКолонка = НоваяКолонка + 1;

			ОбластьТабличногоПоля = ТабличныйДокумент.Область("R" + Формат(НоваяСтрока, "ЧГ=") + "C" + Формат(НоваяКолонка, "ЧГ="));

			Значение = Строка["НомерКолонки" + НомерКолонки];
			ОбластьТабличногоПоля.Текст = Значение;

			Если НоваяСтрока = 1 Тогда
				ОбластьТабличногоПоля.ЦветФона = WebЦвета.ЦианСветлый;

				СтрокаНастройки = ДеревоПолейЗагрузки.Строки.Найти(НоваяКолонка, "НомерКолонки", Истина);
				Если Не (СтрокаНастройки = Неопределено) Тогда
					ОбластьТабличногоПоля.ВертикальноеПОложение = ВертикальноеПоложение.Центр;
					ОбластьТабличногоПоля.Примечание.Текст = "Определена колонка " + СтрокаНастройки;
					ОбластьТабличногоПоля.ЦветФона = WebЦвета.Зеленый;
					ОбластьТабличногоПоля.Шрифт = мЖирныйШрифт;
				КонецЕсли;
			КонецЕсли;

			ШиринаЗначения = ?(СтрДлина(СокрЛП(Значение)) > 0, СтрДлина(СокрЛП(Значение)), мМинимальнаяШиринаКолонки);
			ОбластьТабличногоПоля.ШиринаКолонки = ?(ОбластьТабличногоПоля.ШиринаКолонки > ШиринаЗначения, ОбластьТабличногоПоля.ШиринаКолонки, ШиринаЗначения);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры


Процедура мПрочитатьГруппы(ТаблицаСоответствий)
	ТекущаяГруппа = "";

	Для каждого Стр Из ТаблицаСоответствий Цикл
		Если ЗначениеЗаполнено(Стр.ГруппаСправочника) Тогда
			Продолжить;
		КонецЕсли;

		Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		Если ЕстьЕдиница Тогда

			Если Не ЗначениеЗаполнено(Стр.ЕдиницаИзмеренияЗагрузка) Тогда

				Если Не ЗначениеЗаполнено(Стр.НаименованиеЗагрузка) Тогда
					ТекущаяГруппа = Стр.АртикулЗагрузка;
				Иначе
					ТекущаяГруппа = Стр.НаименованиеЗагрузка;
				КонецЕсли;
				Стр.ЭтоГруппа = Истина;
			Иначе
				Стр.ЭтоГруппа = Ложь;
				Стр.Родитель5 = ТекущаяГруппа;
			КонецЕсли;

		ИначеЕсли ЕстьАртикул Тогда

			Если Не ЗначениеЗаполнено(Стр.АртикулЗагрузка) Тогда
				ТекущаяГруппа = Стр.НаименованиеЗагрузка;
				Стр.ЭтоГруппа = Истина;
			Иначе
				Если Не ЗначениеЗаполнено(Стр.НаименованиеЗагрузка) Тогда
					ТекущаяГруппа = Стр.АртикулЗагрузка;
					Стр.ЭтоГруппа = Истина;
				Иначе
					Стр.ЭтоГруппа = Ложь;
					Стр.Родитель5 = ТекущаяГруппа;
				КонецЕсли;
			КонецЕсли;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры


Функция мПрочитатьТабличныйДокумент(ТабличныйДокумент, ТаблицаСоответствий, ДеревоПолейЗагрузки, СвойстваНоменклатуры, СвойстваХарактеристик, ПараметрыОбработки) Экспорт
	ЕстьАртикул = Ложь;
	ЕстьЕдиница = Ложь;
	ЕстьЦена = Ложь;

	НомерПервойСтроки = ПараметрыОбработки.НомерПервойСтроки;
	СчитыватьИерархиюИзКолонкиСНоменклатурой = ПараметрыОбработки.СчитыватьИерархиюИзКолонкиСНоменклатурой;

	ТаблицаСоответствий.Очистить();
	СвойстваНоменклатуры.Очистить();
	СвойстваХарактеристик.Очистить();

	КолСтрок = 0;

	Для НомерСтроки = НомерПервойСтроки По ТабличныйДокумент.ВысотаТаблицы Цикл
		КолСтрок = КолСтрок + 1;

		НовСтрока = ТаблицаСоответствий.Добавить();
		НовСтрока.КлючСтроки = КолСтрок;

		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Поле", Истина);
		ЗагружаемыеПоля = ДеревоПолейЗагрузки.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
		Для каждого Колонка Из ЗагружаемыеПоля Цикл
			Если Колонка.НомерКолонки = 0 Тогда
				Продолжить;
			КонецЕсли;

			Название = СокрЛП(Колонка.ПолеЗагрузки);
			НомерКолонки = Колонка.НомерКолонки;

			Значение = СокрЛП(ТабличныйДокумент.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(НомерКолонки, "ЧГ=")).Текст);

			Если Не ЗначениеЗаполнено(Значение) Тогда
				Продолжить;
			КонецЕсли;

			Если Название = "АртикулЗагрузка" Тогда
				ЕстьАртикул = Истина;
			КонецЕсли;

			Если Название = "ЕдиницаИзмеренияЗагрузка" Тогда
				ЕстьЕдиница = Истина;
			КонецЕсли;

			Если Название = "ЦенаЗагрузка" Или Название = "СуммаЗагрузка" Тогда
				ЕстьЦена = Истина;

				Для каждого СтрЗамены Из СоответствияВалют Цикл
					Если Найти(Значение, СтрЗамены.Представление) > 0 Тогда
						Значение = СокрЛП(СтрЗаменить(Значение, СтрЗамены.Представление, ""));

						НовСтрока.ВалютаЦены = СтрЗамены.Валюта;
					КонецЕсли;
				КонецЦикла;

			КонецЕсли;

			Если Название = "ВалютаКонтрагента" Тогда
				Если ЗначениеЗаполнено(Значение) Тогда
					НовСтрока.ВалютаЦены = Справочники.Валюты.НайтиПоНаименованию(СокрЛП(Значение));

					Если Не ЗначениеЗаполнено(НовСтрока.ВалютаЦены) Тогда
						Сообщить("Строка " + НомерСтроки + " в справочнике валют не найдена валюта " + Значение);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			Если Название = "КоличествоЗагрузка" Или Название = "ЦенаЗагрузка" Или Название = "Вес" Или Название = "Объем" Или Название = "СуммаЗагрузка" Тогда
				Значение = СтрЗаменить(Значение, "-", ".");
				Значение = СтрЗаменить(Значение, " ", "");
				Значение = СтрЗаменить(Значение, Символы.Таб, "");
				Значение = СтрЗаменить(Значение, Символы.НПП, "");
				Если Найти(Значение, ".") > 0 И Найти(Значение, ",") > 0 Тогда
					Значение = СтрЗаменить(Значение, ",", "");
				ИначеЕсли Найти(Значение, ",") > 0 Тогда
					Значение = СтрЗаменить(Значение, ",", ".");
				КонецЕсли;

				Попытка
					Значение = Число(СокрЛП(Значение));
				Исключение
					Сообщить("Значение не определено как Число...Колонка " + Название + " в строке " + НомерСтроки + " имеет значение " + Значение);
				КонецПопытки;
			КонецЕсли;

			Если Название = "СуммаЗагрузка" Тогда
				НовСтрока[Название] = Значение;

				Если ЗначениеЗаполнено(Значение) И НовСтрока.КоличествоЗагрузка > 0 Тогда
					НовСтрока.ЦенаЗагрузка = НовСтрока.СуммаЗагрузка / НовСтрока.КоличествоЗагрузка;
				КонецЕсли;
			Иначе
				Попытка
					НовСтрока[Название] = Значение;
				Исключение
				КонецПопытки;
			КонецЕсли;


			Если ЗначениеЗаполнено(Значение) Тогда
				Если Колонка.Родитель.ПолеЗагрузки = "ДополнительныеРеквизиты" Или Колонка.Родитель.ПолеЗагрузки = "ДополнительныеСведенья" Тогда
					НоваяСтрокаСвойств = СвойстваНоменклатуры.Добавить();
					НоваяСтрокаСвойств.КлючСтроки = НовСтрока.КлючСтроки;
					НоваяСтрокаСвойств.Свойство = Колонка.Значение;
					НоваяСтрокаСвойств.Значение = Значение;
				КонецЕсли;
			КонецЕсли;


			Если ЗначениеЗаполнено(Значение) Тогда
				Если Колонка.Родитель.ПолеЗагрузки = "ХарактеристикиНоменклатуры" Тогда
					НоваяСтрокаСвойств = СвойстваХарактеристик.Добавить();
					НоваяСтрокаСвойств.КлючСтроки = НовСтрока.КлючСтроки;
					НоваяСтрокаСвойств.Свойство = Колонка.Значение;
					НоваяСтрокаСвойств.Значение = Значение;
				КонецЕсли;
			КонецЕсли;

		КонецЦикла;
	КонецЦикла;

	Если СчитыватьИерархиюИзКолонкиСНоменклатурой Тогда
		Если ЕстьЕдиница Или ЕстьАртикул Тогда
			мПрочитатьГруппы(ТаблицаСоответствий);
		КонецЕсли;
	КонецЕсли;

	Возврат Истина;

КонецФункции


Функция мПрочитатьТабличныйДокументИзТекста(ТабличныйДокумент, ИмяФайла) Экспорт
	ВыбФайл = Новый Файл(ИмяФайла);
	Если Не ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат Ложь;
	КонецЕсли;

	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	Попытка
		ТекстовыйДокумент.Прочитать(ИмяФайла);
	Исключение
		Сообщить("Ошибка открытия файла!");
		Возврат Ложь;
	КонецПопытки;

	ТабличныйДокумент.Очистить();
	Для ТекущаяСтрока = 1 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		ТекущаяКолонка = 0;
		Для каждого Значение Из глРазложитьСтрокуВМассивПодстрок(ТекстовыйДокумент.ПолучитьСтроку(ТекущаяСтрока), ";") Цикл
			ТекущаяКолонка = ТекущаяКолонка + 1;
			ТабличныйДокумент.Область("R" + Формат(ТекущаяСтрока, "ЧГ=") + "C" + Формат(ТекущаяКолонка, "ЧГ=")).Текст = Значение;

		КонецЦикла;
	КонецЦикла;

	Возврат Истина;

КонецФункции


Функция мПрочитатьТабличныйДокументИзDBF(ТабличныйДокумент, ИмяФайла) Экспорт
	ВыбФайл = Новый Файл(ИмяФайла);
	Если Не ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат Ложь;
	КонецЕсли;

	XBase = Новый XBase;
	XBase.Кодировка = КодировкаXBase.OEM;
	Попытка
		XBase.ОткрытьФайл(ИмяФайла);
	Исключение
		Сообщить("Ошибка открытия файла!");
		Возврат Ложь;
	КонецПопытки;

	ТабличныйДокумент.Очистить();
	ТекущаяСтрока = 1;

	ТекущаяКолонка = 0;
	Для каждого Поле Из XBase.поля Цикл
		ТекущаяКолонка = ТекущаяКолонка + 1;
		ТабличныйДокумент.Область("R" + Формат(ТекущаяСтрока, "ЧГ=") + "C" + Формат(ТекущаяКолонка, "ЧГ=")).Текст = Поле.Имя;
	КонецЦикла;

	Рез = XBase.Первая();
	Пока Не XBase.ВКонце() Цикл
		ТекущаяСтрока = ТекущаяСтрока + 1;

		ТекущаяКолонка = 0;
		Для каждого Поле Из XBase.поля Цикл
			ТекущаяКолонка = ТекущаяКолонка + 1;
			ТабличныйДокумент.Область("R" + Формат(ТекущаяСтрока, "ЧГ=") + "C" + Формат(ТекущаяКолонка, "ЧГ=")).Текст = XBase.ПолучитьЗначениеПоля(ТекущаяКолонка - 1);
		КонецЦикла;

		XBase.Следующая();
	КонецЦикла;

	Возврат Истина;

КонецФункции




Функция мСинхронизироватьПроизводителейНоменклатуры(ТабличнаяЧасть, ДеревоПолейЗагрузки) Экспорт
	Перем ПроизводительПустаяСсылка, НайтиНастройкуПроизводительЗагрузка;
	ПроизводительПустаяСсылка = Справочники.Производители.ПустаяСсылка();

	НайтиНастройкуПроизводительЗагрузка = ДеревоПолейЗагрузки.Строки.Найти("ПроизводительЗагрузка", , Истина);
	ИспользоватьКонтрольПоПроизводителю = ?(НайтиНастройкуПроизводительЗагрузка.НомерКолонки > 0, Истина, Ложь);

	Если ИспользоватьКонтрольПоПроизводителю = Ложь Тогда
		Возврат Ложь;
	КонецЕсли;

	Для каждого Стр Из ТабличнаяЧасть Цикл

		СтрПроизводительЗагрузка = СокрЛП(Стр.ПроизводительЗагрузка);

		Если ПустаяСтрока(СтрПроизводительЗагрузка) Тогда
			Продолжить;
		КонецЕсли;

		Если ИспользоватьКонтрольПоПроизводителю И ЗначениеЗаполнено(СтрПроизводительЗагрузка) Тогда
			УказанПроизводитель = Справочники.Производители.НайтиПоНаименованию(СтрПроизводительЗагрузка);
			Если УказанПроизводитель = ПроизводительПустаяСсылка Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат Ложь;

КонецФункции

Процедура мСинхронизироватьСервер(ТабличнаяЧасть, ДеревоПолейЗагрузки, СвойстваХарактеристик, ПараметрыОбработки) Экспорт
	Перем ПустаяСсылка, ХарактеристикаПустаяСсылка, ПроизводительПустаяСсылка;
	Партнер = ПараметрыОбработки.Партнер;
	Производитель = ПараметрыОбработки.Производитель;
	УбиратьСимволыВАртикуле = ПараметрыОбработки.УбиратьСимволыВАртикуле;
	УбиратьСимволыВНаименованиях = ПараметрыОбработки.УбиратьСимволыВНаименованиях;
	ДобавитьПрефиксКАртикулу = ПараметрыОбработки.ДобавитьПрефиксКАртикулу;
	ИспользоватьАналогиНоменклатуры = ПараметрыОбработки.ИспользоватьАналогиНоменклатуры;
	АвтоматическиСоздаватьНовыхПроизводителей = ПараметрыОбработки.АвтоматическиСоздаватьНовыхПроизводителей;

	ПустаяСсылка = Справочники.Номенклатура.ПустаяСсылка();
	ХарактеристикаПустаяСсылка = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	ПроизводительПустаяСсылка = Справочники.Производители.ПустаяСсылка();

	МассивСовпадений = Новый ТаблицаЗначений;
	МассивСовпадений.Колонки.Добавить("НоменклатураПоставщика");
	МассивСовпадений.Колонки.Добавить("Номенклатура");
	МассивСовпадений.Колонки.Добавить("ХарактеристикаНоменклатуры");
	МассивСовпадений.Колонки.Добавить("Упаковка");
	МассивСовпадений.Колонки.Добавить("КлючПоиска", Новый ОписаниеТипов("Число"));

	ТаблицаЗагрузкиОбработка = ТабличнаяЧасть.Выгрузить();
	ТабличнаяЧасть.Очистить();


	НайтиНастройкуПроизводительЗагрузка = ДеревоПолейЗагрузки.Строки.Найти("ПроизводительЗагрузка", , Истина);

	Если ЗначениеЗаполнено(Производитель) Тогда
		ИспользоватьКонтрольПоПроизводителю = Истина;
		УказанПроизводитель = Производитель;
	Иначе
		ИспользоватьКонтрольПоПроизводителю = ?(НайтиНастройкуПроизводительЗагрузка.НомерКолонки > 0, Истина, Ложь);
	КонецЕсли;

	Для каждого Стр Из ТаблицаЗагрузкиОбработка Цикл

		Стр.Количество = Стр.КоличествоЗагрузка;
		Стр.Цена = Стр.ЦенаЗагрузка;

		НайденнаяНоменклатураПоставщика = Справочники.НоменклатураПоставщиков.ПустаяСсылка();
		НайденнаяСсылка = ПустаяСсылка;
		НайденнаяХарактеристика = ХарактеристикаПустаяСсылка;
		НайденнаяУпаковка = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();
		УказанПроизводитель = ПроизводительПустаяСсылка;

		Если ИспользоватьКонтрольПоПроизводителю И ЗначениеЗаполнено(Стр.ПроизводительЗагрузка) Тогда
			УказанПроизводитель = Справочники.Производители.НайтиПоНаименованию(СокрЛП(Стр.ПроизводительЗагрузка), Истина);
			Если УказанПроизводитель <> ПроизводительПустаяСсылка И УказанПроизводитель <> Неопределено Тогда
			Иначе
				УказанПроизводитель = ПроизводительПустаяСсылка;

				Если АвтоматическиСоздаватьНовыхПроизводителей Тогда
					НовыйПроизводитель = Справочники.Производители.СоздатьЭлемент();
					НовыйПроизводитель.Наименование = СокрЛП(Стр.ПроизводительЗагрузка);
					НовыйПроизводитель.Записать();

					УказанПроизводитель = НовыйПроизводитель.Ссылка;

					Сообщить("Создан производитель - " + УказанПроизводитель);
				Иначе
					Сообщить("ОШИБКА. Не найден производитель (данные могут быть неправильно сопоставлены) - " + Стр.ПроизводительЗагрузка);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		НаименованиеДляПоиска = СокрЛП(Стр.НаименованиеЗагрузка);
		ПолноеНаименованиеДляПоиска = СокрЛП(Стр.НаименованиеПолноеЗагрузка);
		ХарактеристикаЗагрузка = СокрЛП(Стр.ХарактеристикаЗагрузка);

		Если Не ЗначениеЗаполнено(Стр.АртикулЗагрузка) И Не ЗначениеЗаполнено(НаименованиеДляПоиска) Тогда
			Продолжить;
		КонецЕсли;

		Если УбиратьСимволыВНаименованиях Тогда
			НаименованиеДляПоиска = глУбратьСимволы(НаименованиеДляПоиска);
		КонецЕсли;

		Если УбиратьСимволыВАртикуле Тогда
			СтрАртикулЗагрузка = глУбратьСимволы(Стр.АртикулЗагрузка);

			Стр.АртикулЗагрузка = СтрАртикулЗагрузка;
		Иначе
			СтрАртикулЗагрузка = СокрЛП(Стр.АртикулЗагрузка);
		КонецЕсли;

		Если ЗначениеЗаполнено(ДобавитьПрефиксКАртикулу) Тогда
			СтрАртикулЗагрузка = "" + СокрЛП(ДобавитьПрефиксКАртикулу) + "" + СтрАртикулЗагрузка;
			Стр.АртикулЗагрузка = СтрАртикулЗагрузка;
		КонецЕсли;

		МассивСовпадений.Очистить();

		Для каждого СтрокаНастройкиПоиска Из НастройкаПоиска Цикл

			Если СтрокаНастройкиПоиска.Пометка = Ложь Тогда
				Продолжить;
			КонецЕсли;

			Если Стр.ЭтоГруппа Тогда
				Продолжить;
			КонецЕсли;

			РежимПоиска = СтрокаНастройкиПоиска.Наименование;

			Если РежимПоиска = "СправочникКод" Тогда

				СтрКодЗагрузка = СокрЛП(Стр.КодЗагрузка);

				Если Не ЗначениеЗаполнено(СтрКодЗагрузка) Тогда
					Продолжить;
				КонецЕсли;

				Если МассивСовпадений.Количество() = 0 Тогда
					НайденнаяСсылка = Справочники.Номенклатура.НайтиПоКоду(СтрКодЗагрузка);

					Если Не (НайденнаяСсылка = ПустаяСсылка) Тогда
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.Номенклатура = НайденнаяСсылка;
						Совпадение.КлючПоиска = СтрокаНастройкиПоиска.НомерСтроки;
					КонецЕсли;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "СправочникАртикулПлюсНаименование" И МассивСовпадений.Количество() = 0 Тогда

				Если Не ЗначениеЗаполнено(СтрАртикулЗагрузка) Тогда
					Продолжить;
				КонецЕсли;

				ТекстЗапроса = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
				|	СпрНоменклатура.Ссылка,
				|	НоменклатураПоставщиков.Ссылка КАК НоменклатураПоставщика
				|ИЗ
				|	Справочник.Номенклатура КАК СпрНоменклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			НоменклатураПоставщиков.Ссылка КАК Ссылка,
				|			НоменклатураПоставщиков.Номенклатура КАК Номенклатура
				|		ИЗ
				|			Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
				|		ГДЕ
				|			НоменклатураПоставщиков.Владелец = &ВладелецПартнер) КАК НоменклатураПоставщиков
				|		ПО (НоменклатураПоставщиков.Номенклатура = СпрНоменклатура.Ссылка)
				|ГДЕ
				|	СпрНоменклатура.Артикул = &АртикулЗагрузка
				|	И СпрНоменклатура.Наименование = &НаименованиеДляПоиска
				|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
				|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";

				Если ИспользоватьКонтрольПоПроизводителю Тогда
					ТекстЗапроса = ТекстЗапроса + "
					|	И СпрНоменклатура.Производитель = &УказанПроизводитель";
				КонецЕсли;

				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапроса;
				Запрос.УстановитьПараметр("АртикулЗагрузка", СтрАртикулЗагрузка);
				Запрос.УстановитьПараметр("НаименованиеДляПоиска", НаименованиеДляПоиска);
				Запрос.УстановитьПараметр("УказанПроизводитель", УказанПроизводитель);
				Запрос.УстановитьПараметр("ВладелецПартнер", Партнер);
				РезультатЗапроса = Запрос.Выполнить();

				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.НоменклатураПоставщика = Выборка.НоменклатураПоставщика;
						Совпадение.Номенклатура = Выборка.Ссылка;
						Совпадение.КлючПоиска = СтрокаНастройкиПоиска.НомерСтроки;
					КонецЦикла;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "СправочникАртикулВНаименовании" И МассивСовпадений.Количество() = 0 Тогда

				Если Не ЗначениеЗаполнено(НаименованиеДляПоиска) Тогда
					Продолжить;
				КонецЕсли;

				МассивСлов = глРазложитьСтрокуВМассивПодстрок(НаименованиеДляПоиска, " ", УбиратьСимволыВНаименованиях, Ложь);
				КоличествоСлов = МассивСлов.Количество();

				ЕстьРезультат = Ложь;

				Для инд = 0 По КоличествоСлов - 1 Цикл

					Если ЕстьРезультат Тогда
						Продолжить;
					КонецЕсли;

					СтрКлючевоеСлово = СокрЛП(МассивСлов[инд]);

					Если СтрДлина(СтрКлючевоеСлово) < 3 Тогда
						Продолжить;
					КонецЕсли;



					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
					|	СпрНоменклатура.Ссылка КАК Номенклатура
					|ИЗ
					|	Справочник.Номенклатура КАК СпрНоменклатура
					|ГДЕ
					|	СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
					|	И СпрНоменклатура.Артикул = &ПодстрокаПоиска" + Строка(инд) + "
					|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";


					Если ИспользоватьКонтрольПоПроизводителю Тогда
						ТекстЗапроса = ТекстЗапроса + "
						|	И СпрНоменклатура.Производитель = &УказанПроизводитель";
						Запрос.УстановитьПараметр("УказанПроизводитель", УказанПроизводитель);
					КонецЕсли;

					Запрос.УстановитьПараметр("ПодстрокаПоиска" + Строка(инд), СтрКлючевоеСлово);

					РезультатЗапроса = Запрос.Выполнить();

					Если Не РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							Совпадение = МассивСовпадений.Добавить();
							Совпадение.Номенклатура = Выборка.Номенклатура;
							Совпадение.КлючПоиска = СтрокаНастройкиПоиска.НомерСтроки;

							ЕстьРезультат = Истина;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;

			ИначеЕсли РежимПоиска = "СправочникНаименованиеПолное" И МассивСовпадений.Количество() = 0 Тогда

				Если Не ЗначениеЗаполнено(ПолноеНаименованиеДляПоиска) Тогда
					Продолжить;
				КонецЕсли;

				ТекстЗапроса = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
				|	СпрНоменклатура.Ссылка КАК Номенклатура,
				|	НоменклатураПоставщиков.Ссылка КАК НоменклатураПоставщика
				|ИЗ
				|	Справочник.Номенклатура КАК СпрНоменклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			НоменклатураПоставщиков.Ссылка КАК Ссылка,
				|			НоменклатураПоставщиков.Номенклатура КАК Номенклатура
				|		ИЗ
				|			Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
				|		ГДЕ
				|			НоменклатураПоставщиков.Владелец = &ВладелецПартнер) КАК НоменклатураПоставщиков
				|		ПО (НоменклатураПоставщиков.Номенклатура = СпрНоменклатура.Ссылка)
				|ГДЕ
				|	СпрНоменклатура.НаименованиеПолное = &НаименованиеПолноеЗагрузка
				|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
				|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";

				Если ИспользоватьКонтрольПоПроизводителю Тогда
					ТекстЗапроса = ТекстЗапроса + "
					|	И СпрНоменклатура.Производитель = &УказанПроизводитель";
				КонецЕсли;

				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапроса;
				Запрос.УстановитьПараметр("НаименованиеПолноеЗагрузка", ПолноеНаименованиеДляПоиска);
				Запрос.УстановитьПараметр("УказанПроизводитель", УказанПроизводитель);
				Запрос.УстановитьПараметр("ВладелецПартнер", Партнер);
				РезультатЗапроса = Запрос.Выполнить();

				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.НоменклатураПоставщика = Выборка.НоменклатураПоставщика;
						Совпадение.Номенклатура = Выборка.Номенклатура;
						Совпадение.КлючПоиска = СтрокаНастройкиПоиска.НомерСтроки;
					КонецЦикла;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "СправочникАртикул" И МассивСовпадений.Количество() = 0 Тогда

				Если Не ЗначениеЗаполнено(СтрАртикулЗагрузка) Тогда
					Продолжить;
				КонецЕсли;

				ТекстЗапроса = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
				|	СпрНоменклатура.Ссылка,
				|	НоменклатураПоставщиков.Ссылка КАК НоменклатураПоставщика
				|ИЗ
				|	Справочник.Номенклатура КАК СпрНоменклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			НоменклатураПоставщиков.Ссылка КАК Ссылка,
				|			НоменклатураПоставщиков.Номенклатура КАК Номенклатура
				|		ИЗ
				|			Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
				|		ГДЕ
				|			НоменклатураПоставщиков.Владелец = &ВладелецПартнер) КАК НоменклатураПоставщиков
				|		ПО (НоменклатураПоставщиков.Номенклатура = СпрНоменклатура.Ссылка)
				|ГДЕ
				|	СпрНоменклатура.Артикул = &АртикулЗагрузка
				|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
				|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";

				Если ИспользоватьКонтрольПоПроизводителю Тогда
					ТекстЗапроса = ТекстЗапроса + "
					|	И СпрНоменклатура.Производитель = &УказанПроизводитель";
				КонецЕсли;

				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапроса;
				Запрос.УстановитьПараметр("АртикулЗагрузка", СтрАртикулЗагрузка);
				Запрос.УстановитьПараметр("УказанПроизводитель", УказанПроизводитель);
				Запрос.УстановитьПараметр("ВладелецПартнер", Партнер);
				РезультатЗапроса = Запрос.Выполнить();

				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.НоменклатураПоставщика = Выборка.НоменклатураПоставщика;
						Совпадение.Номенклатура = Выборка.Ссылка;
						Совпадение.КлючПоиска = СтрокаНастройкиПоиска.НомерСтроки;
					КонецЦикла;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "НоменклатураКонтрагентовАртикулНаименование" И МассивСовпадений.Количество() = 0 Тогда

				Если Не ЗначениеЗаполнено(СтрАртикулЗагрузка) Тогда
					Продолжить;
				КонецЕсли;

				ТекстЗапроса = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
				|	НоменклатураПоставщиков.Ссылка КАК НоменклатураПоставщика,
				|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
				|	НоменклатураПоставщиков.Характеристика КАК ХарактеристикаНоменклатуры,
				|	НоменклатураПоставщиков.Упаковка КАК Упаковка
				|ИЗ
				|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
				|ГДЕ
				|	НоменклатураПоставщиков.Наименование = &НаименованиеДляПоиска
				|	И НоменклатураПоставщиков.Артикул = &АртикулКонтрагента
				|	И НоменклатураПоставщиков.Владелец = &ВладелецПартнер
				|	И НоменклатураПоставщиков.Номенклатура.ПометкаУдаления = ЛОЖЬ";


				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапроса;
				Запрос.УстановитьПараметр("НаименованиеДляПоиска", НаименованиеДляПоиска);
				Запрос.УстановитьПараметр("АртикулКонтрагента", СтрАртикулЗагрузка);
				Запрос.УстановитьПараметр("УказанПроизводитель", УказанПроизводитель);
				Запрос.УстановитьПараметр("ВладелецПартнер", Партнер);
				РезультатЗапроса = Запрос.Выполнить();


				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.НоменклатураПоставщика = Выборка.НоменклатураПоставщика;
						Совпадение.Номенклатура = Выборка.Номенклатура;
						Совпадение.ХарактеристикаНоменклатуры = Выборка.ХарактеристикаНоменклатуры;
						Совпадение.Упаковка = Выборка.Упаковка;
						Совпадение.КлючПоиска = СтрокаНастройкиПоиска.НомерСтроки;
					КонецЦикла;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "НоменклатураКонтрагентовАртикулНаименование" И МассивСовпадений.Количество() = 0 Тогда

				Если Не ЗначениеЗаполнено(СтрАртикулЗагрузка) Тогда
					Продолжить;
				КонецЕсли;

				ТекстЗапроса = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
				|	НоменклатураПоставщиков.Ссылка КАК НоменклатураПоставщика,
				|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
				|	НоменклатураПоставщиков.Характеристика КАК ХарактеристикаНоменклатуры,
				|	НоменклатураПоставщиков.Упаковка КАК Упаковка
				|ИЗ
				|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
				|ГДЕ
				|	НоменклатураПоставщиков.Артикул = &АртикулКонтрагента
				|	И НоменклатураПоставщиков.Владелец = &ВладелецПартнер
				|	И НоменклатураПоставщиков.Номенклатура.ПометкаУдаления = ЛОЖЬ";


				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапроса;
				Запрос.УстановитьПараметр("АртикулКонтрагента", СтрАртикулЗагрузка);
				Запрос.УстановитьПараметр("УказанПроизводитель", УказанПроизводитель);
				Запрос.УстановитьПараметр("ВладелецПартнер", Партнер);
				РезультатЗапроса = Запрос.Выполнить();


				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.НоменклатураПоставщика = Выборка.НоменклатураПоставщика;
						Совпадение.Номенклатура = Выборка.Номенклатура;
						Совпадение.ХарактеристикаНоменклатуры = Выборка.ХарактеристикаНоменклатуры;
						Совпадение.Упаковка = Выборка.Упаковка;
						Совпадение.КлючПоиска = СтрокаНастройкиПоиска.НомерСтроки;
					КонецЦикла;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "НоменклатураКонтрагентовНаименование" И МассивСовпадений.Количество() = 0 Тогда

				Если Не ЗначениеЗаполнено(НаименованиеДляПоиска) Тогда
					Продолжить;
				КонецЕсли;

				ТекстЗапроса = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
				|	НоменклатураПоставщиков.Ссылка КАК НоменклатураПоставщика,
				|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
				|	НоменклатураПоставщиков.Характеристика КАК ХарактеристикаНоменклатуры,
				|	НоменклатураПоставщиков.Упаковка КАК Упаковка
				|ИЗ
				|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
				|ГДЕ
				|	НоменклатураПоставщиков.Наименование = &НаименованиеДляПоиска
				|	И НоменклатураПоставщиков.Владелец = &ВладелецПартнер
				|	И НоменклатураПоставщиков.Номенклатура.ПометкаУдаления = ЛОЖЬ";


				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапроса;
				Запрос.УстановитьПараметр("НаименованиеДляПоиска", НаименованиеДляПоиска);
				Запрос.УстановитьПараметр("УказанПроизводитель", УказанПроизводитель);
				Запрос.УстановитьПараметр("ВладелецПартнер", Партнер);
				РезультатЗапроса = Запрос.Выполнить();

				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.НоменклатураПоставщика = Выборка.НоменклатураПоставщика;
						Совпадение.Номенклатура = Выборка.Номенклатура;
						Совпадение.ХарактеристикаНоменклатуры = Выборка.ХарактеристикаНоменклатуры;
						Совпадение.Упаковка = Выборка.Упаковка;
						Совпадение.КлючПоиска = СтрокаНастройкиПоиска.НомерСтроки;
					КонецЦикла;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "РегистрШтрихкод" И МассивСовпадений.Количество() = 0 Тогда

				Если Не ЗначениеЗаполнено(Стр.ШтрихКодЗагрузка) Тогда
					Продолжить;
				КонецЕсли;

				ШтрихкодПоиска = СокрЛП(Стр.ШтрихКодЗагрузка);

				ТекстЗапроса = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
				|	РегШтрихкоды.Номенклатура КАК Номенклатура,
				|	РегШтрихкоды.Характеристика КАК ХарактеристикаНоменклатуры,
				|	РегШтрихкоды.Упаковка КАК Упаковка
				|ИЗ
				|	РегистрСведений.ШтрихкодыНоменклатуры КАК РегШтрихкоды
				|ГДЕ
				|	РегШтрихкоды.Штрихкод = &ШтрихКодПоиска
				|	И РегШтрихкоды.Номенклатура.ПометкаУдаления = ЛОЖЬ";


				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапроса;
				Запрос.УстановитьПараметр("ШтрихКодПоиска", ШтрихкодПоиска);
				РезультатЗапроса = Запрос.Выполнить();

				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.Номенклатура = Выборка.Номенклатура;
						Совпадение.ХарактеристикаНоменклатуры = Выборка.ХарактеристикаНоменклатуры;
						Совпадение.Упаковка = Выборка.Упаковка;
						Совпадение.КлючПоиска = СтрокаНастройкиПоиска.НомерСтроки;
					КонецЦикла;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "СправочникНаименование" И МассивСовпадений.Количество() = 0 Тогда

				Если Не ЗначениеЗаполнено(НаименованиеДляПоиска) Тогда
					Продолжить;
				КонецЕсли;

				ТекстЗапроса = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
				|	СпрНоменклатура.Ссылка,
				|	НоменклатураПоставщиков.Ссылка КАК НоменклатураПоставщика
				|ИЗ
				|	Справочник.Номенклатура КАК СпрНоменклатура
				|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				|			НоменклатураПоставщиков.Ссылка КАК Ссылка,
				|			НоменклатураПоставщиков.Номенклатура КАК Номенклатура
				|		ИЗ
				|			Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
				|		ГДЕ
				|			НоменклатураПоставщиков.Владелец = &ВладелецПартнер) КАК НоменклатураПоставщиков
				|		ПО (НоменклатураПоставщиков.Номенклатура = СпрНоменклатура.Ссылка)
				|ГДЕ
				|	СпрНоменклатура.Наименование = &НоменклатураКонтрагента
				|	И СпрНоменклатура.ЭтоГруппа = ЛОЖЬ
				|	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ";

				Если ИспользоватьКонтрольПоПроизводителю Тогда
					ТекстЗапроса = ТекстЗапроса + "
					|	И СпрНоменклатура.Производитель = &УказанПроизводитель";
				КонецЕсли;

				Запрос = Новый Запрос;
				Запрос.Текст = ТекстЗапроса;
				Запрос.УстановитьПараметр("НоменклатураКонтрагента", СокрЛП(НаименованиеДляПоиска));
				Запрос.УстановитьПараметр("УказанПроизводитель", УказанПроизводитель);
				Запрос.УстановитьПараметр("ВладелецПартнер", Партнер);
				РезультатЗапроса = Запрос.Выполнить();

				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.НоменклатураПоставщика = Выборка.НоменклатураПоставщика;
						Совпадение.Номенклатура = Выборка.Ссылка;
						Совпадение.КлючПоиска = СтрокаНастройкиПоиска.НомерСтроки;
					КонецЦикла;
				КонецЕсли;

			КонецЕсли;
		КонецЦикла;

		КолСовпадений = 0;
		Если МассивСовпадений.Количество() > 0 Тогда
			Для каждого Совпадение Из МассивСовпадений Цикл
				КолСовпадений = КолСовпадений + 1;

				СтрокаТаблСинхронизации = ТабличнаяЧасть.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблСинхронизации, Стр);
				СтрокаТаблСинхронизации.КлючПоиска = Совпадение.КлючПоиска;
				СтрокаТаблСинхронизации.НоменклатураПоставщика = Совпадение.НоменклатураПоставщика;
				СтрокаТаблСинхронизации.Номенклатура = Совпадение.Номенклатура;
				СтрокаТаблСинхронизации.ХарактеристикаНоменклатуры = Совпадение.ХарактеристикаНоменклатуры;
				СтрокаТаблСинхронизации.Упаковка = Совпадение.Упаковка;
				СтрокаТаблСинхронизации.АртикулНоменклатуры = Совпадение.Номенклатура.Артикул;

				Если ЗначениеЗаполнено(ХарактеристикаЗагрузка) И Не ЗначениеЗаполнено(Совпадение.ХарактеристикаНоменклатуры) Тогда
					НайденнаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.НайтиПоНаименованию(ХарактеристикаЗагрузка, Истина, , Совпадение.Номенклатура);
					Если НайденнаяХарактеристика <> ХарактеристикаПустаяСсылка Тогда
						СтрокаТаблСинхронизации.ХарактеристикаНоменклатуры = НайденнаяХарактеристика.Ссылка;
					КонецЕсли;
				КонецЕсли;

				ПриИзмененииНоменклатуры(СтрокаТаблСинхронизации);

				Если ИспользоватьАналогиНоменклатуры Тогда
					СтрокаТаблСинхронизации.ИдентификаторАналога = СтрокаТаблСинхронизации.Номенклатура.ИдентификаторАналога;
				КонецЕсли;

				Если КолСовпадений > 1 Тогда
					СтрокаТаблСинхронизации.ПовторноеСовпадение = Истина;
				КонецЕсли;
			КонецЦикла;
		Иначе

			СтрокаТаблСинхронизации = ТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблСинхронизации, Стр);
		КонецЕсли;
	КонецЦикла;


	Если СвойстваХарактеристик.Количество() > 0 Тогда
		Для каждого СтрокаТЧ Из ТабличнаяЧасть Цикл
			Если Не ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

			Если ЗначениеЗаполнено(СтрокаТЧ.ХарактеристикаНоменклатуры) Тогда
				Продолжить;
			КонецЕсли;

			Отбор = Новый Структура;
			Отбор.Вставить("КлючСтроки", СтрокаТЧ.КлючСтроки);
			Строки = СвойстваХарактеристик.НайтиСтроки(Отбор);
			Для каждого Строчка Из Строки Цикл
				Строчка.Номенклатура = СтрокаТЧ.Номенклатура;
			КонецЦикла;
		КонецЦикла;

		ТаблицаТоваров = СвойстваХарактеристик.Выгрузить();
		ТаблицаТоваров.Свернуть("Номенклатура,КлючСтроки");

		Для каждого ВремТовар Из ТаблицаТоваров Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("КлючСтроки", ВремТовар.КлючСтроки);
			Отбор.Вставить("Номенклатура", ВремТовар.Номенклатура);

			ПолучитьХарактеристики = СвойстваХарактеристик.НайтиСтроки(Отбор);
			КоличествоСвойств = ПолучитьХарактеристики.Количество();

			Если ПолучитьХарактеристики.Количество() > 0 Тогда
				ПрерватьПоискПоЭтойПозиции = Ложь;

				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				|	ЗапросПоХарактеристикам.Номенклатура КАК Номенклатура,
				|	ЗапросПоХарактеристикам.Характеристика КАК Характеристика
				|ИЗ
				|	(ВЫБРАТЬ
				|		ЗначенияСвойствОбъектов.Ссылка.Владелец КАК Номенклатура,
				|		ЗначенияСвойствОбъектов.Ссылка КАК Характеристика,
				|		МИНИМУМ(ВЫБОР
				|				КОГДА ЗначенияСвойствОбъектов.Значение В (&МассивЗначенийСвойств)
				|					ТОГДА ИСТИНА
				|				ИНАЧЕ ЛОЖЬ
				|			КОНЕЦ) КАК ЕстьВсеУказанныеХарактеристики
				|	ИЗ
				|		Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ЗначенияСвойствОбъектов
				|	ГДЕ
				|		ЗначенияСвойствОбъектов.Ссылка.Владелец = &Номенклатура
				|	
				|	СГРУППИРОВАТЬ ПО
				|		ЗначенияСвойствОбъектов.Ссылка.Владелец,
				|		ЗначенияСвойствОбъектов.Ссылка) КАК ЗапросПоХарактеристикам
				|ГДЕ
				|	ЗапросПоХарактеристикам.ЕстьВсеУказанныеХарактеристики = ИСТИНА";

				Запрос.УстановитьПараметр("Номенклатура", ВремТовар.Номенклатура);

				МассивСвойств = Новый Массив;
				МассивЗначенийСвойств = Новый Массив;

				НомСвойства = 0;
				Для каждого ЗначенияСвойства Из ПолучитьХарактеристики Цикл
					Если Не ЗначениеЗаполнено(ЗначенияСвойства.Значение) Тогда
						Продолжить;
					КонецЕсли;

					НомСвойства = НомСвойства + 1;

					СвойствоХарактеристики = ЗначенияСвойства.Свойство;
					ЗначениеСвойства = СокрЛП(ЗначенияСвойства.Значение);

					Если СвойствоХарактеристики.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
						УстановитьСвойство = Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(ЗначениеСвойства, Истина, , СвойствоХарактеристики);
						Если УстановитьСвойство = Справочники.ЗначенияСвойствОбъектов.ПустаяСсылка() Тогда
							ПрерватьПоискПоЭтойПозиции = Истина;
							Продолжить;
						КонецЕсли;
					ИначеЕсли СвойствоХарактеристики.ТипЗначения.СодержитТип(Тип("Число")) Тогда
						ЗначениеСвойства = СтрЗаменить(ЗначениеСвойства, " ", "");
						Если Найти(ЗначениеСвойства, ".") > 0 И Найти(ЗначениеСвойства, ",") > 0 Тогда
							ЗначениеСвойства = СтрЗаменить(ЗначениеСвойства, ",", "");
						КонецЕсли;

						УстановитьСвойство = Число(ЗначениеСвойства);
					Иначе
						УстановитьСвойство = ЗначениеСвойства;
					КонецЕсли;

					Если СвойствоХарактеристики.ЭтоДополнительноеСведение Тогда
						ЭтоДополнительноеСведение = Истина;
					Иначе
						ЭтоДополнительноеСведение = Ложь;
					КонецЕсли;

					МассивСвойств.Добавить(СвойствоХарактеристики);
					МассивЗначенийСвойств.Добавить(УстановитьСвойство);






				КонецЦикла;

				Если ПрерватьПоискПоЭтойПозиции Тогда
					Продолжить;
				КонецЕсли;




				Запрос.УстановитьПараметр("МассивСвойств", МассивСвойств);
				Запрос.УстановитьПараметр("МассивЗначенийСвойств", МассивЗначенийСвойств);

				РезультатЗапроса = Запрос.Выполнить();

				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Пока Выборка.Следующий() Цикл

						ПараметрыОтбора = Новый Структура;
						ПараметрыОтбора.Вставить("КлючСтроки", ВремТовар.КлючСтроки);
						НайденныеСтроки = ТабличнаяЧасть.НайтиСтроки(ПараметрыОтбора);
						Для каждого СтрокаСинхронизации Из НайденныеСтроки Цикл
							СтрокаСинхронизации.ХарактеристикаНоменклатуры = Выборка.Характеристика;

							Для каждого ЗначенияСвойства Из ПолучитьХарактеристики Цикл
								ЗначенияСвойства.ХарактеристикаНоменклатуры = Выборка.Характеристика;
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;

			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры





Процедура мЗаписатьСоответствияНоменклатуры(ТабличнаяЧасть) Экспорт
	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		НаименованиеДляПоиска = СокрЛП(Стр.НаименованиеЗагрузка);

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
		|	НоменклатураПоставщиков.Характеристика КАК ХарактеристикаНоменклатуры,
		|	НоменклатураПоставщиков.Ссылка
		|ИЗ
		|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
		|ГДЕ
		|	НоменклатураПоставщиков.Наименование = &НаименованиеДляПоиска
		|	И НоменклатураПоставщиков.Владелец = &Партнер";


		Запрос.УстановитьПараметр("НаименованиеДляПоиска", НаименованиеДляПоиска);
		Запрос.УстановитьПараметр("Партнер", Партнер);
		РезультатЗапроса = Запрос.Выполнить();

		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбъектПолучить = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектПолучить.Удалить();
		КонецЦикла;

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
		|	НоменклатураПоставщиков.Характеристика КАК ХарактеристикаНоменклатуры
		|ИЗ
		|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
		|ГДЕ
		|	НоменклатураПоставщиков.Наименование = &НаименованиеЗагрузка
		|	И НоменклатураПоставщиков.Номенклатура = &Номенклатура
		|	И НоменклатураПоставщиков.Характеристика = &Характеристика
		|	И НоменклатураПоставщиков.Владелец = &Партнер";


		Запрос.УстановитьПараметр("НаименованиеЗагрузка", НаименованиеДляПоиска);
		Запрос.УстановитьПараметр("Номенклатура", Стр.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Стр.ХарактеристикаНоменклатуры);
		Запрос.УстановитьПараметр("Партнер", Партнер);
		РезультатЗапроса = Запрос.Выполнить();

		Если РезультатЗапроса.Пустой() Тогда
			Запись = Справочники.НоменклатураПоставщиков.СоздатьЭлемент();
			Запись.Владелец = Партнер;
			Запись.Номенклатура = Стр.Номенклатура;
			Запись.Характеристика = Стр.ХарактеристикаНоменклатуры;
			Запись.Упаковка = Стр.Упаковка;
			Запись.Артикул = Стр.АртикулЗагрузка;
			Запись.Наименование = НаименованиеДляПоиска;

			Запись.Записать();

			Стр.НоменклатураПоставщика = Запись.Ссылка;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


Функция мСоздатьЗаказПоставщикуСервер() Экспорт
	НовыйДокумент = Документы.ЗаказПоставщику.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.Менеджер = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Партнер = Партнер;
	НовыйДокумент.Соглашение = Соглашение;
	НовыйДокумент.ЗаполнитьУсловияЗакупокПоСоглашению();
	НовыйДокумент.Комментарий = "";
	НовыйДокумент.Статус = Перечисления.СтатусыЗаказовПоставщикам.Согласован;
	НовыйДокумент.Приоритет = Перечисления.Приоритеты.Средний;

	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		КоэффициентУпаковки = ПолучитьКоэффициентУпаковки(Стр.Упаковка);

		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.НоменклатураПоставщика = Стр.НоменклатураПоставщика;
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Упаковка = Стр.Упаковка;
		СтрокаТЧ.Количество = Стр.Количество;
		СтрокаТЧ.КоличествоУпаковок = Стр.Количество / КоэффициентУпаковки;
		СтрокаТЧ.Цена = Стр.Цена;
		СтрокаТЧ.Сумма = СтрокаТЧ.КоличествоУпаковок * СтрокаТЧ.Цена;

		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", НовыйДокумент.НалогообложениеНДС);
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(НовыйДокумент);
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСумму");

		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧ, СтруктураДействий, КэшированныеЗначения);
	КонецЦикла;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", НовыйДокумент.НалогообложениеНДС);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВТЧ(НовыйДокумент));

	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ", НовыйДокумент.Товары);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(НовыйДокумент.Товары, СтруктураДействий, Неопределено);

	НовыйДокумент.Записать();

	Возврат НовыйДокумент.Ссылка;

КонецФункции


Функция мСоздатьОприходованиеТоваровСервер() Экспорт
	НовыйДокумент = Документы.ОприходованиеИзлишковТоваров.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий = "";

	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Количество = Стр.Количество;
		СтрокаТЧ.Цена = Стр.Цена;
		СтрокаТЧ.Сумма = СтрокаТЧ.Цена * СтрокаТЧ.Количество;

		СтрНомерГТД = СокрЛП(Стр.НомерГТД);
		СтрСтранаПроисхождения = СокрЛП(Стр.СтранаПроисхождения);

		Если ЗначениеЗаполнено(СтрНомерГТД) Тогда
			НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка();

			Попытка
				НайденНомерГТД = Справочники.НомераГТД.НайтиПоКоду(СтрНомерГТД, , , Стр.Номенклатура);
				Если НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка() Тогда
					НовыйЭлемент = Справочники.НомераГТД.СоздатьЭлемент();
					НовыйЭлемент.Владелец = Стр.Номенклатура;
					НовыйЭлемент.Код = СтрНомерГТД;

					Если ЗначениеЗаполнено(СтрСтранаПроисхождения) Тогда
						НайденСтрана = Справочники.СтраныМира.НайтиПоНаименованию(СтрСтранаПроисхождения);
						Если НайденСтрана = Справочники.СтраныМира.ПустаяСсылка() Тогда
							НовыйЭлемент = Справочники.СтраныМира.СоздатьЭлемент();
							НовыйЭлемент.НаименованиеПолное = СтрСтранаПроисхождения;
							НовыйЭлемент.Записать();

							НайденСтрана = НовыйЭлемент.Ссылка;
						КонецЕсли;
					Иначе
						НайденСтрана = Справочники.КлассификаторСтранМира.ПустаяСсылка();
					КонецЕсли;

					НовыйЭлемент.Записать();

					НайденНомерГТД = НовыйЭлемент.Ссылка;
				КонецЕсли;

				СтрокаТЧ.НомерГТД = НайденНомерГТД.Ссылка;
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;

	НовыйДокумент.Записать();

	Возврат НовыйДокумент.Ссылка;

КонецФункции


Функция мСоздатьВводОстатковСервер() Экспорт
	НовыйДокумент = Документы.ВводОстатков.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров;
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий = "";

	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Количество = Стр.Количество;
		СтрокаТЧ.Цена = Стр.Цена;
		СтрокаТЧ.Сумма = СтрокаТЧ.Цена * СтрокаТЧ.Количество;

		СтрНомерГТД = СокрЛП(Стр.НомерГТД);
		СтрСтранаПроисхождения = СокрЛП(Стр.СтранаПроисхождения);

		Если Стр.Номенклатура.ВестиУчетПоГТД = Ложь Тогда
			ОбъектНоменклатура = Стр.Номенклатура.ПолучитьОбъект();
			ОбъектНоменклатура.ВестиУчетПоГТД = Истина;
			ОбъектНоменклатура.Записать();
		КонецЕсли;

		Если ЗначениеЗаполнено(СтрНомерГТД) Тогда
			НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка();

			Попытка
				НайденНомерГТД = Справочники.НомераГТД.НайтиПоКоду(СтрНомерГТД, , , Стр.Номенклатура);
				Если НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка() Тогда
					НовыйЭлемент = Справочники.НомераГТД.СоздатьЭлемент();
					НовыйЭлемент.Владелец = Стр.Номенклатура;
					НовыйЭлемент.Код = СтрНомерГТД;

					Если ЗначениеЗаполнено(СтрСтранаПроисхождения) Тогда
						НайденСтрана = Справочники.СтраныМира.НайтиПоНаименованию(СтрСтранаПроисхождения);
						Если НайденСтрана = Справочники.СтраныМира.ПустаяСсылка() Тогда
							НовыйЭлементСтр = Справочники.СтраныМира.СоздатьЭлемент();
							НовыйЭлементСтр.НаименованиеПолное = СтрСтранаПроисхождения;
							НовыйЭлементСтр.Записать();

							НайденСтрана = НовыйЭлементСтр.Ссылка;
						КонецЕсли;
					Иначе
						НайденСтрана = Справочники.КлассификаторСтранМира.ПустаяСсылка();
					КонецЕсли;

					НовыйЭлемент.СтранаПроисхождения = НайденСтрана;

					НовыйЭлемент.Записать();

					НайденНомерГТД = НовыйЭлемент.Ссылка;
				КонецЕсли;

				СтрокаТЧ.НомерГТД = НайденНомерГТД.Ссылка;
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;

	КонецЦикла;

	НовыйДокумент.Записать();

	Возврат НовыйДокумент.Ссылка;

КонецФункции


Функция мПеремещениеТоваровСервер() Экспорт
	НовыйДокумент = Документы.ПеремещениеТоваров.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий = "";

	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		КоэффициентУпаковки = ПолучитьКоэффициентУпаковки(Стр.Упаковка);

		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Упаковка = Стр.Упаковка;
		СтрокаТЧ.Количество = Стр.Количество;
		СтрокаТЧ.КоличествоУпаковок = Стр.Количество / КоэффициентУпаковки;

	КонецЦикла;

	НовыйДокумент.Записать();

	Возврат НовыйДокумент.Ссылка;

КонецФункции




