Перем мЖирныйШрифт Экспорт;


Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры


Функция СведенияОВнешнейОбработке() Экспорт
	РегистрационныеДанные = Новый Структура;

	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));

	ДобавитьКоманду(Команды, "SubSys: Многофункциональная загрузка документов", "ОткрытиеФормы", "ОткрытиеФормы", , );


	РегистрационныеДанные.Вставить("Вид", "ДополнительнаяОбработка");
	РегистрационныеДанные.Вставить("Назначение", "");
	РегистрационныеДанные.Вставить("Наименование", "SubSys: Многофункциональная загрузка документов");
	РегистрационныеДанные.Вставить("Версия", "25-07-2010");
	РегистрационныеДанные.Вставить("БезопасныйРежим", Ложь);
	РегистрационныеДанные.Вставить("Информация", "");
	РегистрационныеДанные.Вставить("Команды", Команды);

	Возврат РегистрационныеДанные;

КонецФункции


Функция ПолучитьКоэффициентУпаковки(ТекУпаковка) Экспорт
	Если ЗначениеЗаполнено(ТекУпаковка) Тогда
		ТекКоэффициент = ТекУпаковка.Коэффициент;
	Иначе
		ТекКоэффициент = 1;
	КонецЕсли;

	Возврат ТекКоэффициент;

КонецФункции



Процедура ОтформатироватьТабличноеПолеСервер(ТабличныйДокумент, ДеревоПолейЗагрузки) Экспорт
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Поле", Истина);
	ЗагружаемыеПоля = ДеревоПолейЗагрузки.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
	Для каждого Стр Из ЗагружаемыеПоля Цикл
		Стр.НомерКолонки = 0;
	КонецЦикла;

	Таблица = Новый ТаблицаЗначений;

	Для НомерКолонки = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
		Таблица.Колонки.Добавить("НомерКолонки" + НомерКолонки);
	КонецЦикла;

	Для НомерСтроки = 1 По ТабличныйДокумент.ВысотаТаблицы Цикл
		НовСтрока = Таблица.Добавить();

		Для НомерКолонки = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
			Значение = СокрЛП(ТабличныйДокумент.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(НомерКолонки, "ЧГ=")).Текст);

			НовСтрока["НомерКолонки" + НомерКолонки] = Значение;
		КонецЦикла;
	КонецЦикла;



	НайтиНастройкуТовара = ДеревоПолейЗагрузки.Строки.Найти("НаименованиеКонтрагента", , Истина);
	НайтиНастройкуАртикул = ДеревоПолейЗагрузки.Строки.Найти("Артикул", , Истина);
	МассивВариантов = мРазложитьСтрокуВМассивПодстрок(НайтиНастройкуТовара.ВариантыСовпадений, ";");
	МассивВариантовАртикул = мРазложитьСтрокуВМассивПодстрок(НайтиНастройкуАртикул.ВариантыСовпадений, ";");

	ПерваяСтрока = Неопределено;
	Для каждого Значение Из МассивВариантов Цикл

		ПерваяСтрока = Таблица.Найти(Значение);

		Если Не (ПерваяСтрока = Неопределено) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ПерваяСтрока = Неопределено Тогда
		Для каждого Значение Из МассивВариантовАртикул Цикл
			ПерваяСтрока = Таблица.Найти(Значение);

			Если Не (ПерваяСтрока = Неопределено) Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;















	НомерПервойСтроки = 0;
	Если ПерваяСтрока = Неопределено Тогда
		Сообщить("ИНСТРУКЦИЯ. Вверху справа расположено окошко с настройками. Там есть
		|колонки. Одна из которых Варианты совпадений. Обработка
		|распознает колонки по перечисленным вариантам совпадений. На
		|наименовании стоит контроль.
		|Это означает что у вас есть таблица, в которой есть строка с названиями
		|колонок. Обработка по названиям колонок ищет варианты совпадений в
		|настройках и указывает номер колонки.
		|На номенклатуре стоит контроль - если обработка не нашла
		|колонку с названием номенклатуры выдает сообщение. Вам нужно или
		|добавить название в вариант и сохранить или переназвать колонку с
		|номенклутрой любым словом из вариантов совпадений.");

		Сообщить("Не найдена колонка с номенклатурой. Прочитайте выданное сообщение с инструкцией.");

		Возврат;
	Иначе
		НомерПервойСтроки = Таблица.Индекс(ПерваяСтрока) + 1;
	КонецЕсли;

	ТабличныйДокумент.Очистить();

	КолонкаАртикул = 0;
	КолонкаКод = 0;
	КолонкаНаименованиеНоменклатуры = 0;
	КолонкаЕдиницаИзмерения = 0;
	КолонкаЦена = 0;
	НоваяКолонка = 0;
	Для НомерКолонки = 1 По Таблица.Колонки.Количество() Цикл
		ЗначениеШапки = ПерваяСтрока["НомерКолонки" + НомерКолонки];
		Если ПустаяСтрока(ЗначениеШапки) Тогда
			Продолжить;
		КонецЕсли;
		НоваяКолонка = НоваяКолонка + 1;

		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Поле", Истина);
		ЗагружаемыеПоля = ДеревоПолейЗагрузки.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
		Для каждого Стр Из ЗагружаемыеПоля Цикл

			МассивВариантов = мРазложитьСтрокуВМассивПодстрок(Стр.ВариантыСовпадений, ";");

			Для каждого СтрПоиска Из МассивВариантов Цикл
				Если Найти(ВРег(ЗначениеШапки), ВРег(СтрПоиска)) > 0 Тогда
					Стр.НомерКолонки = НоваяКолонка;
					Стр.НомерКолонкиФайла = НомерКолонки;












				КонецЕсли;
			КонецЦикла;
















		КонецЦикла;
	КонецЦикла;



	НомСтроки = 0;
	НоваяСтрока = 0;
	Для каждого Строка Из Таблица Цикл
		НомСтроки = НомСтроки + 1;
		Если НомСтроки < НомерПервойСтроки Тогда
			Продолжить;
		КонецЕсли;

		Если НомСтроки <> НомерПервойСтроки Тогда

			КонтрольЗаполнения = Ложь;

			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("КонтрольЗаполнения", Истина);
			ЗагружаемыеПоля = ДеревоПолейЗагрузки.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
			Для каждого Стр Из ЗагружаемыеПоля Цикл
				Если КонтрольЗаполнения = Истина Тогда
					Продолжить;
				КонецЕсли;
				Если Стр.НомерКолонки = 0 Тогда
					Продолжить;
				КонецЕсли;

				Значение = СокрЛП(Строка["НомерКолонки" + Стр.НомерКолонкиФайла]);

				Если ПустаяСтрока(Значение) Тогда
					КонтрольЗаполнения = Истина;
				ИначеЕсли Стр.КонтрольДлиныПоля > 0 И СтрДлина(Значение) < Стр.КонтрольДлиныПоля Тогда
					КонтрольЗаполнения = Истина;
				КонецЕсли;
			КонецЦикла;

			Если КонтрольЗаполнения = Истина Тогда
				Продолжить;
			КонецЕсли;









































		КонецЕсли;

		НоваяСтрока = НоваяСтрока + 1;
		НоваяКолонка = 0;

		мМинимальнаяШиринаКолонки = 14;

		Для НомерКолонки = 1 По Таблица.Колонки.Количество() Цикл
			ЗначениеШапки = ПерваяСтрока["НомерКолонки" + НомерКолонки];
			Если ПустаяСтрока(ЗначениеШапки) Тогда
				Продолжить;
			КонецЕсли;

			НоваяКолонка = НоваяКолонка + 1;

			ОбластьТабличногоПоля = ТабличныйДокумент.Область("R" + Формат(НоваяСтрока, "ЧГ=") + "C" + Формат(НоваяКолонка, "ЧГ="));

			Значение = Строка["НомерКолонки" + НомерКолонки];
			ОбластьТабличногоПоля.Текст = Значение;

			Если НоваяСтрока = 1 Тогда
				ОбластьТабличногоПоля.ЦветФона = WebЦвета.ЦианСветлый;

				СтрокаНастройки = ДеревоПолейЗагрузки.Строки.Найти(НоваяКолонка, "НомерКолонки", Истина);
				Если Не (СтрокаНастройки = Неопределено) Тогда
					ОбластьТабличногоПоля.ВертикальноеПОложение = ВертикальноеПоложение.Центр;
					ОбластьТабличногоПоля.Примечание.Текст = "Определена колонка " + СтрокаНастройки;
					ОбластьТабличногоПоля.ЦветФона = WebЦвета.Зеленый;
					ОбластьТабличногоПоля.Шрифт = мЖирныйШрифт;
				КонецЕсли;
			КонецЕсли;

			ШиринаЗначения = ?(СтрДлина(СокрЛП(Значение)) > 0, СтрДлина(СокрЛП(Значение)), мМинимальнаяШиринаКолонки);
			ОбластьТабличногоПоля.ШиринаКолонки = ?(ОбластьТабличногоПоля.ШиринаКолонки > ШиринаЗначения, ОбластьТабличногоПоля.ШиринаКолонки, ШиринаЗначения);
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры


Функция мРазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = "|") Экспорт
	МассивСтрок = Новый Массив;
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр, Разделитель);
			Если Поз = 0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр, Поз - 1));
			Стр = СокрЛ(Сред(Стр, Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр, Разделитель);
			Если Поз = 0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр, Поз - 1));
			Стр = Сред(Стр, Поз + ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;

КонецФункции


Функция мРазложитьСтрокуВМассивПодстрокСпец(Знач Стр, Разделитель = ";") Экспорт
	МассивСтрок = Новый Массив;

	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр, Разделитель);

			Если Поз = 0 Тогда
				МассивСтрок.Добавить(Стр);

				Возврат МассивСтрок;
			КонецЕсли;

			Подстрока = Лев(Стр, Поз - 1);
			МассивСтрок.Добавить(Подстрока);

			Если Найти(Подстрока, "-") > 0 Тогда
				ПравленнаяПодстрока = СтрЗаменить(Подстрока, "-", " ");
				МассивСтрок.Добавить(ПравленнаяПодстрока);

				ПравленнаяПодстрока = СтрЗаменить(Подстрока, "-", "");
				МассивСтрок.Добавить(ПравленнаяПодстрока);
			КонецЕсли;

			Стр = СокрЛ(Сред(Стр, Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1 = 1 Цикл
			Поз = Найти(Стр, Разделитель);

			Если Поз = 0 Тогда
				МассивСтрок.Добавить(Стр);

				Возврат МассивСтрок;
			КонецЕсли;

			Подстрока = Лев(Стр, Поз - 1);
			МассивСтрок.Добавить(Подстрока);

			Если Найти(Подстрока, "-") > 0 Тогда
				ПравленнаяПодстрока = СтрЗаменить(Подстрока, "-", " ");
				МассивСтрок.Добавить(ПравленнаяПодстрока);

				ПравленнаяПодстрока = СтрЗаменить(Подстрока, "-", "");
				МассивСтрок.Добавить(ПравленнаяПодстрока);
			КонецЕсли;

			Стр = Сред(Стр, Поз + ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;

КонецФункции


Функция мПрочитатьТабличныйДокумент(ТабличныйДокумент, ТаблицаСоответствий, ДеревоПолейЗагрузки, СвойстваНоменклатуры) Экспорт
	ТаблицаСоответствий.Очистить();
	СвойстваНоменклатуры.Очистить();

	КолСтрок = 0;

	Для НомерСтроки = 2 По ТабличныйДокумент.ВысотаТаблицы Цикл
		КолСтрок = КолСтрок + 1;

		НовСтрока = ТаблицаСоответствий.Добавить();

		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Поле", Истина);
		ЗагружаемыеПоля = ДеревоПолейЗагрузки.Строки.НайтиСтроки(ПараметрыОтбора, Истина);
		Для каждого Колонка Из ЗагружаемыеПоля Цикл
			Если Колонка.НомерКолонки = 0 Тогда
				Продолжить;
			КонецЕсли;

			Название = СокрЛП(Колонка.НаименованиеКолонки);
			НомерКолонки = Колонка.НомерКолонки;

			Значение = СокрЛП(ТабличныйДокумент.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(НомерКолонки, "ЧГ=")).Текст);

			Если Название = "ЦенаКонтрагента" Тогда

				ЗначенияЗаменыСимволовЦен = мРазложитьСтрокуВМассивПодстрок(СтрокаЗаменыСимволовВЦенах, ";");
				Для каждого СтрЗамены Из ЗначенияЗаменыСимволовЦен Цикл
					Если Найти(Значение, СтрЗамены) > 0 Тогда
						Значение = СтрЗаменить(Значение, СтрЗамены, "");
					КонецЕсли;
				КонецЦикла;

			КонецЕсли;

			Если Название = "КоличествоКонтрагента" Или Название = "ЦенаКонтрагента" Или Название = "Вес" Или Название = "Объем" Тогда
				Значение = СтрЗаменить(Значение, " ", "");
				Если Найти(Значение, ".") > 0 И Найти(Значение, ",") > 0 Тогда
					Значение = СтрЗаменить(Значение, ",", "");
				КонецЕсли;
			КонецЕсли;

			Если Название = "СуммаКонтрагента" Тогда
				Значение = СтрЗаменить(Значение, " ", "");
				Если Найти(Значение, ".") > 0 И Найти(Значение, ",") > 0 Тогда
					Значение = СтрЗаменить(Значение, ",", "");
				КонецЕсли;

				Если ЗначениеЗаполнено(Значение) И НовСтрока.КоличествоКонтрагента > 0 Тогда
					НовСтрока.ЦенаКонтрагента = Значение / НовСтрока.КоличествоКонтрагента;
				КонецЕсли;

				НовСтрока[Название] = Значение;
			Иначе
				Попытка
					НовСтрока[Название] = Значение;
				Исключение
				КонецПопытки;
			КонецЕсли;


			Если ЗначениеЗаполнено(Значение) Тогда
				Если Колонка.Родитель.НаименованиеКолонки = "ДополнительныеРеквизиты" Или Колонка.Родитель.НаименованиеКолонки = "ДополнительныеСведенья" Тогда
					НоваяСтрокаСвойств = СвойстваНоменклатуры.Добавить();
					НоваяСтрокаСвойств.НомерСтрокиЗагрузки = КолСтрок;
					НоваяСтрокаСвойств.Свойство = Колонка.Значение;
					НоваяСтрокаСвойств.Значение = Значение;
				КонецЕсли;
			КонецЕсли;

		КонецЦикла;
	КонецЦикла;

	Возврат Истина;

КонецФункции


Функция мПрочитатьТабличныйДокументИзExcel(ТабличныйДокумент, ПутьКФайлу) Экспорт
	xlLastCell = 11;

	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(ПутьКФайлу);

		ExcelЛист = Excel.Sheets(1);
	Исключение
		Сообщить("Ошибка. Возможно неверно указан номер листа книги Excel.");
		Возврат Ложь;
	КонецПопытки;

	ТабличныйДокумент.Очистить();

	ActiveCell = Excel.ActiveCell.SpecialCells(xlLastCell);
	RowCount = ActiveCell.Row;
	ColumnCount = ActiveCell.Column;
	Для Column = 1 По ColumnCount Цикл
		ТабличныйДокумент.Область("C" + Формат(Column, "ЧГ=")).ШиринаКолонки = ExcelЛист.Columns(Column).ColumnWidth;
	КонецЦикла;
	Для Row = 1 По RowCount Цикл
		Для Column = 1 По ColumnCount Цикл
			ТабличныйДокумент.Область("R" + Формат(Row, "ЧГ=") + "C" + Формат(Column, "ЧГ=")).Текст = ExcelЛист.Cells(Row, Column).Text;
		КонецЦикла;
	КонецЦикла;

	Excel.WorkBooks.Close();
	Excel = 0;

	Возврат Истина;

КонецФункции


Функция мПрочитатьТабличныйДокументИзТекста(ТабличныйДокумент, ИмяФайла) Экспорт
	ВыбФайл = Новый Файл(ИмяФайла);
	Если Не ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат Ложь;
	КонецЕсли;

	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	Попытка
		ТекстовыйДокумент.Прочитать(ИмяФайла);
	Исключение
		Сообщить("Ошибка открытия файла!");
		Возврат Ложь;
	КонецПопытки;

	ТабличныйДокумент.Очистить();
	Для ТекущаяСтрока = 1 По ТекстовыйДокумент.КоличествоСтрок() Цикл
		ТекущаяКолонка = 0;
		Для каждого Значение Из мРазложитьСтрокуВМассивПодстрок(ТекстовыйДокумент.ПолучитьСтроку(ТекущаяСтрока), ";") Цикл
			ТекущаяКолонка = ТекущаяКолонка + 1;
			ТабличныйДокумент.Область("R" + Формат(ТекущаяСтрока, "ЧГ=") + "C" + Формат(ТекущаяКолонка, "ЧГ=")).Текст = Значение;

		КонецЦикла;
	КонецЦикла;

	Возврат Истина;

КонецФункции


Функция мПрочитатьТабличныйДокументИзDBF(ТабличныйДокумент, ИмяФайла) Экспорт
	ВыбФайл = Новый Файл(ИмяФайла);
	Если Не ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат Ложь;
	КонецЕсли;

	XBase = Новый XBase;
	XBase.Кодировка = КодировкаXBase.OEM;
	Попытка
		XBase.ОткрытьФайл(ИмяФайла);
	Исключение
		Сообщить("Ошибка открытия файла!");
		Возврат Ложь;
	КонецПопытки;

	ТабличныйДокумент.Очистить();
	ТекущаяСтрока = 1;

	ТекущаяКолонка = 0;
	Для каждого Поле Из XBase.поля Цикл
		ТекущаяКолонка = ТекущаяКолонка + 1;
		ТабличныйДокумент.Область("R" + Формат(ТекущаяСтрока, "ЧГ=") + "C" + Формат(ТекущаяКолонка, "ЧГ=")).Текст = Поле.Имя;
	КонецЦикла;

	Рез = XBase.Первая();
	Пока Не XBase.ВКонце() Цикл
		ТекущаяСтрока = ТекущаяСтрока + 1;

		ТекущаяКолонка = 0;
		Для каждого Поле Из XBase.поля Цикл
			ТекущаяКолонка = ТекущаяКолонка + 1;
			ТабличныйДокумент.Область("R" + Формат(ТекущаяСтрока, "ЧГ=") + "C" + Формат(ТекущаяКолонка, "ЧГ=")).Текст = XBase.ПолучитьЗначениеПоля(ТекущаяКолонка - 1);
		КонецЦикла;

		XBase.Следующая();
	КонецЦикла;

	Возврат Истина;

КонецФункции


Процедура мЗаписатьСоответствияНоменклатуры() Экспорт
	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		НаименованиеДляПоиска = СокрЛП(Стр.НаименованиеКонтрагента);

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
		|	НоменклатураПоставщиков.Характеристика КАК ХарактеристикаНоменклатуры,
		|	НоменклатураПоставщиков.Ссылка
		|ИЗ
		|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
		|ГДЕ
		|	НоменклатураПоставщиков.Номенклатура = &Номенклатура
		|	И НоменклатураПоставщиков.Характеристика = &Характеристика
		|	И НоменклатураПоставщиков.Владелец = &Партнер";


		Запрос.УстановитьПараметр("Номенклатура", Стр.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Стр.ХарактеристикаНоменклатуры);
		Запрос.УстановитьПараметр("Партнер", Партнер);
		РезультатЗапроса = Запрос.Выполнить();

		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбъектПолучить = Выборка.Ссылка.ПолучитьОбъект();
			ОбъектПолучить.Удалить();
		КонецЦикла;

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
		|	НоменклатураПоставщиков.Характеристика КАК ХарактеристикаНоменклатуры
		|ИЗ
		|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
		|ГДЕ
		|	НоменклатураПоставщиков.Наименование = &НаименованиеКонтрагента
		|	И НоменклатураПоставщиков.Номенклатура = &Номенклатура
		|	И НоменклатураПоставщиков.Характеристика = &Характеристика
		|	И НоменклатураПоставщиков.Владелец = &Партнер";


		Запрос.УстановитьПараметр("НаименованиеКонтрагента", НаименованиеДляПоиска);
		Запрос.УстановитьПараметр("Номенклатура", Стр.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Стр.ХарактеристикаНоменклатуры);
		Запрос.УстановитьПараметр("Партнер", Партнер);
		РезультатЗапроса = Запрос.Выполнить();

		Если РезультатЗапроса.Пустой() Тогда
			Запись = Справочники.НоменклатураПоставщиков.СоздатьЭлемент();
			Запись.Владелец = Партнер;
			Запись.Номенклатура = Стр.Номенклатура;
			Запись.Характеристика = Стр.ХарактеристикаНоменклатуры;
			Запись.Упаковка = Стр.Упаковка;
			Запись.Артикул = Стр.Артикул;
			Запись.Наименование = НаименованиеДляПоиска;

			Запись.Записать();

			Стр.НоменклатураПоставщика = Запись.Ссылка;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


Процедура ПриИзмененииНоменклатуры(Строка) Экспорт
	Если Не ЗначениеЗаполнено(Строка.ЕдиницаИзмерения) Тогда
		Строка.ЕдиницаИзмерения = Строка.Номенклатура.ЕдиницаИзмерения;
	КонецЕсли;

	Строка.ГруппаСправочника = Строка.Номенклатура.Родитель;

	Строка.Количество = Строка.КоличествоКонтрагента;
	Строка.Цена = Строка.ЦенаКонтрагента;

КонецПроцедуры


Процедура мСинхронизироватьСервер(ТабличнаяЧасть) Экспорт
	ПустаяСсылка = Справочники.Номенклатура.ПустаяСсылка();
	ХарактеристикаПустаяСсылка = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();

	МассивСовпадений = Новый ТаблицаЗначений;
	МассивСовпадений.Колонки.Добавить("НоменклатураПоставщика");
	МассивСовпадений.Колонки.Добавить("Номенклатура");
	МассивСовпадений.Колонки.Добавить("ХарактеристикаНоменклатуры");
	МассивСовпадений.Колонки.Добавить("Упаковка");

	ТаблицаЗагрузкиОбработка = ТабличнаяЧасть.Выгрузить();
	ТабличнаяЧасть.Очистить();

	Для каждого Стр Из ТаблицаЗагрузкиОбработка Цикл

		Стр.Количество = Стр.КоличествоКонтрагента;
		Стр.Цена = Стр.ЦенаКонтрагента;

		НайденнаяНоменклатураПоставщика = Справочники.НоменклатураПоставщиков.ПустаяСсылка();
		НайденнаяСсылка = ПустаяСсылка;
		НайденнаяХарактеристика = ХарактеристикаПустаяСсылка;
		НайденнаяУпаковка = Справочники.УпаковкиНоменклатуры.ПустаяСсылка();

		НаименованиеДляПоиска = СокрЛП(Стр.НаименованиеКонтрагента);
		ПолноеНаименованиеДляПоиска = СокрЛП(Стр.НаименованиеПолное);
		ХарактеристикаКонтрагента = СокрЛП(Стр.ХарактеристикаКонтрагента);

		Если Не ЗначениеЗаполнено(Стр.Артикул) И Не ЗначениеЗаполнено(НаименованиеДляПоиска) Тогда
			Продолжить;
		КонецЕсли;

		МассивСовпадений.Очистить();

		Для каждого СтрокаНастройкиПоиска Из НастройкаПоиска Цикл

			Если СтрокаНастройкиПоиска.Пометка = Ложь Тогда
				Продолжить;
			КонецЕсли;

			РежимПоиска = СтрокаНастройкиПоиска.Наименование;

			Если РежимПоиска = "СправочникКод" Тогда

				Если Не ЗначениеЗаполнено(Стр.Код) Тогда
					Продолжить;
				КонецЕсли;

				Если МассивСовпадений.Количество() = 0 Тогда
					НайденнаяСсылка = Справочники.Номенклатура.НайтиПоКоду(Стр.Код);

					Если Не (НайденнаяСсылка = ПустаяСсылка) Тогда
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.Номенклатура = НайденнаяСсылка;
					КонецЕсли;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "СправочникАртикулНаименование" Тогда

				Если Не ЗначениеЗаполнено(Стр.Артикул) Тогда
					Продолжить;
				КонецЕсли;

				Если МассивСовпадений.Количество() = 0 Тогда

					СтрАртикул = Стр.Артикул;

					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
					|	Номенклатура.Ссылка
					|ИЗ
					|	Справочник.Номенклатура КАК Номенклатура
					|ГДЕ
					|	Номенклатура.Артикул = &Артикул
					|	И Номенклатура.Наименование = &НаименованиеДляПоиска
					|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
					|	И Номенклатура.ПометкаУдаления = ЛОЖЬ";


					Запрос.УстановитьПараметр("Артикул", СокрЛП(СтрАртикул));
					Запрос.УстановитьПараметр("НаименованиеДляПоиска", НаименованиеДляПоиска);
					РезультатЗапроса = Запрос.Выполнить();

					Если Не РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							Совпадение = МассивСовпадений.Добавить();
							Совпадение.Номенклатура = Выборка.Ссылка;
						КонецЦикла;
					КонецЕсли;

					Если ЗначениеЗаполнено(ИгнорироватьВАртикулеСимволы) И МассивСовпадений.Количество() = 0 Тогда
						МассивСимволов = мРазложитьСтрокуВМассивПодстрок(ИгнорироватьВАртикулеСимволы, ";");

						Для каждого СтрСимволы Из МассивСимволов Цикл
							СтрАртикул = СтрЗаменить(СтрАртикул, СтрСимволы, "");
						КонецЦикла;

						Запрос = Новый Запрос;
						Запрос.Текст = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
						|	Номенклатура.Ссылка
						|ИЗ
						|	Справочник.Номенклатура КАК Номенклатура
						|ГДЕ
						|	Номенклатура.Артикул = &Артикул
						|	И Номенклатура.Наименование = &НаименованиеДляПоиска
						|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
						|	И Номенклатура.ПометкаУдаления = ЛОЖЬ";


						Запрос.УстановитьПараметр("Артикул", СокрЛП(СтрАртикул));
						Запрос.УстановитьПараметр("НаименованиеДляПоиска", НаименованиеДляПоиска);
						РезультатЗапроса = Запрос.Выполнить();

						Если Не РезультатЗапроса.Пустой() Тогда
							Выборка = РезультатЗапроса.Выбрать();
							Пока Выборка.Следующий() Цикл
								Совпадение = МассивСовпадений.Добавить();
								Совпадение.Номенклатура = Выборка.Ссылка;
							КонецЦикла;
						КонецЕсли;

					КонецЕсли;

				КонецЕсли;

			ИначеЕсли РежимПоиска = "СправочникНаименованиеПолное" Тогда

				Если ЗначениеЗаполнено(Стр.ПолноеНаименованиеДляПоиска) Тогда
					Продолжить;
				КонецЕсли;

				Если Не ЗначениеЗаполнено(Стр.Артикул) Тогда
					Продолжить;
				КонецЕсли;

				СтрАртикул = Стр.Артикул;


				Если МассивСовпадений.Количество() = 0 И ЗначениеЗаполнено(НаименованиеДляПоиска) Тогда
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
					|	спрНоменклатура.Ссылка КАК Номенклатура
					|ИЗ
					|	Справочник.Номенклатура КАК спрНоменклатура
					|ГДЕ
					|	спрНоменклатура.Артикул = &Артикул
					|	И спрНоменклатура.НаименованиеПолное = &НаименованиеНоменклатурыКонтрагента
					|	И спрНоменклатура.ЭтоГруппа = ЛОЖЬ
					|	И спрНоменклатура.ПометкаУдаления = ЛОЖЬ";


					Запрос.УстановитьПараметр("Артикул", СокрЛП(СтрАртикул));
					Запрос.УстановитьПараметр("НаименованиеНоменклатурыКонтрагента", ПолноеНаименованиеДляПоиска);
					РезультатЗапроса = Запрос.Выполнить();

					Если Не РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							Совпадение = МассивСовпадений.Добавить();
							Совпадение.Номенклатура = Выборка.Номенклатура;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;

				Если ЗначениеЗаполнено(ИгнорироватьВАртикулеСимволы) И МассивСовпадений.Количество() = 0 Тогда
					МассивСимволов = мРазложитьСтрокуВМассивПодстрок(ИгнорироватьВАртикулеСимволы, ";");

					Для каждого СтрСимволы Из МассивСимволов Цикл
						СтрАртикул = СтрЗаменить(СтрАртикул, СтрСимволы, "");
					КонецЦикла;

					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
					|	Номенклатура.Ссылка
					|ИЗ
					|	Справочник.Номенклатура КАК Номенклатура
					|ГДЕ
					|	Номенклатура.Артикул = &Артикул
					|	И Номенклатура.НаименованиеПолное = &НаименованиеНоменклатурыКонтрагента
					|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
					|	И Номенклатура.ПометкаУдаления = ЛОЖЬ";


					Запрос.УстановитьПараметр("Артикул", СокрЛП(СтрАртикул));
					Запрос.УстановитьПараметр("НаименованиеНоменклатурыКонтрагента", ПолноеНаименованиеДляПоиска);
					РезультатЗапроса = Запрос.Выполнить();

					Если Не РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							Совпадение = МассивСовпадений.Добавить();
							Совпадение.Номенклатура = Выборка.Ссылка;
						КонецЦикла;
					КонецЕсли;

				КонецЕсли;

			ИначеЕсли РежимПоиска = "СправочникАртикул" Тогда

				Если Не ЗначениеЗаполнено(Стр.Артикул) Тогда
					Продолжить;
				КонецЕсли;

				Если МассивСовпадений.Количество() = 0 Тогда

					СтрАртикул = Стр.Артикул;

					НайденнаяСсылка = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", СтрАртикул);

					Если ЗначениеЗаполнено(ИгнорироватьВАртикулеСимволы) И НайденнаяСсылка = ПустаяСсылка Тогда
						МассивСимволов = мРазложитьСтрокуВМассивПодстрок(ИгнорироватьВАртикулеСимволы, ";");

						Для каждого СтрСимволы Из МассивСимволов Цикл
							СтрАртикул = СтрЗаменить(СтрАртикул, СтрСимволы, "");
						КонецЦикла;

						НайденнаяСсылка = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", СтрАртикул);
					КонецЕсли;

					Если Не (НайденнаяСсылка = ПустаяСсылка) Тогда
						Совпадение = МассивСовпадений.Добавить();
						Совпадение.Номенклатура = НайденнаяСсылка.Ссылка;
					КонецЕсли;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "НоменклатураКонтрагентовНаименование" И ЗначениеЗаполнено(НаименованиеДляПоиска) Тогда

				Если МассивСовпадений.Количество() = 0 Тогда
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
					|	НоменклатураПоставщиков.Ссылка КАК НоменклатураПоставщика,
					|	НоменклатураПоставщиков.Номенклатура КАК Номенклатура,
					|	НоменклатураПоставщиков.Характеристика КАК ХарактеристикаНоменклатуры,
					|	НоменклатураПоставщиков.Упаковка КАК Упаковка
					|ИЗ
					|	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
					|ГДЕ
					|	НоменклатураПоставщиков.Наименование = &НаименованиеДляПоиска
					|	И НоменклатураПоставщиков.Владелец = &Партнер
					|	И НоменклатураПоставщиков.Номенклатура.ПометкаУдаления = ЛОЖЬ";


					Запрос.УстановитьПараметр("НаименованиеДляПоиска", НаименованиеДляПоиска);
					Запрос.УстановитьПараметр("Партнер", Партнер);
					РезультатЗапроса = Запрос.Выполнить();

					Если Не РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							Совпадение = МассивСовпадений.Добавить();
							Совпадение.НоменклатураПоставщика = Выборка.НоменклатураПоставщика;
							Совпадение.Номенклатура = Выборка.Номенклатура;
							Совпадение.ХарактеристикаНоменклатуры = Выборка.ХарактеристикаНоменклатуры;
							Совпадение.Упаковка = Выборка.Упаковка;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "РегистрШтрихкод" Тогда

				Если Не ЗначениеЗаполнено(Стр.Штрихкод) Тогда
					Продолжить;
				КонецЕсли;

				Если МассивСовпадений.Количество() = 0 Тогда
					ШтрихкодПоиска = СокрЛП(Стр.Штрихкод);

					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
					|	РегШтрихкоды.Номенклатура КАК Номенклатура,
					|	РегШтрихкоды.Характеристика КАК ХарактеристикаНоменклатуры,
					|	РегШтрихкоды.Упаковка КАК Упаковка
					|ИЗ
					|	РегистрСведений.ШтрихкодыНоменклатуры КАК РегШтрихкоды
					|ГДЕ
					|	РегШтрихкоды.Штрихкод = &ШтрихкодПоиска
					|	И РегШтрихкоды.Номенклатура.ПометкаУдаления = ЛОЖЬ";


					Запрос.УстановитьПараметр("ШтрихкодПоиска", ШтрихкодПоиска);
					РезультатЗапроса = Запрос.Выполнить();

					Если Не РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							Совпадение = МассивСовпадений.Добавить();
							Совпадение.Номенклатура = Выборка.Номенклатура;
							Совпадение.ХарактеристикаНоменклатуры = Выборка.ХарактеристикаНоменклатуры;
							Совпадение.Упаковка = Выборка.Упаковка;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;

			ИначеЕсли РежимПоиска = "СправочникНаименование" Тогда

				Если МассивСовпадений.Количество() = 0 И ЗначениеЗаполнено(НаименованиеДляПоиска) Тогда

					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ " + ?(ЗаполнятьПовторныеСовпадения = Истина, "", " ПЕРВЫЕ 1") + "
					|	Номенклатура.Ссылка
					|ИЗ
					|	Справочник.Номенклатура КАК Номенклатура
					|ГДЕ
					|	Номенклатура.Наименование = &НоменклатураКонтрагента
					|	И Номенклатура.ЭтоГруппа = ЛОЖЬ
					|	И Номенклатура.ПометкаУдаления = ЛОЖЬ";


					Запрос.УстановитьПараметр("НоменклатураКонтрагента", СокрЛП(НаименованиеДляПоиска));
					РезультатЗапроса = Запрос.Выполнить();

					Если Не РезультатЗапроса.Пустой() Тогда
						Выборка = РезультатЗапроса.Выбрать();
						Пока Выборка.Следующий() Цикл
							Совпадение = МассивСовпадений.Добавить();
							Совпадение.Номенклатура = Выборка.Ссылка;
						КонецЦикла;
					КонецЕсли;


				КонецЕсли;

			КонецЕсли;

		КонецЦикла;

		КолСовпадений = 0;
		Если МассивСовпадений.Количество() > 0 Тогда
			Для каждого Совпадение Из МассивСовпадений Цикл
				КолСовпадений = КолСовпадений + 1;

				СтрокаТаблСинхронизации = ТабличнаяЧасть.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблСинхронизации, Стр);
				СтрокаТаблСинхронизации.НоменклатураПоставщика = Совпадение.НоменклатураПоставщика;
				СтрокаТаблСинхронизации.Номенклатура = Совпадение.Номенклатура;
				СтрокаТаблСинхронизации.ХарактеристикаНоменклатуры = Совпадение.ХарактеристикаНоменклатуры;
				СтрокаТаблСинхронизации.Упаковка = Совпадение.Упаковка;
				СтрокаТаблСинхронизации.АртикулНоменклатуры = Совпадение.Номенклатура.Артикул;

				Если ЗначениеЗаполнено(ХарактеристикаКонтрагента) И Не ЗначениеЗаполнено(Совпадение.ХарактеристикаНоменклатуры) Тогда
					НайденнаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.НайтиПоНаименованию(ХарактеристикаКонтрагента, Истина, , Совпадение.Номенклатура);
					Если НайденнаяХарактеристика <> ХарактеристикаПустаяСсылка Тогда
						СтрокаТаблСинхронизации.ХарактеристикаНоменклатуры = НайденнаяХарактеристика.Ссылка;
					КонецЕсли;
				КонецЕсли;

				ПриИзмененииНоменклатуры(СтрокаТаблСинхронизации);

				Если КолСовпадений > 1 Тогда
					СтрокаТаблСинхронизации.ПовторноеСовпадение = Истина;
				КонецЕсли;
			КонецЦикла;
		Иначе

			СтрокаТаблСинхронизации = ТабличнаяЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблСинхронизации, Стр);
		КонецЕсли;















	КонецЦикла;

КонецПроцедуры


Функция мСоздатьЗаказПоставщикуСервер() Экспорт
	НовыйДокумент = Документы.ЗаказПоставщику.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.Менеджер = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Партнер = Партнер;
	НовыйДокумент.ЗаполнитьУсловияЗакупокПоУмолчанию();
	НовыйДокумент.Комментарий = "";

	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		КоэффициентУпаковки = ПолучитьКоэффициентУпаковки(Стр.Упаковка);

		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.НоменклатураПоставщика = Стр.НоменклатураПоставщика;
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Упаковка = Стр.Упаковка;
		СтрокаТЧ.Количество = Стр.Количество;
		СтрокаТЧ.КоличествоУпаковок = Стр.Количество / КоэффициентУпаковки;
		СтрокаТЧ.Цена = Стр.Цена;
		СтрокаТЧ.Сумма = СтрокаТЧ.КоличествоУпаковок * СтрокаТЧ.Цена;

		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		СтруктураДействий.Вставить("ПересчитатьСумму");

		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧ, СтруктураДействий, Неопределено);
	КонецЦикла;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", НовыйДокумент.НалогообложениеНДС);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВТЧ(НовыйДокумент));

	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ", НовыйДокумент.Товары);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(НовыйДокумент.Товары, СтруктураДействий, Неопределено);

	НовыйДокумент.Записать();

	Возврат НовыйДокумент.Ссылка;

КонецФункции


Функция мСоздатьПоступлениеТоваровСервер() Экспорт
	НовыйДокумент = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.Менеджер = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Партнер = Партнер;
	НовыйДокумент.ЗаполнитьУсловияЗакупокПоУмолчанию();
	НовыйДокумент.Комментарий = "";

	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		КоэффициентУпаковки = ПолучитьКоэффициентУпаковки(Стр.Упаковка);

		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.НоменклатураПоставщика = Стр.НоменклатураПоставщика;
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Упаковка = Стр.Упаковка;
		СтрокаТЧ.Количество = Стр.Количество;
		СтрокаТЧ.КоличествоУпаковок = Стр.Количество / КоэффициентУпаковки;
		СтрокаТЧ.Цена = Стр.Цена;
		СтрокаТЧ.Сумма = СтрокаТЧ.КоличествоУпаковок * СтрокаТЧ.Цена;

		СтрНомерГТД = СокрЛП(Стр.НомерГТД);
		СтрСтранаПроисхождения = СокрЛП(Стр.СтранаПроисхождения);

		Если Стр.Номенклатура.ВестиУчетПоГТД = Ложь Тогда
			ОбъектНоменклатура = Стр.Номенклатура.ПолучитьОбъект();
			ОбъектНоменклатура.ВестиУчетПоГТД = Истина;
			ОбъектНоменклатура.Записать();
		КонецЕсли;

		Если ЗначениеЗаполнено(СтрНомерГТД) Тогда
			НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка();

			Попытка
				НайденНомерГТД = Справочники.НомераГТД.НайтиПоКоду(СтрНомерГТД);
				Если НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка() Тогда
					НовыйЭлемент = Справочники.НомераГТД.СоздатьЭлемент();

					НовыйЭлемент.Код = СтрНомерГТД;

					Если ЗначениеЗаполнено(СтрСтранаПроисхождения) Тогда
						НайденСтрана = Справочники.СтраныМира.НайтиПоНаименованию(СтрСтранаПроисхождения);
						Если НайденСтрана = Справочники.СтраныМира.ПустаяСсылка() Тогда
							НовыйЭлементСтр = Справочники.СтраныМира.СоздатьЭлемент();
							НовыйЭлементСтр.НаименованиеПолное = СтрСтранаПроисхождения;
							НовыйЭлементСтр.Записать();

							НайденСтрана = НовыйЭлементСтр.Ссылка;
						КонецЕсли;
					Иначе
						НайденСтрана = Справочники.КлассификаторСтранМира.ПустаяСсылка();
					КонецЕсли;

					НовыйЭлемент.СтранаПроисхождения = НайденСтрана;

					НовыйЭлемент.Записать();

					НайденНомерГТД = НовыйЭлемент.Ссылка;
				КонецЕсли;

				СтрокаТЧ.НомерГТД = НайденНомерГТД.Ссылка;
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;

		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		СтруктураДействий.Вставить("ПересчитатьСумму");

		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧ, СтруктураДействий, Неопределено);
	КонецЦикла;

	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", НовыйДокумент.НалогообложениеНДС);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВТЧ(НовыйДокумент));

	СтруктураТЧ = Новый Структура;
	СтруктураТЧ.Вставить("СтрокиТЧ", НовыйДокумент.Товары);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(НовыйДокумент.Товары, СтруктураДействий, Неопределено);

	НовыйДокумент.Записать();

	Возврат НовыйДокумент.Ссылка;

КонецФункции


Функция мСоздатьОприходованиеТоваровСервер() Экспорт
	НовыйДокумент = Документы.ОприходованиеТоваров.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий = "";

	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Количество = Стр.Количество;
		СтрокаТЧ.Цена = Стр.Цена;
		СтрокаТЧ.Сумма = СтрокаТЧ.Цена * СтрокаТЧ.Количество;

		СтрНомерГТД = СокрЛП(Стр.НомерГТД);
		СтрСтранаПроисхождения = СокрЛП(Стр.СтранаПроисхождения);

		Если ЗначениеЗаполнено(СтрНомерГТД) Тогда
			НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка();

			Попытка
				НайденНомерГТД = Справочники.НомераГТД.НайтиПоКоду(СтрНомерГТД, , , Стр.Номенклатура);
				Если НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка() Тогда
					НовыйЭлемент = Справочники.НомераГТД.СоздатьЭлемент();
					НовыйЭлемент.Владелец = Стр.Номенклатура;
					НовыйЭлемент.Код = СтрНомерГТД;

					Если ЗначениеЗаполнено(СтрСтранаПроисхождения) Тогда
						НайденСтрана = Справочники.СтраныМира.НайтиПоНаименованию(СтрСтранаПроисхождения);
						Если НайденСтрана = Справочники.СтраныМира.ПустаяСсылка() Тогда
							НовыйЭлемент = Справочники.СтраныМира.СоздатьЭлемент();
							НовыйЭлемент.НаименованиеПолное = СтрСтранаПроисхождения;
							НовыйЭлемент.Записать();

							НайденСтрана = НовыйЭлемент.Ссылка;
						КонецЕсли;
					Иначе
						НайденСтрана = Справочники.КлассификаторСтранМира.ПустаяСсылка();
					КонецЕсли;

					НовыйЭлемент.Записать();

					НайденНомерГТД = НовыйЭлемент.Ссылка;
				КонецЕсли;

				СтрокаТЧ.НомерГТД = НайденНомерГТД.Ссылка;
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;

	НовыйДокумент.Записать();

	Возврат НовыйДокумент.Ссылка;

КонецФункции


Функция мРегистрацияЦенПоставщикаСервер() Экспорт
	НовыйДокумент = Документы.РегистрацияЦенНоменклатурыПоставщика.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.Партнер = Партнер;
	НовыйДокумент.Комментарий = "";

	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		Если Не ЗначениеЗаполнено(Стр.Цена) Тогда
			Продолжить;
		КонецЕсли;

		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Упаковка = Стр.Упаковка;
		СтрокаТЧ.Цена = Стр.Цена;
	КонецЦикла;

	НовыйДокумент.Записать();

	Возврат НовыйДокумент.Ссылка;

КонецФункции


Функция мСоздатьВводОстатковСервер() Экспорт
	НовыйДокумент = Документы.ВводОстатков.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиСобственныхТоваров;
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий = "";

	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Количество = Стр.Количество;
		СтрокаТЧ.Цена = Стр.Цена;
		СтрокаТЧ.Сумма = СтрокаТЧ.Цена * СтрокаТЧ.Количество;

		СтрНомерГТД = СокрЛП(Стр.НомерГТД);
		СтрСтранаПроисхождения = СокрЛП(Стр.СтранаПроисхождения);

		Если Стр.Номенклатура.ВестиУчетПоГТД = Ложь Тогда
			ОбъектНоменклатура = Стр.Номенклатура.ПолучитьОбъект();
			ОбъектНоменклатура.ВестиУчетПоГТД = Истина;
			ОбъектНоменклатура.Записать();
		КонецЕсли;

		Если ЗначениеЗаполнено(СтрНомерГТД) Тогда
			НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка();

			Попытка
				НайденНомерГТД = Справочники.НомераГТД.НайтиПоКоду(СтрНомерГТД, , , Стр.Номенклатура);
				Если НайденНомерГТД = Справочники.НомераГТД.ПустаяСсылка() Тогда
					НовыйЭлемент = Справочники.НомераГТД.СоздатьЭлемент();
					НовыйЭлемент.Владелец = Стр.Номенклатура;
					НовыйЭлемент.Код = СтрНомерГТД;

					Если ЗначениеЗаполнено(СтрСтранаПроисхождения) Тогда
						НайденСтрана = Справочники.СтраныМира.НайтиПоНаименованию(СтрСтранаПроисхождения);
						Если НайденСтрана = Справочники.СтраныМира.ПустаяСсылка() Тогда
							НовыйЭлементСтр = Справочники.СтраныМира.СоздатьЭлемент();
							НовыйЭлементСтр.НаименованиеПолное = СтрСтранаПроисхождения;
							НовыйЭлементСтр.Записать();

							НайденСтрана = НовыйЭлементСтр.Ссылка;
						КонецЕсли;
					Иначе
						НайденСтрана = Справочники.КлассификаторСтранМира.ПустаяСсылка();
					КонецЕсли;

					НовыйЭлемент.СтранаПроисхождения = НайденСтрана;

					НовыйЭлемент.Записать();

					НайденНомерГТД = НовыйЭлемент.Ссылка;
				КонецЕсли;

				СтрокаТЧ.НомерГТД = НайденНомерГТД.Ссылка;
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;

	КонецЦикла;

	НовыйДокумент.Записать();

	Возврат НовыйДокумент.Ссылка;

КонецФункции


Функция мПеремещениеТоваровСервер() Экспорт
	НовыйДокумент = Документы.ПеремещениеТоваров.СоздатьДокумент();
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.Комментарий = "";

	Для каждого Стр Из ТабличнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(Стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;

		КоэффициентУпаковки = ПолучитьКоэффициентУпаковки(Стр.Упаковка);

		СтрокаТЧ = НовыйДокумент.Товары.Добавить();
		СтрокаТЧ.Номенклатура = Стр.Номенклатура;
		СтрокаТЧ.Характеристика = Стр.ХарактеристикаНоменклатуры;
		СтрокаТЧ.Упаковка = Стр.Упаковка;
		СтрокаТЧ.Количество = Стр.Количество;
		СтрокаТЧ.КоличествоУпаковок = Стр.Количество / КоэффициентУпаковки;

	КонецЦикла;

	НовыйДокумент.Записать();

	Возврат НовыйДокумент.Ссылка;

КонецФункции


Процедура ЗаполнитьНастройки(ДеревоПолейЗагрузки, НастройкаПоиска, ТабличныйДокумент) Экспорт
	Макет = ПолучитьМакет("Макет");
	ОбластьМакета = Макет.ПолучитьОбласть("Описание");
	ТабличныйДокумент.Вывести(ОбластьМакета);

	НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
	НовСтр.НаименованиеКолонки = "ПоляНоменклатуры";
	НовСтр.Представление = "Поля номенклатуры";

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "Штрихкод";
	НовСтр1.Представление = "Штрихкод";
	НовСтр1.ВариантыСовпадений = "Штрихкод;штрих";
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "Код";
	НовСтр1.Представление = "Код";
	НовСтр1.ВариантыСовпадений = "Код;код";
	НовСтр1.КонтрольЗаполнения = Истина;
	НовСтр1.КонтрольДлиныПоля = 4;
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "Артикул";
	НовСтр1.Представление = "Артикул";
	НовСтр1.ВариантыСовпадений = "Артикул;артикул";
	НовСтр1.КонтрольЗаполнения = Истина;
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "НаименованиеКонтрагента";
	НовСтр1.Представление = "Номенклатура";
	НовСтр1.ВариантыСовпадений = "Номенклатура;Наименование товара;Товар;Товары;Наименование";
	НовСтр1.КонтрольЗаполнения = Истина;
	НовСтр1.КонтрольДлиныПоля = 10;
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "НаименованиеПолное";
	НовСтр1.Представление = "Наименование полное";
	НовСтр1.ВариантыСовпадений = "Наименование полное";
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "ЕдиницаИзмеренияКонтрагента";
	НовСтр1.Представление = "Единица";
	НовСтр1.ВариантыСовпадений = "Единица;Единица измерения;Ед;Ед.;Ед. изм.;Ед.изм.";
	НовСтр1.КонтрольЗаполнения = Истина;
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "ВидНоменклатуры";
	НовСтр1.Представление = "ВидНоменклатуры";
	НовСтр1.ВариантыСовпадений = "Вид номенклатуры";
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "ЦеноваяГруппа";
	НовСтр1.Представление = "ЦеноваяГруппа";
	НовСтр1.ВариантыСовпадений = "Ценовая группа";
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "Вес";
	НовСтр1.Представление = "Вес";
	НовСтр1.ВариантыСовпадений = "Вес";
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "Описание";
	НовСтр1.Представление = "Описание";
	НовСтр1.ВариантыСовпадений = "Описание";
	НовСтр1.Поле = Истина;

	НовСтр = НовСтр.Строки.Добавить();
	НовСтр.НаименованиеКолонки = "ИерархияНоменклатуры";
	НовСтр.Представление = "Иерархия номенклатуры";

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "Родитель1";
	НовСтр1.Представление = "Родитель 1";
	НовСтр1.ВариантыСовпадений = "Родитель1";
	НовСтр1.Поле = Истина;

	НовСтр2 = НовСтр1.Строки.Добавить();
	НовСтр2.НаименованиеКолонки = "Родитель2";
	НовСтр2.Представление = "Родитель 2";
	НовСтр2.ВариантыСовпадений = "Родитель2";
	НовСтр2.Поле = Истина;

	НовСтр3 = НовСтр2.Строки.Добавить();
	НовСтр3.НаименованиеКолонки = "Родитель3";
	НовСтр3.Представление = "Родитель 3";
	НовСтр3.ВариантыСовпадений = "Родитель3";
	НовСтр3.Поле = Истина;

	НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
	НовСтр.НаименованиеКолонки = "ХарактеристикиНоменклатуры";
	НовСтр.Представление = "Характеристики номенклатуры";

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "ХарактеристикаКонтрагента";
	НовСтр1.Представление = "Характеристика";
	НовСтр1.ВариантыСовпадений = "Характеристика";
	НовСтр1.Поле = Истина;

	НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
	НовСтр.НаименованиеКолонки = "ДанныеДокумента";
	НовСтр.Представление = "Данные документа";

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "КоличествоКонтрагента";
	НовСтр1.Представление = "Количество";
	НовСтр1.ВариантыСовпадений = "Кол;Кол-во;Количество";
	НовСтр1.КонтрольЗаполнения = Истина;
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "ЦенаКонтрагента";
	НовСтр1.Представление = "Цена";
	НовСтр1.ВариантыСовпадений = "Цена;Цена;руб. коп.;Цена (Руб)";
	НовСтр1.КонтрольЗаполнения = Истина;
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "СуммаКонтрагента";
	НовСтр1.Представление = "Сумма";
	НовСтр1.ВариантыСовпадений = "Сумма с учетом НДС;Сумма с учетом  НДС;Сумма (Руб)";
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "НомерГТД";
	НовСтр1.Представление = "Номер ГТД";
	НовСтр1.ВариантыСовпадений = "ГТД;Номер ГТД";
	НовСтр1.Поле = Истина;

	НовСтр1 = НовСтр.Строки.Добавить();
	НовСтр1.НаименованиеКолонки = "СтранаПроисхождения";
	НовСтр1.Представление = "Страна происхождения";
	НовСтр1.ВариантыСовпадений = "Страна;Страна происхождения";
	НовСтр1.Поле = Истина;

	НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
	НовСтр.НаименованиеКолонки = "ДополнительныеРеквизиты";
	НовСтр.Представление = "Дополнительные реквизиты";







	ТекстЗапроса = "ВЫБРАТЬ
	|	СвойстваОбъектов.Свойство КАК Реквизит
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура))
	|	И (НЕ СвойстваОбъектов.Ссылка.ПометкаУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	СвойстваОбъектов.Свойство";


	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапросаНазначенияСвойств = Запрос.Выполнить();
	Выборка = РезультатЗапросаНазначенияСвойств.Выбрать();

	Пока Выборка.Следующий() Цикл
		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.НаименованиеКолонки = Выборка.Реквизит;
		НовСтр1.Представление = Выборка.Реквизит;
		НовСтр1.ВариантыСовпадений = Выборка.Реквизит;
		НовСтр1.Значение = Выборка.Реквизит;
		НовСтр1.Поле = Истина;
	КонецЦикла;

	НовСтр = ДеревоПолейЗагрузки.Строки.Добавить();
	НовСтр.НаименованиеКолонки = "ДополнительныеСведенья";
	НовСтр.Представление = "Дополнительные сведенья";

	ТекстЗапроса = "ВЫБРАТЬ
	|	СвойстваОбъектов.Свойство КАК Реквизит
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеСведения КАК СвойстваОбъектов
	|ГДЕ
	|	СвойстваОбъектов.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура))
	|	И (НЕ СвойстваОбъектов.Ссылка.ПометкаУдаления)
	|
	|СГРУППИРОВАТЬ ПО
	|	СвойстваОбъектов.Свойство";


	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапросаНазначенияСвойств = Запрос.Выполнить();
	Выборка = РезультатЗапросаНазначенияСвойств.Выбрать();

	Пока Выборка.Следующий() Цикл
		НовСтр1 = НовСтр.Строки.Добавить();
		НовСтр1.НаименованиеКолонки = Выборка.Реквизит;
		НовСтр1.Представление = Выборка.Реквизит;
		НовСтр1.ВариантыСовпадений = Выборка.Реквизит;
		НовСтр1.Значение = Выборка.Реквизит;
		НовСтр1.Поле = Истина;
	КонецЦикла;

	НастройкаПоиска.Очистить();

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникКод";
	НовСтр.Представление = "Справочник: поиск по коду";
	НовСтр.Пометка = Истина;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникАртикул";
	НовСтр.Представление = "Справочник: поиск по артикулу";
	НовСтр.Пометка = Истина;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникАртикулНаименование";
	НовСтр.Представление = "Справочник: поиск по наименованию и артикулу (оба условия одновременно)";
	НовСтр.Пометка = Истина;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникНаименование";
	НовСтр.Представление = "Справочник: поиск по наименованию";
	НовСтр.Пометка = Истина;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "СправочникНаименованиеПолное";
	НовСтр.Представление = "Справочник: поиск по полному наименованию и артикулу (оба условия одновременно)";
	НовСтр.Пометка = Истина;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "НоменклатураКонтрагентовНаименование";
	НовСтр.Представление = "Номенклатура контрагентов: поиск по наименованию";
	НовСтр.Пометка = Истина;

	НовСтр = НастройкаПоиска.Добавить();
	НовСтр.Наименование = "РегистрШтрихкод";
	НовСтр.Представление = "Регистр штрихкодов: поиск по штрихкоду";
	НовСтр.Пометка = Истина;

КонецПроцедуры




