#Область ИнтерфейсАвтоматическихТестов
&НаКлиенте
Перем ЮнитТест;

&НаКлиенте
Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	ЮнитТест 		= ЮнитТестирование;
	СпиcокТестов 	= Новый Массив;
	СпиcокТестов.Добавить("Тест_ПроверитьВалидностьЗапроса");
	//СпиcокТестов.Добавить("Тест_ПроверитьФормированияОтчета");

	Возврат СпиcокТестов;
	
КонецФункции

&НаКлиенте
Процедура Тест_ПроверитьВалидностьЗапроса() Экспорт   	
	
	ТекстЗапроса = СформироватьТекстЗапроса();
	ЮнитТест.ПроверитьТип(ТекстЗапроса, Тип("Строка"));
	Тест_ПроверитьТекстЗапросНаОшибки(ТекстЗапроса);
КонецПроцедуры

&НаСервере
Процедура Тест_ПроверитьТекстЗапросНаОшибки(ТекстЗапроса) Экспорт
	
	СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;
	
	ИсточникДанных 					  = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить(); 
	ИсточникДанных.Имя                = "ИсточникДанных";
	ИсточникДанных.СтрокаСоединения   = "";
	ИсточникДанных.ТипИсточникаДанных = "Local";
	
	НаборДанных 							 = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя            				 = "НаборДанных";
	НаборДанных.ИсточникДанных 				 = "ИсточникДанных";
	НаборДанных.АвтоЗаполнениеДоступныхПолей = Истина;
	НаборДанных.Запрос 						 = ТекстЗапроса;
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
 

КонецПроцедуры // Тест_ПроверитьТекстЗапросНаОшибки(ТекстЗапроса)

&НаКлиенте
Процедура Тест_ПроверитьФормированияОтчета() Экспорт   	
	СформироватьОтчетНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобитийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;	
	КонецЕсли;
	Если Параметры.Свойство("Номенклатура") Тогда
		Номенклатура = Параметры.Номенклатура;
		СформироватьОтчетНаСервере();
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	СформироватьОтчетНаСервере();
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура СформироватьОтчет(Команда)
	СформироватьОтчетНаСервере();
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьОтчетНаСервере()

	УстановитьПривилегированныйРежим(Истина);
	
	Результат.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = СформироватьТекстЗапроса();
	
	Если Не Номенклатура.Пустая() Тогда
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	КонецЕсли;
	
	СписокНоменклатуры = Запрос.Выполнить().Выгрузить();
	ВывестиРезультатыЗапроса(СписокНоменклатуры);
	
КонецПроцедуры // СформироватьОтчетНаСервере()

&НаСервере
Функция СформироватьТекстЗапроса()

	ТекстЗапроса =   "ВЫБРАТЬ
	                 | 	Период,
	                 |	Номенклатура,
	                 |	Характеристика,
	                 |	Актуально,
	                 |	ГарантияДоставки,
	                 |	ДатаПоставки,
	                 |	СоглашениеСПоставщиком,
	                 |	Цена
	                 |ИЗ
	                 |	РегистрСведений.ALPS_АктуальностьНоменклатуры
					 | %ОтборПоНоменклатуре%";
				   			
	
	Если Не Номенклатура.Пустая() Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ОтборПоНоменклатуре%", " ГДЕ Номенклатура = &Номенклатура");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ОтборПоНоменклатуре%", "");
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции // СформироватьТекстЗапроса()

//Выводит результат запроса по остатках товаров на складах в СКД
//
// Параметры:
// СписокНоменклатуры - ТаблицаЗначений - таблица из результата запроса по остатках товаров на складах
&НаСервере
Процедура ВывестиРезультатыЗапроса(СписокНоменклатуры)
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("СписокНоменклатуры", СписокНоменклатуры);
	
	ОбъектОбработки 		= РеквизитФормыВЗначение("Объект");
	СхемаКомпоновкиДанных   = ОбъектОбработки.ПолучитьМакет("СКД_АктульностьНоменклатури");
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	
	Настройки 					= СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных;
	ДанныеРасшифровки			= Новый ДанныеРасшифровкиКомпоновкиДанных;
	МакетКомпоновки				= КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанны    = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанны.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода				= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанны);
	
КонецПроцедуры

#КонецОбласти




 