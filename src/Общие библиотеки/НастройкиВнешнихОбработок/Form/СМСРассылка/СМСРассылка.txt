
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		Элементы.ВыполнитьРассылку.Доступность = Ложь;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Телефон = ПолучитьОсновнойНомер();
КонецПроцедуры

&НаСервере
Функция ПолучитьОсновнойНомер()
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Лояльность_НомераТелефонов.НомерТелефона
	  	|ИЗ
	  	|	РегистрСведений.Лояльность_НомераТелефонов КАК Лояльность_НомераТелефонов
	  	|ГДЕ
	  	|	Партнер = &Партнер");
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.НомерТелефона;
	КонецЕсли;
	
	Контакт = Партнер.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Телефон, "Тип");
	Возврат ?(Контакт = Неопределено, "", Прав(Контакт.НомерТелефона, 10));	
	
КонецФункции





&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	Телефон = ПолучитьОсновнойНомер();
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	КодыМобильныхОператоров = Новый Соответствие;
	КодыМобильныхОператоров.Вставить("039", "Golden Telecom");
	КодыМобильныхОператоров.Вставить("050", "МТС");
	КодыМобильныхОператоров.Вставить("063", "Life");
	КодыМобильныхОператоров.Вставить("066", "Jeans");
	КодыМобильныхОператоров.Вставить("067", "Kyivstar");
	КодыМобильныхОператоров.Вставить("068", "Beeline");
	КодыМобильныхОператоров.Вставить("090", "content provider");
	КодыМобильныхОператоров.Вставить("091", "Utel");
	КодыМобильныхОператоров.Вставить("092", "PEOPLEnet");
	КодыМобильныхОператоров.Вставить("093", "Life");
	КодыМобильныхОператоров.Вставить("094", "Intertelecom");
	КодыМобильныхОператоров.Вставить("095", "Jeans");
	КодыМобильныхОператоров.Вставить("096", "Kyivstar");
	КодыМобильныхОператоров.Вставить("097", "Djuice");
	КодыМобильныхОператоров.Вставить("098", "Djuice");
    КодыМобильныхОператоров.Вставить("099", "Ekotel");
	
	Если ПустаяСтрока(Тема) Тогда
		Предупреждение("Тема взаимодействия не может быть пустой!");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Сообщение) Тогда
		Предупреждение("Сообщение не может быть пустым!");
		Возврат;
	КонецЕсли;

	Если ПустаяСтрока(Телефон) Тогда
		Предупреждение("Номер телефона не задан!");
		Возврат;
	КонецЕсли;
		
	Если СтрДлина(СтрЗаменить(Телефон, " ", "")) < 10 Тогда
		Предупреждение("Номер мобильного телефона должен содержать 10 цифр! Повторите попытку...");
		Возврат;
	КонецЕсли;
		
	Если КодыМобильныхОператоров[Лев(Телефон, 3)] = Неопределено Тогда
		Предупреждение("Код мобильного оператора не известен (" + Лев(Телефон, 3) + ")! Повторите попытку...");
		Возврат;		
	КонецЕсли;
	
	ОтправитьСМССервер(Партнер, Телефон);
	Закрыть();
			
КонецПроцедуры

&НаСервере
Функция ОтправитьСМССервер(partner, telephone)	
	Перем Server, Path, FromWho;
	ktcОбщийМодульПротоколов.ПолучитьSMS_Server_Path(Server, Path, FromWho, "alphasms.com.ua");
	ktcОбщийМодульПротоколов.ОтправитьСообщениеПоSMS(Server, Path + "send&from=" + FromWho + "&to=" + СокрЛП(telephone) + "&message=" + СокрЛП(Сообщение), Неопределено, Неопределено);
	СоздатьВзаимодействие_ОтправкаSMS(partner, Сообщение);
КонецФункции

&НаСервере
Процедура СоздатьВзаимодействие_ОтправкаSMS(partner, SMS)
	
	Контакт = Партнер.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации.Телефон, "Тип");
	
	ДокументВзаимодействие = Документы.ЗапланированноеВзаимодействие.СоздатьДокумент();
	ДокументВзаимодействие.Автор 				= ПараметрыСеанса.ТекущийПользователь;
	ДокументВзаимодействие.Важность  			= Перечисления.ВариантыВажностиВзаимодействия.Высокая;
	ДокументВзаимодействие.Дата					= ТекущаяДата();
	ДокументВзаимодействие.Тема					= Тема;
	ДокументВзаимодействие.Описание				= "Отправка SMS сообщения, текст:" + SMS;
	ДокументВзаимодействие.Ответственный		= ПараметрыСеанса.ТекущийПользователь;
	ДокументВзаимодействие.Рассмотрено			= Истина;
	ДокументВзаимодействие.СписокУчастников		= partner;
	
	Участник = ДокументВзаимодействие.Участники.Добавить();
	Участник.Контакт 				= partner;
	Участник.КакСвязаться			= ?(Контакт = Неопределено, "", Контакт.Представление);
	Участник.ПредставлениеКонтакта 	= partner;	
	ДокументВзаимодействие.Записать();
	
	Взаимодействия.ПриЗаписиВзаимодействияИзФормы(ДокументВзаимодействие, ДокументВзаимодействие.Предмет);	
	ДокументВзаимодействие.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРассылку(Команда)
	
	Если ПустаяСтрока(Тема) Тогда
		Предупреждение("Тема взаимодействия не может быть пустой!");
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Сообщение) Тогда
		Предупреждение("Сообщение не может быть пустым!");
		Возврат;
	КонецЕсли;
	
	Если Сегмент.Пустая() Тогда
		Предупреждение("Сегмент не может быть пустым!");
		Возврат;	
	КонецЕсли;
	
	ВыполнитьРассылкуСервер();
	Закрыть();
КонецПроцедуры

&НаСервере
Процедура ВыполнитьРассылкуСервер()
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Партнер, 
		|	Лояльность_НомераТелефонов.НомерТелефона
	  	|ИЗ
	  	|	РегистрСведений.Лояльность_НомераТелефонов КАК Лояльность_НомераТелефонов
	  	|ГДЕ
	  	|	Партнер В (ВЫБРАТЬ Партнер ИЗ РегистрСведений.ПартнерыСегмента ГДЕ Сегмент = &Сегмент) 
		|И  Основной");
	Запрос.УстановитьПараметр("Сегмент", Сегмент);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОтправитьСМССервер(Выборка.Партнер, Выборка.НомерТелефона);				
	КонецЦикла;
	
КонецПроцедуры



