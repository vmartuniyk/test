
// Функция формирует печатную форму М-11
//
Функция Печать() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент"		,СсылкаНаОбъект);
	Запрос.УстановитьПараметр("НаДату"				,СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("Организация"			,СсылкаНаОбъект.Организация);
	Запрос.УстановитьПараметр("ГлавныйБухгалтер"	,Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Док.Номер                          КАК НомерДокумента,
	|	Док.Дата                           КАК ДатаДокумента,
	|	Док.Организация                    КАК Организация,
	|	Док.Организация.НаименованиеПолное КАК ПредставлениеОрганизации,
	|	Док.Склад                          КАК Склад,
	|	КодыОрганизации.КодПоЕДРПОУ        КАК КодПоЕДРПОУ,
	|	ФИОГлавныйБухгалтер.Фамилия + "" ""
	|		+ ПОДСТРОКА(ФИОГлавныйБухгалтер.Имя, 1, 1) + "". ""
	|		+ ПОДСТРОКА(ФИОГлавныйБухгалтер.Отчество, 1, 1) + ""."" КАК ГлавныйБухгалтер
	|ИЗ
	|	Документ.ТребованиеНакладная КАК Док                                                     
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.КодыОрганизации.СрезПоследних(
	|			                &НаДату, ) КАК КодыОрганизации
	|		ПО Док.Организация = КодыОрганизации.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|		                    &НаДату,
	|		                    ФизЛицо В
	|		                        (ВЫБРАТЬ
	|		                            ОтветственныеЛица.ФизическоеЛицо
	|		                        ИЗ
	|		                            РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|		                                            &НаДату,
	|		                                            СтруктурнаяЕдиница = &Организация
	|		                                            И ОтветственноеЛицо = &ГлавныйБухгалтер) КАК ОтветственныеЛица)
	|		                    ) КАК ФИОГлавныйБухгалтер
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Док.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	                            
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТребованиеНакладная_М11";
	
	// Вывод заголовка
	Макет = ПолучитьОбщийМакет("М11");
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(Шапка);
	Область.Параметры.КодОперации 	 = "Відпуск";
	Область.Параметры.НомерДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(СсылкаНаОбъект);
	
	//Підстава
	Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("001"); 
	Область.Параметры.Основание	= ПолучитьЗначениеДополнительногоРеквизита(Свойство);	
	
	//Кому
	Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("002"); 
	Область.Параметры.Кому	= ПолучитьЗначениеДополнительногоРеквизита(Свойство);	
	
	//Через кого
	Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("003"); 
	Область.Параметры.ЧерезКого	= ПолучитьЗначениеДополнительногоРеквизита(Свойство);	
	
	ТабДокумент.Вывести(Область);
	
	ВысотаШапки   = ТабДокумент.ВысотаТаблицы;
	ШиринаТаблицы = ТабДокумент.ШиринаТаблицы;
	ТабДокумент.ПовторятьПриПечатиСтроки = ТабДокумент.Область("R" + ВысотаШапки);
	ТабДокумент.ОбластьПечати            = ТабДокумент.Область("C2:C" + ШиринаТаблицы);
	
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("СчетПередачи",                 "СчетЗатрат");
	СтруктураПолей.Вставить("Материал",                     "Номенклатура");
	СтруктураПолей.Вставить("МатериалНаименование",         "Номенклатура.НаименованиеПолное");
	СтруктураПолей.Вставить("НоменклатурныйНомер",          "Номенклатура.Код");
	СтруктураПолей.Вставить("ЕдиницаИзмеренияНаименование", "ЕдиницаИзмерения");
	СтруктураПолей.Вставить("ЕдиницаИзмеренияКод",          "ЕдиницаИзмерения.Код");
	СтруктураПолей.Вставить("Коэффициент",          		"Коэффициент");
	СтруктураПолей.Вставить("Количество",                   "Количество");

	Область = Макет.ПолучитьОбласть("Строка");
	
	ТаблицаМатериалов = ОбщегоНазначения.СформироватьЗапросПоТабличнойЧасти(СсылкаНаОбъект, "Материалы", СтруктураПолей).Выгрузить();
	ТаблицаМатериалов.Свернуть("Материал, МатериалНаименование, СчетПередачи, НоменклатурныйНомер,ЕдиницаИзмеренияКод,ЕдиницаИзмеренияНаименование,Коэффициент", "Количество");
	Если Не СсылкаНаОбъект.СчетаУчетаЗатратВТаблице Тогда
		ТаблицаМатериалов.ЗаполнитьЗначения(СсылкаНаОбъект.СчетЗатрат, "СчетПередачи");
	КонецЕсли;
	
	СтруктураПолей.Вставить("СчетПередачи",                 "СчетПередачи");
	ТаблицаМатериаловЗаказчика = ОбщегоНазначения.СформироватьЗапросПоТабличнойЧасти(СсылкаНаОбъект, "МатериалыЗаказчика", СтруктураПолей).Выгрузить();

	// Поиск сумм списания активов для заполнения Цены и Суммы
	ТаблицаСуммСписания = БухгалтерскийУчет.ПолучитьСуммуСписанияАктивов(СсылкаНаОбъект);
	
	ОбластьПодвал   = Макет.ПолучитьОбласть("Подвал");
	ПараметрыПодвал = ОбластьПодвал.Параметры;
	ПараметрыПодвал.Заполнить(Шапка);
	
	КоличествоВТаблице = ТаблицаМатериалов.Количество() + ТаблицаМатериаловЗаказчика.Количество();
	КоличествоОбработанных = 1;
	// В форме сказано "Кількість найменувань". Будет выводится количество позиций.
	ПараметрыПодвал.ИтогоКоличествоПрописью = ЧислоПрописью(КоличествоВТаблице, "Л=uk_UA;НП=Ложь;НД=Ложь;", ",,,,,,,,0");
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
														
	// сумму прописью выводим всегда на украинском - печатная форма регламенированная
	ПараметрыПодвал.ИтогоСуммаПрописью = ЧислоПрописью(ТаблицаСуммСписания.Итог("Сумма"), "Л=uk_UA; ДП=Ложь", мВалютаРегламентированногоУчета.ПараметрыПрописиНаУкраинском);
    
	Для Каждого СтрокаТЧ Из ТаблицаМатериалов Цикл

		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(СтрокаТЧ);
		
		СтрокаСуммСписания =  ТаблицаСуммСписания.Найти(СтрокаТЧ.Материал, "Номенклатура");
		Если СтрокаСуммСписания = Неопределено Тогда
			 Область.Параметры.Цена = 0;
			 Область.Параметры.Стоимость = 0;
		 Иначе
			 Цена = ?(СтрокаСуммСписания.Количество = 0, 0, СтрокаСуммСписания.Сумма / СтрокаСуммСписания.Количество * СтрокаТЧ.Коэффициент);
			 Область.Параметры.Цена		 = Цена;
			 Область.Параметры.Стоимость = Цена * СтрокаТЧ.Количество;
		 КонецЕсли;
		 
		Если КоличествоОбработанных = КоличествоВТаблице Тогда
			// Последняя запись. Ее не следует отрывать от подписей.
			
			МассивТаблиц = Новый Массив(2);
			МассивТаблиц[0] = Область;
			МассивТаблиц[1] = ОбластьПодвал;
			
			Если НЕ ТабДокумент.ПроверитьВывод(МассивТаблиц) Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(Область);
		КоличествоОбработанных = КоличествоОбработанных + 1;

	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из ТаблицаМатериаловЗаказчика Цикл

		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(СтрокаТЧ);
		
		СтрокаСуммСписания =  ТаблицаСуммСписания.Найти(СтрокаТЧ.Материал, "Номенклатура");
		Если СтрокаСуммСписания = Неопределено Тогда
			 Область.Параметры.Цена = 0;
			 Область.Параметры.Стоимость = 0;
		 Иначе
			 Цена = ?(СтрокаСуммСписания.Количество = 0, 0, СтрокаСуммСписания.Сумма / СтрокаСуммСписания.Количество * СтрокаТЧ.Коэффициент);
			 Область.Параметры.Цена		 = Цена;
			 Область.Параметры.Стоимость = Цена * СтрокаТЧ.Количество;
		 КонецЕсли;
		 
		Если КоличествоОбработанных = КоличествоВТаблице Тогда
			// Последняя запись. Ее не следует отрывать от подписей.
			
			МассивТаблиц = Новый Массив(2);
			МассивТаблиц[0] = Область;
			МассивТаблиц[1] = ОбластьПодвал;
			
			Если НЕ ТабДокумент.ПроверитьВывод(МассивТаблиц) Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(Область);
		КоличествоОбработанных = КоличествоОбработанных + 1;

	КонецЦикла;
	
	
	//Відпуск дозволив
	Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("004"); 
	ОбластьПодвал.Параметры.ОтпускРазрешил	= ПолучитьЗначениеДополнительногоРеквизита(Свойство);	
	
	//Здав (відпустив)
	Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("005"); 
	ОбластьПодвал.Параметры.Отпустил	= ПолучитьЗначениеДополнительногоРеквизита(Свойство);	
	
	//Прийняв (одержав)
	Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("006"); 
	ОбластьПодвал.Параметры.Получил	= ПолучитьЗначениеДополнительногоРеквизита(Свойство);	
	
	//Головний бухгалтер
	Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("007"); 
	ОбластьПодвал.Параметры.ГлавныйБухгалтер	= ПолучитьЗначениеДополнительногоРеквизита(Свойство);	
	
	
	ТабДокумент.Вывести(ОбластьПодвал);
	
	Возврат ТабДокумент;

КонецФункции // ПечатьМ11()

Функция ПолучитьЗначениеДополнительногоРеквизита(Свойство)
	Запрос =Новый Запрос(ПолучитьТекстЗапроса());
	Запрос.УстановитьПараметр("Объект"		,СсылкаНаОбъект);
	Запрос.УстановитьПараметр("Свойство"	,Свойство);
	Запрос.УстановитьПараметр("Дата"		,СсылкаНаОбъект.Дата);
	РезультатЗапроса =Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат "";
	Иначе 
		ВыборкаРезультатаЗапроса = РезультатЗапроса.Выбрать();
		ВыборкаРезультатаЗапроса.Следующий();
		Возврат ВыборкаРезультатаЗапроса.Значение; 
	КонецЕсли;
	
КонецФункции

Функция ПолучитьТекстЗапроса()
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ЗначенияСвойствОбъектов.Значение) = ТИПЗНАЧЕНИЯ(ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
	|			ТОГДА ФИОФизЛицСрезПоследних.Фамилия + "" ""  + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 0, 1) + ""."" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 0, 1) + "".""
	|		ИНАЧЕ ЗначенияСвойствОбъектов.Значение
	|	КОНЕЦ КАК Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ЗначенияСвойствОбъектов.Значение = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &Объект
	|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
	Возврат ТекстЗапроса;
КонецФункции

