&НаСервере
Перем мМассивОрганизаций;
 
&НаСервере
Перем ДокументОбъект; 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПредварительныйРасчет = Ложь;
	мИспользоватьВременныетаблицы = Истина;
	мТребуемаяТочность            = 0.000001;
	мМаксКоличествоИтераций       = 100;
	мМаксЗаписейВНаборе           = 10000;
КонецПроцедуры

&НаКлиенте
Процедура Рассчитать(Команда)
	ПровестиДокумент();
КонецПроцедуры



//////////////////////////////////////////////////////////////////////////////
// Сервисные процедуры.

&НаСервере
Процедура ЗаписатьНаборЗаписей(НаборЗаписей, ТекущееКоличествоЗаписей, ЗаписатьЕслиЕстьЗаписи = Ложь)

	Если ТекущееКоличествоЗаписей > мМаксЗаписейВНаборе
	 Или ЗаписатьЕслиЕстьЗаписи И ТекущееКоличествоЗаписей > 0 Тогда

		ТекущееКоличествоЗаписей = 0;
		НаборЗаписей.Записать(Ложь);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СформироватьМассивХозОперацийВнешнееПоступление()

	// Формируется список всех хоз. операций, которые являются внешним поступлением (известна их стоимость).
	ХозОперации = Новый Массив;
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет); // сторнирование реализации регл. учета по управленческой организации

	// Возврат прошлого периода используется только для операций расчета по среднему,
	// т.к. оценивать остатки для фифо не корректно.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов);

	Возврат ХозОперации;

КонецФункции

&НаСервере
Функция МассивХозОперацийВнешнееПоступление()

	// Формируется список всех хоз. операций, которые являются внешним поступлением (известна их стоимость).
	ХозОперации = Новый Массив;
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет); // сторнирование реализации регл. учета по управленческой организации

	// Возврат прошлого периода используется только для операций расчета по среднему,
	// т.к. оценивать остатки для фифо не корректно.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов);

	Возврат ХозОперации;

КонецФункции

&НаСервере
Функция МассивХозОперацийДляОценкиОстаткаТоваровПоФИФО()

	ХозОперации = Новый Массив;
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет); // сторнирование реализации регл. учета по управленческой организации

	Возврат ХозОперации;

КонецФункции

&НаСервере
Процедура ПроверитьДублиДокументов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация
	|ИЗ
	|	Документ.РасчетСебестоимостиТоваров.Организации КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериодаПериода
	|	И ДанныеДокумента.Ссылка.Проведен
	|	И ДанныеДокумента.Ссылка <> &Ссылка
	|	И ДанныеДокумента.Организация В(&Организации)
	|");
	Запрос.УстановитьПараметр("НачалоПериода",       НачалоМесяца(ДокументСсылка.Дата));
	Запрос.УстановитьПараметр("КонецПериодаПериода", КонецМесяца(ДокументСсылка.Дата));
	Запрос.УстановитьПараметр("Организации",         ДокументСсылка.Организации.ВыгрузитьКолонку("Организация"));
	Запрос.УстановитьПараметр("Ссылка",              ДокументСсылка);
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ШаблонТекста = НСтр("ru = 'За %1 уже есть проведенный документ ""Расчет себестоимости товаров"" для организации %2'");
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл

			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонТекста,
				Формат(ДокументСсылка.Дата, "ДФ='ММММ гггг'") + " г.",
				Выборка.Организация);

			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ДокументОбъект,
				"Дата",
				, // ПутьКДанным 
				Отказ);

		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Процедуры расчета стоимости.

&НаСервере
Функция ПодготовитьДанныеДляРасчетаПоФИФО(Запрос)

	// Формирование таблицы узлов.
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"//ДляФИФО","");
	Запрос.Выполнить();

	Запрос.Текст = 
	"
	|ВЫБРАТЬ
	|	Себестоимость.Организация                КАК Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                 КАК ВидЗапасов,
	|	ВЫБОР КОГДА Себестоимость.КоличествоОстаток > 0
	|			ТОГДА Себестоимость.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК КоличествоОстаток,
	|	ВЫБОР КОГДА Себестоимость.КоличествоОстаток > 0
	|			ТОГДА Себестоимость.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК КоличествоОстатокНаКонецПериода,
	|	0                                        КАК СтоимостьОстаток,
	|	0                                        КАК СтоимостьБезНДСОстаток,
	|	ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1) КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаОкончаниеПериода,
	|			Организация В (&МассивОрганизаций)
	|			И (АналитикаУчетаНоменклатуры,
	|				РазделУчета,
	|				ВидЗапасов)
	|			В
	|				(ВЫБРАТЬ
	|					Таблица.АналитикаУчетаНоменклатуры,
	|					Таблица.РазделУчета,
	|					Таблица.ВидЗапасов
	|				ИЗ ВтАналитикаНоменклатуы КАК Таблица)
	|		) КАК Себестоимость
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|";
	Запрос.Выполнить();

	Запрос.Текст =
	"
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Организация                           КАК Организация,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.РазделУчета                           КАК РазделУчета,
	|	СебестоимостьТоваров.ВидЗапасов                            КАК ВидЗапасов,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(СебестоимостьТоваров.Период, День)) КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|		ПО СебестоимостьТоваров.АналитикаУчетаНоменклатуры = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|			И СебестоимостьТоваров.РазделУчета = ТаблицаОстатков.РазделУчета
	|			И СебестоимостьТоваров.ВидЗапасов  = ТаблицаОстатков.ВидЗапасов
	|			И СебестоимостьТоваров.Организация = ТаблицаОстатков.Организация
	|			И ТаблицаОстатков.КоличествоОстаток <> 0
	|ГДЕ
	|	СебестоимостьТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СебестоимостьТоваров.Активность
	|	И СебестоимостьТоваров.Стоимость <> 0
	|	И СебестоимостьТоваров.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СебестоимостьТоваров.Период < ТаблицаОстатков.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.ВидЗапасов,
	|	СебестоимостьТоваров.РазделУчета,
	|	СебестоимостьТоваров.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыПартий.Организация                         КАК Организация,
	|	ПериодыПартий.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	ПериодыПартий.РазделУчета                         КАК РазделУчета,
	|	ПериодыПартий.ВидЗапасов                          КАК ВидЗапасов,
	|	ПериодыПартий.Период                              КАК Период,
	|	СУММА(ЕСТЬNULL(Себестоимость.Количество, 0))      КАК Количество,
	|	СУММА(ЕСТЬNULL(Себестоимость.Стоимость, 0))       КАК Стоимость,
	|	СУММА(ЕСТЬNULL(Себестоимость.СтоимостьБезНДС, 0)) КАК СтоимостьБезНДС
	|
	|ПОМЕСТИТЬ ТаблицаВнешнихПоступлений
	|
	|ИЗ
	|	ТаблицаПериодыПартий КАК ПериодыПартий
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|		ПО ПериодыПартий.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
	|			И ПериодыПартий.РазделУчета             = Себестоимость.РазделУчета
	|			И ПериодыПартий.ВидЗапасов              = Себестоимость.ВидЗапасов
	|			И ПериодыПартий.Организация             = Себестоимость.Организация
	|			И Себестоимость.Активность
	|			И (Себестоимость.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (Себестоимость.Период МЕЖДУ ПериодыПартий.Период И КОНЕЦПЕРИОДА(ПериодыПартий.Период, ДЕНЬ))
	|			И (Себестоимость.ХозяйственнаяОперация В (&ХозОперацииПоступлениеВнешнее))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыПартий.АналитикаУчетаНоменклатуры,
	|	ПериодыПартий.РазделУчета,
	|	ПериодыПартий.ВидЗапасов,
	|	ПериодыПартий.Организация,
	|	ПериодыПартий.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация                КАК Организация,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатков.РазделУчета                КАК РазделУчета,
	|	ТаблицаОстатков.ВидЗапасов                 КАК ВидЗапасов,
	|	ВЫБОР КОГДА ТаблицаОстатков.КоличествоОстаток > ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ТаблицаОстатков.КоличествоОстаток - ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                           КАК НовыйКоличествоОстаток,
	|	ТаблицаОстатков.КоличествоОстатокНаКонецПериода КАК КоличествоОстатокНаКонецПериода,
	|
	|	ТаблицаОстатков.СтоимостьОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.Стоимость, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.Стоимость, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьОстаток,
	|
	|	ТаблицаОстатков.СтоимостьБезНДСОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьБезНДС, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьБезНДС, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьБезНДСОстаток,
	|
	|	ТаблицаВнешнихПоступлений.Период           КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаНовыхОстатков
	|
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВнешнихПоступлений КАК ТаблицаВнешнихПоступлений
	|		ПО ТаблицаОстатков.АналитикаУчетаНоменклатуры = ТаблицаВнешнихПоступлений.АналитикаУчетаНоменклатуры
	|			И ТаблицаОстатков.Организация = ТаблицаВнешнихПоступлений.Организация
	|			И ТаблицаОстатков.РазделУчета = ТаблицаВнешнихПоступлений.РазделУчета
	|			И ТаблицаОстатков.ВидЗапасов  = ТаблицаВнешнихПоступлений.ВидЗапасов
	|			И ТаблицаОстатков.КоличествоОстаток <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВнешнихПоступлений
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНовыхОстатков.Организация                     КАК Организация,
	|	ТаблицаНовыхОстатков.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыхОстатков.РазделУчета                     КАК РазделУчета,
	|	ТаблицаНовыхОстатков.ВидЗапасов                      КАК ВидЗапасов,
	|	ТаблицаНовыхОстатков.НовыйКоличествоОстаток          КАК КоличествоОстаток,
	|	ТаблицаНовыхОстатков.КоличествоОстатокНаКонецПериода КАК КоличествоОстатокНаКонецПериода,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьОстаток           КАК СтоимостьОстаток,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьБезНДСОстаток     КАК СтоимостьБезНДСОстаток,
	|	ТаблицаНовыхОстатков.Период                          КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|
	|ИЗ
	|	ТаблицаНовыхОстатков КАК ТаблицаНовыхОстатков
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаНовыхОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	ТаблицаПериодыПартий КАК ТаблицаПериодыПартий
	|";
	Запрос.УстановитьПараметр("ХозОперацииПоступлениеВнешнее", МассивХозОперацийДляОценкиОстаткаТоваровПоФИФО());
	Пока Не Запрос.Выполнить().Пустой() Цикл 
		// Максимальное количество выполнений запроса - максимальному количеству поступлений товара на склад.
	КонецЦикла;

	// Выполняется корректировка количества и стоимости внешних приходов в узел.
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|///////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаУзлыКорректировки.Организация                КАК Организация,
	|	ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаУзлыКорректировки.РазделУчета                КАК РазделУчета,
	|	ТаблицаУзлыКорректировки.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаУзлыКорректировки.Количество
	|		 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.Стоимость * ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.Количество
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 	 	  + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ                                 КАК Стоимость,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.СтоимостьБезНДС * ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьБезНДСОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.Количество
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 	 	  + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ                                 КАК СтоимостьБезНДС,
	|
	|	ТаблицаУзлыКорректировки.СтоимостьДопРасходы       КАК СтоимостьДопРасходы,
	|	ТаблицаУзлыКорректировки.СтоимостьДопРасходыБезНДС КАК СтоимостьДопРасходыБезНДС
	|ИЗ
	|	ТаблицаУзлыКорректировки КАК ТаблицаУзлыКорректировки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|		ПО ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|			И ТаблицаУзлыКорректировки.РазделУчета             = ТаблицаОстатков.РазделУчета
	|			И ТаблицаУзлыКорректировки.ВидЗапасов              = ТаблицаОстатков.ВидЗапасов
	|			И ТаблицаУзлыКорректировки.Организация             = ТаблицаОстатков.Организация
	|";
	Возврат Запрос.Выполнить();

КонецФункции

&НаСервере
Функция ПодготовитьДанныеДляРасчетаСтоимостиРеглПоФИФО(Запрос)

	// Формирование таблицы узлов.
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"//ДляФИФО","");
	Запрос.Выполнить();

	Запрос.Текст = 
	"
	|ВЫБРАТЬ
	|	Себестоимость.Организация                КАК Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                 КАК ВидЗапасов,
	|	ВЫБОР КОГДА Себестоимость.КоличествоОстаток > 0
	|			ТОГДА Себестоимость.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК КоличествоОстаток,
	|	ВЫБОР КОГДА Себестоимость.КоличествоОстаток > 0
	|			ТОГДА Себестоимость.КоличествоОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК КоличествоОстатокНаКонецПериода,
	|	0                                        КАК СтоимостьРеглОстаток,
	|	ДОБАВИТЬКДАТЕ(&КонецПериода, СЕКУНДА, 1) КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(&ГраницаОкончаниеПериода,
	|			Организация В (&МассивОрганизаций)
	|			И (АналитикаУчетаНоменклатуры,
	|				РазделУчета,
	|				ВидЗапасов)
	|			В
	|				(ВЫБРАТЬ
	|					Таблица.АналитикаУчетаНоменклатуры,
	|					Таблица.РазделУчета,
	|					Таблица.ВидЗапасов
	|				ИЗ ВтАналитикаНоменклатуы КАК Таблица)
	|		) КАК Себестоимость
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|";
	Запрос.Выполнить();

	Запрос.Текст =
	"
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.Организация                           КАК Организация,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.РазделУчета                           КАК РазделУчета,
	|	СебестоимостьТоваров.ВидЗапасов                            КАК ВидЗапасов,
	|	МАКСИМУМ(НАЧАЛОПЕРИОДА(СебестоимостьТоваров.Период, День)) КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаПериодыПартий
	|
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|		ПО СебестоимостьТоваров.АналитикаУчетаНоменклатуры = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|			И СебестоимостьТоваров.РазделУчета = ТаблицаОстатков.РазделУчета
	|			И СебестоимостьТоваров.ВидЗапасов  = ТаблицаОстатков.ВидЗапасов
	|			И СебестоимостьТоваров.Организация = ТаблицаОстатков.Организация
	|			И ТаблицаОстатков.КоличествоОстаток <> 0
	|ГДЕ
	|	СебестоимостьТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И СебестоимостьТоваров.Активность
	|	И СебестоимостьТоваров.СтоимостьРегл <> 0	
	|	И СебестоимостьТоваров.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И СебестоимостьТоваров.Период < ТаблицаОстатков.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.ВидЗапасов,
	|	СебестоимостьТоваров.РазделУчета,
	|	СебестоимостьТоваров.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыПартий.Организация                         КАК Организация,
	|	ПериодыПартий.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	ПериодыПартий.РазделУчета                         КАК РазделУчета,
	|	ПериодыПартий.ВидЗапасов                          КАК ВидЗапасов,
	|	ПериодыПартий.Период                              КАК Период,
	|	СУММА(ЕСТЬNULL(Себестоимость.Количество, 0))      КАК Количество,
	|	СУММА(ЕСТЬNULL(Себестоимость.СтоимостьРегл, 0))   КАК СтоимостьРегл
	|
	|ПОМЕСТИТЬ ТаблицаВнешнихПоступлений
	|
	|ИЗ
	|	ТаблицаПериодыПартий КАК ПериодыПартий
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|		ПО ПериодыПартий.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
	|			И ПериодыПартий.РазделУчета             = Себестоимость.РазделУчета
	|			И ПериодыПартий.ВидЗапасов              = Себестоимость.ВидЗапасов
	|			И ПериодыПартий.Организация             = Себестоимость.Организация
	|			И Себестоимость.Активность
	|			И (Себестоимость.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|			И (Себестоимость.Период МЕЖДУ ПериодыПартий.Период И КОНЕЦПЕРИОДА(ПериодыПартий.Период, ДЕНЬ))
	|			И (Себестоимость.ХозяйственнаяОперация В (&ХозОперацииПоступлениеВнешнее))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыПартий.АналитикаУчетаНоменклатуры,
	|	ПериодыПартий.РазделУчета,
	|	ПериодыПартий.ВидЗапасов,
	|	ПериодыПартий.Организация,
	|	ПериодыПартий.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Организация                КАК Организация,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатков.РазделУчета                КАК РазделУчета,
	|	ТаблицаОстатков.ВидЗапасов                 КАК ВидЗапасов,
	|	ВЫБОР КОГДА ТаблицаОстатков.КоличествоОстаток > ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ТаблицаОстатков.КоличествоОстаток - ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ                                           КАК НовыйКоличествоОстаток,
	|	ТаблицаОстатков.КоличествоОстатокНаКонецПериода КАК КоличествоОстатокНаКонецПериода,
	|
	|	ТаблицаОстатков.СтоимостьРеглОстаток
	|	+ ВЫБОР
	|		КОГДА ТаблицаОстатков.КоличествоОстаток >= ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 0)
	|			ТОГДА ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьРегл, 0)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВнешнихПоступлений.СтоимостьРегл, 0) * ТаблицаОстатков.КоличествоОстаток / ЕСТЬNULL(ТаблицаВнешнихПоступлений.Количество, 1)
	|	КОНЕЦ                                      КАК НоваяСтоимостьРеглОстаток,
	|
	|	ТаблицаВнешнихПоступлений.Период           КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаНовыхОстатков
	|
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВнешнихПоступлений КАК ТаблицаВнешнихПоступлений
	|		ПО ТаблицаОстатков.АналитикаУчетаНоменклатуры = ТаблицаВнешнихПоступлений.АналитикаУчетаНоменклатуры
	|			И ТаблицаОстатков.Организация = ТаблицаВнешнихПоступлений.Организация
	|			И ТаблицаОстатков.РазделУчета = ТаблицаВнешнихПоступлений.РазделУчета
	|			И ТаблицаОстатков.ВидЗапасов  = ТаблицаВнешнихПоступлений.ВидЗапасов
	|			И ТаблицаОстатков.КоличествоОстаток <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВнешнихПоступлений
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНовыхОстатков.Организация                     КАК Организация,
	|	ТаблицаНовыхОстатков.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыхОстатков.РазделУчета                     КАК РазделУчета,
	|	ТаблицаНовыхОстатков.ВидЗапасов                      КАК ВидЗапасов,
	|	ТаблицаНовыхОстатков.НовыйКоличествоОстаток          КАК КоличествоОстаток,
	|	ТаблицаНовыхОстатков.КоличествоОстатокНаКонецПериода КАК КоличествоОстатокНаКонецПериода,
	|	ТаблицаНовыхОстатков.НоваяСтоимостьРеглОстаток       КАК СтоимостьРеглОстаток,
	|	ТаблицаНовыхОстатков.Период                          КАК Период
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|
	|ИЗ
	|	ТаблицаНовыхОстатков КАК ТаблицаНовыхОстатков
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаНовыхОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	ТаблицаПериодыПартий КАК ТаблицаПериодыПартий
	|";
	Запрос.УстановитьПараметр("ХозОперацииПоступлениеВнешнее", МассивХозОперацийДляОценкиОстаткаТоваровПоФИФО());
	Пока Не Запрос.Выполнить().Пустой() Цикл 
		// Максимальное количество выполнений запроса - максимальному количеству поступлений товара на склад.
	КонецЦикла;

	// Выполняется корректировка количества и стоимости внешних приходов в узел.
	Запрос.Текст = "
	|УНИЧТОЖИТЬ ТаблицаПериодыПартий
	|;
	|///////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаУзлыКорректировки.Организация                КАК Организация,
	|	ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаУзлыКорректировки.РазделУчета                КАК РазделУчета,
	|	ТаблицаУзлыКорректировки.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаУзлыКорректировки.Количество
	|		 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|		 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ТаблицаУзлыКорректировки.Стоимость * ТаблицаУзлыКорректировки.Количество
	|			 - ЕСТЬNULL(ТаблицаОстатков.СтоимостьРеглОстаток, 0)) 
	|			 	 /(ТаблицаУзлыКорректировки.Количество
	|			 	 	 - ЕСТЬNULL(ТаблицаОстатков.КоличествоОстатокНаКонецПериода, 0)
	|			 	 	  + ЕСТЬNULL(ТаблицаОстатков.КоличествоОстаток, 0))
	|	КОНЕЦ                                 КАК Стоимость,
	|
	|	ТаблицаУзлыКорректировки.СтоимостьБезНДС           КАК СтоимостьБезНДС,
	|	ТаблицаУзлыКорректировки.СтоимостьДопРасходы       КАК СтоимостьДопРасходы,
	|	ТаблицаУзлыКорректировки.СтоимостьДопРасходыБезНДС КАК СтоимостьДопРасходыБезНДС
	|ИЗ
	|	ТаблицаУзлыКорректировки КАК ТаблицаУзлыКорректировки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК ТаблицаОстатков
	|		ПО ТаблицаУзлыКорректировки.АналитикаУчетаНоменклатуры = ТаблицаОстатков.АналитикаУчетаНоменклатуры
	|			И ТаблицаУзлыКорректировки.РазделУчета             = ТаблицаОстатков.РазделУчета
	|			И ТаблицаУзлыКорректировки.ВидЗапасов              = ТаблицаОстатков.ВидЗапасов
	|			И ТаблицаУзлыКорректировки.Организация             = ТаблицаОстатков.Организация
	|";
	Возврат Запрос.Выполнить();

КонецФункции

&НаСервере
Функция СформироватьУзлыКорректировкиСписанияСтоимостиРегл(СтруктураПериод, МенеджерВременныхТаблиц, МетодОценкиЗпасов, ПоВсемТоварам)

	ТекстЗапроса =
	"
	// Данные об аналитике для расчета.
	|//ПоВсемТоварам ВЫБРАТЬ РАЗЛИЧНЫЕ
	|//ПоВсемТоварам	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|//ПоВсемТоварам	УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|//ПоВсемТоварам	УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов
	|//ПоВсемТоварам ПОМЕСТИТЬ ВтАналитикаНоменклатуы
	|//ПоВсемТоварам ИЗ
	|//ПоВсемТоварам	РегистрНакопления.СебестоимостьТоваров КАК УчетСебестоимости
	|//ПоВсемТоварам ГДЕ
	|//ПоВсемТоварам	УчетСебестоимости.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|//ПоВсемТоварам	И УчетСебестоимости.ВидДвижения = Значение(ВидДвиженияНакопления.Расход)
	|//ПоВсемТоварам	И УчетСебестоимости.Активность  = ИСТИНА
	|//ПоВсемТоварам	И УчетСебестоимости.Организация В (&МассивОрганизаций)
	|//ПоВсемТоварам ;
	|////////////////////////////////////////////////////////////////////////////////
	|
	// Данные о движении товаров за период.
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация                КАК Организация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.РазделУчета                КАК РазделУчета,
	|	ВложенныйЗапрос.ВидЗапасов                 КАК ВидЗапасов,
	|	СУММА(ВложенныйЗапрос.Количество)          КАК Количество,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.Количество) <> 0 ТОГДА
	|				СУММА(ВложенныйЗапрос.Стоимость) / СУММА(ВложенныйЗапрос.Количество)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(23,10))   КАК Стоимость,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(23,10))  КАК СтоимостьБезНДС,

	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(23,10))  КАК СтоимостьДопРасходы,
	|	ВЫРАЗИТЬ(0 КАК ЧИСЛО(23,10))  КАК СтоимостьДопРасходыБезНДС
	|
	|//ДляФИФО ПОМЕСТИТЬ ТаблицаУзлыКорректировки
	|ИЗ
	|
	|	(ВЫБРАТЬ
			// Данные по всем движениям за период. По 'внешним' приходам собираются суммы и количество поступления.
	|		УчетСебестоимости.Организация                КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов,
	|		ВЫБОР КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК Количество,
			// Данные о суммах внешних поступлений.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.СтоимостьРегл
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК Стоимость
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК УчетСебестоимости
	|	ГДЕ
	|		УчетСебестоимости.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И УчетСебестоимости.Активность
	|		И УчетСебестоимости.Организация В (&МассивОрганизаций)
	|		//ПоВсемТоварам И (УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|		//ПоВсемТоварам		УчетСебестоимости.РазделУчета,
	|		//ПоВсемТоварам		УчетСебестоимости.ВидЗапасов)
	|		//ПоВсемТоварам		В
	|		//ПоВсемТоварам			(ВЫБРАТЬ
	|		//ПоВсемТоварам				АналитикаУчетаНоменклатуры,
	|		//ПоВсемТоварам				РазделУчета,
	|		//ПоВсемТоварам				ВидЗапасов
	|		//ПоВсемТоварам			ИЗ ВтАналитикаНоменклатуы)
	|	
	////////////////////// Эта часть для предварительного расчета стоимости.
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
			// Данные по всем движениям за период. По 'внешним' приходам собираются суммы и количество поступления.
	|		УчетСебестоимости.Организация                КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов,
	|		УчетСебестоимости.Количество                 КАК Количество,
			// Данные о суммах внешних поступлений.
	|		УчетСебестоимости.СтоимостьРегл              КАК Стоимость
	|	ИЗ
	|		ВТВозвраты КАК УчетСебестоимости
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Допрахсоды
	|		Таблица.Организация                КАК Организация,
	|		Таблица.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Таблица.РазделУчета                КАК РазделУчета,
	|		Таблица.ВидЗапасов                 КАК ВидЗапасов,
	|		0                                  КАК Количество,
	|		Таблица.СтоимостьРегл              КАК Стоимость
	|
	|	ИЗ ВТДопРасходов КАК Таблица
	|
	/////////////////////////////
	|	ОБЪЕДИНИТЬ ВСЕ
	// Данные по остаткам на начало расчетного периода.
	|	ВЫБРАТЬ
	|		УчетСебестоимости.Организация                           КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                           КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                            КАК ВидЗапасов,
	|		УчетСебестоимости.КоличествоОстаток                     КАК Количество,
	|		УчетСебестоимости.СтоимостьРеглОстаток                  КАК Стоимость
	|
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&ГраницаНачалоПериода,
	|			Организация В (&МассивОрганизаций)
	|			//ПоВсемТоварам И (АналитикаУчетаНоменклатуры,
	|			//ПоВсемТоварам 	РазделУчета,
	|			//ПоВсемТоварам 	ВидЗапасов)
	|			//ПоВсемТоварам В
	|			//ПоВсемТоварам (ВЫБРАТЬ
	|			//ПоВсемТоварам 	АналитикаУчетаНоменклатуры,
	|			//ПоВсемТоварам 	РазделУчета,
	|			//ПоВсемТоварам 	ВидЗапасов
	|			//ПоВсемТоварам	ИЗ ВтАналитикаНоменклатуы)
	|		) КАК УчетСебестоимости
	|
	|	ГДЕ
	|		УчетСебестоимости.КоличествоОстаток > 0
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.РазделУчета,
	|	ВложенныйЗапрос.Организация
	|";
	Если Не ПоВсемТоварам Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПоВсемТоварам", "");
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОрганизаций",      мМассивОрганизаций);
	Запрос.УстановитьПараметр("ХозОперацииПоступление", СформироватьМассивХозОперацийВнешнееПоступление());
	Запрос.УстановитьПараметр("КонецПериода",           СтруктураПериод.КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода",          СтруктураПериод.НачалоПериода);
	Запрос.УстановитьПараметр("ГраницаНачалоПериода",   Новый Граница(НачалоДня(СтруктураПериод.НачалоПериода), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ГраницаОкончаниеПериода",Новый Граница(КонецДня(СтруктураПериод.КонецПериода), ВидГраницы.Включая));

	Если ПоВсемТоварам Или МетодОценкиЗпасов = Перечисления.МетодыОценкиСтоимостиТоваров.СредняяЗаМесяц Тогда

		ТаблицаУзлов = Запрос.Выполнить().Выгрузить();

	Иначе// МетодОценкиЗпасов = Перечисления.МетодыОценкиСтоимостиТоваров.ФИФО

		ТаблицаУзлов = ПодготовитьДанныеДляРасчетаСтоимостиРеглПоФИФО(Запрос).Выгрузить();
	КонецЕсли;

	МассивУзлов = Новый Массив;
	Для СчетчикУзлов = 1 По ТаблицаУзлов.Количество() Цикл
		МассивУзлов.Добавить(СчетчикУзлов);
	КонецЦикла;

	ТаблицаУзлов.Колонки.Добавить("НомерУзла", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(25, 0));
	ТаблицаУзлов.ЗагрузитьКолонку(МассивУзлов, "НомерУзла");

	Запрос.Текст = 
	"
	|ВЫБРАТЬ *
	|
	|ПОМЕСТИТЬ ВтУзлыКорректировки
	|
	|ИЗ
	|	&ТаблицаУзлов КАК ТаблицаУзлов
	|
	|ИНДЕКСИРОВАТЬ ПО НомерУзла
	|";
	Запрос.УстановитьПараметр("ТаблицаУзлов", ТаблицаУзлов);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Выборка.Количество;

КонецФункции

&НаСервере
Функция СформироватьУзлыКорректировкиСписанияСтоимости(СтруктураПериод, МенеджерВременныхТаблиц, МетодОценкиЗпасов, ПредварительныйРасчет)

	ТекстЗапроса =
	"
	// Данные об аналитике для расчета.
	|//ПредварительныйРасчет ВЫБРАТЬ РАЗЛИЧНЫЕ
	|//ПредварительныйРасчет	УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|//ПредварительныйРасчет	УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|//ПредварительныйРасчет	УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов
	|//ПредварительныйРасчет ПОМЕСТИТЬ ВтАналитикаНоменклатуы
	|//ПредварительныйРасчет ИЗ
	|//ПредварительныйРасчет	РегистрНакопления.СебестоимостьТоваров КАК УчетСебестоимости
	|//ПредварительныйРасчет ГДЕ
	|//ПредварительныйРасчет	УчетСебестоимости.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|//ПредварительныйРасчет	И УчетСебестоимости.Организация В (&МассивОрганизаций)
	|//ПредварительныйРасчет	И УчетСебестоимости.ВидДвижения = Значение(ВидДвиженияНакопления.Расход)
	|//ПредварительныйРасчет	И УчетСебестоимости.Активность
	|//ПредварительныйРасчет ;
	|////////////////////////////////////////////////////////////////////////////////
	|
	// Данные о движении товаров за период.
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация                КАК Организация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.РазделУчета                КАК РазделУчета,
	|	ВложенныйЗапрос.ВидЗапасов                 КАК ВидЗапасов,
	|	СУММА(ВложенныйЗапрос.Количество)          КАК Количество,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.Количество) <> 0 ТОГДА
	|				СУММА(ВложенныйЗапрос.Стоимость) / СУММА(ВложенныйЗапрос.Количество)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(23,10))  КАК Стоимость,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.Количество) <> 0 ТОГДА
	|				СУММА(ВложенныйЗапрос.СтоимостьБезНДС) / СУММА(ВложенныйЗапрос.Количество)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(23,10))  КАК СтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.Количество) <> 0 ТОГДА
	|				СУММА(ВложенныйЗапрос.СуммаДопРасходов) / СУММА(ВложенныйЗапрос.Количество)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(23,10))  КАК СтоимостьДопРасходы,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР
	|			КОГДА СУММА(ВложенныйЗапрос.Количество) <> 0 ТОГДА
	|				СУММА(ВложенныйЗапрос.СуммаДопРасходовБезНДС) / СУММА(ВложенныйЗапрос.Количество)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК ЧИСЛО(23,10))  КАК СтоимостьДопРасходыБезНДС
	|
	|//ДляФИФО ПОМЕСТИТЬ ТаблицаУзлыКорректировки
	|ИЗ
	|
	|	(ВЫБРАТЬ
			// Данные по всем движениям за период. По 'внешним' приходам собираются суммы и количество поступления.
	|		УчетСебестоимости.Организация                КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов,
	|		ВЫБОР КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК Количество,
	|		// Данные о суммах внешних поступлений.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&ХозОперацииПоступление)
	|					И УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.Стоимость
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК Стоимость,
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.ХозяйственнаяОперация В (&ХозОперацииПоступление)
	|					И УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.СтоимостьБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьБезНДС,
	|		ВЫБОР КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.СуммаДопРасходов
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СуммаДопРасходов,
	|		ВЫБОР КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.СуммаДопРасходовБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СуммаДопРасходовБезНДС
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК УчетСебестоимости
	|	ГДЕ
	|		УчетСебестоимости.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И УчетСебестоимости.Активность
	|		И УчетСебестоимости.Организация В (&МассивОрганизаций)
	|		//ПредварительныйРасчет И (УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|		//ПредварительныйРасчет		УчетСебестоимости.РазделУчета,
	|		//ПредварительныйРасчет		УчетСебестоимости.ВидЗапасов)
	|		//ПредварительныйРасчет		В
	|		//ПредварительныйРасчет			(ВЫБРАТЬ
	|		//ПредварительныйРасчет				АналитикаУчетаНоменклатуры,
	|		//ПредварительныйРасчет				РазделУчета,
	|		//ПредварительныйРасчет				ВидЗапасов
	|		//ПредварительныйРасчет			ИЗ ВтАналитикаНоменклатуы)
	|	
	|
	/////////////////////////////////////////////////
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
			//Данные о возвратах прошлых периодов.
	|		УчетСебестоимости.Организация                КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                 КАК ВидЗапасов,
	|		ВЫБОР КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК Количество,
			// Данные о суммах внешних поступлений.
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.Стоимость
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК Стоимость,
	|		ВЫБОР
	|			КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.СтоимостьБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СтоимостьБезНДС,
	|
	|		ВЫБОР КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.СуммаДопРасходов
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СуммаДопРасходов,
	|		ВЫБОР КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|				УчетСебестоимости.СуммаДопРасходовБезНДС
	|			ИНАЧЕ 0
	|		КОНЕЦ                                        КАК СуммаДопРасходовБезНДС
	|
	|	ИЗ
	|		ВТВозвраты КАК УчетСебестоимости
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Допраходы
	|		Таблица.Организация                КАК Организация,
	|		Таблица.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Таблица.РазделУчета                КАК РазделУчета,
	|		Таблица.ВидЗапасов                 КАК ВидЗапасов,
	|		0                                  КАК Количество,
	|		0                                  КАК Стоимость,
	|		0                                  КАК СтоимостьБезНДС,
	|		Таблица.СуммаДопРасходов           КАК СуммаДопРасходов,
	|		Таблица.СуммаДопРасходовБезНДС     КАК СуммаДопРасходовБезНДС
	|
	|	ИЗ ВТДопРасходов КАК Таблица
	|
	/////////////////////////////////////////////////
	|ОБЪЕДИНИТЬ ВСЕ
	// Данные по остаткам на начало расчетного периода.
	|	ВЫБРАТЬ
	|		УчетСебестоимости.Организация                   КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                   КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                    КАК ВидЗапасов,
	|		УчетСебестоимости.КоличествоОстаток             КАК Количество,
	|		УчетСебестоимости.СтоимостьОстаток              КАК Стоимость,
	|		УчетСебестоимости.СтоимостьБезНДСОстаток        КАК СтоимостьБезНДС,
	|		УчетСебестоимости.СуммаДопРасходовОстаток       КАК СуммаДопРасходов,
	|		УчетСебестоимости.СуммаДопРасходовБезНДСОстаток КАК СуммаДопРасходовБезНДС
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров.Остатки(
	|			&ГраницаНачалоПериода,
	|			Организация В (&МассивОрганизаций)
	|			//ПредварительныйРасчет И (АналитикаУчетаНоменклатуры,
	|			//ПредварительныйРасчет 	РазделУчета,
	|			//ПредварительныйРасчет 	ВидЗапасов)
	|			//ПредварительныйРасчет В
	|			//ПредварительныйРасчет (ВЫБРАТЬ
	|			//ПредварительныйРасчет 	АналитикаУчетаНоменклатуры,
	|			//ПредварительныйРасчет 	РазделУчета,
	|			//ПредварительныйРасчет 	ВидЗапасов
	|			//ПредварительныйРасчет	ИЗ ВтАналитикаНоменклатуы)
	|		) КАК УчетСебестоимости
	|
	|	ГДЕ
	|		УчетСебестоимости.КоличествоОстаток > 0
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.РазделУчета,
	|	ВложенныйЗапрос.Организация
	|";
	Если Не ПредварительныйРасчет Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПредварительныйРасчет", "");
	КонецЕсли;

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ХозОперацииПоступление", МассивХозОперацийВнешнееПоступление());
	Запрос.УстановитьПараметр("КонецПериода",           СтруктураПериод.КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода",          СтруктураПериод.НачалоПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",      мМассивОрганизаций);
	Запрос.УстановитьПараметр("ГраницаНачалоПериода",   Новый Граница(НачалоДня(СтруктураПериод.НачалоПериода), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ГраницаОкончаниеПериода",Новый Граница(КонецДня(СтруктураПериод.КонецПериода), ВидГраницы.Включая));

	Если ПредварительныйРасчет Или МетодОценкиЗпасов = Перечисления.МетодыОценкиСтоимостиТоваров.СредняяЗаМесяц Тогда
		ТаблицаУзлов = Запрос.Выполнить().Выгрузить();
	Иначе// МетодОценкиЗпасов = Перечисления.МетодыОценкиСтоимостиТоваров.ФИФО
		ТаблицаУзлов = ПодготовитьДанныеДляРасчетаПоФИФО(Запрос).Выгрузить();
	КонецЕсли;

	МассивУзлов = Новый Массив;
	Для СчетчикУзлов = 1 По ТаблицаУзлов.Количество() Цикл
		МассивУзлов.Добавить(СчетчикУзлов);
	КонецЦикла;

	ТаблицаУзлов.Колонки.Добавить("НомерУзла", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(25, 0));
	ТаблицаУзлов.ЗагрузитьКолонку(МассивУзлов, "НомерУзла");

	Запрос.Текст = 
	"
	|ВЫБРАТЬ *
	|
	|ПОМЕСТИТЬ ВтУзлыКорректировки
	|
	|ИЗ
	|	&ТаблицаУзлов КАК ТаблицаУзлов
	|
	|ИНДЕКСИРОВАТЬ ПО НомерУзла
	|";
	Запрос.УстановитьПараметр("ТаблицаУзлов", ТаблицаУзлов);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();

	Возврат Выборка.Количество;

КонецФункции

&НаСервере
Функция ТекстЗапросаДвиженияСтоимости(ВоВременнуюТаблицу = Истина)

	ТекстЗапросаТаблицаРешений = "";
	Если ВоВременнуюТаблицу Тогда 
		ТекстЗапросаТаблицаРешений = 
		"
		// В качестве вектора решений на первой итерации берутся свободные коэфициенты.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                                       КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Стоимость КАК ЧИСЛО(23,10))                  КАК Стоимость,
		|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьБезНДС КАК ЧИСЛО(23,10))            КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьДопРасходы КАК ЧИСЛО(23,10))       КАК СтоимостьДопРасходы,
		|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьДопРасходыБезНДС КАК ЧИСЛО(23,10)) КАК СтоимостьДопРасходыБезНДС
		|
		|ПОМЕСТИТЬ ВтТаблицаРешений
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|;
		|";
	КонецЕсли;

	Если ВоВременнуюТаблицу Тогда 
		ТекстЗапросаУзлы =
		"
		//Подготовим таблицу списаний за период (коэффициенты уравнения)
		|ВЫБРАТЬ
		|	УчетСебестоимости.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	УчетСебестоимости.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	СУММА(УчетСебестоимости.Количество) КАК Количество
		|
		|ПОМЕСТИТЬ ВтПеремещенияСписания
		|";
	Иначе
		ТекстЗапросаУзлы =
		"
		//Подготовим таблицу списаний за период (коэффициенты уравнения)
		|ВЫБРАТЬ
		|	УчетСебестоимости.НомерУзлаИсточник - 1     КАК НомерУзлаИсточник,
		|	УчетСебестоимости.НомерУзлаПриемник - 1     КАК НомерУзлаПриемник,
		|	МАКСИМУМ(УчетСебестоимости.ВсегоКоличество) КАК ВсегоКоличество,
		|	СУММА(УчетСебестоимости.Количество)         КАК Количество
		|";
	КонецЕсли;

	ТекстЗапросаУзлы = ТекстЗапросаУзлы + 
	"
	|ИЗ
	|(ВЫБРАТЬ
	|	УзлыКорректировкиИсточник.НомерУзла  КАК НомерУзлаИсточник,
	|	УзлыКорректировкиПриемник.НомерУзла  КАК НомерУзлаПриемник,
	|	УзлыКорректировкиПриемник.Количество КАК ВсегоКоличество,
	|	ВЫБОР
	|		КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			УчетСебестоимости.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                КАК Количество
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК УчетСебестоимости
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
	|		ПО
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры = УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры
	|		И УчетСебестоимости.РазделУчета              = УзлыКорректировкиИсточник.РазделУчета
	|		И УчетСебестоимости.ВидЗапасов               = УзлыКорректировкиИсточник.ВидЗапасов
	|		И УчетСебестоимости.Организация              = УзлыКорректировкиИсточник.Организация
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
	|		ПО
	|		ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет) ТОГДА
	|				УчетСебестоимости.АналитикаУчетаНоменклатуры
	|			ИНАЧЕ
	|				УчетСебестоимости.КорАналитикаУчетаНоменклатуры
	|		КОНЕЦ = УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры
	|
	|		И ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет) ТОГДА
	|				УчетСебестоимости.РазделУчета
	|			ИНАЧЕ
	|				УчетСебестоимости.КорРазделУчета
	|		КОНЕЦ = УзлыКорректировкиПриемник.РазделУчета
	|
	|		И УчетСебестоимости.КорВидЗапасов = УзлыКорректировкиПриемник.ВидЗапасов
	|
	|		И ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет) ТОГДА
	|					ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|				КОГДА УчетСебестоимости.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|					УчетСебестоимости.КорОрганизация
	|			ИНАЧЕ
	|					УчетСебестоимости.Организация
	|		КОНЕЦ = УзлыКорректировкиПриемник.Организация
	|
	|ГДЕ
	|	УчетСебестоимости.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И УчетСебестоимости.Активность
	|
	|	) КАК УчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.НомерУзлаИсточник,
	|	УчетСебестоимости.НомерУзлаПриемник
	|";
	Если ВоВременнуюТаблицу Тогда
		ТекстЗапросаУзлы = ТекстЗапросаУзлы + 
		"
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзлаПриемник
		|";
	КонецЕсли;

	Возврат ТекстЗапросаТаблицаРешений + Символы.ПС + ТекстЗапросаУзлы;

КонецФункции

&НаСервере
Функция ТекстЗапросаДвиженияСтоимостиРегл(ВоВременнуюТаблицу = Истина)

	ТекстЗапросаТаблицаРешений = "";
	Если ВоВременнуюТаблицу Тогда
		ТекстЗапросаТаблицаРешений = 
		"
		// В качестве вектора решений на первой итерации берутся свободные коэфициенты.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                                             КАК НомерУзла,
		|	ВЫРАЗИТЬ(УзлыКорректировки.Стоимость КАК ЧИСЛО(23,10))                  КАК Стоимость,
		|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьБезНДС КАК ЧИСЛО(23,10))            КАК СтоимостьБезНДС,
		|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьДопРасходы КАК ЧИСЛО(23,10))       КАК СтоимостьДопРасходы,
		|	ВЫРАЗИТЬ(УзлыКорректировки.СтоимостьДопРасходыБезНДС КАК ЧИСЛО(23,10)) КАК СтоимостьДопРасходыБезНДС
		|
		|ПОМЕСТИТЬ ВтТаблицаРешений
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|;
		|";
	КонецЕсли;

	Если ВоВременнуюТаблицу Тогда 
		ТекстЗапросаУзлы =
		"
		//Подготовим таблицу списаний за период (коэффициенты уравнения)
		|ВЫБРАТЬ
		|	УчетСебестоимости.НомерУзлаИсточник КАК НомерУзлаИсточник,
		|	УчетСебестоимости.НомерУзлаПриемник КАК НомерУзлаПриемник,
		|	СУММА(УчетСебестоимости.Количество) КАК Количество
		|
		|ПОМЕСТИТЬ ВтПеремещенияСписания
		|";
	Иначе
		ТекстЗапросаУзлы =
		"
		//Подготовим таблицу списаний за период (коэффициенты уравнения)
		|ВЫБРАТЬ
		|	УчетСебестоимости.НомерУзлаИсточник - 1     КАК НомерУзлаИсточник,
		|	УчетСебестоимости.НомерУзлаПриемник - 1     КАК НомерУзлаПриемник,
		|	МАКСИМУМ(УчетСебестоимости.ВсегоКоличество) КАК ВсегоКоличество,
		|	СУММА(УчетСебестоимости.Количество)         КАК Количество
		|";
	КонецЕсли;

	ТекстЗапросаУзлы = ТекстЗапросаУзлы + 
	"
	|ИЗ
	|(ВЫБРАТЬ
	|	УзлыКорректировкиИсточник.НомерУзла   КАК НомерУзлаИсточник,
	|	УзлыКорректировкиПриемник.НомерУзла   КАК НомерУзлаПриемник,
	|	УзлыКорректировкиПриемник.Количество  КАК ВсегоКоличество,
	|	ВЫБОР
	|		КОГДА УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			УчетСебестоимости.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                КАК Количество
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК УчетСебестоимости
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтУзлыКорректировки КАК УзлыКорректировкиИсточник
	|		ПО
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры = УзлыКорректировкиИсточник.АналитикаУчетаНоменклатуры
	|		И УчетСебестоимости.РазделУчета              = УзлыКорректировкиИсточник.РазделУчета
	|		И УчетСебестоимости.ВидЗапасов               = УзлыКорректировкиИсточник.ВидЗапасов
	|		И УчетСебестоимости.Организация              = УзлыКорректировкиИсточник.Организация
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтУзлыКорректировки КАК УзлыКорректировкиПриемник
	|		ПО
	|		ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет) ТОГДА
	|				УчетСебестоимости.АналитикаУчетаНоменклатуры
	|			ИНАЧЕ
	|				УчетСебестоимости.КорАналитикаУчетаНоменклатуры
	|		КОНЕЦ = УзлыКорректировкиПриемник.АналитикаУчетаНоменклатуры
	|
	|		И ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет) ТОГДА
	|				УчетСебестоимости.РазделУчета
	|			ИНАЧЕ
	|				УчетСебестоимости.КорРазделУчета
	|		КОНЕЦ = УзлыКорректировкиПриемник.РазделУчета
	|
	|		И УчетСебестоимости.КорВидЗапасов = УзлыКорректировкиПриемник.ВидЗапасов
	|
	|		И ВЫБОР КОГДА УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет) ТОГДА
	|					ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|				КОГДА УчетСебестоимости.КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|					УчетСебестоимости.КорОрганизация
	|			ИНАЧЕ
	|					УчетСебестоимости.Организация
	|		КОНЕЦ = УзлыКорректировкиПриемник.Организация
	|
	|ГДЕ
	|	УчетСебестоимости.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И УчетСебестоимости.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	И УчетСебестоимости.Активность
	|
	|	) КАК УчетСебестоимости
	|
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.НомерУзлаИсточник,
	|	УчетСебестоимости.НомерУзлаПриемник
	|";
	Если ВоВременнуюТаблицу Тогда
		ТекстЗапросаУзлы = ТекстЗапросаУзлы + 
		"
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзлаПриемник
		|";
	КонецЕсли;

	Возврат ТекстЗапросаТаблицаРешений + Символы.ПС + ТекстЗапросаУзлы;

КонецФункции

&НаСервере
Процедура РассчитатьСтоимость(СтруктураПериод, МенеджерВременныхТаблиц, РасчетСтоимости)

	Если мИспользоватьВременныетаблицы Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("КонецПериода",  СтруктураПериод.КонецПериода);
		Запрос.УстановитьПараметр("НачалоПериода", СтруктураПериод.НачалоПериода);
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = ?(РасчетСтоимости, ТекстЗапросаДвиженияСтоимости(), ТекстЗапросаДвиженияСтоимостиРегл());
		Запрос.Выполнить();

		РешитьСЛУ(МенеджерВременныхТаблиц);

	Иначе

		ТекстЗапросаДляСЛУ = ?(РасчетСтоимости, ТекстЗапросаДвиженияСтоимости(Ложь), ТекстЗапросаДвиженияСтоимостиРегл(Ложь));
		РешитьСЛУБезИспользованияВременныхТаблиц(СтруктураПериод, МенеджерВременныхТаблиц, ТекстЗапросаДляСЛУ);

	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура РешитьСЛУ(МенеджерВременныхТаблиц)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	МаксКоличествоИтераций = мМаксКоличествоИтераций;
	СчетчикИтераций        = 1;
	ТекущееОтклонение      = 1;
	ТребуемаяТочность      = мТребуемаяТочность;

	Пока ТекущееОтклонение > ТребуемаяТочность И СчетчикИтераций <= МаксКоличествоИтераций Цикл

		Запрос.Текст = 
		"
		// 0 Расчет коэффициентов (количество перехода из состояния в состояние) уравнения.
		|ВЫБРАТЬ
		|	УзлыКорректировки.НомерУзла                                     КАК НомерУзла,
		|	ВЫРАЗИТЬ(МАКСИМУМ(УзлыКорректировки.Стоимость)                  КАК ЧИСЛО(23,10)) КАК СвободныйКоэффициент,
		|	ВЫРАЗИТЬ(МАКСИМУМ(УзлыКорректировки.СтоимостьБезНДС)            КАК ЧИСЛО(23,10)) КАК СвободныйКоэффициентБезНДС,
		|	ВЫРАЗИТЬ(МАКСИМУМ(УзлыКорректировки.СтоимостьДопРасходы)       КАК ЧИСЛО(23,10)) КАК СвободныйКоэффициентДопрасходы,
		|	ВЫРАЗИТЬ(МАКСИМУМ(УзлыКорректировки.СтоимостьДопРасходыБезНДС) КАК ЧИСЛО(23,10)) КАК СвободныйКоэффициентДопрасходыБезНДС,
		|	СУММА(ВЫРАЗИТЬ(
		|			ВЫБОР
		|				КОГДА УзлыКорректировки.Количество = 0
		|					ИЛИ ПеремещенияСписания.НомерУзлаПриемник Есть NULL
		|					ИЛИ ПеремещенияСписания.НомерУзлаИсточник Есть NULL ТОГДА
		|					0
		|				ИНАЧЕ
		|					ВтТаблицаРешений.Стоимость * ПеремещенияСписания.Количество / УзлыКорректировки.Количество
		|			КОНЕЦ КАК ЧИСЛО(23,10))) КАК Стоимость,
		|	СУММА(ВЫРАЗИТЬ(
		|			ВЫБОР
		|				КОГДА УзлыКорректировки.Количество = 0
		|					ИЛИ ПеремещенияСписания.НомерУзлаПриемник Есть NULL
		|					ИЛИ ПеремещенияСписания.НомерУзлаИсточник Есть NULL ТОГДА
		|					0
		|				ИНАЧЕ
		|					ВтТаблицаРешений.СтоимостьБезНДС * ПеремещенияСписания.Количество / УзлыКорректировки.Количество
		|			КОНЕЦ КАК ЧИСЛО(23,10))) КАК СтоимостьБезНДС,
		|
		|	СУММА(ВЫРАЗИТЬ(
		|			ВЫБОР
		|				КОГДА УзлыКорректировки.Количество = 0
		|					ИЛИ ПеремещенияСписания.НомерУзлаПриемник Есть NULL
		|					ИЛИ ПеремещенияСписания.НомерУзлаИсточник Есть NULL ТОГДА
		|					0
		|				ИНАЧЕ
		|					ВтТаблицаРешений.СтоимостьДопРасходы * ПеремещенияСписания.Количество / УзлыКорректировки.Количество
		|			КОНЕЦ 
		|		КАК ЧИСЛО(23,10)))           КАК СтоимостьДопРасходы,
		|	СУММА(ВЫРАЗИТЬ(
		|			ВЫБОР
		|				КОГДА УзлыКорректировки.Количество = 0
		|					ИЛИ ПеремещенияСписания.НомерУзлаПриемник Есть NULL
		|					ИЛИ ПеремещенияСписания.НомерУзлаИсточник Есть NULL ТОГДА
		|					0
		|				ИНАЧЕ
		|					ВтТаблицаРешений.СтоимостьДопРасходыБезНДС * ПеремещенияСписания.Количество / УзлыКорректировки.Количество
		|			КОНЕЦ 
		|		КАК ЧИСЛО(23,10)))           КАК СтоимостьДопРасходыБезНДС
		|
		|ПОМЕСТИТЬ ВременнаяТаблицаРешений
		|ИЗ
		|	ВтУзлыКорректировки КАК УзлыКорректировки
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПеремещенияСписания КАК ПеремещенияСписания
		|		ПО УзлыКорректировки.НомерУзла = ПеремещенияСписания.НомерУзлаПриемник
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений КАК ВтТаблицаРешений
		|		ПО ПеремещенияСписания.НомерУзлаИсточник = ВтТаблицаРешений.НомерУзла
		|
		|СГРУППИРОВАТЬ ПО
		|	УзлыКорректировки.НомерУзла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|;
		|/////////////////////////////////////////////////////////////////////////////
		// 1 Расчет ошибки расчета.
		|ВЫБРАТЬ
		|	ЕСТЬNULL(
		|		МАКСИМУМ(
		|			ВЫБОР КОГДА (ЕСТЬNULL(ТаблицаРешений.Стоимость,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициент
		|			 + ЕСТЬNULL(ВременнаяТаблицаРешений.Стоимость,0))) > 0 ТОГДА
		|
		|					ЕСТЬNULL(ТаблицаРешений.Стоимость,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициент
		|				 	+ ЕСТЬNULL(ВременнаяТаблицаРешений.Стоимость,0))
		|			ИНАЧЕ
		|				-(
		|					ЕСТЬNULL(ТаблицаРешений.Стоимость,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициент
		|					 + ЕСТЬNULL(ВременнаяТаблицаРешений.Стоимость,0))
		|					)
		|			КОНЕЦ
		|			)
		|		,0) КАК Отклонение,
		|	ЕСТЬNULL(
		|		МАКСИМУМ(
		|			ВЫБОР КОГДА (ЕСТЬNULL(ТаблицаРешений.СтоимостьБезНДС,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициентБезНДС
		|			 + ЕСТЬNULL(ВременнаяТаблицаРешений.СтоимостьБезНДС,0))) > 0 ТОГДА
		|
		|					ЕСТЬNULL(ТаблицаРешений.СтоимостьБезНДС,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициентБезНДС
		|				 	+ ЕСТЬNULL(ВременнаяТаблицаРешений.СтоимостьБезНДС,0))
		|			ИНАЧЕ
		|				-(
		|					ЕСТЬNULL(ТаблицаРешений.СтоимостьБезНДС,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициентБезНДС
		|					 + ЕСТЬNULL(ВременнаяТаблицаРешений.СтоимостьБезНДС,0))
		|					)
		|			КОНЕЦ
		|			)
		|		,0) КАК ОтклонениеБезНДС,
		|
		|	ЕСТЬNULL(
		|		МАКСИМУМ(
		|			ВЫБОР КОГДА ЕСТЬNULL(ТаблицаРешений.СтоимостьДопРасходы,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициентДопрасходы
		|					 + ЕСТЬNULL(ВременнаяТаблицаРешений.СтоимостьДопРасходы,0))> 0 ТОГДА
		|
		|				ЕСТЬNULL(ТаблицаРешений.СтоимостьДопРасходы,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициентДопрасходы
		|					 + ЕСТЬNULL(ВременнаяТаблицаРешений.СтоимостьДопРасходы,0))
		|
		|			ИНАЧЕ
		|				-(
		|					ЕСТЬNULL(ТаблицаРешений.СтоимостьДопРасходы,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициентДопрасходы
		|					 + ЕСТЬNULL(ВременнаяТаблицаРешений.СтоимостьДопРасходы,0))
		|					)
		|			КОНЕЦ
		|			)
		|		,0) КАК ОтклонениеДопрасходы,
		|	ЕСТЬNULL(
		|		МАКСИМУМ(
		|			ВЫБОР КОГДА ЕСТЬNULL(ТаблицаРешений.СтоимостьДопРасходы,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициентДопрасходы
		|					 + ЕСТЬNULL(ВременнаяТаблицаРешений.СтоимостьДопРасходы,0))> 0 ТОГДА
		|
		|				ЕСТЬNULL(ТаблицаРешений.СтоимостьДопРасходы,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициентДопрасходы
		|					 + ЕСТЬNULL(ВременнаяТаблицаРешений.СтоимостьДопРасходы,0))
		|
		|			ИНАЧЕ
		|				-(
		|					ЕСТЬNULL(ТаблицаРешений.СтоимостьДопРасходы,0) - (ВременнаяТаблицаРешений.СвободныйКоэффициентДопрасходы
		|					 + ЕСТЬNULL(ВременнаяТаблицаРешений.СтоимостьДопРасходы,0))
		|					)
		|			КОНЕЦ
		|			)
		|		,0) КАК ОтклонениеДопрасходыБезНДС
		|ИЗ
		|	ВременнаяТаблицаРешений КАК ВременнаяТаблицаРешений
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаРешений КАК ТаблицаРешений
		|		ПО ВременнаяТаблицаРешений.НомерУзла = ТаблицаРешений.НомерУзла
		|;
		|//////////////////////////////////////////////////////////////
		// 2 Удаление таблиц.
		|УНИЧТОЖИТЬ ВтТаблицаРешений
		|;
		// 3 Суммирование коэффициентов.
		|//////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаРешений.НомерУзла  КАК НомерУзла,
		|	ВЫРАЗИТЬ(
		|		ВременнаяТаблицаРешений.СвободныйКоэффициент
		|			+ ВременнаяТаблицаРешений.Стоимость
		|		КАК ЧИСЛО(23,10))              КАК Стоимость,
		|	ВЫРАЗИТЬ(
		|		ВременнаяТаблицаРешений.СвободныйКоэффициентБезНДС
		|			+ ВременнаяТаблицаРешений.СтоимостьБезНДС
		|		КАК ЧИСЛО(23,10))              КАК СтоимостьБезНДС,
		|
		|	ВЫРАЗИТЬ(
		|		ВременнаяТаблицаРешений.СвободныйКоэффициентДопрасходы
		|			+ ВременнаяТаблицаРешений.СтоимостьДопРасходы 
		|		КАК ЧИСЛО(23,10))              КАК СтоимостьДопРасходы,
		|	ВЫРАЗИТЬ(
		|		ВременнаяТаблицаРешений.СвободныйКоэффициентДопрасходыБезНДС
		|			+ ВременнаяТаблицаРешений.СтоимостьДопРасходыБезНДС 
		|		КАК ЧИСЛО(23,10))              КАК СтоимостьДопРасходыБезНДС
		|
		|ПОМЕСТИТЬ ВтТаблицаРешений
		|
		|ИЗ
		|	ВременнаяТаблицаРешений КАК ВременнаяТаблицаРешений
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|;
		|//////////////////////////////////////////////////////////////
		// 4 Удаление таблицы.
		|	УНИЧТОЖИТЬ ВременнаяТаблицаРешений
		|";
		Выборка = Запрос.ВыполнитьПакет()[1].Выбрать();
		Если Выборка.Следующий() Тогда
			
			ТекущееОтклонение = Макс(Выборка.Отклонение, Выборка.ОтклонениеБезНДС, Выборка.ОтклонениеДопрасходы, Выборка.ОтклонениеДопрасходыБезНДС);

		Иначе

			ТекущееОтклонение = 0;//Отклонений нет

		КонецЕсли;

		СчетчикИтераций = СчетчикИтераций + 1;

	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПолучитьСЛУ(ТекстЗапроса, СтруктураПериод, КоличествоУравненийСЛУ, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", СтруктураПериод.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", СтруктураПериод.КонецПериода);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Результат = Запрос.Выполнить();

	МассивСЛУ = Новый Массив(КоличествоУравненийСЛУ);

	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл

		СтруктураУравнения = Новый Структура;
		СтруктураУравнения.Вставить("НомерУзлаИсточник",    Выборка.НомерУзлаИсточник);
		СтруктураУравнения.Вставить("ЗначениеКоэффициента", Выборка.Количество);
		СтруктураУравнения.Вставить("ВсегоКоличество",      Выборка.ВсегоКоличество);

		Если МассивСЛУ[Выборка.НомерУзлаПриемник] = Неопределено Тогда
			МассивСЛУ[Выборка.НомерУзлаПриемник] = Новый Массив;
		КонецЕсли;
		МассивСЛУ[Выборка.НомерУзлаПриемник].Добавить(СтруктураУравнения);

	КонецЦикла;

	Возврат МассивСЛУ;

КонецФункции

&НаСервере
Процедура РешитьСЛУБезИспользованияВременныхТаблиц(СтруктураПериод, МенеджерВременныхТаблиц, ТекстЗапросаДляСЛУ)

	Перем МассивСвободныхЧленовСтоимость;
	Перем МассивСвободныхЧленовСтоимостьБезНДС;
	Перем МассивСвободныхЧленовСтоимостьДопРасходы;
	Перем МассивСвободныхЧленовСтоимостьДопРасходыБезНДС;
	Перем ТекущееРешение;
	Перем ТекущееРешениеБезНДС;
	Перем ТекущееРешениеДопРасходы;
	Перем ТекущееРешениеДопРасходыБезНДС;

	// Получим S(i)/K(i)
	ЗаполнитьМассивыСвободныхЧленов(МассивСвободныхЧленовСтоимость, МассивСвободныхЧленовСтоимостьБезНДС,
				МассивСвободныхЧленовСтоимостьДопРасходы, МассивСвободныхЧленовСтоимостьДопРасходыБезНДС,
				МенеджерВременныхТаблиц);
	
	КоличествоУравненийСЛУ = МассивСвободныхЧленовСтоимость.Количество();
	
	// Выберем начальное приближение X(j)
	ТекущееРешение                 = СкопироватьМассив(МассивСвободныхЧленовСтоимость);
	ТекущееРешениеБезНДС           = СкопироватьМассив(МассивСвободныхЧленовСтоимостьБезНДС);
	ТекущееРешениеДопРасходы       = СкопироватьМассив(МассивСвободныхЧленовСтоимостьДопРасходы);
	ТекущееРешениеДопРасходыБезНДС = СкопироватьМассив(МассивСвободныхЧленовСтоимостьДопРасходыБезНДС);
	
	// Получим K(j) для всех уравнений системы
	МассивСЛУ = ПолучитьСЛУ(ТекстЗапросаДляСЛУ,
							СтруктураПериод, 
							КоличествоУравненийСЛУ,
							МенеджерВременныхТаблиц);
	
	// По умолчанию примем за решение начальное приближение
	НовоеРешение                 = СкопироватьМассив(ТекущееРешение);
	НовоеРешениеБезНДС           = СкопироватьМассив(ТекущееРешениеБезНДС);
	НовоеРешениеДопРасходы       = СкопироватьМассив(ТекущееРешениеДопРасходы);
	НовоеРешениеДопРасходыБезНДС = СкопироватьМассив(ТекущееРешениеДопРасходыБезНДС);
	
	// Решим СЛУ методом простых итераций
	ТекущееОтклонение  = КоличествоУравненийСЛУ;
	СчетчикИтераций    = 1;

	МаксКоличествоИтераций = мМаксКоличествоИтераций;
	ТребуемаяТочность      = мТребуемаяТочность;

	Пока ТекущееОтклонение > ТребуемаяТочность  И СчетчикИтераций < МаксКоличествоИтераций Цикл

		ТекущееОтклонение = 0;

		Для НомерТекущегоУравнения = 0 По МассивСЛУ.Количество() - 1 Цикл

			Если МассивСЛУ[НомерТекущегоУравнения] = Неопределено Тогда
				// Для этой переменной считать ничего не нужно, первое приближение - это и есть точное решение
				Продолжить;
			КонецЕсли;

			// Получим первое выражение уравнения: S(i)/K(i)
			НовоеРешение[НомерТекущегоУравнения]                 = МассивСвободныхЧленовСтоимость[НомерТекущегоУравнения];
			НовоеРешениеБезНДС[НомерТекущегоУравнения]           = МассивСвободныхЧленовСтоимостьБезНДС[НомерТекущегоУравнения];
			НовоеРешениеДопРасходы[НомерТекущегоУравнения]       = МассивСвободныхЧленовСтоимостьДопРасходы[НомерТекущегоУравнения];
			НовоеРешениеДопРасходыБезНДС[НомерТекущегоУравнения] = МассивСвободныхЧленовСтоимостьДопРасходыБезНДС[НомерТекущегоУравнения];

			// Добавим к уравнению остальные выражения: (K(1) * X(1) + K(2) * X(2) + ... + K(j) * X(j)) / K(i)
			Для Каждого ТекущийКоэффициент Из МассивСЛУ[НомерТекущегоУравнения] Цикл

				КоличествоПеремещенногоТовара = ТекущийКоэффициент.ЗначениеКоэффициента;

				НовоеРешение[НомерТекущегоУравнения] = ДобавитьСтоимостьТовараПеремещенногоСДругихСкладов(
															НовоеРешение[НомерТекущегоУравнения],
															КоличествоПеремещенногоТовара, // K(j)
															ТекущийКоэффициент.ВсегоКоличество, // K(i)
															НовоеРешение[ТекущийКоэффициент.НомерУзлаИсточник]); // X(j) // Новое решение.

				НовоеРешениеБезНДС[НомерТекущегоУравнения] = ДобавитьСтоимостьТовараПеремещенногоСДругихСкладов(
															НовоеРешениеБезНДС[НомерТекущегоУравнения],
															КоличествоПеремещенногоТовара, // K(j)
															ТекущийКоэффициент.ВсегоКоличество, // K(i)
															НовоеРешениеБезНДС[ТекущийКоэффициент.НомерУзлаИсточник]); // X(j) // Новое решение.

				НовоеРешениеДопРасходы[НомерТекущегоУравнения] = ДобавитьСтоимостьТовараПеремещенногоСДругихСкладов(
															НовоеРешениеДопРасходы[НомерТекущегоУравнения],
															КоличествоПеремещенногоТовара, // K(j)
															ТекущийКоэффициент.ВсегоКоличество, // K(i)
															НовоеРешениеДопРасходы[ТекущийКоэффициент.НомерУзлаИсточник]); // X(j) // Новое решение.

				НовоеРешениеДопРасходыБезНДС[НомерТекущегоУравнения] = ДобавитьСтоимостьТовараПеремещенногоСДругихСкладов(
															НовоеРешениеДопРасходыБезНДС[НомерТекущегоУравнения],
															КоличествоПеремещенногоТовара, // K(j)
															ТекущийКоэффициент.ВсегоКоличество, // K(i)
															НовоеРешениеДопРасходыБезНДС[ТекущийКоэффициент.НомерУзлаИсточник]); // X(j) // Новое решение.

			КонецЦикла;

			ДельтаСтоимость = НовоеРешение[НомерТекущегоУравнения] - ТекущееРешение[НомерТекущегоУравнения];
			ДельтаСтоимость = Макс(ДельтаСтоимость, - ДельтаСтоимость);

			ДельтаСтоимостьБезНДС = НовоеРешениеБезНДС[НомерТекущегоУравнения] - ТекущееРешениеБезНДС[НомерТекущегоУравнения];
			ДельтаСтоимостьБезНДС = Макс(ДельтаСтоимостьБезНДС, - ДельтаСтоимостьБезНДС);

			ДельтаДопРасходы = НовоеРешениеДопРасходы[НомерТекущегоУравнения] - ТекущееРешениеДопРасходы[НомерТекущегоУравнения];
			ДельтаДопРасходы = Макс(ДельтаДопРасходы, - ДельтаДопРасходы);

			ДельтаДопРасходыБезНДС = НовоеРешениеДопРасходыБезНДС[НомерТекущегоУравнения] - ТекущееРешениеДопРасходыБезНДС[НомерТекущегоУравнения];
			ДельтаДопРасходыБезНДС = Макс(ДельтаДопРасходыБезНДС, - ДельтаДопРасходыБезНДС);

			ТекущееОтклонение = Макс(ТекущееОтклонение, ДельтаСтоимость, ДельтаСтоимостьБезНДС, ДельтаДопРасходы, ДельтаДопРасходыБезНДС);

		КонецЦикла;

		ТекущееОтклонение = Макс(ТекущееОтклонение, 0);

		// Запомним решение текущей итерации чтобы использовать его в следующей итерации
		ТекущееРешение                 = СкопироватьМассив(НовоеРешение);
		ТекущееРешениеБезНДС           = СкопироватьМассив(НовоеРешениеБезНДС);
		ТекущееРешениеДопРасходы       = СкопироватьМассив(НовоеРешениеДопРасходы);
		ТекущееРешениеДопРасходыБезНДС = СкопироватьМассив(НовоеРешениеДопРасходыБезНДС);

		СчетчикИтераций = СчетчикИтераций + 1;

	КонецЦикла;

	// Сохранение данных расчета.
	ВременнаяТаблицаРешений = Новый ТаблицаЗначений;
	ВременнаяТаблицаРешений.Колонки.Добавить("НомерУзла",                  ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(25, 0));
	ВременнаяТаблицаРешений.Колонки.Добавить("Стоимость",                  Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(23, 10)));
	ВременнаяТаблицаРешений.Колонки.Добавить("СтоимостьБезНДС",            Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(23, 10)));
	ВременнаяТаблицаРешений.Колонки.Добавить("СтоимостьДопРасходы",       Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(23, 10)));
	ВременнаяТаблицаРешений.Колонки.Добавить("СтоимостьДопРасходыБезНДС", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(23, 10)));

	НомерУзла = 1;
	Для Каждого ЭлементКоллекции Из ТекущееРешение Цикл

		НовоеРешение = ВременнаяТаблицаРешений.Добавить();
		НовоеРешение.НомерУзла                 = НомерУзла;
		НовоеРешение.Стоимость                 = ЭлементКоллекции;
		НовоеРешение.СтоимостьБезНДС           = ТекущееРешениеБезНДС[НомерУзла-1];
		НовоеРешение.СтоимостьДопРасходы       = ТекущееРешениеДопРасходы[НомерУзла-1];
		НовоеРешение.СтоимостьДопРасходыБезНДС = ТекущееРешениеДопРасходыБезНДС[НомерУзла-1];

		НомерУзла = НомерУзла + 1;

	КонецЦикла;

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	Т.*
	|
	|ПОМЕСТИТЬ ВременнаяТаблицаРешений
	|ИЗ
	|	&ВременнаяТаблицаРешений КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО Т.НомерУзла
	|
	|;
	|////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УзлыКорректировки.* ,
	|	ЕСТЬNULL(ВтРешения.Стоимость, 0)                  КАК Стоимость,
	|	ЕСТЬNULL(ВтРешения.СтоимостьБезНДС, 0)            КАК СтоимостьБезНДС,
	|	ЕСТЬNULL(ВтРешения.СтоимостьДопРасходы, 0)       КАК СтоимостьДопРасходы,
	|	ЕСТЬNULL(ВтРешения.СтоимостьДопРасходыБезНДС, 0) КАК СтоимостьДопРасходыБезНДС
	|
	|ПОМЕСТИТЬ ВтТаблицаРешений
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаРешений КАК ВтРешения
	|	ПО 
	|		ВтРешения.НомерУзла = УзлыКорректировки.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|;
	|УНИЧТОЖИТЬ ВременнаяТаблицаРешений
	|");
	Запрос.УстановитьПараметр("ВременнаяТаблицаРешений", ВременнаяТаблицаРешений);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМассивыСвободныхЧленов(МассивСвободныхЧленовСтоимость, МассивСвободныхЧленовСтоимостьБезНДС,
				МассивСвободныхЧленовСтоимостьДопРасходы, МассивСвободныхЧленовСтоимостьДопРасходыБезНДС,
				МенеджерВременныхТаблиц)

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	УзлыКорректировки.СтоимостьДопРасходы       КАК СтоимостьДопРасходы,
	|	УзлыКорректировки.СтоимостьДопРасходыБезНДС КАК СтоимостьДопРасходыБезНДС,
	|	УзлыКорректировки.Стоимость                  КАК Стоимость,
	|	УзлыКорректировки.СтоимостьБезНДС            КАК СтоимостьБезНДС
	|ИЗ
	|	ВтУзлыКорректировки КАК УзлыКорректировки
	|
	|УПОРЯДОЧИТЬ ПО
	|	УзлыКорректировки.НомерУзла
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Результат = Запрос.Выполнить().Выгрузить();

	МассивСвободныхЧленовСтоимость                 = Результат.ВыгрузитьКолонку("Стоимость");
	МассивСвободныхЧленовСтоимостьБезНДС           = Результат.ВыгрузитьКолонку("СтоимостьБезНДС");
	МассивСвободныхЧленовСтоимостьДопРасходы       = Результат.ВыгрузитьКолонку("СтоимостьДопРасходы");
	МассивСвободныхЧленовСтоимостьДопРасходыБезНДС = Результат.ВыгрузитьКолонку("СтоимостьДопРасходыБезНДС");
	

КонецПроцедуры

&НаСервере
Функция СкопироватьМассив(ИсходныйМассив)

	ТекущееРешение = Новый Массив;

	Для Каждого ЭлементМассива Из ИсходныйМассив Цикл
		ТекущееРешение.Добавить(ЭлементМассива);
	КонецЦикла;

	Возврат ТекущееРешение;

КонецФункции

&НаСервере
Функция ДобавитьСтоимостьТовараПеремещенногоСДругихСкладов(ТекущаяСтоимость, КоличествоПеремещенногоТовара, КоличествоТовара, ПриближеннаяСтоимость)

	Если КоличествоТовара <> 0 Тогда

		ТекущаяСтоимость = ТекущаяСтоимость + КоличествоПеремещенногоТовара // K(j)
											* ПриближеннаяСтоимость 	// X(j)
											/ КоличествоТовара; 		// K(i)
	КонецЕсли; 

	Возврат ТекущаяСтоимость;
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// Распределение выручки по направлениям деятиельности.


&НаСервере
Процедура РаспределитьВыручкуПоНаправлениямДеятельности(СтруктураПериод)

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	ТаблицаВыручки.Подразделение               КАК Подразделение,
	|	ТаблицаВыручки.Организация                 КАК Организация,
	|	ТаблицаВыручки.Номенклатура                КАК Номенклатура,
	|	ТаблицаВыручки.Партнер                     КАК Партнер,
	|	ТаблицаВыручки.СуммаВыручки                КАК СуммаВыручки,
	|	ТаблицаВыручки.Себестоимость               КАК Себестоимость,
	|	НастройкаРаспределения.СпособРаспределения КАК СпособРаспределения,
	|	ВЫБОР
	|		КОГДА ТаблицаВыручки.Партнер = НастройкаРаспределения.Партнер ТОГДА
	|			1000
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ТаблицаВыручки.Подразделение = НастройкаРаспределения.Подразделение ТОГДА
	|			100
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ТаблицаВыручки.Номенклатура = НастройкаРаспределения.Номенклатура ТОГДА
	|			10
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ТаблицаВыручки.Организация = НастройкаРаспределения.Организация ТОГДА
	|			1
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ                                      КАК Приоритет
	|
	|ПОМЕСТИТЬ ВтТаблицаРаспределения
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Подразделение             КАК Подразделение,
	|		АналитикаПоПартнерам.Организация                КАК Организация,
	|		АналитикаНоменклатуры.Номенклатура              КАК Номенклатура,
	|		АналитикаПоПартнерам.Партнер                    КАК Партнер,
	|		СУММА(ВыручкаИСебестоимость.СуммаВыручкиОборот) КАК СуммаВыручки,
	|		СУММА(ВыручкаИСебестоимость.СебестоимостьОборот)
	|		 + СУММА(ВыручкаИСебестоимость.СуммаДополнительныхРасходовОборот) КАК Себестоимость
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж.Обороты(
	|				&НачалоПериода,
	|				&КонецПериода,
	|				,
	|				
	|				ТипЗапасов <> Значение(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				И АналитикаУчетаПоПартнерам В
	|					(ВЫБРАТЬ
	|						АналитикаПартнерам.КлючАналитики
	|					ИЗ
	|						РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнерам
	|					ГДЕ
	|						АналитикаПартнерам.Организация В (&МассивОрганизаций)
	|					)
	|			) КАК ВыручкаИСебестоимость
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО ВыручкаИСебестоимость.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.КлючАналитики
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|
	|	СГРУППИРОВАТЬ ПО
	|		АналитикаПоПартнерам.Организация,
	|		ВыручкаИСебестоимость.Подразделение,
	|		АналитикаПоПартнерам.Партнер,
	|		АналитикаНоменклатуры.Номенклатура
	|
	|	ИМЕЮЩИЕ
	|		(СУММА(ВыручкаИСебестоимость.СуммаВыручкиОборот) <> 0
	|			ИЛИ СУММА(ВыручкаИСебестоимость.СебестоимостьОборот) <> 0
	|			ИЛИ СУММА(ВыручкаИСебестоимость.СуммаДополнительныхРасходовОборот) <> 0)
	|	) КАК ТаблицаВыручки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкаРаспределенияПоНаправлениямДеятельности.СрезПоследних(
	|			&КонецПериода,
	|		) КАК НастройкаРаспределения
	|		ПО
	|			НастройкаРаспределения.Используется
	|			И (ТаблицаВыручки.Организация              = НастройкаРаспределения.Организация
	|				ИЛИ НастройкаРаспределения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|			И (ТаблицаВыручки.Партнер              = НастройкаРаспределения.Партнер
	|				ИЛИ НастройкаРаспределения.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|
	|			И (ТаблицаВыручки.Подразделение              = НастройкаРаспределения.Подразделение
	|				ИЛИ НастройкаРаспределения.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|
	|			И (ТаблицаВыручки.Номенклатура              = НастройкаРаспределения.Номенклатура
	|				ИЛИ НастройкаРаспределения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Партнер,
	|	Подразделение,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&ПериодДвижений                                                      КАК Период,
	|	ТаблицаФинансовыхРезультатов.Организация                             КАК Организация,
	|	ТаблицаФинансовыхРезультатов.Подразделение                           КАК Подразделение,
	|	ТаблицаФинансовыхРезультатов.СпособРаспределения                     КАК СпособРаспределения,
	|	ТаблицаФинансовыхРезультатов.СуммаВыручки                            КАК СуммаВыручки,
	|	ТаблицаФинансовыхРезультатов.Себестоимость                           КАК Себестоимость,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ВыручкаОтПродаж)       КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.СебестоимостьПродаж)  КАК СтатьяРасходов,
	|	ВЫБОР
	|		КОГДА ТаблицаФинансовыхРезультатов.СпособРаспределения ССЫЛКА Справочник.НаправленияДеятельности ТОГДА
	|			ТаблицаФинансовыхРезультатов.СпособРаспределения
	|		ИНАЧЕ
	|			СпособыРаспределения.НаправлениеДеятельности
	|	КОНЕЦ                                                                КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ТаблицаФинансовыхРезультатов.СпособРаспределения ССЫЛКА Справочник.НаправленияДеятельности ТОГДА
	|			1
	|		ИНАЧЕ
	|			ЕСТЬNULL(СпособыРаспределения.Коэффициент, 1)
	|	КОНЕЦ                                                                КАК КоэффициентРаспределения
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаРаспределения.Организация                   КАК Организация,
	|		ТаблицаРаспределения.Подразделение                 КАК Подразделение,
	|		СУММА(ТаблицаРаспределения.СуммаВыручки)           КАК СуммаВыручки,
	|		СУММА(ТаблицаРаспределения.Себестоимость)          КАК Себестоимость,
	|		ЕСТЬNULL(ТаблицаРаспределения.СпособРаспределения,
	|			НЕОПРЕДЕЛЕНО)                                  КАК СпособРаспределения
	|
	|	ИЗ
	|		ВтТаблицаРаспределения КАК ТаблицаРаспределения
	|
	|	ГДЕ
	|		ТаблицаРаспределения.Приоритет В
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(Таб.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВтТаблицаРаспределения КАК Таб
	|				ГДЕ
	|					Таб.Номенклатура         = ТаблицаРаспределения.Номенклатура
	|					И Таб.Подразделение      = ТаблицаРаспределения.Подразделение
	|					И Таб.Организация        = ТаблицаРаспределения.Организация
	|					И Таб.Партнер            = ТаблицаРаспределения.Партнер)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаРаспределения.Организация,
	|		ТаблицаРаспределения.Подразделение,
	|		ЕСТЬNULL(ТаблицаРаспределения.СпособРаспределения, НЕОПРЕДЕЛЕНО)
	|
	|	) КАК ТаблицаФинансовыхРезультатов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.СпособыРаспределенияПоНаправлениямДеятельности.НаправленияДеятельности КАК СпособыРаспределения
	|		ПО ТаблицаФинансовыхрезультатов.СпособРаспределения = СпособыРаспределения.Ссылка
	|
	|ИТОГИ
	|	МАКСИМУМ(СуммаВыручки),
	|	МАКСИМУМ(Себестоимость),
	|	СУММА(КоэффициентРаспределения)
	|
	|ПО
	|	Организация,
	|	Подразделение,
	|	СпособРаспределения
	|");
	Запрос.УстановитьПараметр("ПериодДвижений",    КонецДня(СтруктураПериод.КонецПериода));
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоДня(СтруктураПериод.НачалоПериода));
	Запрос.УстановитьПараметр("МассивОрганизаций", мМассивОрганизаций);
	Запрос.УстановитьПараметр("КонецПериода",      Новый Граница(КонецДня(СтруктураПериод.КонецПериода),ВидГраницы.Включая));

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;

	НаборЗаписейФинансовыеРезультаты = РегистрыНакопления.ФинансовыеРезультаты.СоздатьНаборЗаписей();
	НаборЗаписейФинансовыеРезультаты.Отбор.Регистратор.Установить(ДокументСсылка);

	РазрядностьСуммы    = 2;
	ЗаписейВНаборе      = 0;

	ВыборкаОрганизация = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Организация");
	Пока ВыборкаОрганизация.Следующий() Цикл

		ВыборкаПодразделение = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Подразделение");
		Пока ВыборкаПодразделение.Следующий() Цикл

			ВыборкаСпособыРаспределения = ВыборкаПодразделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СпособРаспределения");
			Пока ВыборкаСпособыРаспределения.Следующий() Цикл

				ВсегоДолей            = ВыборкаСпособыРаспределения.КоэффициентРаспределения;
				РасходыКРаспределению = ВыборкаСпособыРаспределения.Себестоимость;
				ДоходыКРаспределению  = ВыборкаСпособыРаспределения.СуммаВыручки;

				ВыборкаДетали = ВыборкаСпособыРаспределения.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока ВыборкаДетали.Следующий() Цикл

					Если ВсегоДолей <> 0 Тогда

						Расходы = Окр(РасходыКРаспределению * ВыборкаДетали.КоэффициентРаспределения / ВсегоДолей,
										РазрядностьСуммы, РежимОкругления.Окр15как20);
					Иначе

						Расходы = 0;
					КонецЕсли;

					Если ВсегоДолей <> 0 Тогда

						Доходы = Окр(ДоходыКРаспределению * ВыборкаДетали.КоэффициентРаспределения / ВсегоДолей,
										РазрядностьСуммы, РежимОкругления.Окр15как20);
					Иначе

						Доходы = 0;
					КонецЕсли;

					РасходыКРаспределению = РасходыКРаспределению - Расходы;
					ДоходыКРаспределению  = ДоходыКРаспределению  - Доходы;
					ВсегоДолей            = ВсегоДолей            - ВыборкаДетали.КоэффициентРаспределения;

					// Формирование движений по фин. результату.
					Запись = НаборЗаписейФинансовыеРезультаты.Добавить();
					ЗаполнитьЗначенияСвойств(Запись, ВыборкаДетали, "Период, Организация, Подразделение, НаправлениеДеятельности, СпособРаспределения");

					Если Доходы <> 0 Тогда

						Запись.Доходы  = Доходы;
						Запись.СтатьяДоходов = ВыборкаДетали.СтатьяДоходов;

					КонецЕсли;

					Если Расходы <> 0 Тогда

						Запись.Расходы = Расходы;
						Запись.СтатьяРасходов = ВыборкаДетали.СтатьяРасходов;

					КонецЕсли;

					ЗаписейВНаборе = ЗаписейВНаборе + 1;
					ЗаписатьНаборЗаписей(НаборЗаписейФинансовыеРезультаты, ЗаписейВНаборе);

				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

	ЗаписатьНаборЗаписей(НаборЗаписейФинансовыеРезультаты, ЗаписейВНаборе, Истина);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Списание ошибок округления

&НаСервере
Процедура СписатьОшибкиОкругленияРасчетаСебестоимости(КонецПериода)

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	Таблица.Организация                           КАК Организация,
	|	Таблица.АналитикаУчетаНоменклатуры            КАК АналитикаУчетаНоменклатуры,
	|	Таблица.РазделУчета                           КАК РазделУчета,
	|	Таблица.ВидЗапасов                            КАК ВидЗапасов,
	|	СУММА(Таблица.Стоимость)                      КАК Стоимость,
	|	СУММА(Таблица.СуммаДопРасходов)               КАК СуммаДопРасходов,
	|	СУММА(Таблица.СтоимостьБезНДС)                КАК СтоимостьБезНДС,
	|	СУММА(Таблица.СуммаДопРасходовБезНДС)         КАК СуммаДопРасходовБезНДС,
	|	СУММА(Таблица.СтоимостьРегл)                  КАК СтоимостьРегл
	|ИЗ
	|	(ВЫБРАТЬ 
	|		Себестоимость.Организация                КАК Организация,
	|		Себестоимость.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Себестоимость.РазделУчета                КАК РазделУчета,
	|		Себестоимость.ВидЗапасов                 КАК ВидЗапасов,
	|		Себестоимость.СтоимостьОстаток           КАК Стоимость,
	|		0                                        КАК СуммаДопРасходов,
	|		0                                        КАК СтоимостьБезНДС,
	|		0                                        КАК СуммаДопРасходовБезНДС,
	|		0                                        КАК СтоимостьРегл
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров.Остатки(
	|				&КонецПериода,
	|				Организация В (&МассивОрганизаций)
	|		) КАК Себестоимость
	|	ГДЕ
	|		Себестоимость.КоличествоОстаток = 0
	|		И Себестоимость.СтоимостьОстаток МЕЖДУ -&ЗначениеПогрешности И &ЗначениеПогрешности
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	// Допрасходы
	|	ВЫБРАТЬ
	|		Себестоимость.Организация,
	|		Себестоимость.АналитикаУчетаНоменклатуры,
	|		Себестоимость.РазделУчета,
	|		Себестоимость.ВидЗапасов,
	|		0,
	|		Себестоимость.СуммаДопРасходовОстаток,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров.Остатки(
	|				&КонецПериода,
	|				Организация В (&МассивОрганизаций)
	|		) КАК Себестоимость
	|	ГДЕ
	|		(Себестоимость.КоличествоОстаток = 0
	|			И Себестоимость.СуммаДопРасходовОстаток МЕЖДУ -&ЗначениеПогрешности И &ЗначениеПогрешности)
	|		ИЛИ (Себестоимость.КоличествоОстаток > 0  И Себестоимость.СуммаДопРасходовОстаток МЕЖДУ -&ЗначениеПогрешности И 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Себестоимость.Организация                КАК Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                 КАК ВидЗапасов,
	|	0,
	|	0,
	|	ВЫБОР
	|		КОГДА Себестоимость.СтоимостьБезНДСОстаток МЕЖДУ -&ЗначениеПогрешности И &ЗначениеПогрешности
	|			ТОГДА Себестоимость.СтоимостьБезНДСОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА Себестоимость.СуммаДопРасходовБезНДСОстаток МЕЖДУ -&ЗначениеПогрешности И &ЗначениеПогрешности
	|			ТОГДА Себестоимость.СуммаДопРасходовБезНДСОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК СуммаДопРасходовБезНДС,
	|	ВЫБОР
	|		КОГДА Себестоимость.СтоимостьРеглОстаток МЕЖДУ -&ЗначениеПогрешности И &ЗначениеПогрешности
	|			ТОГДА Себестоимость.СтоимостьРеглОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ                                    КАК СтоимостьРегл
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(
	|				&КонецПериода,
	|				Организация В (&МассивОрганизаций)
	|	) КАК Себестоимость
	|ГДЕ
	|	Себестоимость.КоличествоОстаток = 0
	|	И (Себестоимость.СтоимостьБезНДСОстаток МЕЖДУ -&ЗначениеПогрешности И &ЗначениеПогрешности
	|			ИЛИ Себестоимость.СуммаДопРасходовБезНДСОстаток МЕЖДУ -&ЗначениеПогрешности И &ЗначениеПогрешности
	|			ИЛИ Себестоимость.СтоимостьРеглОстаток МЕЖДУ -&ЗначениеПогрешности И &ЗначениеПогрешности)
	|
	|	) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.РазделУчета,
	|	Таблица.АналитикаУчетаНоменклатуры,
	|	Таблица.ВидЗапасов,
	|	Таблица.Организация
	|
	|ИМЕЮЩИЕ 
	|	СУММА(Таблица.Стоимость) <> 0
	|	ИЛИ
	|	СУММА(Таблица.СуммаДопРасходов) <> 0
	|	ИЛИ
	|	СУММА(Таблица.СтоимостьБезНДС) <> 0
	|	ИЛИ
	|	СУММА(Таблица.СуммаДопРасходовБезНДС) <> 0
	|	ИЛИ
	|	СУММА(Таблица.СтоимостьРегл) <> 0
	|	
	|");
	Запрос.УстановитьПараметр("КонецПериода",      Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("МассивОрганизаций", мМассивОрганизаций);
	ЗначениеПогрешности = 1;
	Запрос.УстановитьПараметр("ЗначениеПогрешности", ЗначениеПогрешности);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;

	НаборЗаписейСебестоимость = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей();
	НаборЗаписейСебестоимость.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборЗаписейСебестоимость.ДополнительныеСвойства.Вставить("НеОбновлятьСтоимость");

	СоответствиеПрочихРасходов = Новый Соответствие;
	ЗаписейВНаборе      = 0;

	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл

		ЗаписейВНаборе = ЗаписейВНаборе + 1;

		ЗаписьСебестоимость = НаборЗаписейСебестоимость.Добавить();
		ЗаписьСебестоимость.ВидДвижения = ВидДвиженияНакопления.Расход;
		ЗаписьСебестоимость.Период      = КонецПериода;
		ЗаполнитьЗначенияСвойств(ЗаписьСебестоимость, Выборка);

		ЗаписатьНаборЗаписей(НаборЗаписейСебестоимость, ЗаписейВНаборе);

		Если Выборка.Стоимость + Выборка.СуммаДопРасходов <> 0 Тогда

			НакопленнаяСумма = СоответствиеПрочихРасходов.Получить(Выборка.Организация);
			Если НакопленнаяСумма = Неопределено Тогда
				НакопленнаяСумма = 0;
			КонецЕсли;
			СоответствиеПрочихРасходов.Вставить(Выборка.Организация, НакопленнаяСумма + Выборка.Стоимость + Выборка.СуммаДопРасходов);

		КонецЕсли;

	КонецЦикла;
	ЗаписатьНаборЗаписей(НаборЗаписейСебестоимость, ЗаписейВНаборе, Истина);

	Если СоответствиеПрочихРасходов.Количество() <> 0 Тогда

		НаборЗаписейПрочиеРасходы = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
		НаборЗаписейПрочиеРасходы.Отбор.Регистратор.Установить(ДокументСсылка);
		ЗаписейВНаборе      = 0;

		Для Каждого Элемент Из СоответствиеПрочихРасходов Цикл

			ЗаписейВНаборе = ЗаписейВНаборе + 1;

			ЗаписьПрочиеРасходы = НаборЗаписейПрочиеРасходы.Добавить();
			ЗаписьПрочиеРасходы.ВидДвижения    = ВидДвиженияНакопления.Приход;
			ЗаписьПрочиеРасходы.Период         = КонецПериода;
			ЗаписьПрочиеРасходы.Организация    = Элемент.Ключ;
			ЗаписьПрочиеРасходы.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости;
			ЗаписьПрочиеРасходы.Сумма          = Элемент.Значение;

		КонецЦикла;
		ЗаписатьНаборЗаписей(НаборЗаписейПрочиеРасходы, ЗаписейВНаборе, Истина);

	КонецЕсли;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Процедуры корректировки стоимости


&НаСервере
Процедура СкорректироватьСтомостьСписанияЗапасов(СтруктураПериод)

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	ТаблицаКорректировки.Период                        КАК Период,
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.РазделУчета                   КАК РазделУчета,
	|	ТаблицаКорректировки.ВидЗапасов                    КАК ВидЗапасов,
	|	ЕСТЬNULL(ТаблицаКорректировки.ВидЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
	|	ТаблицаКорректировки.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаКорректировки.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаКорректировки.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаКорректировки.Подразделение                 КАК Подразделение,
	|	ТаблицаКорректировки.АналитикаРасходов             КАК АналитикаРасходов,
	|	ТаблицаКорректировки.СтатьяРасходовСписания        КАК СтатьяРасходовСписания,
	|	ТаблицаКорректировки.СтатьяДоходов                 КАК СтатьяДоходов,
	|	ТаблицаКорректировки.АналитикаДоходов              КАК АналитикаДоходов,
	|	ВЫБОР КОГДА ТаблицаКорректировки.ХозяйственнаяОперация В (&МассивОперацийПередачи) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                              КАК ЭтоПередачаМеждуОрганизациями,
	|	ТаблицаКорректировки.КорСтоимость                  КАК КорСтоимость,
	|	ВЫРАЗИТЬ(
	|		ТаблицаКорректировки.Количество
	|			* СтоимостьТоваров.Стоимость  КАК ЧИСЛО(15,2))
	|		 - ТаблицаКорректировки.Стоимость              КАК Стоимость,
	|
	|	ВЫРАЗИТЬ(
	|		ТаблицаКорректировки.Количество
	|			* СтоимостьТоваров.СтоимостьБезНДС  КАК ЧИСЛО(15,2))
	|		 - ТаблицаКорректировки.СтоимостьБезНДС        КАК СтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(
	|		ТаблицаКорректировки.Количество
	|			* СтоимостьТоваров.СтоимостьДопРасходы
	|		КАК ЧИСЛО(15,2))                            КАК СуммаДопРасходов,
	|
	|	ВЫРАЗИТЬ(
	|		ТаблицаКорректировки.Количество
	|			* СтоимостьТоваров.СтоимостьДопРасходыБезНДС
	|		КАК ЧИСЛО(15,2))                            КАК СуммаДопРасходовБезНДС,
	|
	|	ВЫРАЗИТЬ(
	|		ТаблицаКорректировки.Количество
	|			* СтоимостьТоваров.СтоимостьРегл
	|		КАК ЧИСЛО(15,2))                            КАК СтоимостьРегл
	|	
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(УчетСебестоимости.Период, ДЕНЬ)    КАК Период,
	|		УчетСебестоимости.Организация                   КАК Организация,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.РазделУчета                   КАК РазделУчета,
	|		УчетСебестоимости.ВидЗапасов                    КАК ВидЗапасов,
	|		УчетСебестоимости.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|		УчетСебестоимости.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.КорРазделУчета                КАК КорРазделУчета,
	|		УчетСебестоимости.КорВидЗапасов                 КАК КорВидЗапасов,
	|		УчетСебестоимости.КорОрганизация                КАК КорОрганизация,
	|		УчетСебестоимости.Подразделение                 КАК Подразделение,
	|		УчетСебестоимости.АналитикаРасходов             КАК АналитикаРасходов,
	|		УчетСебестоимости.СтатьяРасходовСписания        КАК СтатьяРасходовСписания,
	|		УчетСебестоимости.СтатьяДоходов                 КАК СтатьяДоходов,
	|		УчетСебестоимости.АналитикаДоходов              КАК АналитикаДоходов,
	|		СУММА(УчетСебестоимости.Количество)             КАК Количество,
	|		СУММА(УчетСебестоимости.Стоимость)              КАК Стоимость,
	|		СУММА(УчетСебестоимости.СтоимостьБезНДС)        КАК СтоимостьБезНДС,
	|		СУММА(УчетСебестоимости.КорСтоимость)           КАК КорСтоимость
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК УчетСебестоимости
	|	ГДЕ
	|		УчетСебестоимости.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И УчетСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И УчетСебестоимости.Организация В(&МассивОрганизаций)
	|		И УчетСебестоимости.Активность
	|	
	|	СГРУППИРОВАТЬ ПО
	|		УчетСебестоимости.СтатьяДоходов,
	|		УчетСебестоимости.КорАналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.АналитикаДоходов,
	|		УчетСебестоимости.СтатьяРасходовСписания,
	|		УчетСебестоимости.КорВидЗапасов,
	|		УчетСебестоимости.АналитикаРасходов,
	|		УчетСебестоимости.КорРазделУчета,
	|		УчетСебестоимости.КорОрганизация,
	|		УчетСебестоимости.Подразделение,
	|		КОНЕЦПЕРИОДА(УчетСебестоимости.Период, ДЕНЬ),
	|		УчетСебестоимости.ВидЗапасов,
	|		УчетСебестоимости.ХозяйственнаяОперация,
	|		УчетСебестоимости.РазделУчета,
	|		УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.Организация
	|	) КАК ТаблицаКорректировки
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ПО 
	|			СтоимостьТоваров.АналитикаУчетаНоменклатуры = ТаблицаКорректировки.АналитикаУчетаНоменклатуры
	|			И СтоимостьТоваров.ВидЗапасов               = ТаблицаКорректировки.ВидЗапасов
	|			И СтоимостьТоваров.Организация              = ТаблицаКорректировки.Организация
	|			И СтоимостьТоваров.Регистратор = &Регистратор
	|");
	Запрос.УстановитьПараметр("Регистратор",            ДокументСсылка);
	Запрос.УстановитьПараметр("МассивОрганизаций",      мМассивОрганизаций);
	Запрос.УстановитьПараметр("МассивОперацийПередачи", МассивОперацийПередачиТоваров());

	НаборСебестоимостьТоваров = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей();
	НаборСебестоимостьТоваров.Отбор.Регистратор.Установить(ДокументСсылка);
	НаборСебестоимостьТоваров.ДополнительныеСвойства.Вставить("НеОбновлятьСтоимость");
	КоличествоСебестоимостьТоваров = 0;

	НаборПрочиеРасходы = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
	НаборПрочиеРасходы.Отбор.Регистратор.Установить(ДокументСсылка);
	КоличествоПрочиеРасходы = 0;

	НаборПрочиеДоходы = РегистрыНакопления.ПрочиеДоходы.СоздатьНаборЗаписей();
	НаборПрочиеДоходы.Отбор.Регистратор.Установить(ДокументСсылка);
	КоличествоПрочиеДоходы = 0;

	День = 24 * 60 * 60;

	Период = Неопределено;
	Пока Истина Цикл

		Если Период = Неопределено Тогда
			Период = СтруктураПериод.НачалоПериода;
		Иначе
			Период = НачалоДня(Период + День);
		КонецЕсли;

		Если КонецДня(Период) > КонецДня(СтруктураПериод.КонецПериода) Тогда
			Прервать;
		КонецЕсли;

		Запрос.УстановитьПараметр("КонецПериода",  КонецДня(Период));
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Период));
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			Продолжить;
		КонецЕсли;

		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл

			// Корректировка списания товаров
			СформироватьДвижениеСебестоимостьТоваров(НаборСебестоимостьТоваров,
					Выборка,
					ВидДвиженияНакопления.Расход,
					КоличествоСебестоимостьТоваров);

			// Если есть корраздел - необходимо скорректировать стоимость в корчасти.
			Если ЗначениеЗаполнено(Выборка.КорРазделУчета) Тогда

				СформироватьКорДвижениеСебестоимостьТоваров(НаборСебестоимостьТоваров,
						Выборка,
						КоличествоСебестоимостьТоваров);
			КонецЕсли;
				
			// Сторнирование себестоимости товаров по управленческой организации.
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет Тогда

				СформироватьДвижениеСебестоимостьТоваровСторноВУпрУчете(НаборСебестоимостьТоваров,
					Выборка,
					КоличествоСебестоимостьТоваров);

			КонецЕсли;

			// Корректировка списания товаров на затраты в регистре учет прочих расходов.
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваров
				Или Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию
				Или Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию
				Или Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании Тогда

				СформироватьДвиженияПрочиеРасходы(НаборПрочиеРасходы,
						Выборка,
						Выборка.Стоимость+ Выборка.СуммаДопРасходов,
						КоличествоПрочиеРасходы);

			КонецЕсли;

			// Формирование прочих доходов\расходов при пересортице
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой Тогда

				СуммаПереоценки = Выборка.Стоимость + Выборка.СуммаДопРасходов - Выборка.КорСтоимость;
				Если СуммаПереоценки > 0 Тогда 

					СформироватьДвиженияПрочиеРасходы(НаборПрочиеРасходы,
							Выборка,
							СуммаПереоценки,
							КоличествоПрочиеРасходы);

				ИначеЕсли СуммаПереоценки < 0 Тогда

					СформироватьДвиженияПрочиеДоходы(НаборПрочиеДоходы,
							Выборка,
							- СуммаПереоценки,
							КоличествоПрочиеДоходы);

				КонецЕсли;

			КонецЕсли;

			// Формирование прочих расходов при порче
			Если Выборка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой Тогда

				СуммаПереоценки = Выборка.Стоимость + Выборка.СуммаДопРасходов - Выборка.КорСтоимость;

				Если СуммаПереоценки <> 0 Тогда
					СформироватьДвиженияПрочиеРасходы(НаборПрочиеРасходы,
							Выборка,
							СуммаПереоценки,
							КоличествоПрочиеРасходы);
				КонецЕсли;

			КонецЕсли;

			// Запись наборов.
			ЗаписатьНаборЗаписей(НаборСебестоимостьТоваров, КоличествоСебестоимостьТоваров);
			ЗаписатьНаборЗаписей(НаборПрочиеРасходы, КоличествоПрочиеРасходы);
			ЗаписатьНаборЗаписей(НаборПрочиеДоходы, КоличествоПрочиеДоходы);

		КонецЦикла;

	КонецЦикла;

	ЗаписатьНаборЗаписей(НаборСебестоимостьТоваров, КоличествоСебестоимостьТоваров, Истина);
	ЗаписатьНаборЗаписей(НаборПрочиеРасходы, КоличествоПрочиеРасходы, Истина);
	ЗаписатьНаборЗаписей(НаборПрочиеДоходы, КоличествоПрочиеДоходы, Истина);

КонецПроцедуры
 
&НаСервере
Функция МассивОперацийВозвратаНеТребующихКорректировки()

	МассивОпераций = Новый Массив;
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату);
	
	Возврат МассивОпераций;

КонецФункции

&НаСервере
Процедура СкорректироватьСтоимостьПродаж(СтруктураПериод)

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Себестоимость.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВтРегистраторы
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	Себестоимость.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Себестоимость.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Себестоимость.Организация В(&МассивОрганизаций)
	|	И Себестоимость.ХозяйственнаяОперация В(&МассивОперацийВозвратПрошлыхПериодов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|/////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаКорректировки.Период                     КАК Период,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.ЗаказКлиента               КАК ЗаказКлиента,
	|	ТаблицаКорректировки.АналитикаУчетаПоПартнерам  КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаКорректировки.Подразделение              КАК Подразделение,
	|	ТаблицаКорректировки.ТипЗапасов                 КАК ТипЗапасов,
	|	ТаблицаКорректировки.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаКорректировки.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
	|	ВЫРАЗИТЬ(
	|		ТаблицаКорректировки.Количество
	|			* СтоимостьТоваров.Стоимость            КАК ЧИСЛО(15,2))
	|		              КАК Стоимость,
	|
	|	ВЫРАЗИТЬ(
	|		ТаблицаКорректировки.Количество
	|			* СтоимостьТоваров.СтоимостьБезНДС      КАК ЧИСЛО(15,2))
	|		         КАК СтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(
	|		ТаблицаКорректировки.Количество
	|			* СтоимостьТоваров.СтоимостьДопРасходы
	|		КАК ЧИСЛО(15,2))                            КАК СуммаДопРасходов,
	|
	|	ВЫРАЗИТЬ(
	|		ТаблицаКорректировки.Количество
	|			* СтоимостьТоваров.СтоимостьДопРасходыБезНДС
	|		КАК ЧИСЛО(15,2))                            КАК СуммаДопРасходовБезНДС,
	|
	|	ВЫРАЗИТЬ(
	|		ТаблицаКорректировки.Количество
	|			* СтоимостьТоваров.СтоимостьРегл
	|		КАК ЧИСЛО(15,2))                            КАК СтоимостьРегл
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(Продажи.Период, ДЕНЬ) КАК Период,
	|		АналитикаПартнеров.Организация     КАК Организация,
	|		Продажи.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Продажи.ЗаказКлиента               КАК ЗаказКлиента,
	|		Продажи.АналитикаУчетаПоПартнерам  КАК АналитикаУчетаПоПартнерам,
	|		Продажи.Подразделение              КАК Подразделение,
	|		Продажи.ТипЗапасов                 КАК ТипЗапасов,
	|		Продажи.ВидЗапасов                 КАК ВидЗапасов,
	|		Продажи.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
	|		СУММА(Продажи.Количество)          КАК Количество
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК Продажи
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнеров
	|			ПО Продажи.АналитикаУчетаПоПартнерам = АналитикаПартнеров.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтРегистраторы КАК РегистраторыПрошлыхПериодов
	|			По Продажи.Регистратор = РегистраторыПрошлыхПериодов.Регистратор
	|
	|	ГДЕ
	|		Продажи.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И Продажи.Активность
	|		И Продажи.ХозяйственнаяОперация В (&МассивОперацийРеализации)
	|		И РегистраторыПрошлыхПериодов.Регистратор ЕСТЬ NULL
	|	
	|	СГРУППИРОВАТЬ ПО
	|		КОНЕЦПЕРИОДА(Продажи.Период, ДЕНЬ),
	|		Продажи.АналитикаУчетаНоменклатуры,
	|		Продажи.ЗаказКлиента,
	|		Продажи.АналитикаУчетаПоПартнерам,
	|		Продажи.Подразделение,
	|		Продажи.ТипЗапасов,
	|		Продажи.ВидЗапасов,
	|		Продажи.ХозяйственнаяОперация,
	|		АналитикаПартнеров.Организация
	|	) КАК ТаблицаКорректировки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ПО ТаблицаКорректировки.АналитикаУчетаНоменклатуры = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|			И ТаблицаКорректировки.ВидЗапасов              = СтоимостьТоваров.ВидЗапасов
	|			И ТаблицаКорректировки.Организация             = СтоимостьТоваров.Организация
	|			И (СтоимостьТоваров.Регистратор = &Регистратор)
	|");
	Запрос.УстановитьПараметр("Регистратор",       ДокументСсылка);
	Запрос.УстановитьПараметр("МассивОрганизаций", мМассивОрганизаций);
	Запрос.УстановитьПараметр("МассивОперацийРеализации", МассивОперацийРеализации());
	Запрос.УстановитьПараметр("МассивОперацийВозвратПрошлыхПериодов", МассивОперацийВозвратаНеТребующихКорректировки());

	НаборВыручкаИСебестоимостьПродаж = РегистрыНакопления.ВыручкаИСебестоимостьПродаж.СоздатьНаборЗаписей();
	НаборВыручкаИСебестоимостьПродаж.Отбор.Регистратор.Установить(ДокументСсылка);
	КоличествоВыручкаИСебестоимостьПродаж = 0;

	День = 24*60*60;

	Период = Неопределено;
	Пока Истина Цикл

		Если Период = Неопределено Тогда
			Период = СтруктураПериод.НачалоПериода;
		Иначе
			Период = НачалоДня(Период + День);
		КонецЕсли;

		Если КонецДня(Период) > КонецДня(СтруктураПериод.КонецПериода) Тогда
			Прервать;
		КонецЕсли;

		Запрос.УстановитьПараметр("КонецПериода",  КонецДня(Период));
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Период));
		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			Продолжить;
		КонецЕсли;

		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл

			// Корректировка себестоимости продаж по хоз операциям продажи.
			СформироватьДвиженияВыручкаИСебестоимостьПродаж(НаборВыручкаИСебестоимостьПродаж,
					Выборка,
					КоличествоВыручкаИСебестоимостьПродаж);

			// Запись наборов.
			ЗаписатьНаборЗаписей(НаборВыручкаИСебестоимостьПродаж, КоличествоВыручкаИСебестоимостьПродаж);

		КонецЦикла;

	КонецЦикла;

	ЗаписатьНаборЗаписей(НаборВыручкаИСебестоимостьПродаж, КоличествоВыручкаИСебестоимостьПродаж, Истина);

КонецПроцедуры

&НаСервере
Функция МассивОперацийПередачиТоваров()

	Массив = Новый Массив;
	Массив.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	Возврат Массив;

КонецФункции

&НаСервере
Функция МассивОперацийРеализации()

	МассивОпераций = Новый Массив;
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияВРозницу);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.СторноРеализации);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	Возврат МассивОпераций;

КонецФункции

&НаСервере
Функция МассивОперацийВозвратПрошлыхПериодов()

	МассивОпераций = Новый Массив;
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов);
	Возврат МассивОпераций;

КонецФункции


&НаСервере
Процедура СкорректироватьСтомостьВозвратовПрошлыхПериодов(СтруктураПериод, МенеджерВременныхТаблиц, ПредварительныйРасчет)

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	КонецПериода(Себестоимость.Период, ДЕНЬ)          КАК Период,
	|	Себестоимость.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                         КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                          КАК ВидЗапасов,
	// В кор. части могут быть данные об исходной аналитике продажи (если возврат идет на другой склад)
	|	ВЫБОР КОГДА Себестоимость.КорВидЗапасов <> Значение(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			Себестоимость.КорВидЗапасов
	|		ИНАЧЕ
	|			Себестоимость.ВидЗапасов
	|	КОНЕЦ                                             КАК ВидыЗапасовДляЦены,
	// В кор. части могут быть данные об исходной виде запасов продажи (в случае возврата проданного по интерк. товара)
	|	ВЫБОР КОГДА Себестоимость.КорАналитикаУчетаНоменклатуры <> Значение(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) ТОГДА
	|			Себестоимость.КорАналитикаУчетаНоменклатуры
	|		ИНАЧЕ
	|			Себестоимость.АналитикаУчетаНоменклатуры
	|	КОНЕЦ                                             КАК АналитикаНоменклатурыДляЦены,
	|	СУММА(Себестоимость.Количество)                   КАК Количество,
	|
	|	СУММА(Себестоимость.Стоимость)                    КАК Стоимость,
	|	СУММА(Себестоимость.СтоимостьБезНДС)              КАК СтоимостьБезНДС,
	|
	|	СУММА(Себестоимость.СуммаДопРасходов)             КАК СуммаДопРасходов,
	|	СУММА(Себестоимость.СуммаДопРасходовБезНДС)       КАК СуммаДопРасходовБезНДС,
	|
	|	СУММА(Себестоимость.СтоимостьРегл)                КАК СтоимостьРегл,
	|
	|	Себестоимость.ХозяйственнаяОперация               КАК ХозяйственнаяОперация,
	|	Себестоимость.КорАналитикаУчетаНоменклатуры       КАК КорАналитикаУчетаНоменклатуры,
	|	Себестоимость.КорРазделУчета                      КАК КорРазделУчета,
	|	Себестоимость.КорВидЗапасов                       КАК КорВидЗапасов,
	|	Себестоимость.АналитикаУчетаПоПартнерам           КАК АналитикаУчетаПоПартнерам,
	|	Себестоимость.ЗаказКлиента                        КАК ЗаказКлиента,
	|	Себестоимость.Подразделение                       КАК Подразделение,
	|	Себестоимость.Организация                         КАК Организация,
	|	Себестоимость.КорОрганизация                      КАК КорОрганизация,
	|	НАЧАЛОПЕРИОДА(Себестоимость.ПериодПродажи, МЕСЯЦ) КАК ПериодРеализации
	|
	|ПОМЕСТИТЬ ВтВозвратыПрошлыхПериодов
	|
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	Себестоимость.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Себестоимость.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Себестоимость.Организация В (&МассивОрганизаций)
	|	И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратПрошлыхПериодов)
	|	
	|СГРУППИРОВАТЬ ПО
	|	КонецПериода(Себестоимость.Период, ДЕНЬ),
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Подразделение,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА Себестоимость.КорАналитикаУчетаНоменклатуры <> Значение(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|		ТОГДА Себестоимость.КорАналитикаУчетаНоменклатуры
	|	ИНАЧЕ Себестоимость.АналитикаУчетаНоменклатуры КОНЕЦ,
	|	ВЫБОР КОГДА Себестоимость.КорВидЗапасов <> Значение(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			Себестоимость.КорВидЗапасов
	|		ИНАЧЕ
	|			Себестоимость.ВидЗапасов
	|	КОНЕЦ,
	|	Себестоимость.КорАналитикаУчетаНоменклатуры,
	|	Себестоимость.ЗаказКлиента,
	|	Себестоимость.АналитикаУчетаПоПартнерам,
	|	Себестоимость.ХозяйственнаяОперация,
	|	Себестоимость.КорРазделУчета,
	|	Себестоимость.КорВидЗапасов,
	|	НАЧАЛОПЕРИОДА(Себестоимость.ПериодПродажи, МЕСЯЦ),
	|	Себестоимость.Организация,
	|	Себестоимость.КорОрганизация
	|;
	|/////////////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвратов.Период                        КАК Период,
	|	ТаблицаВозвратов.Организация                   КАК Организация,
	|	ТаблицаВозвратов.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаВозвратов.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.РазделУчета                   КАК РазделУчета,
	|	ТаблицаВозвратов.ВидЗапасов                    КАК ВидЗапасов,
	|	ЕСТЬNULL(ТаблицаВозвратов.ВидЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
	|	ТаблицаВозвратов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаВозвратов.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаВозвратов.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаВозвратов.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаВозвратов.ЗаказКлиента                  КАК ЗаказКлиента,
	|	ТаблицаВозвратов.Подразделение                 КАК Подразделение,
	|	ТаблицаВозвратов.ПериодРеализации              КАК ПериодРеализации,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходовСписания, 
	|	ВЫРАЗИТЬ(
	|			ТаблицаВозвратов.Количество
	|			 * СтоимостьТоваров.Стоимость
	|			 - ТаблицаВозвратов.Стоимость
	|				КАК ЧИСЛО(15, 2))                  КАК Стоимость,
	|	ВЫРАЗИТЬ(
	|			ТаблицаВозвратов.Количество
	|			 * СтоимостьТоваров.СтоимостьБезНДС
	|			 - ТаблицаВозвратов.СтоимостьБезНДС
	|				КАК ЧИСЛО(15, 2))                  КАК СтоимостьБезНДС,
	|
	|	ВЫРАЗИТЬ(
	|			ТаблицаВозвратов.Количество
	|			* СтоимостьТоваров.СтоимостьДопРасходы
	|			- ТаблицаВозвратов.СуммаДопРасходов 
	|				КАК ЧИСЛО(15, 2))                  КАК СуммаДопРасходов,
	|	ВЫРАЗИТЬ(
	|			ТаблицаВозвратов.Количество
	|			* СтоимостьТоваров.СтоимостьДопРасходыБезНДС
	|			- ТаблицаВозвратов.СуммаДопРасходовБезНДС 
	|				КАК ЧИСЛО(15, 2))                  КАК СуммаДопРасходовБезНДС,
	|
	|	ВЫРАЗИТЬ(
	|			ТаблицаВозвратов.Количество
	|			 * СтоимостьТоваров.СтоимостьРегл
	|			- ТаблицаВозвратов.СтоимостьРегл 
	|			КАК ЧИСЛО(15, 2))                      КАК СтоимостьРегл
	|
	|ИЗ
	|	ВтВозвратыПрошлыхПериодов КАК ТаблицаВозвратов
	// Соединение с ценой периода продажи
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ПО ТаблицаВозвратов.АналитикаНоменклатурыДляЦены = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|			И ТаблицаВозвратов.Организация               = СтоимостьТоваров.Организация
	|			И ТаблицаВозвратов.ПериодРеализации          = СтоимостьТоваров.Период
	|			И ТаблицаВозвратов.ВидыЗапасовДляЦены        = СтоимостьТоваров.ВидЗапасов
	|");
	Запрос.УстановитьПараметр("МассивОперацийВозвратПрошлыхПериодов", МассивОперацийВозвратПрошлыхПериодов());
	Запрос.УстановитьПараметр("МассивОрганизаций", мМассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода",     СтруктураПериод.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",      СтруктураПериод.КонецПериода);
	Результат = Запрос.Выполнить();

	ВидДвиженияСтоимости = ВидДвиженияНакопления.Приход;

	ТаблицаВозвратов = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаВозвратов.Колонки.Удалить("Активность");
	ТаблицаВозвратов.Колонки.Удалить("НомерСтроки");
	ТаблицаВозвратов.Колонки.Удалить("МоментВремени");
	ТаблицаВозвратов.Колонки.Удалить("Регистратор");

	Если Не ПредварительныйРасчет Тогда

		// Корректировка стоимости.
		НаборСебестоимостьТоваров = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей();
		НаборСебестоимостьТоваров.Отбор.Регистратор.Установить(ДокументСсылка);
		НаборСебестоимостьТоваров.ДополнительныеСвойства.Вставить("НеОбновлятьСтоимость");

		НаборВыручкаИСебестоимостьПродаж = РегистрыНакопления.ВыручкаИСебестоимостьПродаж.СоздатьНаборЗаписей();
		НаборВыручкаИСебестоимостьПродаж.Отбор.Регистратор.Установить(ДокументСсылка);

		КоличествоСебестоимостьТоваров        = 0;
		КоличествоВыручкаИСебестоимостьПродаж = 0;

		ЗнакКорректировкиВыручки = -1;

		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл

			СформироватьДвижениеСебестоимостьТоваров(НаборСебестоимостьТоваров,
					Выборка,
					ВидДвиженияСтоимости,
					КоличествоСебестоимостьТоваров);

			ЗаписатьНаборЗаписей(НаборСебестоимостьТоваров, КоличествоСебестоимостьТоваров);

			СформироватьДвиженияВыручкаИСебестоимостьПродажВозврат(НаборВыручкаИСебестоимостьПродаж,
						Выборка,
						ЗнакКорректировкиВыручки,
						КоличествоВыручкаИСебестоимостьПродаж);

			ЗаписатьНаборЗаписей(НаборВыручкаИСебестоимостьПродаж, КоличествоВыручкаИСебестоимостьПродаж);

		КонецЦикла;

		ЗаписатьНаборЗаписей(НаборСебестоимостьТоваров, КоличествоСебестоимостьТоваров, Истина);
		ЗаписатьНаборЗаписей(НаборВыручкаИСебестоимостьПродаж, КоличествоВыручкаИСебестоимостьПродаж, Истина);

	Иначе

		КоличествоСебестоимостьТоваров = 0;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл

			СформироватьДвижениеСебестоимостьТоваров(ТаблицаВозвратов,
					Выборка,
					ВидДвиженияСтоимости,
					КоличествоСебестоимостьТоваров);

		КонецЦикла;

	КонецЕсли;

	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.*
	|ПОМЕСТИТЬ ВТВозвраты
	|ИЗ
	|	&ТаблицаВозвратов КАК Т
	|";
	Запрос.УстановитьПараметр("ТаблицаВозвратов", ТаблицаВозвратов);
	Запрос.Выполнить();

КонецПроцедуры

&НаСервере
Процедура СформироватьДвижениеСебестоимостьТоваров(НаборЗаписей, Выборка, ВидДвижения, СчетчикЗаписей)

	СчетчикЗаписей = СчетчикЗаписей + 1;
	// Кор. стоимость не включается в список полей.
	СтрокаПолейСебестоимость = "
	|Период, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация,
	|ХозяйственнаяОперация,
	|КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов,КорОрганизация,
	|Подразделение, АналитикаРасходов, СтатьяРасходовСписания, СтатьяДоходов, АналитикаДоходов";

	ЗаписьРасход = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(ЗаписьРасход, Выборка, СтрокаПолейСебестоимость);

	ЗаполнитьЗначенияСвойств(ЗаписьРасход, Выборка, 
		"Стоимость, СтоимостьБезНДС,
		|СуммаДопРасходов, СуммаДопРасходовБезНДС,
		|СтоимостьРегл");

	ЗаписьРасход.ВидДвижения = ВидДвижения;
	ЗаписьРасход.Количество  = 0;

КонецПроцедуры

&НаСервере
Процедура СформироватьДвижениеСебестоимостьТоваровСторноВУпрУчете(НаборЗаписей, Выборка, СчетчикЗаписей)

	СчетчикЗаписей = СчетчикЗаписей + 1;
	СтрокаПолейСебестоимость = "
	|Период, АналитикаУчетаНоменклатуры, РазделУчета, Организация,
	|ХозяйственнаяОперация,
	|Подразделение, АналитикаРасходов, СтатьяРасходовСписания";

	Запись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, Выборка, СтрокаПолейСебестоимость);
	Запись.ВидДвижения            = ВидДвиженияНакопления.Приход;
	Запись.Организация            = Справочники.Организации.УправленческаяОрганизация;
	Запись.ВидЗапасов             = Выборка.КорВидЗапасов;
	Запись.Стоимость              = Выборка.Стоимость;
	Запись.СуммаДопРасходов       = Выборка.СуммаДопРасходов;
	Запись.СтоимостьБезНДС        = Выборка.СтоимостьБезНДС;
	Запись.СуммаДопРасходовБезНДС = Выборка.СуммаДопРасходовБезНДС;
	Запись.СтоимостьРегл          = Выборка.СтоимостьРегл;
	Запись.Количество             = 0;

КонецПроцедуры

&НаСервере
Процедура СформироватьДвиженияВыручкаИСебестоимостьПродажВозврат(НаборЗаписей, Выборка, ЗнакКорректировки, СчетчикЗаписей)

	СчетчикЗаписей = СчетчикЗаписей + 1;
	СтрокаПолейВыручкаПродаж = "Период, Подразделение, АналитикаУчетаПоПартнерам, ЗаказКлиента, ТипЗапасов, ВидЗапасов, ХозяйственнаяОперация";

	Запись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, Выборка, СтрокаПолейВыручкаПродаж);

	Если ЗначениеЗаполнено(Выборка.КорАналитикаУчетаНоменклатуры) Тогда
		Запись.АналитикаУчетаНоменклатуры = Выборка.КорАналитикаУчетаНоменклатуры;
	Иначе
		Запись.АналитикаУчетаНоменклатуры = Выборка.АналитикаУчетаНоменклатуры;
	КонецЕсли;

	Запись.Себестоимость                             = ЗнакКорректировки*Выборка.Стоимость;
	Запись.СебестоимостьБезНДС                       = ЗнакКорректировки*Выборка.СтоимостьБезНДС;
	Запись.СуммаДополнительныхРасходов               = ЗнакКорректировки*Выборка.СуммаДопРасходов;
	Запись.СуммаДополнительныхРасходовБезНДС         = ЗнакКорректировки*Выборка.СуммаДопРасходовБезНДС;
	Запись.СебестоимостьРегл                         = ЗнакКорректировки*Выборка.СтоимостьРегл;

КонецПроцедуры

&НаСервере
Процедура СформироватьКорДвижениеСебестоимостьТоваров(НаборСебестоимостьТоваров, Выборка, СчетчикЗаписей)

	СчетчикЗаписей = СчетчикЗаписей + 1;
	СтрокаПолейСебестоимость = "Период, ХозяйственнаяОперация";

	Запись = НаборСебестоимостьТоваров.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, Выборка, СтрокаПолейСебестоимость);
	Запись.ВидДвижения                = ВидДвиженияНакопления.Приход;
	Запись.АналитикаУчетаНоменклатуры = Выборка.КорАналитикаУчетаНоменклатуры;
	Запись.РазделУчета                = Выборка.КорРазделУчета;
	Запись.ВидЗапасов                 = Выборка.КорВидЗапасов;
	Запись.Организация                = ?(ЗначениеЗаполнено(Выборка.КорОрганизация), Выборка.КорОрганизация, Выборка.Организация);

	Запись.Стоимость                  = Выборка.Стоимость;
	Запись.СтоимостьБезНДС            = Выборка.СтоимостьБезНДС;
	Запись.СуммаДопРасходов           = Выборка.СуммаДопРасходов;
	Запись.СуммаДопРасходовБезНДС     = Выборка.СуммаДопРасходовБезНДС;

	Если Не Выборка.ЭтоПередачаМеждуОрганизациями Тогда
		Запись.СтоимостьРегл = Выборка.СтоимостьРегл;
	Иначе
		Запись.СтоимостьРегл = 0;
	КонецЕсли;

	Запись.Количество    = 0;

КонецПроцедуры

&НаСервере
Процедура СформироватьДвиженияПрочиеРасходы(НаборПрочиеРасходы, Выборка, Сумма, СчетчикЗаписей)

	СчетчикЗаписей = СчетчикЗаписей + 1;
	СтрокаПолейПрочиерасходы = "Период, Организация, Подразделение, АналитикаРасходов, ХозяйственнаяОперация, АналитикаУчетаНоменклатуры";

	Запись = НаборПрочиеРасходы.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, Выборка, СтрокаПолейПрочиерасходы);
	Запись.ВидДвижения    = ВидДвиженияНакопления.Приход;
	Запись.Сумма          = Сумма;
	Запись.СтатьяРасходов = Выборка.СтатьяРасходовСписания;

КонецПроцедуры

&НаСервере
Процедура СформироватьДвиженияПрочиеДоходы(НаборПрочиеДоходы, Выборка, Сумма, СчетчикЗаписей)

	СчетчикЗаписей = СчетчикЗаписей + 1;
	СтрокаПолейПрочиерасходы = "Период, Организация, Подразделение, СтатьяДоходов, АналитикаДоходов, ХозяйственнаяОперация";

	Запись = НаборПрочиеДоходы.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, Выборка, СтрокаПолейПрочиерасходы);
	Запись.ВидДвижения    = ВидДвиженияНакопления.Приход;
	Запись.Сумма          = Сумма;

КонецПроцедуры

&НаСервере
Процедура СформироватьДвиженияВыручкаИСебестоимостьПродаж(НаборВыручкаИСебестоимостьПродаж, Выборка, СчетчикЗаписей)

	СчетчикЗаписей = СчетчикЗаписей + 1;
	СтрокаПолейВыручкаПродаж =  "Период, Подразделение, АналитикаУчетаНоменклатуры,
			|АналитикаУчетаПоПартнерам, ТипЗапасов, ВидЗапасов, ЗаказКлиента, ХозяйственнаяОперация";

	Запись = НаборВыручкаИСебестоимостьПродаж.Добавить();
	ЗаполнитьЗначенияСвойств(Запись, Выборка, СтрокаПолейВыручкаПродаж);

	Запись.Себестоимость       = Выборка.Стоимость;
	Запись.СебестоимостьБезНДС = Выборка.СтоимостьБезНДС;

	Запись.СебестоимостьРегл   = Выборка.СтоимостьРегл;

	Запись.СуммаДополнительныхРасходов       = Выборка.СуммаДопРасходов;
	Запись.СуммаДополнительныхРасходовБезНДС = Выборка.СуммаДопРасходовБезНДС;

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// Регистрация стоимости

&НаСервере
Процедура ЗарегистрироватьСтоимость(Период, МенеджерВременныхТаблиц, СтруктураРесурсов)

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	Таблица.Организация                                   КАК Организация,
	|	Таблица.АналитикаУчетаНоменклатуры                    КАК АналитикаУчетаНоменклатуры,
	|	Таблица.ВидЗапасов                                    КАК ВидЗапасов,
	|	СУММА(Таблица.Стоимость)                              КАК Стоимость,
	|	СУММА(Таблица.СтоимостьБезНДС)                        КАК СтоимостьБезНДС,
	|	СУММА(Таблица.СтоимостьДопРасходы)                    КАК СтоимостьДопРасходы,
	|	СУММА(Таблица.СтоимостьДопРасходыБезНДС)              КАК СтоимостьДопРасходыБезНДС,
	|	СУММА(Таблица.СтоимостьРегл)                          КАК СтоимостьРегл,
	|
	|	СУММА(Таблица.СтоимостьНовоеЗначение)                  КАК СтоимостьНовоеЗначение,
	|	СУММА(Таблица.СтоимостьБезНДСНовоеЗначение)            КАК СтоимостьБезНДСНовоеЗначение,
	|	СУММА(Таблица.СтоимостьДопРасходыНовоеЗначение)        КАК СтоимостьДопРасходыНовоеЗначение,
	|	СУММА(Таблица.СтоимостьДопРасходыБезНДСНовоеЗначение)  КАК СтоимостьДопРасходыБезНДСНовоеЗначение
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		УзлыКорректировки.Организация                КАК Организация,
	|		УзлыКорректировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		УзлыКорректировки.ВидЗапасов                 КАК ВидЗапасов,
	|		0                                            КАК Стоимость,
	|		0                                            КАК СтоимостьБезНДС,
	|		0                                            КАК СтоимостьДопРасходы,
	|		0                                            КАК СтоимостьДопРасходыБезНДС,
	|		0                                            КАК СтоимостьРегл,
	|		ТаблицаРешений.Стоимость                     КАК СтоимостьНовоеЗначение,
	|		ТаблицаРешений.СтоимостьБезНДС               КАК СтоимостьБезНДСНовоеЗначение,
	|		ТаблицаРешений.СтоимостьДопРасходы           КАК СтоимостьДопРасходыНовоеЗначение,
	|		ТаблицаРешений.СтоимостьДопРасходыБезНДС     КАК СтоимостьДопРасходыБезНДСНовоеЗначение
	|	ИЗ
	|		ВтТаблицаРешений КАК ТаблицаРешений
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтУзлыКорректировки КАК УзлыКорректировки
	|			ПО ТаблицаРешений.НомерУзла = УзлыКорректировки.НомерУзла
	|	ГДЕ
	|		(ТаблицаРешений.Стоимость <> 0
	|			ИЛИ ТаблицаРешений.СтоимостьБезНДС <> 0
	|			ИЛИ ТаблицаРешений.СтоимостьДопРасходы <> 0
	|			ИЛИ ТаблицаРешений.СтоимостьДопРасходыБезНДС <> 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтоимостьТоваров.Организация,
	|		СтоимостьТоваров.АналитикаУчетаНоменклатуры,
	|		СтоимостьТоваров.ВидЗапасов,
	|		СтоимостьТоваров.Стоимость,
	|		СтоимостьТоваров.СтоимостьБезНДС,
	|		СтоимостьТоваров.СтоимостьДопРасходы,
	|		СтоимостьТоваров.СтоимостьДопРасходыБезНДС,
	|		СтоимостьТоваров.СтоимостьРегл,
	|		0,
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|	ГДЕ
	|		СтоимостьТоваров.Регистратор = &Регистратор) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.АналитикаУчетаНоменклатуры,
	|	Таблица.Организация,
	|	Таблица.ВидЗапасов
	|");
	// Ноль в стоимости может быть если за текущий месяц оценка производится по ФИФО
	// но расхода товара со слада не было.
	Запрос.УстановитьПараметр("Регистратор", ДокументСсылка);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	ЕстьСтоимостьБезНДС           = СтруктураРесурсов.Свойство("СтоимостьБезНДС");
	ЕстьСтоимостьДопРасходы       = СтруктураРесурсов.Свойство("СтоимостьДопРасходы");
	ЕстьСтоимостьДопРасходыБезНДС = СтруктураРесурсов.Свойство("СтоимостьДопРасходыБезНДС");

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		Запись = ДокументОбъект.Движения.СтоимостьТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);

		Запись.Период                       = Период;
		Запись[СтруктураРесурсов.Стоимость] = Выборка.СтоимостьНовоеЗначение;

		Если ЕстьСтоимостьБезНДС Тогда 
			Запись[СтруктураРесурсов.СтоимостьБезНДС] = Выборка.СтоимостьБезНДСНовоеЗначение;
		КонецЕсли;

		Если ЕстьСтоимостьДопРасходы Тогда 
			Запись[СтруктураРесурсов.СтоимостьДопРасходы] = Выборка.СтоимостьДопРасходыНовоеЗначение;
		КонецЕсли;

		Если ЕстьСтоимостьДопРасходыБезНДС Тогда 
			Запись[СтруктураРесурсов.СтоимостьДопРасходыБезНДС] = Выборка.СтоимостьДопРасходыБезНДСНовоеЗначение;
		КонецЕсли;

	КонецЦикла;

	ДокументОбъект.Движения.СтоимостьТоваров.Записать(Истина);
	ДокументОбъект.Движения.СтоимостьТоваров.Очистить();

КонецПроцедуры

&НаСервере
Процедура УдалитьДвижения()

	Для Каждого Элемент ИЗ ДокументОбъект.Движения Цикл

		Элемент.Очистить();
		Элемент.Записать();

	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ВыполнитьРасчет() Экспорт

	УстановитьПривилегированныйРежим(Истина);

	Если Не ДокументОбъект.Проведен Тогда

		Проведен = Истина;

	КонецЕсли;

	ЭтоНовый = ДокументОбъект.ЭтоНовый();
	//Если Модифицированность() Тогда

	//	Записать();

	//КонецЕсли;

	Если Не ЭтоНовый Тогда
		УдалитьДвижения();
	КонецЕсли;

	ПровестиДокумент();

КонецПроцедуры

&НаСервере
Процедура РаспределитьРасходыНаСебестоимость(КонецПериода, МенеджерВременныхТаблиц, ПредварительныйРасчет)

	ТаблицаДопРасходов = Документы.РаспределениеРасходовНаСебестоимостьТоваров.ТаблицаРаспределенияРасходовНаСебестоимостьТоваров(
							КонецПериода, мМассивОрганизаций);

	Если Не ПредварительныйРасчет Тогда 

		НаборЗаписейПрочиеРасходы = РегистрыНакопления.ПрочиеРасходы.СоздатьНаборЗаписей();
		НаборЗаписейПрочиеРасходы.Отбор.Регистратор.Установить(ДокументСсылка);
		ЗаписейВНабореПрочиеРасходы = 0;

		НаборЗаписейСебестоимость = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей();
		НаборЗаписейСебестоимость.Отбор.Регистратор.Установить(ДокументСсылка);
		ЗаписейВНабореСебестоимость = 0;

		Для Каждого СтрокаТаб Из ТаблицаДопРасходов Цикл

			ЗаписейВНабореПрочиеРасходы = ЗаписейВНабореПрочиеРасходы + 1;
			ЗаписейВНабореСебестоимость = ЗаписейВНабореСебестоимость + 1;

			ЗаписьПрочиеРасходы = НаборЗаписейПрочиеРасходы.Добавить();
			ЗаписьПрочиеРасходы.ВидДвижения    = ВидДвиженияНакопления.Расход;
			ЗаписьПрочиеРасходы.Период         = КонецПериода;
			ЗаполнитьЗначенияСвойств(ЗаписьПрочиеРасходы, СтрокаТаб);
			ЗаписьПрочиеРасходы.СтатьяРасходов = СтрокаТаб.СтатьяРасходовСписания;
			ЗаписьПрочиеРасходы.Сумма          = СтрокаТаб.СуммаДопРасходов;
			ЗаписьПрочиеРасходы.СуммаБезНДС    = СтрокаТаб.СуммаДопРасходовБезНДС;
			ЗаписьПрочиеРасходы.СуммаРегл      = СтрокаТаб.СтоимостьРегл;
			
			ЗаписьСебестоимость = НаборЗаписейСебестоимость.Добавить();
			ЗаписьСебестоимость.ВидДвижения    = ВидДвиженияНакопления.Приход;
			ЗаписьСебестоимость.Период         = КонецПериода;
			ЗаписьСебестоимость.РазделУчета    = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах;
			ЗаполнитьЗначенияСвойств(ЗаписьСебестоимость, СтрокаТаб);

		КонецЦикла;

		ЗаписатьНаборЗаписей(НаборЗаписейПрочиеРасходы, ЗаписейВНабореПрочиеРасходы, Истина);
		ЗаписатьНаборЗаписей(НаборЗаписейСебестоимость, ЗаписейВНабореСебестоимость, Истина);

		ТаблицаДопРасходов = ТаблицаДопРасходов.СкопироватьКолонки();

	КонецЕсли;

	ТаблицаДопРасходов.Колонки.Удалить("Подразделение");
	ТаблицаДопРасходов.Колонки.Удалить("СтатьяРасходовСписания");
	ТаблицаДопРасходов.Колонки.Удалить("АналитикаРасходов");

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	Таблица.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	Таблица.ВидЗапасов                 КАК ВидЗапасов,
	|	Таблица.Организация                КАК Организация,
	|	Таблица.СуммаДопРасходов           КАК СуммаДопРасходов,
	|	Таблица.СуммаДопРасходовБезНДС     КАК СуммаДопРасходовБезНДС,
	|	Таблица.СтоимостьРегл              КАК СтоимостьРегл
	|
	|ПОМЕСТИТЬ ВТДопРасходов
	|
	|ИЗ
	|	&ТаблицаДопРасходов КАК Таблица
	|");
	Запрос.УстановитьПараметр("ТаблицаДопРасходов", ТаблицаДопРасходов);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();

КонецПроцедуры

&НаСервере
Процедура ПровестиДокумент()
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	
	ДокументОбъект.Движения.ПрочиеДоходы.Очистить();
	ДокументОбъект.Движения.ПрочиеДоходы.Записывать = Истина;
	
	ДокументОбъект.Движения.ПрочиеРасходы.Очистить();
	ДокументОбъект.Движения.ПрочиеРасходы.Записывать = Истина;
	
	ДокументОбъект.Движения.СебестоимостьТоваров.Очистить();
	ДокументОбъект.Движения.СебестоимостьТоваров.Записывать = Истина;
	
	ДокументОбъект.Движения.СтоимостьТоваров.Очистить();
	ДокументОбъект.Движения.СтоимостьТоваров.Записывать = Истина;
	
	ДокументОбъект.Движения.ФинансовыеРезультаты.Очистить();
	ДокументОбъект.Движения.ФинансовыеРезультаты.Записывать = Истина;
	
	ДокументОбъект.Движения.ВыручкаИСебестоимостьПродаж.Очистить();
	ДокументОбъект.Движения.ВыручкаИСебестоимостьПродаж.Записывать = Истина;
	
	ДокументОбъект.Движения.Записать();
	
	мМассивОрганизаций = ДокументСсылка.Организации.ВыгрузитьКолонку("Организация");

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	СтруктураПериод = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(ДокументСсылка.Дата), КонецДня(ДокументСсылка.Дата));

	//Если Не ДополнительныеСвойства.Свойство("РегламентныйРасчет") Тогда
		ПроверитьКорректностьОстатков(СтруктураПериод.КонецПериода);
	//КонецЕсли;

	РаспределитьРасходыНаСебестоимость(СтруктураПериод.КонецПериода, МенеджерВременныхТаблиц, ПредварительныйРасчет);

	// Корректировка возвратов прошлых периодов.
	СкорректироватьСтомостьВозвратовПрошлыхПериодов(СтруктураПериод, МенеджерВременныхТаблиц, ПредварительныйРасчет);

	// Формирование узлов стоимости.
	КоличествоУзлов = СформироватьУзлыКорректировкиСписанияСтоимости(СтруктураПериод,
						МенеджерВременныхТаблиц,
						МетодОценки,
						ПредварительныйРасчет);

	Если КоличествоУзлов <> 0 Тогда

		РассчитатьСтоимость(СтруктураПериод, МенеджерВременныхТаблиц, Истина);

		СтруктураРесурсов = Новый Структура("Стоимость, СтоимостьБезНДС, СтоимостьДопРасходы, СтоимостьДопРасходыБезНДС",
					"Стоимость", "СтоимостьБезНДС", "СтоимостьДопРасходы", "СтоимостьДопРасходыБезНДС");
		ЗарегистрироватьСтоимость(СтруктураПериод.КонецПериода, МенеджерВременныхТаблиц, СтруктураРесурсов);

	КонецЕсли;

	МенеджерВременныхТаблиц = СохранитьДанныеВременныхТаблиц(МенеджерВременныхТаблиц);

	// Расчет стоимости регл.
	КоличествоУзлов = СформироватьУзлыКорректировкиСписанияСтоимостиРегл(СтруктураПериод,
						МенеджерВременныхТаблиц,
						МетодОценки,
						ПредварительныйРасчет);

	Если КоличествоУзлов <> 0 Тогда

		РассчитатьСтоимость(СтруктураПериод, МенеджерВременныхТаблиц, Ложь);

		СтруктураРесурсов = Новый Структура("Стоимость", "СтоимостьРегл");
		ЗарегистрироватьСтоимость(СтруктураПериод.КонецПериода, МенеджерВременныхТаблиц, СтруктураРесурсов);

	КонецЕсли;

	Если Не ПредварительныйРасчет Тогда

		СкорректироватьСтомостьСписанияЗапасов(СтруктураПериод);

		СкорректироватьСтоимостьПродаж(СтруктураПериод);

		СписатьОшибкиОкругленияРасчетаСебестоимости(СтруктураПериод.КонецПериода);

		РаспределитьВыручкуПоНаправлениямДеятельности(СтруктураПериод);

	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СохранитьДанныеВременныхТаблиц(МенеджерВременныхТаблиц)

	Запрос = Новый Запрос(
	"
	|Выбрать * ИЗ ВТДопРасходов;
	|Выбрать * ИЗ ВТВозвраты
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	МассивРезультатов = Запрос.ВыполнитьПакет();
	МенеджерВременныхТаблиц.Закрыть();

	НовыйМенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос(
	"
	|Выбрать * ПОМЕСТИТЬ ВТДопРасходов ИЗ &ВТДопРасходов КАК Т;
	|Выбрать * ПОМЕСТИТЬ ВТВозвраты ИЗ &ВТВозвраты КАК Т
	|");
	Запрос.УстановитьПараметр("ВТДопРасходов", МассивРезультатов[0]);
	Запрос.УстановитьПараметр("ВТВозвраты", МассивРезультатов[1]);
	Запрос.МенеджерВременныхТаблиц = НовыйМенеджерВременныхТаблиц;
	Запрос.Выполнить();

	Возврат НовыйМенеджерВременныхТаблиц;

КонецФункции

&НаСервере
Процедура ПроверитьКорректностьОстатков(Период, Отказ = Ложь)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Себестоимость.РазделУчета              КАК РазделУчета,
	|	Себестоимость.ВидЗапасов               КАК ВидЗапасов,
	|	Себестоимость.Организация              КАК Организация,
	|	СУММА(Себестоимость.КоличествоОстаток) КАК Количество,
	|	АналитикаНоменклатуры.Номенклатура     КАК Номенклатура,
	|	АналитикаНоменклатуры.Характеристика   КАК Характеристика,
	|	АналитикаНоменклатуры.Склад            КАК Склад
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(&Граница, Организация В (&Организации)) КАК Себестоимость
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО Себестоимость.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.КлючАналитики
	|ГДЕ
	|	Себестоимость.КоличествоОстаток < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикаНоменклатуры.Характеристика,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	АналитикаНоменклатуры.Номенклатура,
	|	АналитикаНоменклатуры.Склад
	|");
	Запрос.УстановитьПараметр("Организации", мМассивОрганизаций);
	Запрос.УстановитьПараметр("Граница", Новый Граница(КонецДня(Период), ВидГраницы.Включая));
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		ПредставлениеТовара = Строка(Выборка.Номенклатура) + "/" + Строка(Выборка.Характеристика);
		ПредставлениеТовара = ПредставлениеТовара + " склад: " + Выборка.Склад + ", организация: " + Выборка.Организация;
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Номенклатура: %1 обнаружен отрицательный остаток: %2'"),
			ПредставлениеТовара,
			- Выборка.Количество);

		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ДокументОбъект,
			"Дата",
			, // ПутьКДанным 
			Отказ);

	КонецЦикла;

КонецПроцедуры

