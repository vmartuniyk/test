// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ВыполнитьКоманду(ИдентификаторКоманды, ОбъектыНазначенияМассив, СозданныеОбъекты) Экспорт

	Для каждого Документ Из ОбъектыНазначенияМассив Цикл 
		МассивНоменклатуры = ПолучитьСписокНоменклатуры(Документ);
		Если МассивНоменклатуры = Неопределено Тогда Продолжить; КонецЕсли; 
		СоздатьДокументПередачи(Документ, МассивНоменклатуры); 
	КонецЦикла; 

КонецПроцедуры // ВыполнитьКоманду()
 
// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура СоздатьДокументПередачи(ДокументСсылка, МассивНоменклатуры)

	ФормаДокумента 	= ПолучитьФорму("Документ.ПередачаТоваровМеждуОрганизациями.Форма.ФормаДокумента");
	Результат 		= ПолучитьПараметрыПередачи(ДокументСсылка, МассивНоменклатуры);
	ЗаполнитьЗначенияСвойств(ФормаДокумента.Объект, Результат);
	Для каждого СтрокаСписка Из СписокНоменклатуры Цикл
		НоваяСтрока = ФормаДокумента.Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСписка);
	КонецЦикла; 
	ФормаДокумента.Открыть();

КонецПроцедуры // СоздатьДокументПередачи()

// <Описание функции>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаКлиенте
Функция ПолучитьСписокНоменклатуры(ДокументСсылка)

	ПараметрыФормы = Новый Структура("ДокументСсылка", ДокументСсылка);
	Результат = ОткрытьФормуМодально("ВнешняяОбработка.ПередачаНаОсновании.Форма.ФормаСпискаНоменклатуры", ПараметрыФормы);

	Возврат Результат;
КонецФункции // ПолучитьСписокНоменклатуры()
 
 
// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Функция ПолучитьПараметрыПередачи(ДокументСсылка, МассивНоменклатуры)

	НаименованиеДокумента = ДокументСсылка.Метаданные().Имя;
	
	
	// Табличная часть документа
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Товары.Номенклатура КАК Номенклатура,
	                      |	Товары.Характеристика КАК Характеристика,
	                      |	"+?(ТипЗнч(ДокументСсылка)<>Тип("ДокументСсылка.СписаниеНедостачТоваров"), "Товары.Упаковка КАК Упаковка,", "Значение(Справочник.УпаковкиНоменклатуры.ПустаяСсылка) КАК Упаковка,") + "
	                      |	"+?(ТипЗнч(ДокументСсылка)<>Тип("ДокументСсылка.СписаниеНедостачТоваров"), "Товары.КоличествоУпаковок КАК КоличествоУпаковок,", "Товары.Количество КАК КоличествоУпаковок,") + "
	                      |	Товары.Количество КАК Количество 
	                      |ПОМЕСТИТЬ КешСписокНоменклатуры
	                      |ИЗ
	                      |	Документ."+НаименованиеДокумента+".Товары КАК Товары
	                      |ГДЕ
	                      |	Товары.Ссылка = &Ссылка
	                      |	И Товары.Номенклатура В(&МассивНоменклатуры)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	КешСписокНоменклатуры.Номенклатура,
	                      |	КешСписокНоменклатуры.Характеристика,
	                      |	КешСписокНоменклатуры.Упаковка,
	                      |	КешСписокНоменклатуры.КоличествоУпаковок,
	                      |	КешСписокНоменклатуры.Количество,
	                      |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
	                      |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) КАК ВидЦены
	                      |ПОМЕСТИТЬ КешВидыЦенСрезПослених
	                      |ИЗ
	                      |	КешСписокНоменклатуры КАК КешСписокНоменклатуры
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	                      |				&ДатаСреза,
	                      |				ВидЦены В (&ВидЦены)
	                      |					И (Номенклатура, Характеристика) В
	                      |						(ВЫБРАТЬ
	                      |							КешСписокНоменклатуры.Номенклатура,
	                      |							КешСписокНоменклатуры.Характеристика
	                      |						ИЗ
	                      |							КешСписокНоменклатуры КАК КешСписокНоменклатуры)) КАК ЦеныНоменклатурыСрезПоследних
	                      |		ПО КешСписокНоменклатуры.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	                      |			И КешСписокНоменклатуры.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ КешСписокНоменклатуры
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	КешВидыЦенсрезПослених.Номенклатура,
	                      |	КешВидыЦенсрезПослених.Характеристика,
	                      |	КешВидыЦенсрезПослених.Упаковка,
	                      |	КешВидыЦенсрезПослених.КоличествоУпаковок,
	                      |	КешВидыЦенсрезПослених.Количество,
	                      |	ВЫБОР
	                      |		КОГДА КешВидыЦенсрезПослених.Цена = 0
	                      |			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПервых.Цена, 0)
	                      |		ИНАЧЕ КешВидыЦенсрезПослених.Цена
	                      |	КОНЕЦ КАК Цена,
	                      |	ВЫБОР
	                      |		КОГДА КешВидыЦенсрезПослених.ВидЦены = ЗНАЧЕНИЕ(справочник.видыцен.пустаяссылка)
	                      |			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПервых.ВидЦены, ЗНАЧЕНИЕ(справочник.видыцен.пустаяссылка))
	                      |		ИНАЧЕ КешВидыЦенсрезПослених.ВидЦены
	                      |	КОНЕЦ КАК ВидЦены
	                      |ПОМЕСТИТЬ КешВидЦеныСрезПервых
	                      |ИЗ
	                      |	КешВидыЦенСрезПослених КАК КешВидыЦенсрезПослених
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПервых(
	                      |				&ДатаСреза,
	                      |				ВидЦены = &ВидЦены
	                      |					И (Номенклатура, Характеристика) В
	                      |						(ВЫБРАТЬ
	                      |							КешВидыЦенСрезПослених.Номенклатура,
	                      |							КешВидыЦенСрезПослених.Характеристика
	                      |						ИЗ
	                      |							КешВидыЦенСрезПослених КАК КешВидыЦенСрезПослених
	                      |						ГДЕ
	                      |							КешВидыЦенСрезПослених.Цена = 0)) КАК ЦеныНоменклатурыСрезПервых
	                      |		ПО КешВидыЦенсрезПослених.Номенклатура = ЦеныНоменклатурыСрезПервых.Номенклатура
	                      |			И КешВидыЦенсрезПослених.Характеристика = ЦеныНоменклатурыСрезПервых.Характеристика
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ КешВидыЦенСрезПослених
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	КешВидЦеныСрезПервых.Номенклатура,
	                      |	КешВидЦеныСрезПервых.Характеристика,
	                      |	КешВидЦеныСрезПервых.Упаковка,
	                      |	КешВидЦеныСрезПервых.КоличествоУпаковок,
	                      |	КешВидЦеныСрезПервых.Количество,
	                      |	КешВидЦеныСрезПервых.Цена,
	                      |	КешВидЦеныСрезПервых.ВидЦены,
	                      |	КешВидЦеныСрезПервых.КоличествоУпаковок * КешВидЦеныСрезПервых.Цена КАК Сумма,
	                      |	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) КАК СтавкаНДС,
	                      |	0 КАК СуммаНДС,
	                      |	КешВидЦеныСрезПервых.КоличествоУпаковок * КешВидЦеныСрезПервых.Цена КАК СуммаСНДС
	                      |ИЗ
	                      |	КешВидЦеныСрезПервых КАК КешВидЦеныСрезПервых");
						  
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("МассивНоменклатуры", МассивНоменклатуры);
	Запрос.УстановитьПараметр("ДатаСреза", ДокументСсылка.МоментВремени());
	Запрос.УстановитьПараметр("ВидЦены", ПолучитьВидВходнойЦены());
	
	СписокНоменклатуры.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// Шапка документа
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДОБАВИТЬКДАТЕ(Дата, СЕКУНДА, -1) КАК Дата,
	                      |	Дата КАК ДатаПлатежа,
	                      |	"+?(ТипЗнч(ДокументСсылка)=Тип("ДокументСсылка.ПеремещениеТоваров"),"СкладОтправитель","Склад")+" КАК Склад,
	                      |	Организация КАК ОрганизацияПолучатель
	                      |ИЗ
	                      |	Документ." + НаименованиеДокумента + "
	                      |ГДЕ
	                      |	Ссылка = &Ссылка");
						  
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Выборка 	= Запрос.Выполнить().Выбрать();
	Результат 	= Новый Структура("Дата, ДатаПлатежа, Склад, ОрганизацияПолучатель");
	
	Выборка.Следующий();
	
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	Возврат Результат;

КонецФункции // ПолучитьПараметрыПередачи()

 
// <Описание функции>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
&НаСервере
Функция ПолучитьВидВходнойЦены()

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВидЦены КАК ВидЦены
	                      |ИЗ
	                      |	РегистрСведений.ALPS_ВидыЦен
	                      |ГДЕ
	                      |	Входная");
						  
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.ВидЦены, Справочники.ВидыЦен.ПустаяСсылка());

КонецФункции // ПолучитьВидВходнойЦены()
 