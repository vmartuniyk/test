#Область ПрограммныйИнтерфейс

Процедура ОбновленияАктуальностиНоменклатурыПоБезналу() Экспорт
	АвторизированныйПользователь 	= ПараметрыСеанса.ТекущийПользователь;
	АвторизированноеПодразделение 	= АвторизированныйПользователь.ТекущееПодразделение;
	ИД = "c3d29ac5-48a1-11e4-80e2-001e676b0175";
	СвойствоАктуальноПоБезналу		= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));  
	ИмяСобытияЖурналаРегистрации = НСтр("ru = 'Обновлення актуальности номенклатуры по безналу'");
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
			УровеньЖурналаРегистрации.Информация, 
			,
			,
			НСтр("ru = 'Начало автоматического обновления актуальности номенклатуры по безналу'"));


	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаАктуальностиНоменклатурыПоБезналу();
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	Запрос.УстановитьПараметр("Свойство",СвойствоАктуальноПоБезналу);
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.ДополнительныеСведения.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Свойство.Установить(СвойствоАктуальноПоБезналу);
	Пока Выборка.Следующий() Цикл
		НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
		ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
	КонецЦикла; 
	
	ЗаписьЖурналаРегистрации(ИмяСобытияЖурналаРегистрации,
		УровеньЖурналаРегистрации.Информация, 
		,
		,
		НСтр("ru = 'Завершено автоматическое обновления актуальности номенклатуры по безналу'"));

КонецПроцедуры

#КонецОбласти   

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТекстЗапросаАктуальностиНоменклатурыПоБезналу()

	ТекстЗапроса = "ВЫБРАТЬ
	               |	Склад КАК Склад
	               |ПОМЕСТИТЬ МодульныйСклады
	               |ИЗ
	               |	РегистрСведений.Модуль_ДоступныеСклады 
	               |ГДЕ
	               |	Основной
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Склад
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СоглашенияСПоставщиками КАК Соглашения,
	               |	КоличествоДней
	               |ПОМЕСТИТЬ СоглашенияПоАктуальности
	               |ИЗ
	               |	РегистрСведений.КТС_НастройкиАктуальностиСоглашенияПоБезналу
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Соглашения
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(КТС_ДвижениеТоваровПоставщиковОстатки.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг).Дата КАК Дата,
	               |	ВЫРАЗИТЬ(КТС_ДвижениеТоваровПоставщиковОстатки.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг) КАК ДокументПоступления,
	               |	Аналитика.Номенклатура КАК Номенклатура,
	               |	КТС_ДвижениеТоваровПоставщиковОстатки.КоличествоОстаток,
	               |	ВЫРАЗИТЬ(КТС_ДвижениеТоваровПоставщиковОстатки.ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг).Соглашение КАК Соглашение
	               |ПОМЕСТИТЬ ОстатокПоПартиям
	               |ИЗ
	               |	РегистрНакопления.КТС_ДвижениеТоваровПоставщиков.Остатки(
	               |			&ТекущаяДата,
	               |			АналитикаУчетаНоменклатуры.Склад В
	               |					(ВЫБРАТЬ
	               |						МодульныйСклады.Склад
	               |					ИЗ
	               |						МодульныйСклады КАК МодульныйСклады)
	               |				И ВЫРАЗИТЬ(ДокументПоступления КАК Документ.ПоступлениеТоваровУслуг).Соглашение В
	               |					(ВЫБРАТЬ
	               |						СоглашенияПоАктуальности.Соглашения
	               |					ИЗ
	               |						СоглашенияПоАктуальности КАК СоглашенияПоАктуальности)) КАК КТС_ДвижениеТоваровПоставщиковОстатки
	               |	
				   |ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	               |ПО КТС_ДвижениеТоваровПоставщиковОстатки.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура,
	               |	Соглашение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОстатокПоПартиям.Номенклатура КАК Номенклатура,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА РАЗНОСТЬДАТ(ОстатокПоПартиям.Дата, &ТекущаяДата, ДЕНЬ) > СоглашенияПоАктуальности.КоличествоДней
	               |				ТОГДА ЛОЖЬ
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ) КАК Актуальность
	               |ПОМЕСТИТЬ ТоварАктуальныйПоБезналу
	               |ИЗ
	               |	ОстатокПоПартиям КАК ОстатокПоПартиям
	               |
				   |ВНУТРЕННЕЕ СОЕДИНЕНИЕ СоглашенияПоАктуальности КАК СоглашенияПоАктуальности
	               |ПО ОстатокПоПартиям.Соглашение = СоглашенияПоАктуальности.Соглашения
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОстатокПоПартиям.Номенклатура
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ДополнительныеСведения.Объект КАК Справочник.Номенклатура) КАК Номенклатура
	               |ПОМЕСТИТЬ НоменклатураАктуальнаСтарая
	               |ИЗ
	               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	               |ГДЕ
	               |	ДополнительныеСведения.Свойство = &Свойство
	               |	И ДополнительныеСведения.Значение = ИСТИНА
	               |
	               |ОБЪЕДИНИТЬ 
	               |
	               |ВЫБРАТЬ
	               |	ТоварАктуальныйПоБезналу.Номенклатура
	               |ИЗ
	               |	ТоварАктуальныйПоБезналу КАК ТоварАктуальныйПоБезналу
	               |ГДЕ
	               |	ТоварАктуальныйПоБезналу.Актуальность = ИСТИНА
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НоменклатураАктуальнаСтарая.Номенклатура КАК Объект,
				   |    &Свойство КАК  Свойство,
	               |	ЕСТЬNULL(ТоварАктуальныйПоБезналу.Актуальность, ЛОЖЬ) КАК Значение
	               |ИЗ
	               |	НоменклатураАктуальнаСтарая КАК НоменклатураАктуальнаСтарая
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТоварАктуальныйПоБезналу КАК ТоварАктуальныйПоБезналу
	               |		ПО НоменклатураАктуальнаСтарая.Номенклатура = ТоварАктуальныйПоБезналу.Номенклатура";
	Возврат ТекстЗапроса;

КонецФункции // ПолучитьТекстЗапросаАктуальностиНоменклатурыПоБезналу()
				
#КонецОбласти

#Область СведенияОВнешнейОбработка

Функция СведенияОВнешнейОбработке() Экспорт
	
	//Версия
	Версия = "1.0.6";            
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка");	
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Настройки актуальности по безналу");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Настройка актуальности номенклатуры по безналу  [" + Версия + "]");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Настройка актуальности номенклатуры по безналу  [" + Версия + "]", "Настройки актуальности по безналу", "ОткрытиеФормы", Ложь, "Настройки актуальности по безналу");
	
	ДобавитьКоманду(ТаблицаКоманд, "Регл. обновление актуальности номенклатуры по безналу  [" + Версия + "]", "ОбновленияАктуальностиНоменклатурыПоБезналу();","ВызовСерверногоМетода");
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры

Процедура ВыполнитьКоманду(Индентификатор) Экспорт
	Выполнить(Индентификатор);	
КонецПроцедуры
#КонецОбласти
