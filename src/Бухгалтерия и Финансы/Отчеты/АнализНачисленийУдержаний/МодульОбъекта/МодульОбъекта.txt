
#Область ПрограммныйИнтерфейс
	
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)	
	
	УстановитьПривилегированныйРежим(Истина);
	СтандартнаяОбработка = Ложь;
	
	ТекстЗапроса = ПолучитьТекстЗапросаНаборДанных();
	СформироватьОтчетПрограммно(ТекстЗапроса, ДанныеРасшифровки, ДокументРезультат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьОтчетПрограммно(ТекстЗапроса, ДанныеРасшифровки, ДокументРезультат)
		
	НаборыДанных 	= СхемаКомпоновкиДанных.НаборыДанных;
	ОсновнойНабор   = НаборыДанных.Найти("НаборДанных1");
	
	Если ОсновнойНабор = Неопределено Тогда
		ВызватьИсключение НСтр("ru='Отчет сломался. Сообщите в службу поддержки.'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	ОсновнойНабор.Запрос = ТекстЗапроса;
	
	УстановитьПараметрыКомпоновкиДанных(КомпоновщикНастроек);
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки, , , Ложь);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры

Процедура УстановитьПараметрыКомпоновкиДанных(КомпоновщикНастроек)

	ПараметрыДанных 	= КомпоновщикНастроек.Настройки.ПараметрыДанных;
	
КонецПроцедуры

Функция ПолучитьТекстЗапросаНаборДанных()
ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
               |	ЗП_ВыполненныеНачисления.Период КАК Период,
               |	ЗП_ВыполненныеНачисления.Партнер КАК Партнер,
               |	ЗП_ВыполненныеНачисления.ВидРасчета КАК ВидРасчета,
               |	ЗП_ВыполненныеНачисления.ДокументНачисления КАК ДокументНачисления,
               |	ЗП_ВыполненныеНачисления.НеНачислять КАК НеНачислять,
               |	СУММА(ЗП_ВыполненныеНачисления.СуммаНасчитано) КАК СуммаНасчитано,
               |	СУММА(ЗП_ВыполненныеНачисления.СуммаРасчитано) КАК СуммаРасчитано,
               |	ЗП_ВыполненныеНачисления.Статья КАК Статья,
               |	ЗП_ВыполненныеНачисления.Аналитика КАК Аналитика,
               |	ЗП_ВыполненныеНачисления.НаименованиеРасчета КАК НаименованиеРасчета,
               |	ЗП_ВыполненныеНачисления.Организация КАК Организация,
               |	ЗП_ВыполненныеНачисления.ПереноситьВСледующийПериод КАК ПереноситьВСледующийПериод,
               |	ЗП_ВыполненныеНачисления.Формула КАК Формула,
               |	ЗП_ВыполненныеНачисления.РасчетУстановленВручную КАК РасчетУстановленВручную
               |ПОМЕСТИТЬ ВТНачисления
               |{ВЫБРАТЬ
               |	Период,
               |	Партнер.*,
               |	ВидРасчета.*,
               |	ДокументНачисления.*,
               |	НеНачислять,
               |	СуммаНасчитано,
               |	СуммаРасчитано,
               |	Статья.*,
               |	Аналитика.*,
               |	НаименованиеРасчета,
               |	Организация.*,
               |	ПереноситьВСледующийПериод,
               |	Формула,
               |	РасчетУстановленВручную}
               |ИЗ
               |	РегистрСведений.ЗП_ВыполненныеНачисления КАК ЗП_ВыполненныеНачисления
               |ГДЕ
               |	ЗП_ВыполненныеНачисления.Период >= &НачалоПериода
               |	И ЗП_ВыполненныеНачисления.Период <= &ОкончаниеПериода
               |{ГДЕ
               |	ЗП_ВыполненныеНачисления.Период,
               |	ЗП_ВыполненныеНачисления.Партнер.*,
               |	ЗП_ВыполненныеНачисления.ВидРасчета.*,
               |	ЗП_ВыполненныеНачисления.ДокументНачисления.*,
               |	ЗП_ВыполненныеНачисления.НеНачислять,
               |	ЗП_ВыполненныеНачисления.СуммаНасчитано,
               |	ЗП_ВыполненныеНачисления.СуммаРасчитано,
               |	ЗП_ВыполненныеНачисления.Статья.*,
               |	ЗП_ВыполненныеНачисления.Аналитика.*,
               |	ЗП_ВыполненныеНачисления.НаименованиеРасчета,
               |	ЗП_ВыполненныеНачисления.Организация.*,
               |	ЗП_ВыполненныеНачисления.ПереноситьВСледующийПериод,
               |	ЗП_ВыполненныеНачисления.Формула,
               |	ЗП_ВыполненныеНачисления.РасшифровкаФормулы,
               |	ЗП_ВыполненныеНачисления.РасчетУстановленВручную}
               |
               |СГРУППИРОВАТЬ ПО
               |	ЗП_ВыполненныеНачисления.Партнер,
               |	ЗП_ВыполненныеНачисления.Период,
               |	ЗП_ВыполненныеНачисления.ВидРасчета,
               |	ЗП_ВыполненныеНачисления.ДокументНачисления,
               |	ЗП_ВыполненныеНачисления.НеНачислять,
               |	ЗП_ВыполненныеНачисления.Статья,
               |	ЗП_ВыполненныеНачисления.Аналитика,
               |	ЗП_ВыполненныеНачисления.НаименованиеРасчета,
               |	ЗП_ВыполненныеНачисления.Организация,
               |	ЗП_ВыполненныеНачисления.ПереноситьВСледующийПериод,
               |	ЗП_ВыполненныеНачисления.Формула,
               |	ЗП_ВыполненныеНачисления.РасчетУстановленВручную
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ РАЗЛИЧНЫЕ
               |	ВТНачисления.Партнер,
               |	ВТНачисления.Аналитика,
               |	ВТНачисления.Организация
               |ПОМЕСТИТЬ ВТПартнеры
               |ИЗ
               |	ВТНачисления КАК ВТНачисления
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	РасчетыСКлиентамиОстатки.Валюта КАК Валюта,
               |	-РасчетыСКлиентамиОстатки.СуммаОстаток КАК Сумма,
               |	ВТПартнеры.Партнер КАК Партнер,
               |	ВТПартнеры.Организация КАК Организация,
               |	ВТПартнеры.Аналитика КАК Аналитика
               |ПОМЕСТИТЬ ТаблицаРасчеты
               |{ВЫБРАТЬ
               |	Валюта.*,
               |	Сумма,
               |	Партнер.*,
               |	Организация.*,
               |	Аналитика.*}
               |ИЗ
               |	РегистрНакопления.РасчетыСКлиентами.Остатки(, {(Валюта).* КАК Валюта}) КАК РасчетыСКлиентамиОстатки
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПартнеры КАК ВТПартнеры
               |			ПО (ВТПартнеры.Партнер = АналитикаУчета.Партнер)
               |		ПО РасчетыСКлиентамиОстатки.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
               |{ГДЕ
               |	РасчетыСКлиентамиОстатки.Валюта.*,
               |	ВТПартнеры.Партнер.*,
               |	ВТПартнеры.Организация.*,
               |	ВТПартнеры.Аналитика.*}
               |
               |ОБЪЕДИНИТЬ ВСЕ
               |
               |ВЫБРАТЬ
               |	РасчетыСПоставщикамиОстатки.Валюта,
               |	-РасчетыСПоставщикамиОстатки.СуммаОстаток,
               |	ВТПартнеры.Партнер,
               |	ВТПартнеры.Организация,
               |	ВТПартнеры.Аналитика
               |ИЗ
               |	РегистрНакопления.РасчетыСПоставщиками.Остатки(, {(Валюта).* КАК Валюта}) КАК РасчетыСПоставщикамиОстатки
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчета
               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПартнеры КАК ВТПартнеры
               |			ПО (ВТПартнеры.Партнер = АналитикаУчета.Партнер)
               |		ПО РасчетыСПоставщикамиОстатки.АналитикаУчетаПоПартнерам = АналитикаУчета.КлючАналитики
               |{ГДЕ
               |	РасчетыСПоставщикамиОстатки.Валюта.*,
               |	ВТПартнеры.Партнер.*,
               |	ВТПартнеры.Организация.*,
               |	ВТПартнеры.Аналитика.*}
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВТПартнеры.Партнер КАК Партнер,
               |	ВТПартнеры.Аналитика КАК Аналитика,
               |	ВТПартнеры.Организация КАК Организация,
               |	ВЫРАЗИТЬ(ТаблицаРасчеты.Валюта КАК Справочник.Валюты) КАК Валюта,
               |	СУММА(ТаблицаРасчеты.Сумма) КАК Сумма
               |ПОМЕСТИТЬ ВТДолгиПоВзаиморасчетам
               |{ВЫБРАТЬ
               |	Партнер.*,
               |	Аналитика.*,
               |	Организация.*,
               |	Валюта.*,
               |	Сумма}
               |ИЗ
               |	ВТПартнеры КАК ВТПартнеры
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаРасчеты КАК ТаблицаРасчеты
               |		ПО ВТПартнеры.Партнер = ТаблицаРасчеты.Партнер
               |			И ВТПартнеры.Аналитика = ТаблицаРасчеты.Аналитика
               |			И ВТПартнеры.Организация = ТаблицаРасчеты.Организация
               |{ГДЕ
               |	ВТПартнеры.Партнер.*,
               |	ВТПартнеры.Аналитика.*,
               |	ВТПартнеры.Организация.*,
               |	(ВЫРАЗИТЬ(ТаблицаРасчеты.Валюта КАК Справочник.Валюты)).* КАК Валюта}
               |
               |СГРУППИРОВАТЬ ПО
               |	ВТПартнеры.Партнер,
               |	ВТПартнеры.Аналитика,
               |	ВТПартнеры.Организация,
               |	ВЫРАЗИТЬ(ТаблицаРасчеты.Валюта КАК Справочник.Валюты)
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВТНачисления.Период КАК Период,
               |	ВТНачисления.Партнер КАК Партнер,
               |	ВТНачисления.ВидРасчета КАК ВидРасчета,
               |	ВТНачисления.ДокументНачисления КАК ДокументНачисления,
               |	ВТНачисления.НеНачислять КАК НеНачислять,
               |	ВТНачисления.СуммаНасчитано КАК СуммаНасчитано,
               |	ВТНачисления.СуммаРасчитано КАК СуммаРасчитано,
               |	ВТНачисления.Статья КАК Статья,
               |	ВТНачисления.Аналитика КАК Аналитика,
               |	ВТНачисления.НаименованиеРасчета КАК НаименованиеРасчета,
               |	ВТНачисления.Организация КАК Организация,
               |	ВТНачисления.ПереноситьВСледующийПериод КАК ПереноситьВСледующийПериод,
               |	ВТНачисления.Формула КАК Формула,
               |	ВТНачисления.РасчетУстановленВручную КАК РасчетУстановленВручную,
               |	0 КАК СуммаДолг,
               |	ЛОЖЬ КАК Долг,
               |	NULL КАК Валюта
               |ПОМЕСТИТЬ ВТИтоговыеДанные
               |{ВЫБРАТЬ
               |	Период,
               |	Партнер.*,
               |	ВидРасчета.*,
               |	ДокументНачисления.*,
               |	НеНачислять,
               |	СуммаНасчитано,
               |	СуммаРасчитано,
               |	Статья.*,
               |	Аналитика.*,
               |	НаименованиеРасчета,
               |	Организация.*,
               |	ПереноситьВСледующийПериод,
               |	Формула,
               |	РасчетУстановленВручную,
               |	СуммаДолг,
               |	Долг,
               |	Валюта}
               |ИЗ
               |	ВТНачисления КАК ВТНачисления
               |{ГДЕ
               |	ВТНачисления.Период,
               |	ВТНачисления.Партнер.*,
               |	ВТНачисления.ВидРасчета.*,
               |	ВТНачисления.ДокументНачисления.*,
               |	ВТНачисления.НеНачислять,
               |	ВТНачисления.СуммаНасчитано,
               |	ВТНачисления.СуммаРасчитано,
               |	ВТНачисления.Статья.*,
               |	ВТНачисления.Аналитика.*,
               |	ВТНачисления.НаименованиеРасчета,
               |	ВТНачисления.Организация.*,
               |	ВТНачисления.ПереноситьВСледующийПериод,
               |	ВТНачисления.Формула,
               |	ВТНачисления.РасчетУстановленВручную,
               |	(0) КАК СуммаДолг}
               |
               |ОБЪЕДИНИТЬ ВСЕ
               |
               |ВЫБРАТЬ
               |	NULL,
               |	ВТДолгиПоВзаиморасчетам.Партнер,
               |	NULL,
               |	NULL,
               |	NULL,
               |	NULL,
               |	NULL,
               |	NULL,
               |	ВТДолгиПоВзаиморасчетам.Аналитика,
               |	NULL,
               |	ВТДолгиПоВзаиморасчетам.Организация,
               |	NULL,
               |	NULL,
               |	NULL,
               |	ВТДолгиПоВзаиморасчетам.Сумма,
               |	ИСТИНА,
               |	ВТДолгиПоВзаиморасчетам.Валюта
               |ИЗ
               |	ВТДолгиПоВзаиморасчетам КАК ВТДолгиПоВзаиморасчетам
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ВТИтоговыеДанные.Период КАК Период,
               |	ВТИтоговыеДанные.Партнер КАК Партнер,
               |	ВТИтоговыеДанные.ВидРасчета КАК ВидРасчета,
               |	ВТИтоговыеДанные.ДокументНачисления КАК ДокументНачисления,
               |	ВТИтоговыеДанные.НеНачислять КАК НеНачислять,
               |	ВТИтоговыеДанные.СуммаНасчитано КАК СуммаНасчитано,
               |	ВТИтоговыеДанные.СуммаРасчитано КАК СуммаРасчитано,
               |	ВТИтоговыеДанные.Статья КАК Статья,
               |	ВТИтоговыеДанные.Аналитика КАК Аналитика,
               |	ВТИтоговыеДанные.НаименованиеРасчета КАК НаименованиеРасчета,
               |	ВТИтоговыеДанные.Организация КАК Организация,
               |	ВТИтоговыеДанные.ПереноситьВСледующийПериод КАК ПереноситьВСледующийПериод,
               |	ВТИтоговыеДанные.Формула КАК Формула,
               |	ВТИтоговыеДанные.РасчетУстановленВручную КАК РасчетУстановленВручную,
               |	ВТИтоговыеДанные.СуммаДолг КАК СуммаДолг,
               |	ВТИтоговыеДанные.Долг КАК Долг,
               |	ВТИтоговыеДанные.Валюта КАК Валюта
               |{ВЫБРАТЬ
               |	Период,
               |	Партнер.*,
               |	ВидРасчета.*,
               |	ДокументНачисления.*,
               |	НеНачислять,
               |	СуммаНасчитано,
               |	СуммаРасчитано,
               |	Статья.*,
               |	Аналитика.*,
               |	НаименованиеРасчета,
               |	Организация.*,
               |	ПереноситьВСледующийПериод,
               |	Формула,
               |	РасчетУстановленВручную,
               |	СуммаДолг,
               |	Долг,
               |	Валюта.*}
               |ИЗ
               |	ВТИтоговыеДанные КАК ВТИтоговыеДанные
               |{ГДЕ
               |	ВТИтоговыеДанные.Период,
               |	ВТИтоговыеДанные.Партнер.*,
               |	ВТИтоговыеДанные.ВидРасчета.*,
               |	ВТИтоговыеДанные.ДокументНачисления.*,
               |	ВТИтоговыеДанные.НеНачислять,
               |	ВТИтоговыеДанные.СуммаНасчитано,
               |	ВТИтоговыеДанные.СуммаРасчитано,
               |	ВТИтоговыеДанные.Статья.*,
               |	ВТИтоговыеДанные.Аналитика.*,
               |	ВТИтоговыеДанные.НаименованиеРасчета,
               |	ВТИтоговыеДанные.Организация.*,
               |	ВТИтоговыеДанные.ПереноситьВСледующийПериод,
               |	ВТИтоговыеДанные.Формула,
               |	ВТИтоговыеДанные.РасчетУстановленВручную,
               |	ВТИтоговыеДанные.СуммаДолг,
               |	ВТИтоговыеДанные.Долг,
               |	ВТИтоговыеДанные.Валюта.*}";
Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти 

#Область СведенияОВнешнемОтчете

Функция 	СведенияОВнешнейОбработке() Экспорт
	
	Версия = "1.0.1";
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные
    ПараметрыРегистрации = Новый Структура;

    // Объявим еще одну переменную, которая нам потребуется ниже
    МассивНазначений = Новый Массив;
    
    // Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
    // Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов
    ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");

    // Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ
    // Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
    // которые поддерживают механизм ВПФ
	//СчитатьДокументыНазначений(МассивНазначений);
	
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
    
    // Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок
    ПараметрыРегистрации.Вставить("Наименование", "Анализ начислений/удержаний ЗП");
    
    // Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим)
    ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);

    // Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке
    ПараметрыРегистрации.Вставить("Версия", Версия);    
    ПараметрыРегистрации.Вставить("Информация", "Анализ начислений/удержаний ЗП");
    
    // Создадим таблицу команд (подробнее смотрим ниже)
    ТаблицаКоманд = ПолучитьТаблицуКоманд();
    
    // Добавим команду в таблицу
    ДобавитьКоманду(ТаблицаКоманд, "Анализ начислений/удержаний ЗП", "ФормаОтчета", "ОткрытиеФормы", Ложь, "");
    
    // Сохраним таблицу команд в параметры регистрации обработки
    ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
    
    // Теперь вернем системе наши параметры
    Возврат ПараметрыРегистрации;
КонецФункции

Функция 	ПолучитьТаблицуКоманд()

   // Создадим пустую таблицу команд и колонки в ней
   Команды = Новый ТаблицаЗначений;

   // Как будет выглядеть описание печатной формы для пользователя
   Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 

   // Имя нашего макета, что бы могли отличить вызванную команду в обработке печати
   Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));

   // Тут задается, как должна вызваться команда обработки
   // Возможные варианты:
   // - ОткрытиеФормы - в этом случае в колонке идентификатор должно быть указано имя формы, которое должна будет открыть система
   // - ВызовКлиентскогоМетода - вызвать клиентскую экспортную процедуру из модуля формы обработки
   // - ВызовСерверногоМетода - вызвать серверную экспортную процедуру из модуля объекта обработки
   Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));

   // Следующий параметр указывает, необходимо ли показывать оповещение при начале и завершению работы обработки. Не имеет смысла при открытии формы
   Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));

   // Для печатной формы должен содержать строку ПечатьMXL 
   Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
   
   Возврат Команды;
   
КонецФункции

Процедура 	ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
  // Добавляем команду в таблицу команд по переданному описанию.
  // Параметры и их значения можно посмотреть в функции ПолучитьТаблицуКоманд
  НоваяКоманда = ТаблицаКоманд.Добавить();
  НоваяКоманда.Представление = Представление;
  НоваяКоманда.Идентификатор = Идентификатор;
  НоваяКоманда.Использование = Использование;
  НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
  НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры
#КонецОбласти
